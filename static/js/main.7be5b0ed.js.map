{"version":3,"file":"static/js/main.7be5b0ed.js","mappings":"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","sources":["src/utils/Storage.tsx","i18n.ts","src/utils/CoreUtils.tsx","src/utils/I18n.tsx","src/utils/FormattingUtils.tsx","src/utils/Versioning.web.tsx","src/backend/exploration/ExplorationStatus.tsx","src/backend/GameState.tsx","src/backend/Caching.tsx","src/backend/Demo.tsx","src/backend/generic/Identifiable.tsx","src/backend/generic/DataStore.tsx","src/backend/Flags.tsx","src/backend/GameStateListeners.tsx","src/backend/transformation/TransformationTags.tsx","src/backend/transformation/Transformation.tsx","src/backend/Resources.tsx","src/backend/Retire.tsx","src/backend/action/ActionAreas.tsx","src/backend/spells/VisibleSpellsCache.tsx","src/backend/spells/Elements.tsx","src/Themes.tsx","src/backend/exploration/dungeons/Dungeons.tsx","src/backend/storylines/Storyline.tsx","src/backend/events/storyline/cavern/SchematicsStoryline.tsx","src/backend/Flag.tsx","src/backend/items/Items.tsx","src/backend/items/Inventory.tsx","src/backend/exploration/AttackTarget.tsx","src/backend/exploration/CombatStats.tsx","src/backend/timetick/OfflineTickListeners.tsx","src/backend/timetick/WarpTimeListeners.tsx","src/backend/timetick/TimeTick.tsx","src/backend/timetick/TotalTimePlayed.tsx","src/backend/action/Actions.tsx","src/backend/spells/Spells.tsx","src/backend/study/ResearcherAutoAssignStrategy.tsx","src/backend/study/Study.tsx","src/backend/timetick/IncomeOverTime.tsx","src/backend/items/Equipment.tsx","src/backend/SaveData.tsx","src/backend/UICommands.tsx","src/utils/ElectronUtils.tsx","src/utils/Achievements.web.tsx","src/backend/AccumulatorVariables.tsx","src/backend/exploration/enemies/Enemies.tsx","src/backend/exploration/ExplorationUtils.tsx","src/backend/familiars/Familiar.tsx","src/backend/temporaryeffects/TemporaryEffects.tsx","src/backend/exploration/DeathInterceptors.tsx","src/backend/exploration/ExplorationActionResult.tsx","src/backend/exploration/Summoning.tsx","src/backend/exploration/Exploration.tsx","src/backend/familiars/FamiliarUtils.tsx","src/backend/exploration/enemies/Enemy.tsx","src/backend/Achievements.tsx","src/backend/classes/CombatClassesStoryline.tsx","src/backend/classes/CombatClasses.tsx","src/backend/storylines/Storylines.tsx","src/backend/ending/Endings.tsx","src/backend/events/EmptyEventMessage.tsx","src/backend/events/GameEvent.tsx","src/backend/events/Events.tsx","src/backend/events/EventMessageBuilder.tsx","src/backend/events/DemoEndEvent.web.tsx","src/components/utility/AuxOptionsContext.tsx","src/components/utility/Text.tsx","src/components/utility/Button.tsx","src/components/utility/icons/GameIcon.tsx","src/components/utility/markdown/MarkdownIconPlugin.tsx","src/components/utility/markdown/MarkdownTooltipPlugin.tsx","src/components/utility/Markdown.tsx","src/components/utility/Styles.tsx","src/components/utility/VisibilityContext.tsx","src/components/utility/useGameState.tsx","src/components/About.tsx","src/backend/action/Action.tsx","src/backend/events/storyline/desert/BoostingMachineStoryline.tsx","src/backend/spells/channeling/ChannelingResources.tsx","src/backend/boost/BoostActionBase.tsx","src/backend/Notification.tsx","src/backend/Notifications.tsx","src/backend/autocast/AutocastCondition.tsx","src/backend/autocast/conditions/AlwaysAutocastCondition.tsx","src/backend/autocast/AutocastConditionParameterType.tsx","src/backend/autocast/conditions/parameters/NumericAutocastConditionParameterType.tsx","src/backend/autocast/conditions/parameters/ResourceAutocastConditionParameterType.tsx","src/backend/autocast/conditions/ResourceLessThanAutocastCondition.tsx","src/backend/autocast/conditions/ResourceLessThanAutocastConditionRatio.tsx","src/backend/autocast/conditions/ResourceMoreThanAutocastCondition.tsx","src/backend/autocast/conditions/ResourceMoreThanAutocastConditionRatio.tsx","src/backend/autocast/conditions/SmartlyAutocastCondition.tsx","src/backend/autocast/conditions/parameters/TemporaryEffectAutocastConditionParameterType.tsx","src/backend/autocast/conditions/TemporaryEffectLowTimeRemainingAutocastCondition.tsx","src/backend/autocast/conditions/TemporaryEffectPresentAutocastCondition.tsx","src/backend/autocast/Autocast.tsx","src/backend/autocast/conditions/AutocastConditionLoader.tsx","src/backend/enhancement/Enhancements.tsx","src/backend/spells/SpellCastListeners.tsx","src/backend/spells/Utils.tsx","src/backend/spells/Spell.tsx","src/backend/items/transmute/TransmutationSpell.tsx","src/backend/temporaryeffects/TemporaryEffect.tsx","src/backend/rituals/RitualWeakness.tsx","src/backend/rituals/Rituals.tsx","src/backend/spells/ElementMultipliers.tsx","src/backend/events/progression/LevelUp.tsx","src/backend/items/ItemCompendium.tsx","src/backend/spellcraft/Spellcraft.tsx","src/backend/spellcraft/Spellcrafts.tsx","src/backend/spellcraft/SpellcraftUtils.tsx","src/backend/synchro/SynchroBonuses.tsx","src/backend/synchro/Synchro.tsx","src/components/utility/Miscellaneous.tsx","src/components/utility/TooltipContext.tsx","src/components/utility/Tooltip.web.tsx","src/components/inventory/ItemTile.tsx","src/backend/buildings/Buildings.tsx","src/backend/buildings/Building.tsx","src/components/utility/CheckBox.tsx","src/components/utility/CostViewer.tsx","src/components/utility/IconButton.tsx","src/components/utility/PlusMinusAllocator.tsx","src/components/utility/SpellWizardsInfo.tsx","src/backend/spells/GameStartup.tsx","src/components/utility/StatePersistedExpandedUI.tsx","src/components/utility/ActionContainer.tsx","src/components/utility/Divider.tsx","src/components/utility/GameStateFreezer.tsx","src/components/utility/CategoryContainer.tsx","src/components/utility/ActionsContainer.tsx","src/components/Boosts.tsx","src/components/utility/icons/IconUtils.tsx","src/components/exploration/EnemySpriteTile.tsx","src/components/utility/tooltip/utils.ts","src/components/utility/tooltip/PaperTooltip.tsx","src/components/utility/tooltip/addEventListener.tsx","src/components/utility/CombatStatsViewer.tsx","src/components/utility/BestiaryEnemyContainer.tsx","src/components/compendium/Bestiary.tsx","src/backend/items/ItemTagEnum.tsx","src/backend/Quickbar.tsx","src/backend/items/Item.tsx","src/backend/items/equipment/EquippableItem.tsx","src/backend/items/equipment/PouchItem.tsx","src/components/inventory/ItemTags.tsx","src/components/inventory/ItemInfo.tsx","src/components/inventory/CraftingDetails.tsx","src/components/spellcraft/SpellcraftDetails.tsx","src/components/inventory/ItemGrid.tsx","src/components/utility/Picker.tsx","src/components/utility/UIContext.tsx","src/components/Transmute.tsx","src/components/compendium/ItemCompendiumDetails.tsx","src/components/compendium/ItemCompendium.tsx","src/components/Compendium.tsx","src/audio/AudioManager.tsx","src/backend/Cleanup.tsx","src/backend/events/autorandom/RandomEventTrigger.tsx","src/utils/FilesystemSave.web.tsx","src/components/Debug.tsx","src/backend/challenges/Challenges.tsx","src/components/utility/EndingDataViewer.tsx","src/components/Ending.tsx","src/components/Enhance.tsx","src/backend/rituals/Ritual.tsx","src/backend/rituals/NecromancyRitual.tsx","src/components/utility/AccessibilityContext.tsx","src/components/utility/ProgressBar.tsx","src/components/exploration/EnemyActionDisplay.tsx","src/components/exploration/HPBar.tsx","src/components/exploration/EnemyHPBar.tsx","src/components/utility/ActiveMark.tsx","src/components/utility/SpellView.tsx","src/components/utility/DragHandle.tsx","src/components/spells/FavoriteSpellsContainer.tsx","src/components/spells/SpellElementSelector.tsx","src/components/spells/SpellsContainer.tsx","src/components/utility/KeyboardListener.web.tsx","src/components/exploration/ExplorationPouch.tsx","src/components/utility/TemporaryEffectsViewer.tsx","src/components/exploration/QuickbarContainer.tsx","src/components/inventory/EquipmentSetButtons.tsx","src/components/synchro/SynchroGridSmallDisplay.tsx","src/components/synchro/SynchroGridSelector.tsx","src/components/synchro/SynchroGridSelectors.tsx","src/components/utility/AutocastLoadoutLoadContainer.tsx","src/components/exploration/StrategyContainer.tsx","src/components/exploration/ExplorationBottomComponent.tsx","src/components/exploration/ExplorationProgressDisplay.tsx","src/components/exploration/FamiliarActionDisplay.tsx","src/components/exploration/FamiliarHPBar.tsx","src/components/exploration/FamiliarSpriteTile.tsx","src/components/exploration/PlayerActionDisplay.tsx","src/components/exploration/PlayerHPBar.tsx","src/components/exploration/PlayerMessageLog.tsx","src/components/utility/BottomResourceViewer.tsx","src/components/Exploration.tsx","src/backend/items/material/SlimeDrop.tsx","src/backend/items/material/Wildgrass.tsx","src/backend/exploration/enemies/training/Slime.tsx","src/backend/familiars/FamiliarClass.tsx","src/backend/familiars/SlimeFamiliar.tsx","src/backend/buildings/FamiliarCrate.tsx","src/components/familiars/FamiliarMessageLog.tsx","src/components/utility/DungeonFloorSelect.tsx","src/components/utility/FullscreenModal.tsx","src/components/Familiars.tsx","src/backend/helps/Helps.tsx","src/components/utility/HelpContainer.tsx","src/components/Help.tsx","src/backend/hints/Hints.tsx","src/components/Home.tsx","src/backend/events/storyline/cavern/DualFlexibilityStoryline.tsx","src/components/utility/Card.tsx","src/components/utility/LoadGameContainer.tsx","src/components/Intro.tsx","src/components/inventory/EquippedItems.tsx","src/components/inventory/EquippedPouch.tsx","src/backend/buildings/SaleStall.tsx","src/backend/autocast/Market.tsx","src/backend/items/consumable/FamiliarItem.tsx","src/components/inventory/ItemDetailsAction.tsx","src/components/inventory/ItemFamiliarModalContents.tsx","src/components/inventory/ItemDetails.tsx","src/components/inventory/InventoryItems.tsx","src/components/Inventory.tsx","src/utils/OrientationLockManager.web.tsx","src/components/Loading.tsx","src/utils/Zoom.web.tsx","src/components/Options.tsx","src/components/Retirement.tsx","src/components/rituals/CorruptionDetails.tsx","src/components/rituals/RitualView.tsx","src/components/rituals/RitualsView.tsx","src/components/Rituals.tsx","src/backend/buildings/SpellcraftingVat.tsx","src/components/utility/SpellSelect.tsx","src/components/Spellcraft.tsx","src/backend/events/storyline/desert/Convenience.tsx","src/backend/buildings/catalysts/EssenceCatalyst.tsx","src/backend/buildings/mana/ManaSpout.tsx","src/backend/buildings/storages/EssenceStorage.tsx","src/backend/buildings/storages/ManaShard.tsx","src/backend/items/transmute/materials/CopperOre.tsx","src/backend/temporaryeffects/Poison.tsx","src/backend/temporaryeffects/NoxiousCloak.tsx","src/backend/exploration/enemies/sewers/EvolvedSlime.tsx","src/backend/temporaryeffects/Airborne.tsx","src/backend/temporaryeffects/AttackSpellProtection.tsx","src/backend/temporaryeffects/AutoAttackProtection.tsx","src/backend/temporaryeffects/Berserk.tsx","src/backend/temporaryeffects/Wet.tsx","src/backend/temporaryeffects/Chilled.tsx","src/backend/temporaryeffects/CloakOfFlames.tsx","src/backend/temporaryeffects/Corrosion.tsx","src/backend/temporaryeffects/Cursed.tsx","src/backend/temporaryeffects/Disease.tsx","src/backend/temporaryeffects/DivineImmunity.tsx","src/backend/temporaryeffects/ElementalProtection.tsx","src/backend/temporaryeffects/ElementalSilence.tsx","src/backend/temporaryeffects/Frail.tsx","src/backend/temporaryeffects/Frozen.tsx","src/backend/temporaryeffects/Grounded.tsx","src/backend/temporaryeffects/Guard.tsx","src/backend/temporaryeffects/Paralyzed.tsx","src/backend/temporaryeffects/Petrified.tsx","src/backend/temporaryeffects/PoisonImmunity.tsx","src/backend/temporaryeffects/Seared.tsx","src/backend/temporaryeffects/Shapeshifted.tsx","src/backend/temporaryeffects/Shrunken.tsx","src/backend/temporaryeffects/SpecificStatusImmunity.tsx","src/backend/temporaryeffects/StatusImmunity.tsx","src/backend/temporaryeffects/Stunning.tsx","src/backend/temporaryeffects/Weakened.tsx","src/backend/temporaryeffects/WizardDisarray.tsx","src/backend/temporaryeffects/CommonTemporaryEffects.tsx","src/backend/items/transmute/EquipmentTransmutationSpell.tsx","src/backend/items/equipment/pouch/HealthPotion.tsx","src/backend/items/transmute/materials/Cotton.tsx","src/backend/exploration/enemies/sewers/Goblin.tsx","src/backend/exploration/enemies/sewers/MutatedFish.tsx","src/backend/items/material/VenomPowder.tsx","src/backend/exploration/enemies/sewers/PoisonousToad.tsx","src/backend/exploration/enemies/sewers/SewerFish.tsx","src/backend/exploration/dungeons/DungeonFloor.tsx","src/backend/items/equipment/pouch/AntidotePotion.tsx","src/backend/exploration/enemies/sewers/GoblinSharpshooter.tsx","src/backend/exploration/enemies/sewers/SewerFly.tsx","src/backend/exploration/enemies/sewers/Sicklefish.tsx","src/backend/exploration/enemies/sewers/SludgeMass.tsx","src/backend/items/quest/EtherealEelExtract.tsx","src/backend/spells/CombatSpellBase.tsx","src/backend/spells/air/Haste.tsx","src/backend/exploration/enemies/sewers/EtherealEel.tsx","src/backend/exploration/enemies/sewers/GoblinDoctor.tsx","src/backend/exploration/enemies/sewers/ManEatingPlant.tsx","src/backend/items/equipment/pouch/BuffingPouchItem.tsx","src/backend/items/equipment/pouch/VenomousBrew.tsx","src/backend/exploration/enemies/sewers/VenomousSpider.tsx","src/backend/exploration/dungeons/sewers/SewerHideout.tsx","src/backend/exploration/dungeons/sewers/SewerHazardousSector.tsx","src/backend/exploration/dungeons/sewers/SewerEntrance.tsx","src/backend/events/storyline/sewers/FurniturePreservation.tsx","src/backend/events/storyline/sewers/PermaCast.tsx","src/backend/events/storyline/sewers/TicTacToeStoryline.tsx","src/backend/events/storyline/sewers/TomeOfToxicKnowledgeStoryline.tsx","src/backend/NewGamePlus.tsx","src/components/utility/EndingHistoryContainer.tsx","src/backend/events/storyline/desert/DiviningTheWorldStoryline.tsx","src/components/utility/StorylineContainer.tsx","src/components/utility/StorylinesContainer.tsx","src/components/Stats.tsx","src/components/Study.tsx","src/components/Synchro.tsx","src/backend/spells/channeling/BasicChannelingSpellBase.tsx","src/backend/spells/channeling/ChannelFire.tsx","src/components/Wizards.tsx","src/components/Worlds.tsx","src/components/events/EventList.tsx","src/components/events/EventOverlay.tsx","src/components/main/BottomMenu.tsx","src/components/main/GameTickProcessor.tsx","src/components/main/ManaBar.tsx","src/backend/timetick/TimePieces.tsx","src/components/utility/ElementViewer.tsx","src/components/utility/ResourceViewer.tsx","src/components/main/Menu.tsx","src/components/spells/SpellMenu.tsx","src/components/utility/DebugUPSOverlay.tsx","src/components/utility/ErrorBoundary.tsx","src/components/utility/FullScreenListener.web.tsx","src/components/utility/KeepAwake.tsx","src/components/utility/SaveDataBackupper.web.tsx","src/AppContents.tsx","src/backend/action/actions/ExpandHome.tsx","src/backend/action/actions/GatherMana.tsx","src/backend/action/actions/UseTimePiecesEvent.tsx","src/backend/action/actions/UseTimePiecesStudy.tsx","src/backend/action/actions/UseTimePiecesWarp.tsx","src/backend/action/ActionLoader.tsx","src/backend/items/transmute/materials/MonstiumPaper.tsx","src/backend/enhancement/EnhancementPurchaseListeners.tsx","src/backend/enhancement/Enhancement.tsx","src/backend/enhancement/exploration/MonstiumCollection.tsx","src/backend/enhancement/production/SuperheatedCatalysts.tsx","src/backend/enhancement/other/MonstiumCatalysts.tsx","src/backend/buildings/catalysts/MonstiumCatalyst.tsx","src/backend/enhancement/other/ManaSteamers.tsx","src/backend/buildings/mana/ManaSteamer.tsx","src/backend/enhancement/other/SewageSystem.tsx","src/backend/buildings/production/SewageSystem.tsx","src/backend/buildings/ResearcherDesk.tsx","src/backend/buildings/storages/Monstruarium.tsx","src/backend/enhancement/other/TreasureChests.tsx","src/backend/buildings/storages/TreasureChest.tsx","src/backend/buildings/WizardChamber.tsx","src/backend/buildings/DemoBuildingLoader.tsx","src/backend/classes/Battlemage.tsx","src/backend/classes/Builder.tsx","src/backend/classes/Spellslinger.tsx","src/backend/classes/DemoCombatClassLoader.tsx","src/backend/classes/CombatClassesUnlocker.tsx","src/backend/enhancement/exploration/EfficientExploration.tsx","src/backend/enhancement/exploration/Compass.tsx","src/backend/enhancement/exploration/HealthBoost.tsx","src/backend/enhancement/exploration/DoubleHealthBoost.tsx","src/backend/enhancement/exploration/EnlargedPouch.tsx","src/backend/enhancement/exploration/FirstAid.tsx","src/backend/enhancement/exploration/ProfessionalPouch.tsx","src/backend/enhancement/exploration/GiantPouch.tsx","src/backend/enhancement/exploration/HealthPotionEffectivity.tsx","src/backend/enhancement/exploration/TripleHealthBoost.tsx","src/backend/enhancement/land/FurnitureOrganization.tsx","src/backend/enhancement/land/LandTreaty.tsx","src/backend/enhancement/land/HouseExpansionContract.tsx","src/backend/enhancement/other/UnderstandingOfMagic.tsx","src/backend/enhancement/other/DeeperUnderstandingOfMagic.tsx","src/backend/enhancement/other/GlitteringStalls.tsx","src/backend/enhancement/other/HiringSpree.tsx","src/backend/enhancement/other/ScalableChambers.tsx","src/backend/enhancement/other/ShardDiligence.tsx","src/backend/enhancement/production/ImprovedPurification.tsx","src/backend/enhancement/production/SuperheatedSteamers.tsx","src/backend/enhancement/storage/CompressedEssence.tsx","src/backend/enhancement/storage/PrimaryStorage.tsx","src/backend/enhancement/storage/WideStorage.tsx","src/backend/events/autorandom/Chest.tsx","src/backend/events/autorandom/RandomRepeatableEvents.tsx","src/backend/events/DungeonEventGroup.tsx","src/backend/Achievement.tsx","src/backend/events/progression/PreTrainingProgression.tsx","src/backend/exploration/enemies/training/AnimatedSnowman.tsx","src/backend/items/equipment/pouch/Cherry.tsx","src/backend/exploration/enemies/training/Goat.tsx","src/backend/exploration/dungeons/training/TrainingTowerAir.tsx","src/backend/exploration/enemies/training/BreezyRabbit.tsx","src/backend/exploration/enemies/training/Windglider.tsx","src/backend/exploration/dungeons/training/TrainingTowerEarth.tsx","src/backend/exploration/enemies/training/FlyingRock.tsx","src/backend/spells/earth/Stoneskin.tsx","src/backend/exploration/enemies/training/RockGolem.tsx","src/backend/exploration/dungeons/training/TrainingTowerFire.tsx","src/backend/events/autorandom/ExplorationTrigger.tsx","src/backend/items/equipment/accessory/air/FeatheredHat.tsx","src/backend/items/equipment/body/earth/StoneMail.tsx","src/backend/items/equipment/body/water/WizardsRobe.tsx","src/backend/items/equipment/hand/air/Glaive.tsx","src/backend/items/equipment/hand/earth/BastardSword.tsx","src/backend/items/equipment/hand/fire/BattleAxe.tsx","src/backend/items/equipment/hand/fire/HandAxe.tsx","src/backend/items/equipment/hand/water/WandOfWater.tsx","src/backend/exploration/dungeons/Dungeon.tsx","src/backend/spells/fire/Strength.tsx","src/backend/exploration/enemies/training/BlazingTurtle.tsx","src/backend/exploration/enemies/training/FireBat.tsx","src/backend/exploration/dungeons/training/TrainingTowerWater.tsx","src/backend/exploration/dungeons/training/TrainingTowers.tsx","src/backend/exploration/enemies/training/HeadInstructor.tsx","src/backend/events/progression/DemoProgressionEvents.tsx","src/backend/events/progression/TrainingTowerProgression.tsx","src/backend/events/progression/SewersProgression.tsx","src/backend/events/storyline/pretraining/AdvertisingManual.tsx","src/backend/events/storyline/pretraining/BookOfMonstersStoryline.tsx","src/backend/events/storyline/pretraining/ChannelAllStoryline.tsx","src/backend/events/storyline/pretraining/PosterityStoryline.tsx","src/backend/exploration/enemies/sewers/GoblinChief.tsx","src/backend/events/storyline/sewers/GoblinDen.tsx","src/backend/items/transmute/materials/Paper.tsx","src/backend/events/storyline/sewers/LocationEncyclopediaStoryline.tsx","src/backend/events/storyline/sewers/LocationEncyclopedia.tsx","src/backend/events/storyline/sewers/Outessenced.tsx","src/backend/items/equipment/hand/air/CopperGauntlet.tsx","src/backend/items/equipment/hand/earth/CopperRapier.tsx","src/backend/items/equipment/hand/fire/CopperTomahawk.tsx","src/backend/exploration/dungeons/sewers/Sewers.tsx","src/backend/events/storyline/sewers/PassageOfStench.tsx","src/backend/events/storyline/sewers/ShardStockpile.tsx","src/backend/items/equipment/accessory/water/WizardsHat.tsx","src/backend/events/storyline/sewers/SomeonesTrash.tsx","src/backend/events/storyline/training/AdvancedManaSpouts.tsx","src/backend/events/storyline/training/AlchemyClass.tsx","src/backend/events/storyline/training/EssenceArtifact.tsx","src/backend/exploration/enemies/training/KnightInShiningArmor.tsx","src/backend/events/storyline/training/HowToFight.tsx","src/backend/events/storyline/training/StudentContest.tsx","src/backend/events/storyline/training/ZoomThroughTraining.tsx","src/backend/events/storyline/DemoStorylinesLoader.tsx","src/backend/storylines/StorylinesCommonLogic.tsx","src/backend/events/storyline/pretraining/RetireUnlocker.tsx","src/backend/events/storyline/pretraining/BookOfMonsters.tsx","src/backend/events/storyline/sewers/TicTacToe.tsx","src/backend/events/storyline/sewers/TomeOfToxicKnowledge.tsx","src/backend/events/DemoGameEventLoader.tsx","src/backend/exploration/dungeons/DemoDungeonLoader.tsx","src/backend/exploration/enemies/DemoEnemyLoader.tsx","src/backend/helps/HelpLoaderDemo.tsx","src/backend/hints/DemoHintLoader.tsx","src/backend/items/equipment/accessory/air/CloakOfDarkness.tsx","src/backend/items/equipment/accessory/earth/CopperShield.tsx","src/backend/items/equipment/accessory/earth/SmallShield.tsx","src/backend/items/equipment/accessory/earth/StoneEgg.tsx","src/backend/items/equipment/accessory/fire/CollarOfPower.tsx","src/backend/items/equipment/hand/poison/AssassinsBaselard.tsx","src/backend/items/equipment/accessory/poison/AssassinsCloak.tsx","src/backend/items/equipment/accessory/poison/CharmOfPoisonResistance.tsx","src/backend/items/equipment/accessory/poison/SoulStone.tsx","src/backend/items/equipment/accessory/water/ManaTear.tsx","src/backend/items/equipment/accessory/water/RingOfRegeneration.tsx","src/backend/items/equipment/body/air/BreezyShirt.tsx","src/backend/items/equipment/body/air/EvasiveGarb.tsx","src/backend/items/equipment/body/earth/CopperArmor.tsx","src/backend/items/equipment/body/earth/TurtleArmor.tsx","src/backend/items/equipment/body/fire/LeatherArmor.tsx","src/backend/items/equipment/body/fire/ReinforcedLeatherArmor.tsx","src/backend/items/equipment/body/water/ElderWizardsRobe.tsx","src/backend/items/equipment/body/water/TunicOfGoodHealth.tsx","src/backend/items/equipment/hand/air/GaleScepter.tsx","src/backend/items/equipment/hand/air/Knuckles.tsx","src/backend/items/equipment/hand/earth/Longsword.tsx","src/backend/items/equipment/hand/fire/CopperWarhammer.tsx","src/backend/items/equipment/hand/fire/RedConflagration.tsx","src/backend/items/equipment/hand/fire/WandOfFire.tsx","src/backend/items/equipment/hand/poison/Dagger.tsx","src/backend/items/equipment/hand/poison/ShadowBlade.tsx","src/backend/items/equipment/hand/poison/WandOfPoison.tsx","src/backend/items/equipment/hand/water/Rod.tsx","src/backend/items/equipment/pouch/PotionOfAlacrity.tsx","src/backend/items/equipment/pouch/PotionOfEvasion.tsx","src/backend/items/equipment/pouch/PotionOfMuscle.tsx","src/backend/items/equipment/pouch/PotionOfToughness.tsx","src/backend/items/equipment/pouch/PotionOfVitality.tsx","src/backend/items/transmute/materials/CopperIngot.tsx","src/backend/items/transmute/materials/ElementalPrism.tsx","src/backend/items/transmute/materials/ElementalShard.tsx","src/backend/items/transmute/materials/ThickHide.tsx","src/backend/items/DemoItemLoader.tsx","src/backend/spells/air/AirBlast.tsx","src/backend/spells/air/Blur.tsx","src/backend/spells/air/EnchantSaleStalls.tsx","src/backend/spells/air/Levitation.tsx","src/backend/spells/air/Richness.tsx","src/backend/spells/air/Twister.tsx","src/backend/spells/channeling/ChannelAir.tsx","src/backend/spells/channeling/ChannelEarth.tsx","src/backend/spells/channeling/ChannelWater.tsx","src/backend/spells/channeling/ChannelFour.tsx","src/backend/spells/channeling/ChannelPoison.tsx","src/backend/spells/earth/EarthShield.tsx","src/backend/spells/earth/EnchantTransmutation.tsx","src/backend/spells/earth/Guard.tsx","src/backend/spells/earth/Knockout.tsx","src/backend/spells/earth/Landslide.tsx","src/backend/spells/earth/StoneStrike.tsx","src/backend/spells/fire/CloakOfFlames.tsx","src/backend/spells/fire/EnchantCatalysts.tsx","src/backend/spells/fire/Fireball.tsx","src/backend/spells/fire/ImbueFlames.tsx","src/backend/spells/fire/InfernalBlaze.tsx","src/backend/spells/fire/Sear.tsx","src/backend/spells/poison/Antidote.tsx","src/backend/spells/poison/EnchantMonstiumCatalysts.tsx","src/backend/spells/poison/EnchantSewageSystem.tsx","src/backend/spells/poison/Frail.tsx","src/backend/spells/poison/Intoxicate.tsx","src/backend/spells/poison/Sting.tsx","src/backend/spells/water/DropletOfHealing.tsx","src/backend/spells/water/EnchantManaSpouts.tsx","src/backend/spells/water/EnchantManaSteamers.tsx","src/backend/spells/water/Frost.tsx","src/backend/spells/water/Longevity.tsx","src/backend/spells/water/Soak.tsx","src/backend/spells/water/Splash.tsx","src/backend/spells/water/StreamOfHealing.tsx","src/backend/spells/DemoSpellLoader.tsx","src/backend/spells/ElementsCommonLogic.tsx","src/backend/spells/SpellCommonLogic.tsx","src/backend/synchro/SynchroBonus.tsx","src/backend/synchro/bonuses/DoubleElementSynchroBonuses.tsx","src/backend/synchro/bonuses/BaseSynchroBonuses.tsx","src/backend/synchro/bonuses/air/AirPoisonSynchroBonus.tsx","src/backend/synchro/bonuses/earth/EarthAirSynchroBonus.tsx","src/backend/synchro/bonuses/earth/EarthPoisonSynchroBonus.tsx","src/backend/synchro/bonuses/earth/EarthWaterSynchroBonus.tsx","src/backend/synchro/bonuses/fire/FireAirSynchroBonus.tsx","src/backend/synchro/bonuses/fire/FireEarthSynchroBonus.tsx","src/backend/synchro/bonuses/fire/FirePoisonSynchroBonus.tsx","src/backend/synchro/bonuses/fire/FireWaterSynchroBonus.tsx","src/backend/synchro/bonuses/water/WaterAirSynchroBonus.tsx","src/backend/synchro/bonuses/water/WaterPoisonSynchroBonus.tsx","src/backend/synchro/SynchroLoaderDemo.tsx","src/backend/DemoLoader.tsx","src/backend/enhancement/DemoEnhancementLoader.tsx","DemoApp.tsx","node_modules/moment/locale|sync|/^/.*$","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { MMKV } from \"react-native-mmkv\";\r\n\r\nexport const Storage = new MMKV();\r\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport { Storage } from \"./src/utils/Storage\";\r\n\r\n// const backend = {\r\n//   type: \"backend\",\r\n//   init: function (services, backendOptions, i18nextOptions) {\r\n//     console.warn(\"init\");\r\n//     // Do nothing\r\n//   },\r\n//   read: function (language, namespace, callback) {\r\n//     console.warn(\"read\", language, namespace);\r\n//     const store = {};\r\n//     const nowMS = new Date().getTime();\r\n\r\n//     if (!AsyncStorage) {\r\n//       return callback(null, null);\r\n//     }\r\n\r\n//     AsyncStorage.getItem(\"uploadedTranslations\")\r\n//       .then((local) => {\r\n//         console.warn(\"loaded\");\r\n//         return callback(null, {\r\n//           \"**Full Version**\": \"**IT WORKS**\",\r\n//           \"School Trophy (Plentiful Spellcasting)\": \"YESYESYES\",\r\n//         });\r\n//         if (local) {\r\n//           local = JSON.parse(local);\r\n\r\n//           return callback(null, local);\r\n//         }\r\n\r\n//         callback(null, null);\r\n//       })\r\n//       .catch((err) => {\r\n//         console.warn(err);\r\n//         callback(null, null);\r\n//       });\r\n//   },\r\n//   save: function () {\r\n//     console.warn(\"save\");\r\n//   },\r\n\r\n//   create: function (languages, namespace, key, fallbackValue) {\r\n//     // Do nothing\r\n//   },\r\n// };\r\n\r\n// const resources =  {\r\n//   en: {\r\n//     translation: {\r\n//       \"Welcome to React\": \"Welcome to React and react-i18next\",\r\n//     },\r\n//   },\r\n//   fr: {\r\n//     translation: {\r\n//       \"Welcome to React\": \"Bienvenue à React et react-i18next\",\r\n//     },\r\n//   },\r\n// };\r\n\r\nconst resources = {\r\n  en: {\r\n    translation: JSON.parse(\r\n      Storage.getString(\"uploadedTranslationsJSON\") ?? \"{}\",\r\n    ),\r\n  },\r\n};\r\n\r\ni18n\r\n  .use(initReactI18next)\r\n  // .use(I18NextChainedBackend)\r\n  // .use(Backend)\r\n  .init({\r\n    resources, //: { en: { translation: JSON.parse(resources ?? \"{}\") } },\r\n    lng: \"en\", // language to use, more information here: https://www.i18next.com/overview/configuration-options#languages-namespaces-resources\r\n    // you can use the i18n.changeLanguage function to change the language manually: https://www.i18next.com/overview/api#changelanguage\r\n    // if you're using a language detector, do not define the lng option\r\n\r\n    // allow keys to be phrases having `:`, `.`\r\n    nsSeparator: false,\r\n    keySeparator: false,\r\n\r\n    // do not load a fallback\r\n    fallbackLng: false,\r\n    saveMissing: true,\r\n\r\n    interpolation: {\r\n      escapeValue: false, // react already safes from xss\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","import { useEffect, useRef } from \"react\";\r\nimport memoize from \"sonic-memoize\";\r\n\r\nexport function clone<T>(obj: T): T {\r\n  return JSON.parse(JSON.stringify(obj));\r\n}\r\n\r\nexport async function sleep(ms: number) {\r\n  return new Promise((resolve, _reject) => setTimeout(() => resolve(null), ms));\r\n}\r\n\r\nexport function hashCode(str: string, seed: number = 1): number {\r\n  let h1 = 0xdeadbeef ^ seed,\r\n    h2 = 0x41c6ce57 ^ seed;\r\n  for (let i = 0, ch; i < str.length; i++) {\r\n    ch = str.charCodeAt(i);\r\n    h1 = Math.imul(h1 ^ ch, 2654435761);\r\n    h2 = Math.imul(h2 ^ ch, 1597334677);\r\n  }\r\n\r\n  h1 =\r\n    Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^\r\n    Math.imul(h2 ^ (h2 >>> 13), 3266489909);\r\n  h2 =\r\n    Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^\r\n    Math.imul(h1 ^ (h1 >>> 13), 3266489909);\r\n\r\n  return 4294967296 * (2097151 & h2) + (h1 >>> 0);\r\n}\r\n\r\nexport function getRandomElementFromArray<T>(arr: T[]): T {\r\n  const len = arr.length;\r\n  const idx = Math.floor(Math.random() * len);\r\n  return arr[idx];\r\n}\r\n\r\nexport function compareVersions(\r\n  v1: string,\r\n  v2: string,\r\n  maxDepth?: number,\r\n): number {\r\n  const v1Parts = v1.split(\".\");\r\n  const v2Parts = v2.split(\".\");\r\n  try {\r\n    for (let i in v1Parts) {\r\n      if (maxDepth != null && Number.parseInt(i) >= maxDepth) {\r\n        break;\r\n      }\r\n      const v1Part = Number.parseInt(v1Parts?.[i] ?? \"0\");\r\n      const v2Part = Number.parseInt(v2Parts?.[i] ?? \"0\");\r\n      if (v1Part - v2Part != 0) {\r\n        return v1Part - v2Part;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    // Failed to compare versions. Pretend they are equal\r\n    return 0;\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function keysOf<T extends string | number | symbol, V>(\r\n  obj: Partial<Record<T, V>> | Record<T, V>,\r\n): T[] {\r\n  return Object.keys(obj) as T[];\r\n}\r\n\r\nexport const keysOfCached = memoize(keysOf);\r\n\r\nexport function valuesOf<T extends string | number | symbol, V>(\r\n  obj: Partial<Record<T, V>> | Record<T, V>,\r\n): V[] {\r\n  return Object.values(obj) as V[];\r\n}\r\n\r\nexport const valuesOfCached = memoize(valuesOf);\r\n\r\nexport function fromEntries<T extends string | number | symbol, V>(\r\n  entries: [T, V][],\r\n): Record<T, V> {\r\n  return Object.fromEntries(entries) as Record<T, V>;\r\n}\r\n\r\nexport function addRecords<T extends string | number | symbol>(\r\n  records: Partial<Record<T, number>>[],\r\n): Partial<Record<T, number>> {\r\n  const result: Partial<Record<T, number>> = {};\r\n  for (let record of records) {\r\n    for (let key in record) {\r\n      if (result[key] == null) {\r\n        result[key] = 0;\r\n      }\r\n      result[key] = (record[key] ?? 0) + (result[key] ?? 0);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function nullthrows<T>(obj: T | null | undefined): T {\r\n  if (obj == null) {\r\n    throw new Error(\"Should be nonnull\");\r\n  }\r\n  return obj;\r\n}\r\n\r\nexport function useComponentDidUpdate(effect: () => void, dependencies) {\r\n  const hasMounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (!hasMounted.current) {\r\n      hasMounted.current = true;\r\n      return;\r\n    }\r\n    effect();\r\n  }, dependencies);\r\n}\r\n\r\nexport function assertUnreachable(x: never): never {\r\n  throw new Error(\"Didn't expect to get here\");\r\n}\r\n","// export const t = (...args) => args[0];\r\n\r\nimport { t as i18nextT } from \"i18next\";\r\nimport { LRUCache } from \"lru-cache\";\r\n\r\nconst cache = new LRUCache({ max: 10000 });\r\nlet cacheCalls = 0,\r\n  cacheMisses = 0;\r\n\r\nexport const t = (...args) => {\r\n  const key = JSON.stringify(args);\r\n  let cached = cache.get(key);\r\n  if (cached === undefined) {\r\n    // @ts-ignore\r\n    cached = i18nextT(...args);\r\n    cache.set(key, cached);\r\n    cacheMisses++;\r\n  }\r\n  cacheCalls++;\r\n  return cached as string;\r\n};\r\n","import moment from \"moment\";\r\nimport { t } from \"./I18n\";\r\n\r\nexport enum RoundingMethod {\r\n  DEFAULT = \"DEFAULT\",\r\n  UP = \"UP\",\r\n  DOWN = \"DOWN\",\r\n}\r\n\r\nconst MAX_FORMAT_VALUE = Number.MAX_VALUE / 100;\r\n\r\nexport function formatNumber(\r\n  num: number,\r\n  options: { showDecimals: boolean; roundingMethod?: RoundingMethod } = {\r\n    showDecimals: false,\r\n    roundingMethod: undefined,\r\n  },\r\n): string {\r\n  num = Number(num);\r\n  if (num >= MAX_FORMAT_VALUE) {\r\n    return \"∞\";\r\n  }\r\n  if (num >= 1e30) {\r\n    return num.toExponential(2);\r\n  }\r\n  if (num >= 1e27) {\r\n    return (\r\n      formatNumber(num / 1e27, {\r\n        showDecimals: true,\r\n        roundingMethod: options.roundingMethod,\r\n      }) + \"Oc\"\r\n    );\r\n  }\r\n  if (num >= 1e24) {\r\n    return (\r\n      formatNumber(num / 1e24, {\r\n        showDecimals: true,\r\n        roundingMethod: options.roundingMethod,\r\n      }) + \"Sp\"\r\n    );\r\n  }\r\n  if (num >= 1e21) {\r\n    return (\r\n      formatNumber(num / 1e21, {\r\n        showDecimals: true,\r\n        roundingMethod: options.roundingMethod,\r\n      }) + \"Sx\"\r\n    );\r\n  }\r\n  if (num >= 1e18) {\r\n    return (\r\n      formatNumber(num / 1e18, {\r\n        showDecimals: true,\r\n        roundingMethod: options.roundingMethod,\r\n      }) + \"Qi\"\r\n    );\r\n  }\r\n  if (num >= 1e15) {\r\n    return (\r\n      formatNumber(num / 1e15, {\r\n        showDecimals: true,\r\n        roundingMethod: options.roundingMethod,\r\n      }) + \"Qa\"\r\n    );\r\n  }\r\n  if (num >= 1000000000000) {\r\n    return (\r\n      formatNumber(num / 1000000000000, {\r\n        showDecimals: true,\r\n        roundingMethod: options.roundingMethod,\r\n      }) + \"T\"\r\n    );\r\n  }\r\n  if (num >= 1000000000) {\r\n    return (\r\n      formatNumber(num / 1000000000, {\r\n        showDecimals: true,\r\n        roundingMethod: options.roundingMethod,\r\n      }) + \"B\"\r\n    );\r\n  }\r\n  if (num >= 1000000) {\r\n    return (\r\n      formatNumber(num / 1000000, {\r\n        showDecimals: true,\r\n        roundingMethod: options.roundingMethod,\r\n      }) + \"M\"\r\n    );\r\n  }\r\n  if (num >= 10000) {\r\n    return (\r\n      formatNumber(num / 1000, {\r\n        showDecimals: true,\r\n        roundingMethod: options.roundingMethod,\r\n      }) + \"K\"\r\n    );\r\n  }\r\n\r\n  const roundingMethod = options.roundingMethod ?? RoundingMethod.DEFAULT;\r\n\r\n  if (options.showDecimals && Math.abs(num) < 10 && !Number.isInteger(num)) {\r\n    const base =\r\n      roundingMethod == RoundingMethod.DEFAULT\r\n        ? Math.round(num * 100)\r\n        : roundingMethod != RoundingMethod.UP\r\n        ? Math.floor(num * 100)\r\n        : Math.ceil(num * 100);\r\n    return (base / 100.0).toFixed(2);\r\n  } else if (\r\n    options.showDecimals &&\r\n    Math.abs(num) < 100 &&\r\n    !Number.isInteger(num)\r\n  ) {\r\n    const base =\r\n      roundingMethod == RoundingMethod.DEFAULT\r\n        ? Math.round(num * 10)\r\n        : roundingMethod != RoundingMethod.UP\r\n        ? Math.floor(num * 10)\r\n        : Math.ceil(num * 10);\r\n    return (Math.floor(base) / 10.0).toFixed(1);\r\n  } else {\r\n    const base =\r\n      roundingMethod == RoundingMethod.DEFAULT\r\n        ? Math.round(num)\r\n        : roundingMethod != RoundingMethod.UP\r\n        ? Math.floor(num)\r\n        : Math.ceil(num);\r\n    return base.toFixed();\r\n  }\r\n}\r\n\r\nexport function formatMultiplier(\r\n  ratio: number,\r\n  options: { showDecimals: boolean; roundingMethod?: RoundingMethod } = {\r\n    showDecimals: false,\r\n    roundingMethod: RoundingMethod.DEFAULT,\r\n  },\r\n): string {\r\n  const pct = (ratio - 1.0) * 100;\r\n  if (pct > 0) {\r\n    if (pct > 999.5) {\r\n      return t(\"{{ratio}}x\", {\r\n        ratio: formatNumber(ratio, { showDecimals: true }),\r\n      });\r\n    }\r\n    return t(\"+{{pct}}%\", { pct: formatNumber(pct, options) });\r\n  } else {\r\n    return t(\"{{pct}}%\", { pct: formatNumber(pct, options) });\r\n  }\r\n}\r\n\r\nexport function formatTime(\r\n  secs: number,\r\n  options: { shortForm: boolean; showDecimals: boolean } = {\r\n    shortForm: false,\r\n    showDecimals: false,\r\n  },\r\n): string {\r\n  const { shortForm, showDecimals } = options;\r\n  let unit = shortForm ? t(\"sec\") : t(\"second(s)\");\r\n  let time = formatNumber(secs, { showDecimals: showDecimals });\r\n  if (secs > 60) {\r\n    unit = shortForm ? t(\"min\") : t(\"minute(s)\");\r\n    time = formatNumber(secs / 60, { showDecimals: showDecimals });\r\n  }\r\n  if (secs > 60 * 60) {\r\n    unit = shortForm ? t(\"hr\") : t(\"hour(s)\");\r\n    time = formatNumber(secs / (60 * 60), { showDecimals: showDecimals });\r\n  }\r\n  return t(\"{{time}} {{unit}}\", { time, unit });\r\n}\r\n\r\nexport function formatTimeLong(duration: moment.Duration) {\r\n  if (duration.asDays() < 1.0) {\r\n    return t(\"{{hours}}:{{minutes}}:{{seconds}}\", {\r\n      hours: duration.hours().toFixed().padStart(2, \"0\"),\r\n      minutes: duration.minutes().toFixed().padStart(2, \"0\"),\r\n      seconds: duration.seconds().toFixed().padStart(2, \"0\"),\r\n    });\r\n  }\r\n\r\n  return t(\"{{days}} days, {{hours}}:{{minutes}}:{{seconds}}\", {\r\n    hours: duration.hours().toFixed().padStart(2, \"0\"),\r\n    minutes: duration.minutes().toFixed().padStart(2, \"0\"),\r\n    seconds: duration.seconds().toFixed().padStart(2, \"0\"),\r\n    days: formatNumber(Math.floor(duration.asDays())),\r\n  });\r\n}\r\n","import Constants from \"expo-constants\";\r\n\r\nexport function getCurrentVersionTimestamp(): number | undefined {\r\n  return Constants?.expoConfig?.extra?.buildRunTimestamp;\r\n}\r\n\r\nexport function getCurrentVersion(): string | undefined {\r\n  return Constants?.expoConfig?.version;\r\n}\r\n","export enum ExplorationStatus {\r\n  None = \"None\",\r\n  Exploring = \"Exploring\",\r\n  ExploringBoss = \"ExploringBoss\",\r\n  Reviving = \"Reviving\",\r\n  Combat = \"Combat\",\r\n}\r\n","import React from \"react\";\r\nimport { Platform } from \"react-native\";\r\nimport { clone } from \"../utils/CoreUtils\";\r\nimport { t } from \"../utils/I18n\";\r\nimport { getCurrentVersion } from \"../utils/Versioning\";\r\nimport { NotificationData } from \"./Notification\";\r\nimport { QuickbarData } from \"./Quickbar\";\r\nimport { Resource } from \"./Resources\";\r\nimport { AutocastRuleStatus, AutocastStrategy } from \"./autocast/Autocast\";\r\nimport { BuildingData } from \"./buildings/Buildings\";\r\nimport { EventOccurrenceData } from \"./events/Events\";\r\nimport { EventTag } from \"./events/GameEvent\";\r\nimport { CombatStat } from \"./exploration/CombatStats\";\r\nimport { CombatActionResult } from \"./exploration/ExplorationActionResult\";\r\nimport { ExplorationStatus } from \"./exploration/ExplorationStatus\";\r\nimport { DungeonFloor } from \"./exploration/dungeons/DungeonFloor\";\r\nimport { FamiliarData } from \"./familiars/Familiar\";\r\nimport { EquipmentSlot } from \"./items/Equipment\";\r\nimport { ItemOccurrence, ItemStack } from \"./items/Item\";\r\nimport { SpellcraftData } from \"./spellcraft/SpellcraftData\";\r\nimport { SpellElement } from \"./spells/Elements\";\r\nimport { TemporaryEffectData } from \"./temporaryeffects/TemporaryEffects\";\r\n\r\nexport type PlayerContextGlobalApprenticeLoadout = {\r\n  name: string;\r\n  allocation: Record<string, number>;\r\n};\r\n\r\nexport enum ResearcherAutoAssignStrategy {\r\n  OFF = \"OFF\",\r\n  SPREAD_EVENLY = \"SPREAD_EVENLY\",\r\n  HIGHEST_AMOUNT = \"HIGHEST_AMOUNT\",\r\n  SPREAD_THEN_HIGHEST = \"SPREAD_THEN_HIGHEST\",\r\n}\r\n\r\nexport type GameOptionsState = {\r\n  targetFps: number;\r\n  wakeLock: boolean;\r\n  hiddenFromBottomMenu: string[];\r\n  sectionOrder: string[];\r\n  hideDamageEffects: boolean;\r\n  doNotUseNativeDriver: boolean;\r\n  overrideElementDisplay: SpellElement | \"no\";\r\n  themeMode: \"light\" | \"dark\";\r\n  hideEventTags: EventTag[];\r\n  enableSwiping: boolean;\r\n  enableBottomMenu: boolean;\r\n  leftHandedMode: boolean;\r\n  putCastSpellOnBottomMenu: boolean;\r\n  doNotShowEventsOnWideScreens: boolean;\r\n  hideTooltips: boolean;\r\n  hideBottomResourceViewer: boolean;\r\n  hideChannelingSpellsOnHome: boolean;\r\n  waitUntilFullyHealedBeforeExplore: boolean;\r\n  autoPurchaseEnhancements: boolean;\r\n  zoomLevel: number;\r\n  researcherAutoAssignStrategy: ResearcherAutoAssignStrategy;\r\n  expandedUI: Record<string, boolean>;\r\n  saveExpandedUI: boolean;\r\n  colorSpellButtonsByElement: boolean;\r\n  compactUI: boolean;\r\n  doNotPopupEventsDuringBossFights: boolean;\r\n};\r\n\r\nexport type GameWorldState = {\r\n  flags: Record<string, boolean>;\r\n  variables: Record<string, string | number | boolean>;\r\n  maxPrimaryElementLevels: Partial<Record<SpellElement, number>>;\r\n  maxElementLevels: Partial<Record<SpellElement, number>>;\r\n  maxFurnitureNumbers: Record<string, number>;\r\n  unlockedElements: Partial<Record<SpellElement, boolean>>;\r\n  totalTimesResetted: number;\r\n  quickbars: QuickbarData[][];\r\n  currentQuickbar: number;\r\n  timesEnemyDefeated: Record<\r\n    string,\r\n    { player: number; familiars: number; losses: number }\r\n  >;\r\n  knownEnemiesThatDrop: Record<string, Record<string, boolean>>;\r\n  itemsEverAddedToInventory: Record<string, boolean>;\r\n  secondsPlayed: number;\r\n  activeSecondsPlayed: number;\r\n  timePiecesConsumed: number;\r\n  maxLandsPurchased: number;\r\n  startTimestamp: number;\r\n  endingsHistory: EndingStats[];\r\n  sheerPowerLevel: number;\r\n  storylineOracleLevel: number;\r\n  blazingSpeedLevel: number;\r\n  worldDifficultyLevel: number;\r\n  synchro: {\r\n    grids: Record<number, SynchroStrategyState>;\r\n    currentGrid: number;\r\n  };\r\n};\r\n\r\nexport type GameGlobalState = {\r\n  startTimestamp: number;\r\n  secondsPlayed: number;\r\n  activeSecondsPlayed: number;\r\n  timePiecesConsumed: number;\r\n  appVersionTimestamp: number;\r\n  appVersionString: string;\r\n  appPlatform: string;\r\n  isFullVersionSave: boolean;\r\n  tickCount: number;\r\n  newGamePlusUnlocked: boolean;\r\n  newGamePlusCount: number;\r\n  newGamePlusMax: number;\r\n  totalBoonPointsEarned: number;\r\n  autocast: GameAutocastState;\r\n  autoUsePouch: boolean;\r\n  notifications: NotificationData[];\r\n  debugShowUpdatesPerSec: boolean;\r\n  debugLastUpdateTimestamps: number[];\r\n  debugLastUpdateBeginEndTimestamps: {\r\n    begin: number;\r\n    end: number;\r\n    ticksRun: number;\r\n  }[];\r\n  endingsHistory: EndingStats[];\r\n};\r\n\r\nexport type GameEquipmentState = Record<EquipmentSlot, ItemOccurrence[]>;\r\n\r\nexport type GameEquipmentLoadout = {\r\n  name: string;\r\n  equipment: GameEquipmentState;\r\n};\r\n\r\nexport type MessageLog = {\r\n  id: string;\r\n  secondsPlayed: number;\r\n  message: string;\r\n  accessibleMessage?: string;\r\n  realTimestamp: number;\r\n};\r\n\r\nexport type EndingStats = {\r\n  endingId: string;\r\n  timestamp: number;\r\n  challengeId: string | undefined;\r\n  totalTimePlayed: number;\r\n  totalTimePlayedThisWorld: number;\r\n  totalTimePlayedThisRun: number;\r\n  totalActiveTimePlayed: number;\r\n  totalActiveTimePlayedThisWorld: number;\r\n  totalActiveTimePlayedThisRun: number;\r\n  totalRealWorldTimePlayed: number;\r\n  totalRealWorldTimePlayedThisWorld: number;\r\n  totalRealWorldTimePlayedThisRun: number;\r\n  timePiecesConsumed: number;\r\n  timePiecesConsumedThisWorld: number;\r\n  timePiecesConsumedThisRun: number;\r\n  totalRetirements: number;\r\n  primaryElement: SpellElement;\r\n  primaryElementLevelOnEnding: number;\r\n  secondaryElement: SpellElement | undefined;\r\n  secondaryElementLevelOnEnding: number | undefined;\r\n  combatClassId: string;\r\n  mpl: number;\r\n  researchMultiplier: number;\r\n  productionMultiplier: number;\r\n  completedStorylines: number;\r\n  worldsCreated: number;\r\n  sheerPowerLevel: number;\r\n  storylineOracleLevel: number;\r\n  blazingSpeedLevel: number;\r\n  worldDifficultyLevel: number;\r\n};\r\n\r\nexport type GameExplorationState = {\r\n  currentHP: number;\r\n  explorationStatus: ExplorationStatus;\r\n  explorationStartTime: number;\r\n  currentDungeonFloorId: string;\r\n  currentEnemy: {\r\n    id: string;\r\n    currentHP: number;\r\n  };\r\n  successfulExplorationsPerFloor: Record<string, number>;\r\n  playerActionProgress: number;\r\n  familiarActionProgress: number;\r\n  familiarIsInBackRow: boolean;\r\n  enemyActionProgress: number;\r\n  lastPlayerDamageCause: string | undefined;\r\n  actionResultQueue: CombatActionResult[];\r\n  lastActionResultPushedTime: number;\r\n  pouchItemsUsesLeft: Record<string, number>;\r\n  variables: Record<string, boolean>;\r\n  triggerPlayerDeath: boolean;\r\n};\r\n\r\nexport type GameAutocastState = {\r\n  savedStrategies: Record<number, AutocastStrategy>;\r\n  currentStrategy: AutocastStrategy;\r\n  lastStrategyIndex: number;\r\n};\r\n\r\nexport type GameAutocastStatusState = {\r\n  rules: Record<string, AutocastRuleStatus>;\r\n  autocastPaused: boolean;\r\n};\r\n\r\nexport type SynchroStrategyState = {\r\n  grid: Record<number, Record<number, SpellElement | undefined>>;\r\n  name: string | undefined;\r\n};\r\n\r\nexport type GameRunState = {\r\n  resources: Partial<Record<Resource, number>>;\r\n  buildings: Record<string, BuildingData>;\r\n  landPurchaseCount: number;\r\n  flags: Record<string, boolean>;\r\n  variables: Record<string, string | number | boolean>;\r\n  elementExperience: Partial<Record<SpellElement, number>>;\r\n  elementExponents: Partial<Record<SpellElement, number>>;\r\n  eventQueue: string[];\r\n  eventOccurrences: Record<string, EventOccurrenceData>;\r\n  nextEventIsManuallyTriggered: boolean;\r\n  secondsPlayed: number;\r\n  activeSecondsPlayed: number;\r\n  timePiecesConsumed: number;\r\n  newFlagsOnRetirement: Record<string, boolean>;\r\n  endingTriggered: EndingStats | undefined;\r\n  startTimestamp: number;\r\n  lastDungeonFloorCompleted: string | undefined;\r\n  temporaryEffects: Record<string, TemporaryEffectData>;\r\n  recentSpellsCast: string[];\r\n  nextRandomEvent: number;\r\n  primaryElement: SpellElement | undefined;\r\n  inventory: ItemStack[];\r\n  equipment: GameEquipmentState;\r\n  equipmentLoadouts: GameEquipmentLoadout[];\r\n  lastEquipmentLoadoutModified: number;\r\n  exploration: GameExplorationState;\r\n  explorationMessageLog: MessageLog[];\r\n  lastSpellCastTimes: Record<string, number>;\r\n  uiCommands: string[];\r\n  lastProcessedTime: number;\r\n  lastItemUsedTimes: Record<string, number>;\r\n  quickbar: QuickbarData[];\r\n  favoriteSpells: string[];\r\n  skipAheadTime: number;\r\n  warpTimeSecs: number;\r\n  summoningBlockedUntilTime: number;\r\n  boostsBought: Record<SpellElement, number>;\r\n  autocast: GameAutocastStatusState;\r\n  saleStallItems: ItemOccurrence[];\r\n  saleStallProgressRatio: number;\r\n  partiallyUnlockedElements: Partial<Record<SpellElement, boolean>>;\r\n  combatClassId: string | undefined;\r\n  explorationTriggers: Record<string, { timesTriggered: number; next: number }>;\r\n  studyAllocation: Record<SpellElement, number>;\r\n  familiars: Record<string, FamiliarData>;\r\n  secondaryElement: SpellElement | undefined;\r\n  autoPurchaseActions: Record<string, boolean>;\r\n  empoweredSpells: Record<string, boolean>;\r\n  activeRituals: Record<string, boolean>;\r\n  maxElementLevelsOnPrevRetirement: Partial<Record<SpellElement, number>>;\r\n  lastComputedLevelUpElementExperience: Partial<Record<SpellElement, number>>;\r\n  pityEnabledAtSeconds: number | undefined;\r\n  pityCounter: number;\r\n  extraEventSecs: number;\r\n  currentChallengeId: string | undefined;\r\n  autoAdvanceToNextFloor: boolean;\r\n  autoAttemptBoss: boolean;\r\n  spellcrafts: Record<string, SpellcraftData>;\r\n};\r\n\r\nexport type GameTempState = {\r\n  cache: Map<string, [number, any]>;\r\n  flagCache: Map<string, boolean>;\r\n  worldFlagCache: Map<string, boolean>;\r\n  elementLevelCache: Record<SpellElement, [number, any] | undefined>;\r\n  locationEncyclopediaCache: DungeonFloor[] | undefined;\r\n  isInAutocast: boolean;\r\n  isInPermacast: boolean;\r\n  isInPouch: boolean;\r\n  lastAutoPurchaseRun: number;\r\n  lastAutoPurchaseEnhancementRun: number;\r\n  familiarLevelCache: Map<string, number>;\r\n  combatStatCache: {\r\n    Player: Partial<Record<CombatStat, number>>;\r\n    Enemy: Partial<Record<CombatStat, number>>;\r\n    Familiar: Partial<\r\n      Record<CombatStat, Record<string, { level: number; value: number }>>\r\n    >;\r\n  };\r\n  resourceCapCache: Partial<Record<Resource, number>>;\r\n  unlockedElementsCache: SpellElement[];\r\n  incomeOverTimeCache: Record<string, Partial<Record<Resource, number>>>;\r\n  autocastPointsRequirementCache: Record<string, number>;\r\n  spellManaCostCache: Record<string, number>;\r\n  researchPerSecCache: Partial<Record<SpellElement, number>> | undefined;\r\n  spellRequirementsCache: Record<string, boolean>;\r\n  spellExpCache: Record<string, Partial<Record<SpellElement, number>>>;\r\n  lastProcessedAutocastSpellId: string | undefined;\r\n};\r\n\r\nexport type GameState = {\r\n  // run gets reset on retirement\r\n  run: GameRunState;\r\n  // world gets reset on creation / new game +\r\n  world: GameWorldState;\r\n  // global never gets reset, ever\r\n  global: GameGlobalState;\r\n  // options also do not get reset\r\n  options: GameOptionsState;\r\n  // temp is not persisted or saved, could be deleted at any time,\r\n  // is deleted on retirement, and meant for caches and the like\r\n  temp: GameTempState;\r\n  // when simulating \"what if\" scenarios, set this flag\r\n  isFake: boolean;\r\n};\r\n\r\nexport type GameStateTransform = (oldState: GameState) => GameState;\r\n\r\nexport type GameStateValue = GameState & {\r\n  apply: (transform: GameStateTransform) => void;\r\n};\r\n\r\nexport const EXPLORATION_INITIAL_STATE: GameExplorationState = {\r\n  currentHP: 60,\r\n  explorationStatus: ExplorationStatus.None,\r\n  explorationStartTime: 0,\r\n  currentDungeonFloorId: \"\",\r\n  currentEnemy: {\r\n    id: \"\",\r\n    currentHP: 1,\r\n  },\r\n  successfulExplorationsPerFloor: {},\r\n  playerActionProgress: 0.0,\r\n  familiarActionProgress: 0.0,\r\n  enemyActionProgress: 0.0,\r\n  familiarIsInBackRow: false,\r\n  lastPlayerDamageCause: undefined,\r\n  actionResultQueue: [],\r\n  lastActionResultPushedTime: 0.0,\r\n  pouchItemsUsesLeft: {},\r\n  variables: {},\r\n  triggerPlayerDeath: false,\r\n};\r\n\r\nexport const EQUIPMENT_INITIAL_STATE: GameEquipmentState = {\r\n  Hand: [],\r\n  Body: [],\r\n  Accessory: [],\r\n  Pouch: [],\r\n};\r\n\r\nexport const AUTOCAST_INITIAL_STATE: GameAutocastState = {\r\n  savedStrategies: {},\r\n  currentStrategy: {\r\n    rules: [],\r\n    permaCastRules: {},\r\n    name: t(\"Default\"),\r\n    wizardsAssignedToPermaCast: 0,\r\n  },\r\n  lastStrategyIndex: 0,\r\n};\r\n\r\nexport const SYNCHRO_INITIAL_STATE: SynchroStrategyState = {\r\n  grid: {},\r\n  name: undefined,\r\n};\r\n\r\nexport const GLOBAL_INITIAL_STATE: GameGlobalState = {\r\n  secondsPlayed: 0,\r\n  activeSecondsPlayed: 0,\r\n  timePiecesConsumed: 0,\r\n  startTimestamp: Date.now(),\r\n  appVersionTimestamp: 0,\r\n  appVersionString: getCurrentVersion() ?? \"0.0.0\",\r\n  isFullVersionSave: true,\r\n  tickCount: 0,\r\n  newGamePlusUnlocked: false,\r\n  newGamePlusCount: 0,\r\n  newGamePlusMax: 0,\r\n  totalBoonPointsEarned: 0,\r\n  appPlatform: Platform.OS,\r\n  notifications: [],\r\n  autoUsePouch: true,\r\n  autocast: AUTOCAST_INITIAL_STATE,\r\n  debugShowUpdatesPerSec: false,\r\n  debugLastUpdateTimestamps: [],\r\n  debugLastUpdateBeginEndTimestamps: [],\r\n  endingsHistory: [],\r\n};\r\n\r\nexport const RUN_INITIAL_STATE: GameRunState = {\r\n  secondsPlayed: 0,\r\n  activeSecondsPlayed: 0,\r\n  timePiecesConsumed: 0,\r\n  newFlagsOnRetirement: {},\r\n  endingTriggered: undefined,\r\n  startTimestamp: Date.now(),\r\n  lastDungeonFloorCompleted: undefined,\r\n  resources: {},\r\n  buildings: {},\r\n  flags: {},\r\n  variables: {},\r\n  elementExperience: {\r\n    Fire: 0,\r\n    Earth: 0,\r\n    Water: 0,\r\n    Air: 0,\r\n  },\r\n  elementExponents: {},\r\n  eventQueue: [],\r\n  eventOccurrences: {},\r\n  nextEventIsManuallyTriggered: false,\r\n  temporaryEffects: {},\r\n  recentSpellsCast: [],\r\n  nextRandomEvent: 600,\r\n  primaryElement: undefined,\r\n  inventory: [],\r\n  equipment: EQUIPMENT_INITIAL_STATE,\r\n  autocast: {\r\n    rules: {},\r\n    autocastPaused: false,\r\n  },\r\n  exploration: EXPLORATION_INITIAL_STATE,\r\n  explorationMessageLog: [],\r\n  lastSpellCastTimes: {},\r\n  uiCommands: [],\r\n  lastProcessedTime: Date.now(),\r\n  lastItemUsedTimes: {},\r\n  quickbar: [],\r\n  favoriteSpells: [],\r\n  skipAheadTime: 0,\r\n  warpTimeSecs: 0,\r\n  summoningBlockedUntilTime: 0,\r\n  boostsBought: {\r\n    Fire: 0,\r\n    Earth: 0,\r\n    Water: 0,\r\n    Air: 0,\r\n    Poison: 0,\r\n    Mind: 0,\r\n    Life: 0,\r\n    Electric: 0,\r\n    Death: 0,\r\n    Holy: 0,\r\n    Time: 0,\r\n    Space: 0,\r\n  },\r\n  equipmentLoadouts: [],\r\n  lastEquipmentLoadoutModified: 0,\r\n  landPurchaseCount: 0,\r\n  saleStallItems: [],\r\n  saleStallProgressRatio: 0,\r\n  partiallyUnlockedElements: {},\r\n  combatClassId: undefined,\r\n  explorationTriggers: {},\r\n  studyAllocation: {\r\n    Fire: 0,\r\n    Earth: 0,\r\n    Water: 0,\r\n    Air: 0,\r\n    Poison: 0,\r\n    Mind: 0,\r\n    Life: 0,\r\n    Electric: 0,\r\n    Death: 0,\r\n    Holy: 0,\r\n    Time: 0,\r\n    Space: 0,\r\n  },\r\n  familiars: {},\r\n  secondaryElement: undefined,\r\n  autoPurchaseActions: {},\r\n  empoweredSpells: {},\r\n  activeRituals: {},\r\n  maxElementLevelsOnPrevRetirement: {},\r\n  lastComputedLevelUpElementExperience: {},\r\n  pityEnabledAtSeconds: undefined,\r\n  pityCounter: 0,\r\n  extraEventSecs: 0,\r\n  currentChallengeId: undefined,\r\n  autoAdvanceToNextFloor: false,\r\n  autoAttemptBoss: false,\r\n  spellcrafts: {},\r\n};\r\n\r\nexport const WORLD_INITIAL_STATE: GameWorldState = {\r\n  flags: {},\r\n  variables: {},\r\n  maxPrimaryElementLevels: {},\r\n  maxElementLevels: {},\r\n  maxFurnitureNumbers: {},\r\n  unlockedElements: {\r\n    Fire: true,\r\n    Earth: true,\r\n    Water: true,\r\n    Air: true,\r\n  },\r\n  totalTimesResetted: 0,\r\n  quickbars: [],\r\n  currentQuickbar: 0,\r\n  timesEnemyDefeated: {},\r\n  maxLandsPurchased: 0,\r\n  secondsPlayed: 0,\r\n  activeSecondsPlayed: 0,\r\n  timePiecesConsumed: 0,\r\n  startTimestamp: Date.now(),\r\n  endingsHistory: [],\r\n  sheerPowerLevel: 0,\r\n  storylineOracleLevel: 0,\r\n  blazingSpeedLevel: 0,\r\n  worldDifficultyLevel: 0,\r\n  knownEnemiesThatDrop: {},\r\n  itemsEverAddedToInventory: {},\r\n  synchro: {\r\n    grids: { 0: clone(SYNCHRO_INITIAL_STATE) },\r\n    currentGrid: 0,\r\n  },\r\n};\r\n\r\nexport const OPTIONS_INITIAL_STATE: GameOptionsState = {\r\n  targetFps: 20,\r\n  wakeLock: false,\r\n  hiddenFromBottomMenu: [],\r\n  hideDamageEffects: false,\r\n  doNotUseNativeDriver: false,\r\n  overrideElementDisplay: \"no\",\r\n  themeMode: \"dark\",\r\n  hideEventTags: [],\r\n  enableSwiping: true,\r\n  enableBottomMenu: true,\r\n  leftHandedMode: false,\r\n  putCastSpellOnBottomMenu: true,\r\n  hideTooltips: false,\r\n  doNotShowEventsOnWideScreens: true,\r\n  hideBottomResourceViewer: false,\r\n  hideChannelingSpellsOnHome: false,\r\n  waitUntilFullyHealedBeforeExplore: false,\r\n  autoPurchaseEnhancements: false,\r\n  zoomLevel: 1.0,\r\n  researcherAutoAssignStrategy: ResearcherAutoAssignStrategy.OFF,\r\n  expandedUI: {},\r\n  saveExpandedUI: true,\r\n  colorSpellButtonsByElement: true,\r\n  sectionOrder: [],\r\n  compactUI: false,\r\n  doNotPopupEventsDuringBossFights: true,\r\n};\r\n\r\nexport const INITIAL_STATE: GameState = {\r\n  global: GLOBAL_INITIAL_STATE,\r\n  run: RUN_INITIAL_STATE,\r\n  world: WORLD_INITIAL_STATE,\r\n  options: OPTIONS_INITIAL_STATE,\r\n  temp: createTempState(),\r\n  isFake: false,\r\n};\r\n\r\nexport function createTempState(): GameTempState {\r\n  return {\r\n    cache: new Map(),\r\n    flagCache: new Map(),\r\n    worldFlagCache: new Map(),\r\n    locationEncyclopediaCache: undefined,\r\n    isInAutocast: false,\r\n    isInPermacast: false,\r\n    isInPouch: false,\r\n    elementLevelCache: {\r\n      Fire: undefined,\r\n      Earth: undefined,\r\n      Water: undefined,\r\n      Air: undefined,\r\n      Poison: undefined,\r\n      Mind: undefined,\r\n      Life: undefined,\r\n      Electric: undefined,\r\n      Death: undefined,\r\n      Holy: undefined,\r\n      Time: undefined,\r\n      Space: undefined,\r\n    },\r\n    lastAutoPurchaseRun: 0,\r\n    lastAutoPurchaseEnhancementRun: 0,\r\n    familiarLevelCache: new Map(),\r\n    combatStatCache: {\r\n      Player: {},\r\n      Familiar: {},\r\n      Enemy: {},\r\n    },\r\n    resourceCapCache: {},\r\n    unlockedElementsCache: undefined,\r\n    incomeOverTimeCache: {},\r\n    autocastPointsRequirementCache: {},\r\n    spellManaCostCache: {},\r\n    researchPerSecCache: undefined,\r\n    spellRequirementsCache: {},\r\n    spellExpCache: {},\r\n    lastProcessedAutocastSpellId: undefined,\r\n  };\r\n}\r\n\r\nexport function createHypotheticalState(state: GameState): GameState {\r\n  const clonedState = clone(state);\r\n  clonedState.temp = createTempState();\r\n  clonedState.isFake = true;\r\n  return clonedState;\r\n}\r\n\r\nexport type StateContextValue = GameState & {\r\n  apply: (transform: GameStateTransform) => void;\r\n  overwrite: (transform: GameStateTransform) => void;\r\n};\r\n\r\nexport const StateContext = React.createContext({\r\n  ...clone(INITIAL_STATE),\r\n  apply: (transform: GameStateTransform) => {},\r\n  overwrite: (transform: GameStateTransform) => {},\r\n});\r\n","import { createTempState, GameState, GameStateTransform } from \"./GameState\";\r\nimport { SpellElement } from \"./spells/Elements\";\r\n\r\nexport function cacheByTickCount(\r\n  state: GameState,\r\n  key: string,\r\n  valueFn: (state: GameState) => any,\r\n  readCacheOnly?: boolean,\r\n) {\r\n  if (state.isFake) {\r\n    return valueFn(state);\r\n  }\r\n  const tickCount = state.global.tickCount;\r\n  const cache = state.temp.cache;\r\n  const oldValue = cache.get(key);\r\n  if (!oldValue || (!readCacheOnly && oldValue[0] != tickCount)) {\r\n    const newValue = valueFn(state);\r\n    cache.set(key, [tickCount, newValue]);\r\n    return newValue;\r\n  }\r\n  return oldValue[1];\r\n}\r\n\r\nexport function cacheByTickCountElementLevel(\r\n  state: GameState,\r\n  key: SpellElement,\r\n  valueFn: (state: GameState) => any,\r\n  readCacheOnly?: boolean,\r\n) {\r\n  if (state.isFake) {\r\n    return valueFn(state);\r\n  }\r\n  const tickCount = state.global.tickCount;\r\n  const cache = state.temp.elementLevelCache;\r\n  const oldValue = cache[key];\r\n  if (!oldValue || (!readCacheOnly && oldValue[0] != tickCount)) {\r\n    const newValue = valueFn(state);\r\n    cache[key] = [tickCount, newValue];\r\n    return newValue;\r\n  }\r\n  return oldValue[1];\r\n}\r\n\r\nexport function cacheBySecondsPlayed(\r\n  state: GameState,\r\n  key: string,\r\n  valueFn: (state: GameState) => any,\r\n  readCacheOnly?: boolean,\r\n) {\r\n  if (state.isFake) {\r\n    return valueFn(state);\r\n  }\r\n  const cache = state.temp.cache;\r\n  const tickCount = state.run.secondsPlayed;\r\n  const oldValue = cache.get(key);\r\n  if (!oldValue || (!readCacheOnly && oldValue[0] != tickCount)) {\r\n    const newValue = valueFn(state);\r\n    cache.set(key, [tickCount, newValue]);\r\n    return newValue;\r\n  }\r\n  return oldValue[1];\r\n}\r\n\r\nexport function cacheByArbitraryVersion(\r\n  state: GameState,\r\n  key: string,\r\n  valueFn: (state: GameState) => any,\r\n  versionFn: (state: GameState) => any,\r\n  readCacheOnly?: boolean,\r\n) {\r\n  if (state.isFake) {\r\n    return valueFn(state);\r\n  }\r\n  const cache = state.temp.cache;\r\n  const tickCount = versionFn(state);\r\n  const oldValue = cache.get(key);\r\n  if (!oldValue || (!readCacheOnly && oldValue[0] != tickCount)) {\r\n    const newValue = valueFn(state);\r\n    cache.set(key, [tickCount, newValue]);\r\n    return newValue;\r\n  }\r\n  return oldValue[1];\r\n}\r\n\r\n// Caches only by boolean.\r\n// If the value function ever returns true, it will persist indefinitely.\r\n// This will not cache false values.\r\nexport function cacheBooleanTrueOnly(\r\n  state: GameState,\r\n  key: string,\r\n  valueFn: (state: GameState) => boolean,\r\n  readCacheOnly?: boolean,\r\n) {\r\n  if (state.isFake) {\r\n    return valueFn(state);\r\n  }\r\n  const cache = state.temp.cache;\r\n  const tickCount = state.run.secondsPlayed;\r\n  const oldValue = cache.get(key);\r\n  if (oldValue == null || (!readCacheOnly && oldValue[0] > tickCount)) {\r\n    const value = valueFn(state);\r\n    if (!value) {\r\n      return false;\r\n    }\r\n    cache.set(key, [tickCount, value]);\r\n    return value;\r\n  }\r\n  return oldValue[1];\r\n}\r\n\r\n/**\r\n * This cache is cleared on retirement\r\n */\r\nexport function cacheIndefinitely(\r\n  state: GameState,\r\n  keyFn: (state: GameState) => string,\r\n  valueFn: (state: GameState) => any,\r\n) {\r\n  if (state.isFake) {\r\n    return valueFn(state);\r\n  }\r\n  const cache = state.temp.cache;\r\n  const key = keyFn(state);\r\n  const oldValue = cache.get(key);\r\n  if (!oldValue) {\r\n    const newValue = valueFn(state);\r\n    cache.set(key, [0, newValue]);\r\n    return newValue;\r\n  }\r\n  return oldValue[1];\r\n}\r\n\r\nexport function clearCacheKey(\r\n  state: GameState,\r\n  keyFn: (state: GameState) => string,\r\n) {\r\n  const cache = state.temp.cache;\r\n  const key = keyFn(state);\r\n  cache.delete(key);\r\n  return state;\r\n}\r\n\r\nconst clearCacheListeners: Record<string, GameStateTransform> = {};\r\n\r\nexport function clearAllCaches(state: GameState): GameState {\r\n  state.temp = createTempState();\r\n  for (let listener of Object.values(clearCacheListeners)) {\r\n    state = listener(state);\r\n  }\r\n  return state;\r\n}\r\n\r\nexport function registerClearCacheListener(id: string, fn: GameStateTransform) {\r\n  clearCacheListeners[id] = fn;\r\n}\r\n","let isThisDemo = false;\r\n\r\nexport function setDemo(demo: boolean) {\r\n  isThisDemo = demo;\r\n}\r\n\r\nexport function isDemo() {\r\n  return isThisDemo;\r\n}\r\n","export interface Identifiable {\r\n  getId(): string;\r\n}\r\n\r\nexport function isIdentifiable(value: any): value is Identifiable {\r\n  return \"getId\" in value;\r\n}\r\n\r\nexport function idOf(obj: Identifiable): string {\r\n  return obj.getId();\r\n}\r\n","import { valuesOf } from \"../../utils/CoreUtils\";\r\nimport { isIdentifiable } from \"./Identifiable\";\r\n\r\nexport class DataStore<T> {\r\n  store: Record<string, T> = {};\r\n  numericIds: Record<string, number> = {};\r\n  maxId: number = 1;\r\n\r\n  register(value: T, overrideId?: string) {\r\n    const numericId = this.maxId++;\r\n    let id = numericId.toString();\r\n    if (isIdentifiable(value)) {\r\n      id = value.getId();\r\n    }\r\n    if (overrideId != null) {\r\n      id = overrideId;\r\n    }\r\n    if (this.store[id] == null) {\r\n      this.store[id] = value;\r\n    }\r\n    if (this.numericIds[id] == null) {\r\n      this.numericIds[id] = numericId;\r\n    }\r\n  }\r\n\r\n  getById(id: string): T {\r\n    return this.store[id];\r\n  }\r\n\r\n  getByIdNullable(id: string): T | undefined {\r\n    return this.store[id];\r\n  }\r\n\r\n  getNumericId(id: string): number | undefined {\r\n    return this.numericIds[id];\r\n  }\r\n\r\n  getAll(): T[] {\r\n    return valuesOf(this.store);\r\n  }\r\n\r\n  reset(): void {\r\n    this.maxId = 1;\r\n    this.store = {};\r\n  }\r\n}\r\n","import memoize from \"sonic-memoize\";\r\nimport { GameState, GameStateTransform } from \"./GameState\";\r\nimport { DataStore } from \"./generic/DataStore\";\r\n\r\nexport function hasFlag(state: GameState, flag: string) {\r\n  const cached = state.temp.flagCache.get(flag);\r\n  if (cached === undefined) {\r\n    state.temp.flagCache.set(flag, state.run.flags?.[flag] || false);\r\n    return state.temp.flagCache.get(flag);\r\n  }\r\n  return cached;\r\n}\r\n\r\nexport const SetFlagListeners = new DataStore<\r\n  (state: GameState, flag: string) => GameState\r\n>();\r\n\r\nfunction setFlagImpl(flag: string, state: GameState) {\r\n  if (!state.run.flags?.[flag]) {\r\n    state.temp.flagCache.delete(flag);\r\n  }\r\n  const oldValue = state.run.flags[flag] ?? false;\r\n  state.run.flags[flag] = true;\r\n  if (!oldValue) {\r\n    SetFlagListeners.getAll().forEach((transform) => {\r\n      state = transform(state, flag);\r\n    });\r\n  }\r\n  if (!state.world.flags?.[\"ever_\" + flag]) {\r\n    state.temp.worldFlagCache.delete(\"ever_\" + flag);\r\n  }\r\n  state.world.flags[\"ever_\" + flag] = true;\r\n  return state;\r\n}\r\n\r\nexport function hasEverHadFlag(state: GameState, flag: string) {\r\n  return hasWorldFlag(state, \"ever_\" + flag);\r\n}\r\n\r\nexport const setFlag = memoize((flag: string) => setFlagImpl.bind(this, flag));\r\n\r\nfunction clearFlagImpl(flag: string, state: GameState) {\r\n  state.run.flags[flag] = false;\r\n  state.temp.flagCache.delete(flag);\r\n  return state;\r\n}\r\n\r\nexport const clearFlag = memoize((flag: string) =>\r\n  clearFlagImpl.bind(this, flag),\r\n);\r\n\r\nexport function setWorldFlagForNextRunImpl(\r\n  flag: string,\r\n  state: GameState,\r\n): GameState {\r\n  state.run.newFlagsOnRetirement[flag] = true;\r\n  return state;\r\n}\r\n\r\nexport const setWorldFlagForNextRun = memoize((flag: string) =>\r\n  setWorldFlagForNextRunImpl.bind(this, flag),\r\n);\r\n\r\nexport function setWorldFlagImpl(flag: string, state: GameState): GameState {\r\n  if (!state.world.flags?.[flag]) {\r\n    state.temp.worldFlagCache.delete(flag);\r\n  }\r\n  state.world.flags[flag] = true;\r\n  return state;\r\n}\r\n\r\nexport const setWorldFlag = memoize((flag: string) =>\r\n  setWorldFlagImpl.bind(this, flag),\r\n);\r\n\r\nfunction clearWorldFlagImpl(flag: string, state: GameState) {\r\n  state.world.flags[flag] = false;\r\n  state.temp.worldFlagCache.delete(flag);\r\n  return state;\r\n}\r\n\r\nexport function clearWorldFlag(this: any, flag: string): GameStateTransform {\r\n  // Do it this way to avoid creating extra functions and avoid rerenders\r\n  return clearWorldFlagImpl.bind(this, flag);\r\n}\r\n\r\nexport function hasWorldFlag(state: GameState, flag: string): boolean {\r\n  const cached = state.temp.worldFlagCache.get(flag);\r\n  if (cached === undefined) {\r\n    state.temp.worldFlagCache.set(flag, state.world.flags?.[flag] || false);\r\n    return state.temp.worldFlagCache.get(flag);\r\n  }\r\n  return cached;\r\n}\r\n\r\nexport function hasWorldFlagIncludingNextRun(\r\n  state: GameState,\r\n  flag: string,\r\n): boolean {\r\n  return (\r\n    state?.world?.flags?.[flag] ||\r\n    state?.run?.newFlagsOnRetirement?.[flag] ||\r\n    false\r\n  );\r\n}\r\n\r\nfunction setCombatVariableImpl(variable: string, value: any, state: GameState) {\r\n  state.run.exploration.variables[variable] = value;\r\n  return state;\r\n}\r\n\r\nexport function setCombatVariable(\r\n  this: any,\r\n  variable: string,\r\n  value: any,\r\n): GameStateTransform {\r\n  // Do it this way to avoid creating extra functions and avoid rerenders\r\n  return setCombatVariableImpl.bind(this, variable, value);\r\n}\r\n\r\nfunction clearCombatVariableImpl(variable: string, state: GameState) {\r\n  delete state.run.exploration.variables[variable];\r\n  return state;\r\n}\r\n\r\nexport function clearCombatVariable(\r\n  this: any,\r\n  variable: string,\r\n): GameStateTransform {\r\n  // Do it this way to avoid creating extra functions and avoid rerenders\r\n  return clearCombatVariableImpl.bind(this, variable);\r\n}\r\n\r\nexport function resetAllCombatVariables(state: GameState): GameState {\r\n  state.run.exploration.variables = {};\r\n  return state;\r\n}\r\n\r\nexport function getCombatVariable(state: GameState, variable: string): any {\r\n  return state.run.exploration?.variables[variable];\r\n}\r\n","import { GameState, GameStateTransform } from \"./GameState\";\r\n\r\nexport type GameStateListener = (\r\n  newState: GameState,\r\n) => GameStateTransform | null | undefined | void;\r\n\r\ntype GameStateListenerTrigger = (\r\n  state: GameState,\r\n  oldValue?: boolean | string | number,\r\n) => boolean | string | number;\r\n\r\nconst listeners: Record<string, GameStateListener> = {};\r\nconst highPriorityListeners: Record<string, GameStateListener> = {};\r\nconst triggerExtractors: Record<string, GameStateListenerTrigger> = {};\r\nconst triggerValues: Record<string, boolean | string | number> = {};\r\n\r\ntype PerfInfo = {\r\n  executed: number;\r\n  listenerMs: number;\r\n  executedTrigger: number;\r\n  triggerMs: number;\r\n};\r\nconst perfInfo: Record<string, PerfInfo> = {};\r\n\r\nexport function addGameStateListener(\r\n  id: string,\r\n  listener: GameStateListener,\r\n  triggerExtractor?: GameStateListenerTrigger,\r\n) {\r\n  listeners[id] = listener;\r\n  if (triggerExtractor != null) {\r\n    triggerExtractors[id] = triggerExtractor;\r\n  }\r\n}\r\n\r\nexport function addHighPriorityGameStateListener(\r\n  id: string,\r\n  listener: GameStateListener,\r\n  triggerExtractor?: GameStateListenerTrigger,\r\n) {\r\n  highPriorityListeners[id] = listener;\r\n  if (triggerExtractor != null) {\r\n    triggerExtractors[id] = triggerExtractor;\r\n  }\r\n}\r\n\r\nexport function clearGameStateListener(id: string) {\r\n  delete listeners[id];\r\n  delete highPriorityListeners[id];\r\n  delete triggerExtractors[id];\r\n  delete triggerValues[id];\r\n}\r\n\r\nfunction getPerfInfoForListener(key: string): PerfInfo {\r\n  if (perfInfo[key] == null) {\r\n    perfInfo[key] = {\r\n      executed: 0,\r\n      listenerMs: 0,\r\n      executedTrigger: 0,\r\n      triggerMs: 0,\r\n    };\r\n  }\r\n  return perfInfo[key];\r\n}\r\n\r\nexport function applyHighPriGameStateListeners(\r\n  newState: GameState,\r\n): GameStateTransform[] {\r\n  const validHighPriListeners = Object.keys(highPriorityListeners)\r\n    .filter((listenerKey) => {\r\n      if (triggerExtractors?.[listenerKey] != null) {\r\n        const oldValue = triggerValues?.[listenerKey];\r\n        const beginTimestamp = performance.now();\r\n        const newValue = triggerExtractors[listenerKey](newState, oldValue);\r\n        const endTimestamp = performance.now();\r\n        getPerfInfoForListener(listenerKey).executedTrigger++;\r\n        getPerfInfoForListener(listenerKey).triggerMs +=\r\n          endTimestamp - beginTimestamp;\r\n\r\n        if (triggerValues?.[listenerKey] == null) {\r\n          triggerValues[listenerKey] = newValue;\r\n          return false;\r\n        }\r\n\r\n        if (newValue == triggerValues?.[listenerKey]) {\r\n          return false;\r\n        }\r\n\r\n        triggerValues[listenerKey] = newValue;\r\n      }\r\n\r\n      return true;\r\n    })\r\n    .map((listenerKey) => {\r\n      const beginTimestamp = performance.now();\r\n      const result = highPriorityListeners[listenerKey](newState);\r\n      const endTimestamp = performance.now();\r\n      getPerfInfoForListener(listenerKey).executed++;\r\n      getPerfInfoForListener(listenerKey).listenerMs +=\r\n        endTimestamp - beginTimestamp;\r\n      return result;\r\n    });\r\n\r\n  return validHighPriListeners.filter(\r\n    (transform) => transform != null,\r\n  ) as GameStateTransform[];\r\n}\r\n\r\nexport function applyGameStateListeners(\r\n  newState: GameState,\r\n): GameStateTransform[] {\r\n  const validListeners = [];\r\n  for (let listenerKey in listeners) {\r\n    const extractor = triggerExtractors?.[listenerKey];\r\n    if (extractor != null) {\r\n      const oldValue = triggerValues?.[listenerKey];\r\n      // const beginTimestamp = performance.now();\r\n      const newValue = extractor(newState, oldValue);\r\n      // const endTimestamp = performance.now();\r\n      // getPerfInfoForListener(listenerKey).executedTrigger++;\r\n      // getPerfInfoForListener(listenerKey).triggerMs +=\r\n      //   endTimestamp - beginTimestamp;\r\n      if (oldValue == null) {\r\n        triggerValues[listenerKey] = newValue;\r\n        continue;\r\n      }\r\n\r\n      if (newValue == oldValue) {\r\n        continue;\r\n      }\r\n\r\n      triggerValues[listenerKey] = newValue;\r\n    }\r\n\r\n    validListeners.push(listenerKey);\r\n  }\r\n  const listenerResults = [];\r\n  for (let listenerKey of validListeners) {\r\n    // const beginTimestamp = performance.now();\r\n    const result = listeners[listenerKey](newState);\r\n    // const endTimestamp = performance.now();\r\n    // getPerfInfoForListener(listenerKey).executed++;\r\n    // getPerfInfoForListener(listenerKey).listenerMs +=\r\n    //   endTimestamp - beginTimestamp;\r\n    listenerResults.push(result);\r\n  }\r\n\r\n  return listenerResults.filter(\r\n    (transform) => transform != null,\r\n  ) as GameStateTransform[];\r\n}\r\n\r\nexport function applyAllTransforms(\r\n  state: GameState,\r\n  transform: GameStateTransform,\r\n): GameState {\r\n  let transforms = [transform];\r\n\r\n  do {\r\n    if (transforms.length > 0) {\r\n      state.global.tickCount += 1;\r\n      for (let trans of transforms) {\r\n        state = trans(state);\r\n      }\r\n    }\r\n\r\n    transforms = applyHighPriGameStateListeners(state);\r\n    if (transforms.length == 0) {\r\n      transforms = applyGameStateListeners(state);\r\n    }\r\n  } while (transforms.length > 0);\r\n\r\n  // Increment one more time to avoid cache\r\n  state.global.tickCount += 1;\r\n\r\n  // Return shallow clone for React to trigger context update\r\n  return Object.assign({}, state);\r\n}\r\n\r\n// import { GameState, GameStateTransform } from \"./GameState\";\r\n\r\n// export type GameStateListener = (\r\n//   newState: GameState,\r\n// ) => GameStateTransform | null | undefined | void;\r\n\r\n// type GameStateListenerTrigger = (\r\n//   state: GameState,\r\n//   oldValue?: boolean | string | number,\r\n// ) => boolean | string | number;\r\n\r\n// const listeners: Map<string, GameStateListener> = new Map();\r\n// const listenersWithExtractors: Map<string, GameStateListener> = new Map();\r\n// const triggerExtractors: Map<string, GameStateListenerTrigger> = new Map();\r\n// const triggerValues: Map<string, boolean | string | number> = new Map();\r\n\r\n// export function addGameStateListener(\r\n//   id: string,\r\n//   listener: GameStateListener,\r\n//   triggerExtractor?: GameStateListenerTrigger,\r\n// ) {\r\n//   if (triggerExtractor == null) {\r\n//     listeners.set(id, listener);\r\n//   } else {\r\n//     listenersWithExtractors.set(id, listener);\r\n//     triggerExtractors.set(id, triggerExtractor);\r\n//   }\r\n// }\r\n\r\n// export function clearGameStateListener(id: string) {\r\n//   listeners.delete(id);\r\n//   listenersWithExtractors.delete(id);\r\n//   triggerExtractors.delete(id);\r\n//   triggerValues.delete(id);\r\n// }\r\n\r\n// export function applyGameStateListeners(\r\n//   newState: GameState,\r\n// ): GameStateTransform[] {\r\n//   const validExtractorListeners = [];\r\n\r\n//   listenersWithExtractors.forEach((listener, listenerKey) => {\r\n//     const extractor = triggerExtractors.get(listenerKey);\r\n//     const oldValue = triggerValues.get(listenerKey);\r\n//     const newValue = extractor(newState, oldValue);\r\n//     if (oldValue == null) {\r\n//       triggerValues.set(listenerKey, newValue);\r\n//       return;\r\n//     }\r\n\r\n//     if (newValue == oldValue) {\r\n//       return;\r\n//     }\r\n\r\n//     triggerValues.set(listenerKey, newValue);\r\n//     validExtractorListeners.push(listener);\r\n//   });\r\n\r\n//   const validListeners = [];\r\n\r\n//   listeners.forEach((listener) => validListeners.push(listener(newState)));\r\n//   validExtractorListeners.forEach((listener) =>\r\n//     validListeners.push(listener(newState)),\r\n//   );\r\n\r\n//   return validListeners.filter(\r\n//     (transform) => transform != null,\r\n//   ) as GameStateTransform[];\r\n// }\r\n\r\n// export function applyAllTransforms(\r\n//   state: GameState,\r\n//   transform: GameStateTransform,\r\n// ): GameState {\r\n//   let transforms = [transform];\r\n\r\n//   do {\r\n//     if (transforms.length > 0) {\r\n//       state.global.tickCount += 1;\r\n//       state = transforms.reduce(\r\n//         (accumulatedState, currentTransform) =>\r\n//           currentTransform(accumulatedState),\r\n//         state,\r\n//       );\r\n//     }\r\n\r\n//     transforms = applyGameStateListeners(state);\r\n//   } while (transforms.length > 0);\r\n\r\n//   // Increment one more time to avoid cache\r\n//   state.global.tickCount += 1;\r\n\r\n//   // Return shallow clone for React to trigger context update\r\n//   return Object.assign({}, state);\r\n// }\r\n","export enum TransformationTags {\r\n  Production = \"Production\",\r\n  Consumption = \"Consumption\",\r\n  Cost = \"Cost\",\r\n  ManualGathering = \"ManualGathering\",\r\n  Loot = \"Loot\",\r\n  LootChance = \"LootChance\",\r\n  Cap = \"Cap\",\r\n  PerBuildingCap = \"PerBuildingCap\",\r\n  PerItemCap = \"PerItemCap\",\r\n  CostScale = \"CostScale\",\r\n  GameSpeed = \"GameSpeed\",\r\n  ExplorationBossRequirement = \"ExplorationBossRequirement\",\r\n  ExplorationDelay = \"ExplorationDelay\",\r\n  ExplorationWeight = \"ExplorationWeight\",\r\n  FamiliarExplorationDelay = \"FamiliarExplorationDelay\",\r\n  FromExploration = \"FromExploration\",\r\n  FromFamiliarExploration = \"FromFamiliarExploration\",\r\n  StunResistance = \"StunResistance\",\r\n  AutocastDelay = \"AutocastDelay\",\r\n  RandomEventWeight = \"RandomEventWeight\",\r\n  StorylineTriggerChance = \"StorylineTriggerChance\",\r\n  ExpRequirementScale = \"ExpRequirementScale\",\r\n  ExpGain = \"ExpGain\",\r\n  TimePiecePerFastSpeedup = \"TimePiecePerFastSpeedup\",\r\n  TimePiecePerFasterSpeedup = \"TimePiecePerFasterSpeedup\",\r\n  TimePiecePerWarpedSec = \"TimePiecePerWarpedSec\",\r\n  TimePiecePerStudy = \"TimePiecePerStudy\",\r\n  OfflineTimePieceGain = \"OfflineTimePieceGain\",\r\n  AttackDamageReceived = \"AttackDamageReceived\",\r\n  PostStunProtectionDuration = \"PostStunProtectionDuration\",\r\n  PostFrozenProtectionDuration = \"PostFrozenProtectionDuration\",\r\n  CanCastSpell = \"CanCastSpell\",\r\n  FinalIncomePerSec = \"FinalIncomePerSec\",\r\n  MaxElementLevel = \"MaxElementLevel\",\r\n  ChannelingEfficiency = \"ChannelingEfficiency\",\r\n  Land = \"Land\",\r\n  CatalystEffectivity = \"CatalystEffectivity\",\r\n  AutocastPointsProduction = \"AutocastPointsProduction\",\r\n  AutocastPointsConsumption = \"AutocastPointsConsumption\",\r\n  PerBuildingProduction = \"PerBuildingProduction\",\r\n  TimePerAutoSalePerStall = \"SaleStallProgress\",\r\n  WizardAmount = \"WizardAmount\",\r\n  ItemSalePrice = \"ItemSalePrice\",\r\n  AutoAttack = \"AutoAttack\",\r\n  SaleStallRevenue = \"SaleStallRevenue\",\r\n  FromSaleStalls = \"FromSaleStalls\",\r\n  PouchSize = \"PouchSize\",\r\n  AccessorySize = \"AccessorySize\",\r\n  Reflected = \"Reflected\",\r\n  ResearcherAmount = \"ResearcherAmount\",\r\n  Study = \"Study\",\r\n  PoisonDoTAmount = \"PoisonDoTAmount\",\r\n  AffectsGameSpeed = \"AffectsGameSpeed\",\r\n  MaxFamiliarLevel = \"MaxFamiliarLevel\",\r\n  FamiliarAmount = \"FamiliarAmount\",\r\n  FamiliarExp = \"FamiliarExp\",\r\n  LandCost = \"LandCost\",\r\n  CorrosionDoTAmount = \"CorrosionDoTAmount\",\r\n  NumberOfHits = \"NumberOfHits\",\r\n  CriticalResistance = \"CriticalResistance\",\r\n  TransmutationSpell = \"TransmutationSpell\",\r\n  InstantDeath = \"InstantDeath\",\r\n  Corruption = \"Corruption\",\r\n  CorruptionCap = \"CorruptionCap\",\r\n  PerRitualCost = \"PerRitualCost\",\r\n  Accumulation = \"Accumulation\",\r\n  Boost = \"Boost\",\r\n  PouchItemUses = \"PouchItemUses\",\r\n  StartingElementExpBase = \"StartingElementExpBase\",\r\n  ItemQualityMax = \"ItemQualityMax\",\r\n  ItemsNeededForCombining = \"ItemsNeededForCombining\",\r\n  BoonPointsEarned = \"BoonPoints\",\r\n  SynchroGridMax = \"SynchroGridMax\",\r\n  LootItemAmount = \"LootItemAmount\",\r\n\r\n  Action = \"Action\",\r\n  Spell = \"Spell\",\r\n  Building = \"Building\",\r\n  ShapeshiftingSpell = \"ShapeshiftingSpell\",\r\n  AttackSpell = \"AttackSpell\",\r\n  ActionEffect = \"ActionEffect\",\r\n  BuildingEffect = \"BuildingEffect\",\r\n  SpellCooldown = \"SpellCooldown\",\r\n  ActionMagnitude = \"ActionMagnitude\",\r\n  ActionVariance = \"ActionVariance\",\r\n  TemporaryEffectMagnitude = \"TemporaryEffectMagnitude\",\r\n  TemporaryEffectExtraCost = \"TemporaryEffectExtraCost\",\r\n  TemporaryEffectExtraCostDivisor = \"TemporaryEffectExtraCostDivisor\",\r\n  TemporaryEffectDuration = \"TemporaryEffectDuration\",\r\n  TemporaryEffectDurationPostProcessing = \"TemporaryEffectDurationPostProcessing\",\r\n  ItemEffect = \"ItemEffect\",\r\n  ItemQuality = \"ItemQuality\",\r\n  ItemCost = \"ItemCost\",\r\n  ItemCostItem = \"ItemCostItem\",\r\n  ItemAmountTransmuted = \"ItemAmountTransmuted\",\r\n  ItemQualityLevelDelta = \"ItemQualityLevelDelta\",\r\n  Ritual = \"Ritual\",\r\n  RitualEffect = \"RitualEffect\",\r\n  ClassEffect = \"ClassEffect\",\r\n  SynchroEffect = \"SynchroEffect\",\r\n  Spellcraft = \"Spellcraft\",\r\n  SpellcraftEffect = \"SpellcraftEffect\",\r\n}\r\n\r\nexport enum TransformationValueType {\r\n  Basic = \"Basic\",\r\n  Percent = \"Percent\",\r\n  Divisor = \"Divisor\",\r\n  Log2 = \"Log2\",\r\n  Log2Divisor = \"Log2Divisor\",\r\n}\r\n","import { memoizeWithLimit } from \"sonic-memoize\";\r\nimport { formatMultiplier, formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport {\r\n  cacheByArbitraryVersion,\r\n  cacheByTickCount,\r\n  cacheIndefinitely,\r\n} from \"../Caching\";\r\nimport { GameState } from \"../GameState\";\r\nimport { addGameStateListener } from \"../GameStateListeners\";\r\nimport { Resource } from \"../Resources\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport { CombatStat } from \"../exploration/CombatStats\";\r\nimport { SpellElement } from \"../spells/Elements\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"./TransformationTags\";\r\n\r\nexport enum TransformationType {\r\n  Addition = \"Addition\",\r\n  Multiplier = \"Multiplier\",\r\n  Power = \"Power\",\r\n  Override = \"Override\",\r\n}\r\n\r\nexport type TransformationTag =\r\n  | TransformationTags\r\n  | Resource\r\n  | SpellElement\r\n  | CombatStat\r\n  | AttackTarget\r\n  | string;\r\n\r\nexport type Transformation = (\r\n  state: GameState,\r\n  params: Record<string, any>,\r\n  previousValue: number,\r\n) => number | undefined;\r\n\r\nexport type TransformationData = {\r\n  id: string;\r\n  description: string;\r\n  transformation: Transformation;\r\n  type: TransformationType;\r\n  tags: TransformationTag[][];\r\n  lastValue: number | undefined;\r\n};\r\n\r\nconst transformationDatabase: Partial<\r\n  Record<TransformationTag, TransformationData[]>\r\n> = {};\r\n\r\nconst allTransformations: Record<string, TransformationData> = {};\r\n\r\nexport function registerTransformation(\r\n  tags: TransformationTag[][],\r\n  transformationId: string,\r\n  transformationDescription: string,\r\n  transformationType: TransformationType,\r\n  transformation: Transformation,\r\n) {\r\n  const data = {\r\n    id: transformationId,\r\n    transformation,\r\n    description: transformationDescription,\r\n    type: transformationType,\r\n    tags,\r\n    lastValue: undefined,\r\n  };\r\n\r\n  const allTags = new Set(tags.flat(2));\r\n  allTags.forEach((tag) => {\r\n    const forTag = transformationDatabase?.[tag] ?? [];\r\n    if (!forTag.some((preExisting) => preExisting.id === transformationId)) {\r\n      forTag.push(data);\r\n      transformationDatabase[tag] = forTag;\r\n    }\r\n  });\r\n  allTransformations[transformationId] = data;\r\n  const recalculateEveryTick = false; //allTags.has(TransformationTags.PerBuildingCap);\r\n\r\n  if (recalculateEveryTick) {\r\n    addGameStateListener(\"t:cache:\" + transformationId, (state) => {\r\n      const value = transformation(state, {}, 10);\r\n      if (value != allTransformations[transformationId].lastValue) {\r\n        allTransformations[transformationId].lastValue = value;\r\n        return clearTransformationCache.bind(null, allTags);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nconst cacheMisses: Map<string, number> = new Map();\r\n\r\nconst getTransformationsThatApply = memoizeWithLimit(\r\n  (tags: TransformationTag[], prejoinedTags?: string) => {\r\n    // const key = joinedTags ?? tags.join(\"\");\r\n    // const oldValue = transformationsThatApplyCache.get(key);\r\n    // if (oldValue == null) {\r\n    //   const allTransformations = tags\r\n    //     .map((tag) => transformationDatabase?.[tag] ?? [])\r\n    //     .flat();\r\n    //   const allTransformationsThatApply = allTransformations.filter((data) =>\r\n    //     data.tags.some((targetTags) =>\r\n    //       targetTags.every((targetTag) => tags.includes(targetTag)),\r\n    //     ),\r\n    //   );\r\n    //   const uniqueTransformations = [...new Set(allTransformationsThatApply)];\r\n    //   const result = Object.fromEntries(\r\n    //     Object.values(TransformationType).map((type) => [\r\n    //       type,\r\n    //       uniqueTransformations.filter((data) => data.type === type),\r\n    //     ]),\r\n    //   ) as Record<TransformationType, TransformationData[]>;\r\n    //   transformationsThatApplyCache.set(key, result);\r\n    //   return result;\r\n    // }\r\n    // return oldValue;\r\n\r\n    const joinedTags = prejoinedTags ?? tags.join();\r\n    cacheMisses.set(joinedTags, (cacheMisses.get(joinedTags) ?? 0) + 1);\r\n    const allTransformations = tags\r\n      .map((tag) => transformationDatabase?.[tag] ?? [])\r\n      .flat();\r\n    const allTransformationsThatApply = allTransformations.filter((data) =>\r\n      data.tags.some((targetTags) =>\r\n        targetTags.every((targetTag) => tags.includes(targetTag)),\r\n      ),\r\n    );\r\n    const uniqueTransformations = [...new Set(allTransformationsThatApply)];\r\n    const result = Object.fromEntries(\r\n      Object.values(TransformationType).map((type) => [\r\n        type,\r\n        uniqueTransformations.filter((data) => data.type === type),\r\n      ]),\r\n    ) as Record<TransformationType, TransformationData[]>;\r\n    return result;\r\n  },\r\n  10000,\r\n);\r\n\r\n// Generally use applyTransformations. However, this one can be used for example\r\n// to display modified effects when multipliers affect the final effect.\r\n// This will prove inaccurate if, for example, there are overrides or similar things.\r\nexport function applyMultiplierTransformations(\r\n  tags: TransformationTag[],\r\n  state: GameState,\r\n  startingValue: number,\r\n  params?: Record<string, any>,\r\n) {\r\n  const transformParams = params ?? {};\r\n  transformParams.tags = tags;\r\n\r\n  const transformations = getTransformationsThatApply(tags);\r\n\r\n  // Apply multiplication transforms only\r\n  const multiplicationTransformations =\r\n    transformations[TransformationType.Multiplier];\r\n  const afterMultiplication = multiplicationTransformations\r\n    .map((data) =>\r\n      data.transformation(state, transformParams, startingValue ?? 0),\r\n    )\r\n    .reduce((prev, current) => (prev ?? 1.0) * (current ?? 1.0), startingValue);\r\n\r\n  return afterMultiplication;\r\n}\r\n\r\nexport function applyTransformations(\r\n  tags: TransformationTag[],\r\n  state: GameState,\r\n  startingValue: number,\r\n  params?: Record<string, any>,\r\n  joinedTags?: string,\r\n) {\r\n  const transformParams = params ?? {};\r\n  const oldTransformTags = transformParams?.tags;\r\n  transformParams.tags =\r\n    transformParams?.tags != null ? transformParams.tags.concat(tags) : tags;\r\n\r\n  const transformations = getTransformationsThatApply(tags, joinedTags);\r\n\r\n  // Step 1: apply addition transforms\r\n  const additionTransformations = transformations[TransformationType.Addition];\r\n  let afterAddition = startingValue;\r\n  for (let transformation of additionTransformations) {\r\n    afterAddition +=\r\n      transformation.transformation(state, transformParams, startingValue) ?? 0;\r\n  }\r\n\r\n  // Step 2: apply power transforms (rare)\r\n  const powerTransformations = transformations[TransformationType.Power];\r\n  let afterPower = afterAddition;\r\n  for (let transformation of powerTransformations) {\r\n    afterPower = Math.pow(\r\n      afterPower,\r\n      transformation.transformation(state, transformParams, afterAddition) ??\r\n        1.0,\r\n    );\r\n  }\r\n\r\n  // Step 3: apply multiplication transforms\r\n  const multiplicationTransformations =\r\n    transformations[TransformationType.Multiplier];\r\n  let afterMultiplication = afterPower;\r\n  for (let transformation of multiplicationTransformations) {\r\n    afterMultiplication *=\r\n      transformation.transformation(state, transformParams, afterPower) ?? 1.0;\r\n  }\r\n\r\n  // Step 4: finally, apply override transforms\r\n  const overrideTransformations = transformations[TransformationType.Override];\r\n  let afterOverride = afterMultiplication;\r\n  for (let transformation of overrideTransformations) {\r\n    const newOverride = transformation.transformation(\r\n      state,\r\n      transformParams,\r\n      afterMultiplication,\r\n    );\r\n    if (newOverride != null) {\r\n      afterOverride = newOverride;\r\n    }\r\n  }\r\n\r\n  transformParams.tags = oldTransformTags;\r\n\r\n  return afterOverride as number;\r\n}\r\n\r\nconst missMap = {};\r\nlet missCount = 0;\r\n\r\nconst getCacheKeyStuff = memoizeWithLimit(\r\n  (\r\n    tags: TransformationTag[],\r\n    startingValue: number,\r\n    params?: Record<string, any>,\r\n  ) => {\r\n    const joinedTags = tags.join(\"\");\r\n    missMap[joinedTags] = (missMap[joinedTags] ?? 0) + 1;\r\n    missCount++;\r\n    return [\r\n      joinedTags,\r\n      \"t:\" + joinedTags + startingValue + JSON.stringify(params),\r\n    ];\r\n  },\r\n  10000,\r\n);\r\n\r\nexport function applyTransformationsCached(\r\n  tags: TransformationTag[],\r\n  state: GameState,\r\n  startingValue: number,\r\n  params?: Record<string, any>,\r\n): number {\r\n  const cacheKey = getCacheKeyStuff(tags, startingValue, params);\r\n  return cacheByTickCount(state, cacheKey[1], (state) =>\r\n    applyTransformations(tags, state, startingValue, params, cacheKey[0]),\r\n  );\r\n}\r\n\r\nexport function applyTransformationsPermaCached(\r\n  tags: TransformationTag[],\r\n  state: GameState,\r\n  startingValue: number,\r\n  params?: Record<string, any>,\r\n): number {\r\n  const cacheKey = getCacheKeyStuff(tags, startingValue, params);\r\n  return cacheIndefinitely(\r\n    state,\r\n    (_state) => cacheKey[1],\r\n    (state) =>\r\n      applyTransformations(tags, state, startingValue, params, cacheKey[0]),\r\n  );\r\n}\r\n\r\nexport function clearTransformationCache(\r\n  tags: Set<TransformationTag>,\r\n  state: GameState,\r\n): GameState {\r\n  const cache = state.temp.cache;\r\n  for (let key of cache.keys()) {\r\n    let deleteKey = true;\r\n    for (let tag of tags) {\r\n      if (!key.includes(tag)) {\r\n        deleteKey = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (deleteKey) {\r\n      cache.delete(key);\r\n    }\r\n  }\r\n  return state;\r\n}\r\n\r\nexport function explainTransformations(\r\n  tags: TransformationTag[],\r\n  state: GameState,\r\n  startingValue: number,\r\n  params?: Record<string, any>,\r\n): Record<\r\n  TransformationType,\r\n  Array<{ id: string; description: string; value: number | undefined }>\r\n> {\r\n  const transformParams = params ?? {};\r\n  const oldTransformTags = transformParams?.tags;\r\n  transformParams.tags =\r\n    transformParams?.tags != null ? transformParams.tags.concat(tags) : tags;\r\n  const output: Record<\r\n    TransformationType,\r\n    Array<{ id: string; description: string; value: number | undefined }>\r\n  > = {\r\n    Power: [],\r\n    Addition: [],\r\n    Multiplier: [],\r\n    Override: [],\r\n  };\r\n\r\n  // Step 1: get the transformations that apply\r\n  const allTransformationsThatApply = getTransformationsThatApply(tags);\r\n\r\n  // Step 2: apply addition transforms\r\n  const additionTransformations = allTransformationsThatApply.Addition;\r\n  const afterAddition = additionTransformations\r\n    .map((data) => {\r\n      const value = data.transformation(\r\n        state,\r\n        transformParams,\r\n        startingValue ?? 0,\r\n      );\r\n      output.Addition.push({\r\n        id: data.id,\r\n        description: data.description,\r\n        value,\r\n      });\r\n      return value;\r\n    })\r\n    .reduce((prev, current) => (prev ?? 0) + (current ?? 0), startingValue);\r\n\r\n  // Step 3: apply power transforms (rare)\r\n  const powerTransformations = allTransformationsThatApply.Power;\r\n  const afterPower = powerTransformations\r\n    .map((data) => {\r\n      const value = data.transformation(\r\n        state,\r\n        transformParams,\r\n        afterAddition ?? 0,\r\n      );\r\n      output.Power.push({ id: data.id, description: data.description, value });\r\n      return value;\r\n    })\r\n    .reduce(\r\n      (prev, current) => Math.pow(prev ?? 1.0, current ?? 1.0),\r\n      afterAddition,\r\n    );\r\n\r\n  // Step 4: apply multiplication transforms\r\n  const multiplicationTransformations = allTransformationsThatApply.Multiplier;\r\n  const afterMultiplication = multiplicationTransformations\r\n    .map((data) => {\r\n      const value = data.transformation(\r\n        state,\r\n        transformParams,\r\n        afterPower ?? 0,\r\n      );\r\n      output.Multiplier.push({\r\n        id: data.id,\r\n        description: data.description,\r\n        value,\r\n      });\r\n      return value;\r\n    })\r\n    .reduce((prev, current) => (prev ?? 1.0) * (current ?? 1.0), afterPower);\r\n\r\n  // Step 5: finally, apply override transforms\r\n  const overrideTransformations = allTransformationsThatApply.Override;\r\n  const _afterOverride = overrideTransformations\r\n    .map((data) => {\r\n      const value = data.transformation(\r\n        state,\r\n        transformParams,\r\n        afterMultiplication ?? 0,\r\n      );\r\n      output.Override.push({\r\n        id: data.id,\r\n        description: data.description,\r\n        value,\r\n      });\r\n      return value;\r\n    })\r\n    .reduce((prev, current) => current ?? prev, afterMultiplication);\r\n\r\n  transformParams.tags = oldTransformTags;\r\n\r\n  return output;\r\n}\r\n\r\nexport function explainTransformationsText(\r\n  tags: TransformationTag[],\r\n  state: GameState,\r\n  startingValue: number,\r\n  params?: Record<string, any>,\r\n): string {\r\n  const cacheKey = getCacheKeyStuff(tags, startingValue, params);\r\n  return cacheByArbitraryVersion(\r\n    state,\r\n    \"explainCache:\" + cacheKey,\r\n    (state) =>\r\n      explainTransformationsTextUncached(tags, state, startingValue, params),\r\n    (state) => applyTransformations(tags, state, startingValue, params),\r\n  );\r\n}\r\n\r\nexport function explainTransformationsTextUncached(\r\n  tags: TransformationTag[],\r\n  state: GameState,\r\n  startingValue: number,\r\n  params?: Record<string, any>,\r\n): string {\r\n  const explained = explainTransformations(tags, state, startingValue, params);\r\n  const unit = params?.unit ?? \"\";\r\n  const type = params?.valueType ?? TransformationValueType.Basic;\r\n\r\n  const overrides = explained.Override.filter((value) => value.value != null);\r\n\r\n  if (overrides.length > 0) {\r\n    return t(\"Overridden: {{amount}}{{unit}} ({{description}})\", {\r\n      amount: overrides[0].value,\r\n      unit,\r\n      description: overrides[0].description,\r\n    });\r\n  }\r\n\r\n  function toTextAddition(result: {\r\n    id: string;\r\n    description: string;\r\n    value: number | undefined;\r\n  }) {\r\n    return t(\"{{amount}}{{unit}} ({{description}})\", {\r\n      amount:\r\n        result.value > 0\r\n          ? \"+\" +\r\n            formatNumber(\r\n              type == TransformationValueType.Percent\r\n                ? 100.0 * result.value\r\n                : result.value,\r\n            )\r\n          : formatNumber(result.value),\r\n      unit,\r\n      description: result.description,\r\n    });\r\n  }\r\n\r\n  function toTextMultiplier(result: {\r\n    id: string;\r\n    description: string;\r\n    value: number | undefined;\r\n  }) {\r\n    return t(\"{{amount}} ({{description}})\", {\r\n      amount: formatMultiplier(result.value),\r\n      description: result.description,\r\n    });\r\n  }\r\n\r\n  const additions = explained.Addition.filter((value) => value.value != 0);\r\n  const multipliers = explained.Multiplier.filter((value) => value.value != 1);\r\n\r\n  if (additions.length == 0 && multipliers.length == 0) {\r\n    return \"\";\r\n  }\r\n\r\n  const baseText = t(\"Base: {{amount}}{{unit}}\", {\r\n    amount: formatNumber(\r\n      type == TransformationValueType.Percent\r\n        ? 100.0 * startingValue\r\n        : startingValue,\r\n      { showDecimals: true },\r\n    ),\r\n    unit:\r\n      type == TransformationValueType.Percent ? t(\"%{{unit}}\", { unit }) : unit,\r\n  });\r\n  const additionText =\r\n    additions.length > 0\r\n      ? t(\"; Plus: {{plusText}}\", {\r\n          plusText: additions.map(toTextAddition).join(t(\", \")),\r\n        })\r\n      : \"\";\r\n  const multiplierText =\r\n    multipliers.length > 0\r\n      ? t(\"; Multipliers: {{plusText}}\", {\r\n          plusText: multipliers.map(toTextMultiplier).join(t(\", \")),\r\n        })\r\n      : \"\";\r\n\r\n  if (type == TransformationValueType.Log2) {\r\n    const base = params?.base ?? 1.0;\r\n    return t(\r\n      `Results from multiplying {{base}} by the base 2 logarithm of the following: {{baseText}}{{additionText}}{{multiplierText}}`,\r\n      {\r\n        base: formatNumber(base, { showDecimals: true }),\r\n        baseText,\r\n        additionText,\r\n        multiplierText,\r\n      },\r\n    );\r\n  }\r\n\r\n  if (type == TransformationValueType.Log2Divisor) {\r\n    const base = params?.base ?? 1.0;\r\n    return t(\r\n      `Results from dividing by 1.0 + {{base}} times the base 2 logarithm of the following: {{baseText}}{{additionText}}{{multiplierText}}`,\r\n      {\r\n        base: formatNumber(base, { showDecimals: true }),\r\n        baseText,\r\n        additionText,\r\n        multiplierText,\r\n      },\r\n    );\r\n  }\r\n\r\n  if (type == TransformationValueType.Divisor) {\r\n    return t(\r\n      `Results from dividing by 1.0 + the following: {{baseText}}{{additionText}}{{multiplierText}}`,\r\n      {\r\n        baseText,\r\n        additionText,\r\n        multiplierText,\r\n      },\r\n    );\r\n  }\r\n  return t(\"{{baseText}}{{additionText}}{{multiplierText}}\", {\r\n    baseText,\r\n    additionText,\r\n    multiplierText,\r\n  });\r\n}\r\n","import memoize from \"sonic-memoize\";\r\nimport { valuesOfCached } from \"../utils/CoreUtils\";\r\nimport { t } from \"../utils/I18n\";\r\nimport { hasWorldFlag, setWorldFlag } from \"./Flags\";\r\nimport { GameState, GameStateTransform } from \"./GameState\";\r\nimport { addGameStateListener } from \"./GameStateListeners\";\r\nimport {\r\n  applyTransformations,\r\n  explainTransformationsText,\r\n} from \"./transformation/Transformation\";\r\nimport { TransformationTags } from \"./transformation/TransformationTags\";\r\n\r\ntype ResourceInfo = {\r\n  baseCap: number;\r\n  icon: string;\r\n};\r\n\r\nexport enum Resource {\r\n  Mana = \"Mana\",\r\n  FireEssence = \"FireEssence\",\r\n  EarthEssence = \"EarthEssence\",\r\n  WaterEssence = \"WaterEssence\",\r\n  AirEssence = \"AirEssence\",\r\n  PoisonEssence = \"PoisonEssence\",\r\n  MindEssence = \"MindEssence\",\r\n  LifeEssence = \"LifeEssence\",\r\n  ElectricEssence = \"ElectricEssence\",\r\n  DeathEssence = \"DeathEssence\",\r\n  HolyEssence = \"HolyEssence\",\r\n  TimeEssence = \"TimeEssence\",\r\n  SpaceEssence = \"SpaceEssence\",\r\n  Coins = \"Coins\",\r\n  Monstium = \"Monstium\",\r\n  TimePiece = \"TimePiece\",\r\n}\r\n\r\nexport function translateResource(resource: Resource): string {\r\n  switch (resource) {\r\n    case Resource.Mana:\r\n      return t(\"Mana\");\r\n    case Resource.FireEssence:\r\n      return t(\"Fire\");\r\n    case Resource.EarthEssence:\r\n      return t(\"Earth\");\r\n    case Resource.WaterEssence:\r\n      return t(\"Water\");\r\n    case Resource.AirEssence:\r\n      return t(\"Air\");\r\n    case Resource.PoisonEssence:\r\n      return t(\"Poison\");\r\n    case Resource.MindEssence:\r\n      return t(\"Mind\");\r\n    case Resource.LifeEssence:\r\n      return t(\"Life\");\r\n    case Resource.ElectricEssence:\r\n      return t(\"Electric\");\r\n    case Resource.DeathEssence:\r\n      return t(\"Death\");\r\n    case Resource.HolyEssence:\r\n      return t(\"Holy\");\r\n    case Resource.TimeEssence:\r\n      return t(\"Time\");\r\n    case Resource.SpaceEssence:\r\n      return t(\"Space\");\r\n    case Resource.Coins:\r\n      return t(\"Coins\");\r\n    case Resource.Monstium:\r\n      return t(\"Monstium\");\r\n    case Resource.TimePiece:\r\n      return t(\"Time Pieces\");\r\n\r\n    // Do not add a default\r\n  }\r\n}\r\n\r\nconst RESOURCES: Record<Resource, ResourceInfo> = {\r\n  Mana: {\r\n    baseCap: 100,\r\n    icon: \"mana\",\r\n  },\r\n  Coins: {\r\n    baseCap: 10000,\r\n    icon: \"coins\",\r\n  },\r\n  Monstium: {\r\n    baseCap: 1000,\r\n    icon: \"monstium\",\r\n  },\r\n  FireEssence: {\r\n    baseCap: 100,\r\n    icon: \"fireessence\",\r\n  },\r\n  EarthEssence: {\r\n    baseCap: 100,\r\n    icon: \"earthessence\",\r\n  },\r\n  WaterEssence: {\r\n    baseCap: 100,\r\n    icon: \"wateressence\",\r\n  },\r\n  AirEssence: {\r\n    baseCap: 100,\r\n    icon: \"airessence\",\r\n  },\r\n  PoisonEssence: {\r\n    baseCap: 100,\r\n    icon: \"poisonessence\",\r\n  },\r\n  MindEssence: {\r\n    baseCap: 100,\r\n    icon: \"mindessence\",\r\n  },\r\n  LifeEssence: {\r\n    baseCap: 100,\r\n    icon: \"lifeessence\",\r\n  },\r\n  ElectricEssence: {\r\n    baseCap: 100,\r\n    icon: \"electricessence\",\r\n  },\r\n  DeathEssence: {\r\n    baseCap: 100,\r\n    icon: \"deathessence\",\r\n  },\r\n  HolyEssence: {\r\n    baseCap: 100,\r\n    icon: \"holyessence\",\r\n  },\r\n  TimeEssence: {\r\n    baseCap: 100,\r\n    icon: \"timeessence\",\r\n  },\r\n  SpaceEssence: {\r\n    baseCap: 100,\r\n    icon: \"spaceessence\",\r\n  },\r\n  TimePiece: {\r\n    baseCap: 100000,\r\n    icon: \"timepiece\",\r\n  },\r\n};\r\n\r\nexport function getResourceInfo(resource: Resource): ResourceInfo {\r\n  return RESOURCES[resource];\r\n}\r\n\r\nexport function getSortedResourceKeys(state: GameState) {\r\n  return valuesOfCached(Resource).filter(\r\n    (resource) => state.run.resources[resource] != null,\r\n  );\r\n}\r\n\r\nconst resourceCapTags = memoize((resourceName) => [\r\n  resourceName,\r\n  TransformationTags.Cap,\r\n]);\r\n\r\nconst resourceCapParams = memoize((resourceName) => ({\r\n  resource: resourceName,\r\n}));\r\n\r\nfunction calculateResourceCap(\r\n  state: GameState,\r\n  resourceName: Resource,\r\n): number {\r\n  let value = state.temp.resourceCapCache[resourceName];\r\n  if (value == null) {\r\n    value = applyTransformations(\r\n      resourceCapTags(resourceName),\r\n      state,\r\n      getResourceInfo(resourceName).baseCap,\r\n      resourceCapParams(resourceName),\r\n    );\r\n    state.temp.resourceCapCache[resourceName] = value;\r\n  }\r\n  return value;\r\n}\r\n\r\nexport function registerResourceCapClearer(\r\n  id: string,\r\n  valueFn: (state: GameState) => any,\r\n) {\r\n  addGameStateListener(\r\n    id + \"-resourceCapClearer\",\r\n    (_state) => (state) => {\r\n      state.temp.resourceCapCache = {};\r\n      return state;\r\n    },\r\n    valueFn,\r\n  );\r\n}\r\n\r\nexport function clearResourceCapCache(state: GameState): GameState {\r\n  state.temp.resourceCapCache = {};\r\n  return state;\r\n}\r\n\r\nexport function explainResourceCap(\r\n  state: GameState,\r\n  resourceName: Resource,\r\n): string {\r\n  return explainTransformationsText(\r\n    resourceCapTags(resourceName),\r\n    state,\r\n    getResourceInfo(resourceName).baseCap,\r\n    { resource: resourceName },\r\n  );\r\n}\r\n\r\nexport function getResourceCap(\r\n  state: GameState,\r\n  resourceName: Resource,\r\n): number {\r\n  return calculateResourceCap(state, resourceName);\r\n}\r\n\r\nexport function getResourceAmount(state: GameState, resource: Resource) {\r\n  return state.run.resources?.[resource] || 0;\r\n}\r\n\r\nexport function isResourceCapped(state: GameState, resource: Resource) {\r\n  return getResourceAmount(state, resource) >= getResourceCap(state, resource);\r\n}\r\n\r\nexport function hasEverHadResource(state: GameState, resource: Resource) {\r\n  return hasWorldFlag(state, \"hasEverHadResource-\" + resource);\r\n}\r\n\r\nfunction grantResourceImpl(name: Resource, amount: number, state: GameState) {\r\n  if (state.run.resources?.[name] == null) {\r\n    state.run.resources[name] = 0;\r\n  }\r\n  let resource = state.run.resources[name] as number;\r\n  if (amount < 0) {\r\n    resource += amount;\r\n  } else {\r\n    const cap = getResourceCap(state, name);\r\n    const overCap = resource > cap;\r\n\r\n    if (!overCap) {\r\n      resource += amount;\r\n      resource = Math.min(resource, cap);\r\n    }\r\n    state = setWorldFlag(\"hasEverHadResource-\" + name)(state);\r\n  }\r\n  resource = Math.max(resource, 0);\r\n  state.run.resources[name] = resource;\r\n  return state;\r\n}\r\n\r\nexport function grantResource(\r\n  this: any,\r\n  name: Resource,\r\n  amount: number,\r\n): GameStateTransform {\r\n  // Do it this way to avoid creating extra functions and avoid rerenders\r\n  return grantResourceImpl.bind(this, name, amount);\r\n}\r\n\r\nexport function loadResources() {\r\n  // addGameStateListener(\"resourceCaps\", (state) => {\r\n  //   let resourcesToRecap = [];\r\n  //   for (let resource of keysOf(state.run.resources)) {\r\n  //     const amount = state.run.resources[resource];\r\n  //     const cap = calculateResourceCap(state, resource);\r\n  //     if (amount > cap) {\r\n  //       resourcesToRecap.push(resource);\r\n  //     }\r\n  //   }\r\n  //   if (resourcesToRecap.length > 0) {\r\n  //     return (s) => {\r\n  //       for (let resource of resourcesToRecap) {\r\n  //         const cap = calculateResourceCap(state, resource);\r\n  //         state.run.resources[resource] = cap;\r\n  //       }\r\n  //       return state;\r\n  //     };\r\n  //   }\r\n  // });\r\n}\r\n","import { clone } from \"../utils/CoreUtils\";\r\nimport { clearAllCaches } from \"./Caching\";\r\nimport { hasWorldFlag } from \"./Flags\";\r\nimport { GameState, RUN_INITIAL_STATE } from \"./GameState\";\r\n\r\nexport type RetirementListenerTransform = (\r\n  state: GameState,\r\n  isMock: boolean,\r\n) => GameState;\r\nconst retirementListeners: Record<string, RetirementListenerTransform> = {};\r\nconst postRetirementListeners: Record<string, RetirementListenerTransform> = {};\r\n\r\nexport function registerRetirementListener(\r\n  id: string,\r\n  listener: RetirementListenerTransform,\r\n) {\r\n  retirementListeners[id] = listener;\r\n}\r\n\r\nexport function registerPostRetirementListener(\r\n  id: string,\r\n  listener: RetirementListenerTransform,\r\n) {\r\n  postRetirementListeners[id] = listener;\r\n}\r\n\r\nexport function isRetirementUnlocked(state: GameState): boolean {\r\n  return hasWorldFlag(state, \"storyline_posterity_completed\");\r\n}\r\n\r\nexport function retire(state: GameState, isMock: boolean) {\r\n  // Invalidate caches to prevent problems\r\n  state.global.tickCount++;\r\n  state = clearAllCaches(state);\r\n\r\n  Object.keys(retirementListeners).forEach((listenerId) => {\r\n    state = retirementListeners[listenerId](state, isMock);\r\n  });\r\n\r\n  state.world.totalTimesResetted += 1;\r\n\r\n  let newState = clone(RUN_INITIAL_STATE);\r\n  newState.lastProcessedTime = Date.now();\r\n  newState.startTimestamp = Date.now();\r\n  state.run = newState;\r\n\r\n  // Invalidate caches again to prevent problems\r\n  state.global.tickCount++;\r\n  state = clearAllCaches(state);\r\n\r\n  Object.keys(postRetirementListeners).forEach((listenerId) => {\r\n    state = postRetirementListeners[listenerId](state, isMock);\r\n  });\r\n\r\n  // Invalidate caches one more time to prevent problems\r\n  state.global.tickCount++;\r\n  state = clearAllCaches(state);\r\n\r\n  return state;\r\n}\r\n\r\nfunction flagsMover(state: GameState): GameState {\r\n  for (let flag in state?.run?.newFlagsOnRetirement || {}) {\r\n    state.world.flags[flag] = true;\r\n  }\r\n  return state;\r\n}\r\n\r\nregisterRetirementListener(\"new_flags\", flagsMover);\r\n","import { valuesOfCached } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { ItemTagEnum } from \"../items/ItemTagEnum\";\r\nimport { SpellElement } from \"../spells/Elements\";\r\n\r\n// Where can an action show up?\r\nexport enum ActionArea {\r\n  HOME = \"HOME\",\r\n  SPELL_MENU = \"SPELL_MENU\",\r\n  STUDY = \"STUDY\",\r\n  TRANSMUTE = \"TRANSMUTE\",\r\n  EXPLORATION = \"EXPLORATION\",\r\n  ENHANCEMENT = \"ENHANCEMENT\",\r\n  BOOST = \"BOOST\",\r\n  FAMILIARS = \"FAMILIARS\",\r\n}\r\n\r\n// From within an action area like Home, what are the subcategories an action should show up in?\r\nexport enum ActionSubcategories {\r\n  // Home\r\n  ACTIONS = \"ACTIONS\",\r\n  CHANNELING = \"CHANNELING\",\r\n  MANA = \"MANA\",\r\n  STORAGE = \"STORAGE\",\r\n  CATALYSTS = \"CATALYSTS\",\r\n  OTHER = \"OTHER\",\r\n  TIME_PIECES = \"TIME_PIECES\",\r\n\r\n  // Enhance\r\n  ENHANCE_STORAGE = \"ENHANCE_STORAGE\",\r\n  ENHANCE_LAND = \"ENHANCE_LAND\",\r\n  ENHANCE_PRODUCTION = \"ENHANCE_PRODUCTION\",\r\n  ENHANCE_CATALYSTS = \"ENHANCE_CATALYSTS\",\r\n  ENHANCE_EXPLORATION = \"ENHANCE_COMBAT\",\r\n  ENHANCE_OTHER = \"ENHANCE_OTHER\",\r\n\r\n  // Boost\r\n  BOOST = \"BOOST\",\r\n  BOOST_OTHER = \"BOOST_OTHER\",\r\n\r\n  // Familiars\r\n  FAMILIARS = \"FAMILIARS\",\r\n}\r\n\r\nexport type ActionSubcategory =\r\n  | ActionSubcategories\r\n  | SpellElement\r\n  | ItemTagEnum;\r\n\r\nconst HOME_ACTION_SUBCATEGORIES = [\r\n  ActionSubcategories.ACTIONS,\r\n  ActionSubcategories.CHANNELING,\r\n  ActionSubcategories.MANA,\r\n  ActionSubcategories.STORAGE,\r\n  ActionSubcategories.CATALYSTS,\r\n  ActionSubcategories.OTHER,\r\n  ActionSubcategories.TIME_PIECES,\r\n];\r\n\r\nconst STUDY_ACTION_SUBCATEGORIES = [ActionSubcategories.TIME_PIECES];\r\n\r\nconst ENHANCE_ACTION_SUBCATEGORIES = [\r\n  ActionSubcategories.ENHANCE_STORAGE,\r\n  ActionSubcategories.ENHANCE_LAND,\r\n  ActionSubcategories.ENHANCE_PRODUCTION,\r\n  ActionSubcategories.ENHANCE_CATALYSTS,\r\n  ActionSubcategories.ENHANCE_EXPLORATION,\r\n  ActionSubcategories.ENHANCE_OTHER,\r\n];\r\n\r\nconst BOOST_ACTION_SUBCATEGORIES = [\r\n  ActionSubcategories.BOOST,\r\n  ActionSubcategories.BOOST_OTHER,\r\n];\r\n\r\nexport function getSubcategoriesByArea(\r\n  area: ActionArea,\r\n): ActionSubcategories[] {\r\n  switch (area) {\r\n    case ActionArea.HOME:\r\n      return HOME_ACTION_SUBCATEGORIES;\r\n    case ActionArea.STUDY:\r\n      return STUDY_ACTION_SUBCATEGORIES;\r\n    case ActionArea.ENHANCEMENT:\r\n      return ENHANCE_ACTION_SUBCATEGORIES;\r\n    case ActionArea.BOOST:\r\n      return BOOST_ACTION_SUBCATEGORIES;\r\n    default:\r\n      return valuesOfCached(ActionSubcategories);\r\n  }\r\n}\r\n\r\nexport function translateActionArea(area: ActionArea): string {\r\n  switch (area) {\r\n    case ActionArea.HOME:\r\n      return t(\"Home\");\r\n    case ActionArea.SPELL_MENU:\r\n      return t(\"Spells\");\r\n    case ActionArea.STUDY:\r\n      return t(\"Study\");\r\n    case ActionArea.TRANSMUTE:\r\n      return t(\"Transmute\");\r\n    case ActionArea.EXPLORATION:\r\n      return t(\"Exploration\");\r\n    case ActionArea.ENHANCEMENT:\r\n      return t(\"Enhance\");\r\n    case ActionArea.BOOST:\r\n      return t(\"Boost\");\r\n    case ActionArea.FAMILIARS:\r\n      return t(\"Familiars\");\r\n    // Do not add a default\r\n  }\r\n}\r\n\r\nexport function translateActionSubcategory(\r\n  subcategory: ActionSubcategories,\r\n): string {\r\n  switch (subcategory) {\r\n    case ActionSubcategories.ACTIONS:\r\n      return t(\"Actions\");\r\n    case ActionSubcategories.CHANNELING:\r\n      return t(\"Channeling\");\r\n    case ActionSubcategories.MANA:\r\n      return t(\"Mana\");\r\n    case ActionSubcategories.STORAGE:\r\n      return t(\"Storage\");\r\n    case ActionSubcategories.CATALYSTS:\r\n      return t(\"Catalysts\");\r\n    case ActionSubcategories.OTHER:\r\n      return t(\"Other\");\r\n    case ActionSubcategories.TIME_PIECES:\r\n      return t(\"Time Pieces\");\r\n\r\n    case ActionSubcategories.ENHANCE_STORAGE:\r\n      return t(\"Storage\");\r\n    case ActionSubcategories.ENHANCE_LAND:\r\n      return t(\"Land\");\r\n    case ActionSubcategories.ENHANCE_PRODUCTION:\r\n      return t(\"Production\");\r\n    case ActionSubcategories.ENHANCE_CATALYSTS:\r\n      return t(\"Catalysts\");\r\n    case ActionSubcategories.ENHANCE_EXPLORATION:\r\n      return t(\"Exploration\");\r\n    case ActionSubcategories.ENHANCE_OTHER:\r\n      return t(\"Other\");\r\n\r\n    case ActionSubcategories.BOOST:\r\n      return t(\"Boost\");\r\n    case ActionSubcategories.BOOST_OTHER:\r\n      return t(\"Other\");\r\n\r\n    case ActionSubcategories.FAMILIARS:\r\n      return t(\"Familiars\");\r\n    // Do not add a default\r\n  }\r\n}\r\n","import { valuesOfCached } from \"../../utils/CoreUtils\";\r\nimport { GameState } from \"../GameState\";\r\nimport { ActionArea } from \"../action/ActionAreas\";\r\n\r\nexport function clearVisibleSpellsCache(state: GameState): GameState {\r\n  for (let actionArea of [...valuesOfCached(ActionArea), \"undefined\"]) {\r\n    const key = \"spellByElement:\" + actionArea;\r\n    if (state.temp.cache.get(key) != null) {\r\n      state.temp.cache.delete(key);\r\n    }\r\n  }\r\n  return state;\r\n}\r\n","import memoize, { memoizeWithLimit } from \"sonic-memoize\";\r\nimport {\r\n  clone,\r\n  fromEntries,\r\n  keysOf,\r\n  valuesOf,\r\n  valuesOfCached,\r\n} from \"../../utils/CoreUtils\";\r\nimport { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { cacheByTickCountElementLevel, cacheIndefinitely } from \"../Caching\";\r\nimport { isDemo } from \"../Demo\";\r\nimport { hasWorldFlag, setWorldFlagForNextRun } from \"../Flags\";\r\nimport { GameState, GameStateTransform } from \"../GameState\";\r\nimport { Resource } from \"../Resources\";\r\nimport {\r\n  registerPostRetirementListener,\r\n  registerRetirementListener,\r\n} from \"../Retire\";\r\nimport {\r\n  TransformationTag,\r\n  TransformationType,\r\n  applyTransformations,\r\n  applyTransformationsPermaCached,\r\n  registerTransformation,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { clearVisibleSpellsCache } from \"./VisibleSpellsCache\";\r\n\r\nexport enum SpellElement {\r\n  Fire = \"Fire\",\r\n  Earth = \"Earth\",\r\n  Water = \"Water\",\r\n  Air = \"Air\",\r\n  Poison = \"Poison\",\r\n  Mind = \"Mind\",\r\n  Life = \"Life\",\r\n  Electric = \"Electric\",\r\n  Death = \"Death\",\r\n  Holy = \"Holy\",\r\n  Time = \"Time\",\r\n  Space = \"Space\",\r\n}\r\n\r\nexport function translateElement(element: SpellElement): string {\r\n  switch (element) {\r\n    case SpellElement.Fire:\r\n      return t(\"Fire\");\r\n    case SpellElement.Earth:\r\n      return t(\"Earth\");\r\n    case SpellElement.Air:\r\n      return t(\"Air\");\r\n    case SpellElement.Water:\r\n      return t(\"Water\");\r\n    case SpellElement.Poison:\r\n      return t(\"Poison\");\r\n    case SpellElement.Mind:\r\n      return t(\"Mind\");\r\n    case SpellElement.Life:\r\n      return t(\"Life\");\r\n    case SpellElement.Electric:\r\n      return t(\"Electric\");\r\n    case SpellElement.Death:\r\n      return t(\"Death\");\r\n    case SpellElement.Holy:\r\n      return t(\"Holy\");\r\n    case SpellElement.Time:\r\n      return t(\"Time\");\r\n    case SpellElement.Space:\r\n      return t(\"Space\");\r\n    // Do not add a default\r\n  }\r\n}\r\n\r\nexport function getRankForLevel(level: number): string {\r\n  if (level >= 90) {\r\n    const rankPlus = Math.floor((level - 80) / 10.0);\r\n    return t(\"Eminence +{{rank}}\", { rank: formatNumber(rankPlus) });\r\n  }\r\n  if (level >= 80) return t(\"Eminence\");\r\n  //if (level >= 75) return t(\"Grandmaster\");\r\n  if (level >= 70) return t(\"Master\");\r\n  //if (level >= 65) return t(\"Archmage\");\r\n  if (level >= 60) return t(\"Archmage\");\r\n  //if (level >= 55) return t(\"High Expert\");\r\n  if (level >= 50) return t(\"Expert\");\r\n  //if (level >= 45) return t(\"High Magus\");\r\n  if (level >= 40) return t(\"Magus\");\r\n  //if (level >= 35) return t(\"Instructor\");\r\n  if (level >= 30) return t(\"Adept\");\r\n  //if (level >= 25) return t(\"Mage\");\r\n  if (level >= 20) return t(\"Apprentice\");\r\n  //if (level >= 15) return t(\"Journeyman\");\r\n  if (level >= 10) return t(\"Novice\");\r\n  //if (level >= 5) return t(\"Novice\");\r\n  return t(\"Initiate\");\r\n}\r\n\r\nexport const ELEMENT_LEVEL_CAP_BASE = 80;\r\nexport const ELEMENT_LEVEL_CAP_DEMO_BASE = 30;\r\n\r\nconst expTable = new Map<number, Map<number, number>>();\r\n\r\nexport function getElementExp(state: GameState, element: SpellElement): number {\r\n  return state.run.elementExperience?.[element] || 0;\r\n}\r\n\r\nconst maxElementLevelTags = [TransformationTags.MaxElementLevel];\r\n\r\nexport function getMaxElementLevel(state: GameState): number {\r\n  return applyTransformationsPermaCached(\r\n    maxElementLevelTags,\r\n    state,\r\n    isDemo() ? ELEMENT_LEVEL_CAP_DEMO_BASE : ELEMENT_LEVEL_CAP_BASE,\r\n  );\r\n}\r\n\r\nconst getIncrementalExpRequiredForLevelAndExponent = memoize(\r\n  (level: number, exponent: number, maxLevel: number): number => {\r\n    if (level <= 1) {\r\n      return 0;\r\n    }\r\n    if (level > maxLevel) {\r\n      return Infinity;\r\n    }\r\n    return Math.floor(600 * Math.pow(exponent, level - 2));\r\n  },\r\n);\r\n\r\nexport const getTotalExpRequiredForLevelByExponent = (\r\n  level: number,\r\n  exponent: number,\r\n  maxLevel: number,\r\n): number => {\r\n  if (level <= 1) {\r\n    return 0;\r\n  }\r\n  if (level > maxLevel) {\r\n    return Infinity;\r\n  }\r\n  const cachedExp = expTable.get(exponent)?.get(level);\r\n  if (cachedExp != null) {\r\n    return cachedExp;\r\n  }\r\n  return (\r\n    getTotalExpRequiredForLevelByExponent(level - 1, exponent, maxLevel) +\r\n    getIncrementalExpRequiredForLevelAndExponent(level, exponent, maxLevel)\r\n  );\r\n};\r\n\r\nexport const getLevelByExpAndExponent = (\r\n  exp: number,\r\n  exponent: number,\r\n  maxLevel: number,\r\n  estimateLevel?: number,\r\n): number => {\r\n  if (estimateLevel != null) {\r\n    if (\r\n      getTotalExpRequiredForLevelByExponent(\r\n        estimateLevel,\r\n        exponent,\r\n        maxLevel,\r\n      ) <= exp &&\r\n      getTotalExpRequiredForLevelByExponent(\r\n        estimateLevel + 1,\r\n        exponent,\r\n        maxLevel,\r\n      ) > exp\r\n    ) {\r\n      return estimateLevel;\r\n    }\r\n  }\r\n  let level = 1;\r\n  while (\r\n    getTotalExpRequiredForLevelByExponent(level + 1, exponent, maxLevel) <= exp\r\n  ) {\r\n    level += 1;\r\n  }\r\n  return level;\r\n};\r\n\r\nfunction getExponentForElement(\r\n  state: GameState,\r\n  element: SpellElement,\r\n): number {\r\n  if (\r\n    state.run.primaryElement != null &&\r\n    state.run.elementExponents?.[element] == null\r\n  ) {\r\n    if (!getUnlockedElements(state).includes(element)) {\r\n      return 2;\r\n    }\r\n    const primary =\r\n      state.run.primaryElement === element ||\r\n      state.run.secondaryElement === element;\r\n    const exponent = applyTransformations(\r\n      [TransformationTags.ExpRequirementScale, element],\r\n      state,\r\n      primary ? 1.38 : isPartiallyUnlocked(state, element) ? 2 : 1.43,\r\n      { element: element },\r\n    );\r\n    state.run.elementExponents[element] = exponent;\r\n  }\r\n  return state.run.elementExponents[element] ?? 1.43;\r\n}\r\n\r\nexport function getIncrementalExpRequiredForLevel(\r\n  state: GameState,\r\n  level: number,\r\n  element: SpellElement,\r\n): number {\r\n  const exponent = getExponentForElement(state, element);\r\n  return getIncrementalExpRequiredForLevelAndExponent(\r\n    level,\r\n    exponent,\r\n    getMaxElementLevel(state),\r\n  );\r\n}\r\n\r\nexport function getTotalExpRequiredForLevel(\r\n  state: GameState,\r\n  level: number,\r\n  element: SpellElement,\r\n): number {\r\n  const exponent = getExponentForElement(state, element);\r\n  return getTotalExpRequiredForLevelByExponent(\r\n    level,\r\n    exponent,\r\n    getMaxElementLevel(state),\r\n  );\r\n}\r\n\r\nfunction getLevelByExp(\r\n  state: GameState,\r\n  exp: number,\r\n  element: SpellElement,\r\n  estimateLevel?: number,\r\n): number {\r\n  const exponent = getExponentForElement(state, element);\r\n  return getLevelByExpAndExponent(\r\n    exp,\r\n    exponent,\r\n    getMaxElementLevel(state),\r\n    estimateLevel,\r\n  );\r\n}\r\n\r\nconst estimateLevels: Partial<Record<SpellElement, number>> = {};\r\n\r\nexport function getElementLevel(\r\n  state: GameState,\r\n  element: SpellElement,\r\n): number {\r\n  return cacheByTickCountElementLevel(state, element, (state) => {\r\n    const estimateLevel = estimateLevels[element];\r\n    const level = getLevelByExp(\r\n      state,\r\n      state.run.elementExperience?.[element] || 0,\r\n      element,\r\n      estimateLevel,\r\n    );\r\n    estimateLevels[element] = level;\r\n    return level;\r\n  });\r\n}\r\n\r\nfunction grantElementExpImpl(\r\n  element: SpellElement,\r\n  amount: number,\r\n  state: GameState,\r\n) {\r\n  let current = getElementExp(state, element);\r\n  current += amount;\r\n  current = Math.max(current, 0);\r\n  state.run.elementExperience[element] = current;\r\n  return state;\r\n}\r\n\r\nexport const grantElementExp = memoizeWithLimit(\r\n  (element, amount) => grantElementExpImpl.bind(this, element, amount),\r\n  10000,\r\n);\r\n\r\nexport function getTotalElementExp(state: GameState): number {\r\n  let totalExp = 0;\r\n  for (let element in state.run.elementExperience) {\r\n    totalExp += getElementExp(state, element as SpellElement);\r\n  }\r\n  return totalExp;\r\n}\r\n\r\nfunction selectPrimaryElementImpl(element: SpellElement, state: GameState) {\r\n  state.run.primaryElement = element;\r\n  return state;\r\n}\r\n\r\nexport function selectPrimaryElement(\r\n  this: any,\r\n  element: string,\r\n): GameStateTransform {\r\n  // Do it this way to avoid creating extra functions and avoid rerenders\r\n  return selectPrimaryElementImpl.bind(this, element);\r\n}\r\n\r\nfunction selectSecondaryElementImpl(element: SpellElement, state: GameState) {\r\n  state.run.secondaryElement = element;\r\n  return state;\r\n}\r\n\r\nexport function selectSecondaryElement(\r\n  this: any,\r\n  element: string,\r\n): GameStateTransform {\r\n  // Do it this way to avoid creating extra functions and avoid rerenders\r\n  return selectSecondaryElementImpl.bind(this, element);\r\n}\r\n\r\nexport function getPrimaryElements(state: GameState): SpellElement[] {\r\n  if (state.run.secondaryElement != null && state.run.primaryElement != null) {\r\n    return [state.run.primaryElement, state.run.secondaryElement];\r\n  }\r\n  if (state.run.primaryElement != null) {\r\n    return [state.run.primaryElement];\r\n  }\r\n  return [];\r\n}\r\n\r\nexport function getPrimaryElementMaxLevelForRun(state: GameState): number {\r\n  const primaryElements = getPrimaryElements(state);\r\n  return Math.max(\r\n    ...primaryElements.map((element) => getElementLevel(state, element)),\r\n    1,\r\n  );\r\n}\r\n\r\n// Includes partially unlocked elements\r\nexport function getUnlockedElements(state: GameState): SpellElement[] {\r\n  let value = state.temp.unlockedElementsCache;\r\n  if (value == null) {\r\n    const elementValues = valuesOf(SpellElement);\r\n    value = keysOf(state.world.unlockedElements)\r\n      .filter((key) => state.world.unlockedElements[key])\r\n      .sort((a, b) => elementValues.indexOf(a) - elementValues.indexOf(b))\r\n      .concat(\r\n        keysOf(state.run.partiallyUnlockedElements).filter(\r\n          (key) =>\r\n            state.run.partiallyUnlockedElements[key] &&\r\n            !state.world.unlockedElements[key],\r\n        ),\r\n      );\r\n    state.temp.unlockedElementsCache = value;\r\n  }\r\n  return value;\r\n}\r\n\r\nexport function getFullyUnlockedElements(state: GameState): SpellElement[] {\r\n  return keysOf(state.world.unlockedElements).filter(\r\n    (key) => state.world.unlockedElements[key],\r\n  );\r\n}\r\n\r\nexport function isPartiallyUnlocked(\r\n  state: GameState,\r\n  element: string,\r\n): boolean {\r\n  return (\r\n    !(state.world.unlockedElements[element] ?? false) &&\r\n    (state.run.partiallyUnlockedElements[element] ?? false)\r\n  );\r\n}\r\n\r\nfunction unlockElementImpl(element: string, state: GameState) {\r\n  state.world.unlockedElements[element] = true;\r\n  state.temp.unlockedElementsCache = null;\r\n  state.temp.spellRequirementsCache = {};\r\n  state = clearVisibleSpellsCache(state);\r\n  return state;\r\n}\r\n\r\nexport function unlockElement(this: any, element: string): GameStateTransform {\r\n  // Do it this way to avoid creating extra functions and avoid rerenders\r\n  return unlockElementImpl.bind(this, element);\r\n}\r\n\r\nfunction partiallyUnlockElementImpl(element: string, state: GameState) {\r\n  state.run.partiallyUnlockedElements[element] = true;\r\n  state = setWorldFlagForNextRun(\"everPartiallyUnlockedElement_\" + element)(\r\n    state,\r\n  );\r\n  state.temp.unlockedElementsCache = null;\r\n  state.temp.spellRequirementsCache = {};\r\n  return state;\r\n}\r\n\r\nexport function partiallyUnlockElement(\r\n  this: any,\r\n  element: string,\r\n): GameStateTransform {\r\n  // Do it this way to avoid creating extra functions and avoid rerenders\r\n  return partiallyUnlockElementImpl.bind(this, element);\r\n}\r\n\r\nexport function hasElementBeenPartiallyUnlockedInPreviousRun(\r\n  state: GameState,\r\n  element: SpellElement,\r\n): boolean {\r\n  return hasWorldFlag(state, \"everPartiallyUnlockedElement_\" + element);\r\n}\r\n\r\nexport function getMaxPrimaryElementLevel(\r\n  state: GameState,\r\n  element: SpellElement,\r\n): number {\r\n  return Math.min(\r\n    state.world.maxPrimaryElementLevels?.[element] || 0,\r\n    getMaxElementLevel(state),\r\n  );\r\n}\r\n\r\nexport function getMaxOfMaxPrimaryElementLevels(state: GameState): number {\r\n  const maxElementLevels = state.world.maxPrimaryElementLevels || {};\r\n  let max = 0;\r\n  for (let element in maxElementLevels) {\r\n    max = Math.min(\r\n      Math.max(max, maxElementLevels[element as SpellElement] || 0),\r\n      getMaxElementLevel(state),\r\n    );\r\n  }\r\n  return max;\r\n}\r\n\r\nexport function getSumOfMaxPrimaryElementLevels(state: GameState): number {\r\n  const maxElementLevels = state.world.maxPrimaryElementLevels || {};\r\n  let total = 0;\r\n  for (let element in maxElementLevels) {\r\n    total += Math.min(\r\n      (maxElementLevels[element as SpellElement] ?? 1) - 1,\r\n      getMaxElementLevel(state) - 1,\r\n    );\r\n  }\r\n  return total;\r\n}\r\n\r\nconst OTHER_ELEMENT_GRANT = 0.1;\r\n\r\nconst ELEMENT_EXP_POW_BASE = 1.03;\r\nconst BASE_EXP_MULTIPLIER = 1.0;\r\n\r\nexport const MANA_SPENT_EXP_EXPONENT = 0.3;\r\n\r\nconst tagsForExpGain = memoize((tags, element) => [\r\n  ...tags,\r\n  element,\r\n  TransformationTags.ExpGain,\r\n]);\r\n\r\nexport function getElementExpByUsage(\r\n  state: GameState,\r\n  element: SpellElement,\r\n  level: number,\r\n  manaSpent: number,\r\n  isSpellElement: boolean,\r\n  tags: string[] = [],\r\n): number {\r\n  const transformed = applyTransformations(\r\n    tagsForExpGain(tags, element),\r\n    state,\r\n    Math.pow(ELEMENT_EXP_POW_BASE, Math.max(level - 1, 0)) *\r\n      Math.pow(manaSpent, MANA_SPENT_EXP_EXPONENT) *\r\n      BASE_EXP_MULTIPLIER *\r\n      (isSpellElement ? 1.0 : OTHER_ELEMENT_GRANT),\r\n    { school: element, level: level },\r\n  );\r\n  if (transformed == 0) {\r\n    return 0;\r\n  }\r\n  return Math.max(5.0, transformed);\r\n}\r\n\r\nconst BASE_STARTING_EXP = 400;\r\nconst STARTING_EXP_POWER_BASE = 1.27;\r\nconst STARTING_ELEMENT_EXP_BASE_TAGS_BY_ELEMENT: Record<\r\n  SpellElement,\r\n  TransformationTag[]\r\n> = fromEntries(\r\n  valuesOfCached(SpellElement).map((element) => [\r\n    element,\r\n    [TransformationTags.StartingElementExpBase, element],\r\n  ]),\r\n);\r\n\r\nexport function startingExpForElement(state: GameState, element: SpellElement) {\r\n  return (\r\n    BASE_STARTING_EXP *\r\n    (Math.pow(\r\n      applyTransformationsPermaCached(\r\n        STARTING_ELEMENT_EXP_BASE_TAGS_BY_ELEMENT[element],\r\n        state,\r\n        STARTING_EXP_POWER_BASE,\r\n      ),\r\n      getMaxPrimaryElementLevel(state, element),\r\n    ) -\r\n      1)\r\n  );\r\n}\r\n\r\nexport function maximumElementLevelExpMultiplier(state: GameState) {\r\n  return cacheIndefinitely(\r\n    state,\r\n    (s) => \"maximumElementLevelExpMultiplier\",\r\n    (s) => {\r\n      const maxLevel = Math.max(getMaxOfMaxPrimaryElementLevels(s), 1);\r\n      const sumOfLevels = getSumOfMaxPrimaryElementLevels(s);\r\n      const multiplier =\r\n        (1 + (Math.pow(1.11, maxLevel - 1) - 1) / 2.5) *\r\n        (Math.pow(sumOfLevels + Math.pow(20, 1 / 0.8), 0.8) / 20);\r\n      return multiplier;\r\n    },\r\n  );\r\n}\r\n\r\nexport function maximumElementLevelProductionMultiplier(\r\n  state: GameState,\r\n  multiplier: number,\r\n) {\r\n  return multiplier * maximumElementLevelProductionMultiplierDx(state);\r\n}\r\n\r\nexport function maximumElementLevelProductionMultiplierDx(state: GameState) {\r\n  return cacheIndefinitely(\r\n    state,\r\n    (s) => \"maximumElementLevelProductionMultiplierDx\",\r\n    (s) => {\r\n      const researchMultiplier = maximumElementLevelExpMultiplier(state);\r\n      return 1 + (Math.pow(researchMultiplier, 0.4) - 1) / 3.2;\r\n    },\r\n  );\r\n}\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.ExpGain]],\r\n  \"MELExp\",\r\n  t(\"Maximum Element Level multiplier\"),\r\n  TransformationType.Multiplier,\r\n  maximumElementLevelExpMultiplier,\r\n);\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.Production]],\r\n  \"MELProduction\",\r\n  t(\"Maximum Element Level production multiplier\"),\r\n  TransformationType.Multiplier,\r\n  maximumElementLevelProductionMultiplierDx,\r\n);\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.ChannelingEfficiency]],\r\n  \"MELChanneling\",\r\n  t(\"Maximum Element Level channeling multiplier\"),\r\n  TransformationType.Multiplier,\r\n  maximumElementLevelProductionMultiplierDx,\r\n);\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.Loot]],\r\n  \"MELLoot\",\r\n  t(\"Maximum Element Level loot multiplier\"),\r\n  TransformationType.Multiplier,\r\n  maximumElementLevelProductionMultiplierDx,\r\n);\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.FamiliarExp]],\r\n  \"MELFamiliarExp\",\r\n  t(\"Maximum Element Level familiar Exp multiplier\"),\r\n  TransformationType.Multiplier,\r\n  maximumElementLevelProductionMultiplierDx,\r\n);\r\n\r\nObject.keys(SpellElement).forEach((element) => {\r\n  registerTransformation(\r\n    [\r\n      [\r\n        TransformationTags.Cost,\r\n        element,\r\n        TransformationTags.Spell,\r\n        Resource.Mana,\r\n      ],\r\n    ],\r\n    element + \"SpellCostReducer\",\r\n    t(\"Primary Element\"),\r\n    TransformationType.Multiplier,\r\n    (state) =>\r\n      getPrimaryElements(state).includes(element as SpellElement) ? 0.5 : 1,\r\n  );\r\n});\r\n\r\nfunction retirementListener(state: GameState): GameState {\r\n  const primaryElement = state.run.primaryElement;\r\n  if (primaryElement) {\r\n    const level = getElementLevel(state, primaryElement);\r\n    state.world.maxPrimaryElementLevels[primaryElement] = Math.max(\r\n      getMaxPrimaryElementLevel(state, primaryElement),\r\n      level,\r\n    );\r\n  }\r\n  const secondaryElement = state.run.secondaryElement;\r\n  if (secondaryElement) {\r\n    const level = getElementLevel(state, secondaryElement);\r\n    state.world.maxPrimaryElementLevels[secondaryElement] = Math.max(\r\n      getMaxPrimaryElementLevel(state, secondaryElement),\r\n      level,\r\n    );\r\n  }\r\n  return state;\r\n}\r\n\r\nregisterRetirementListener(\"mpl\", retirementListener);\r\n\r\nexport function grantStartingExp(state: GameState): GameState {\r\n  for (let element of keysOf(state.world.maxPrimaryElementLevels)) {\r\n    const exp = startingExpForElement(state, element);\r\n    state = grantElementExp(element, exp)(state);\r\n    state.run.lastComputedLevelUpElementExperience[element] = exp;\r\n  }\r\n  return state;\r\n}\r\n\r\nfunction maxElementLevelsOnPrevRetirementAssigner(state: GameState): GameState {\r\n  state.run.maxElementLevelsOnPrevRetirement = clone(\r\n    state.world.maxElementLevels,\r\n  );\r\n  return state;\r\n}\r\n\r\nregisterPostRetirementListener(\r\n  \"maxElementLevelsOnPrevRetirement\",\r\n  maxElementLevelsOnPrevRetirementAssigner,\r\n);\r\n\r\nexport function meetsRequirements(\r\n  state: GameState,\r\n  requirements: Partial<Record<SpellElement, number>>,\r\n): boolean {\r\n  if (\r\n    Object.keys(requirements).some((elementName) => {\r\n      const levelRequirement = requirements[elementName as SpellElement] || 0;\r\n      if (levelRequirement <= 0) {\r\n        return false;\r\n      }\r\n      return (\r\n        getElementLevel(state, elementName as SpellElement) <\r\n          (requirements[elementName as SpellElement] || 0) ||\r\n        !getUnlockedElements(state).includes(elementName as SpellElement)\r\n      );\r\n    })\r\n  ) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nconst cachedExponents = [1.38, 1.43, 2];\r\ncachedExponents.forEach((exponent) => expTable.set(exponent, new Map()));\r\n\r\nfor (let level = 1; level < 500; level++) {\r\n  cachedExponents.forEach((exponent) => {\r\n    expTable\r\n      .get(exponent)\r\n      ?.set(level, getTotalExpRequiredForLevelByExponent(level, exponent, 499));\r\n  });\r\n}\r\n","import color from \"color\";\r\nimport { MD3DarkTheme, MD3LightTheme } from \"react-native-paper\";\r\nimport memoize from \"sonic-memoize\";\r\nimport { SpellElement } from \"./backend/spells/Elements\";\r\nimport { clone } from \"./utils/CoreUtils\";\r\n\r\n/* \r\nBase colors:\r\n\r\nFire: #cb1e1e\r\nEarth: #b66336\r\nWater: #009ce9\r\nAir: #89ab83\r\nPoison: #7e18ef\r\nMind: #00dddd\r\nLife: #95AB6C\r\nElectric: #fbc02d\r\nTime: #C21872\r\nSpace: #00308f\r\n\r\nFor Death: \r\nDark mode: grab Fire, desaturate every color, and decrease lightness by 50%\r\nLight mode: same thing\r\n\r\nFor Holy:\r\nDark mode: grab Fire, desaturate every color\r\nLight mode: same thing\r\n*/\r\nfunction generateDeathColor(fireColor: string, isDark: boolean) {\r\n  const baseColor = color(fireColor);\r\n  const grayColor = baseColor.grayscale();\r\n  return grayColor.darken(isDark ? 0.3 : 0.2).hexa();\r\n}\r\nfunction generateHolyColor(fireColor: string, isDark: boolean) {\r\n  const baseColor = color(fireColor);\r\n  const grayColor = baseColor.grayscale();\r\n  return grayColor.lighten(isDark ? 0.3 : 0.4).hexa();\r\n}\r\nconst COLORS_TO_REGENERATE_LIGHT = [\r\n  \"primary\",\r\n  \"primaryContainer\",\r\n  \"onPrimaryContainer\",\r\n  \"secondary\",\r\n  \"secondaryContainer\",\r\n  \"onSecondaryContainer\",\r\n  \"tertiary\",\r\n  \"tertiaryContainer\",\r\n  \"onTertiaryContainer\",\r\n];\r\nconst COLORS_TO_REGENERATE_DARK = [\r\n  ...COLORS_TO_REGENERATE_LIGHT,\r\n  \"onPrimary\",\r\n  \"onSecondary\",\r\n  \"onTertiary\",\r\n];\r\nconst TO_GRAYSCALE_ONLY = [\r\n  \"background\",\r\n  \"onBackground\",\r\n  \"surface\",\r\n  \"surfaceVariant\",\r\n  \"outline\",\r\n  \"outlineVariant\",\r\n];\r\n\r\nfunction getThemeByElementAndDarkModeUnmemoized(\r\n  element: SpellElement | undefined,\r\n  isDark: boolean,\r\n) {\r\n  let colors = { colors: {} };\r\n  switch (element) {\r\n    case SpellElement.Fire:\r\n      colors = !isDark\r\n        ? {\r\n            colors: {\r\n              primary: \"rgb(189, 16, 22)\",\r\n              onPrimary: \"rgb(255, 255, 255)\",\r\n              primaryContainer: \"rgb(255, 218, 214)\",\r\n              onPrimaryContainer: \"rgb(65, 0, 2)\",\r\n              secondary: \"rgb(119, 86, 82)\",\r\n              onSecondary: \"rgb(255, 255, 255)\",\r\n              secondaryContainer: \"rgb(255, 218, 214)\",\r\n              onSecondaryContainer: \"rgb(44, 21, 18)\",\r\n              tertiary: \"rgb(113, 91, 46)\",\r\n              onTertiary: \"rgb(255, 255, 255)\",\r\n              tertiaryContainer: \"rgb(253, 223, 166)\",\r\n              onTertiaryContainer: \"rgb(38, 25, 0)\",\r\n              error: \"rgb(186, 26, 26)\",\r\n              onError: \"rgb(255, 255, 255)\",\r\n              errorContainer: \"rgb(255, 218, 214)\",\r\n              onErrorContainer: \"rgb(65, 0, 2)\",\r\n              background: \"rgb(255, 251, 255)\",\r\n              onBackground: \"rgb(32, 26, 25)\",\r\n              surface: \"rgb(255, 251, 255)\",\r\n              onSurface: \"rgb(32, 26, 25)\",\r\n              surfaceVariant: \"rgb(245, 221, 218)\",\r\n              onSurfaceVariant: \"rgb(83, 67, 65)\",\r\n              outline: \"rgb(133, 115, 113)\",\r\n              outlineVariant: \"rgb(216, 194, 191)\",\r\n              shadow: \"rgb(0, 0, 0)\",\r\n              scrim: \"rgb(0, 0, 0)\",\r\n              inverseSurface: \"rgb(54, 47, 46)\",\r\n              inverseOnSurface: \"rgb(251, 238, 236)\",\r\n              inversePrimary: \"rgb(255, 180, 171)\",\r\n              elevation: {\r\n                level0: \"transparent\",\r\n                level1: \"rgb(252, 239, 243)\",\r\n                level2: \"rgb(250, 232, 236)\",\r\n                level3: \"rgb(248, 225, 229)\",\r\n                level4: \"rgb(247, 223, 227)\",\r\n                level5: \"rgb(246, 218, 222)\",\r\n              },\r\n              surfaceDisabled: \"rgba(32, 26, 25, 0.12)\",\r\n              onSurfaceDisabled: \"rgba(32, 26, 25, 0.38)\",\r\n              backdrop: \"rgba(59, 45, 43, 0.4)\",\r\n            },\r\n          }\r\n        : {\r\n            colors: {\r\n              primary: \"rgb(255, 180, 171)\",\r\n              onPrimary: \"rgb(105, 0, 5)\",\r\n              primaryContainer: \"rgb(147, 0, 10)\",\r\n              onPrimaryContainer: \"rgb(255, 218, 214)\",\r\n              secondary: \"rgb(231, 189, 183)\",\r\n              onSecondary: \"rgb(68, 41, 38)\",\r\n              secondaryContainer: \"rgb(93, 63, 60)\",\r\n              onSecondaryContainer: \"rgb(255, 218, 214)\",\r\n              tertiary: \"rgb(224, 195, 140)\",\r\n              onTertiary: \"rgb(63, 46, 4)\",\r\n              tertiaryContainer: \"rgb(87, 68, 25)\",\r\n              onTertiaryContainer: \"rgb(253, 223, 166)\",\r\n              error: \"rgb(255, 180, 171)\",\r\n              onError: \"rgb(105, 0, 5)\",\r\n              errorContainer: \"rgb(147, 0, 10)\",\r\n              onErrorContainer: \"rgb(255, 180, 171)\",\r\n              background: \"rgb(32, 26, 25)\",\r\n              onBackground: \"rgb(237, 224, 222)\",\r\n              surface: \"rgb(32, 26, 25)\",\r\n              onSurface: \"rgb(237, 224, 222)\",\r\n              surfaceVariant: \"rgb(83, 67, 65)\",\r\n              onSurfaceVariant: \"rgb(216, 194, 191)\",\r\n              outline: \"rgb(160, 140, 138)\",\r\n              outlineVariant: \"rgb(83, 67, 65)\",\r\n              shadow: \"rgb(0, 0, 0)\",\r\n              scrim: \"rgb(0, 0, 0)\",\r\n              inverseSurface: \"rgb(237, 224, 222)\",\r\n              inverseOnSurface: \"rgb(54, 47, 46)\",\r\n              inversePrimary: \"rgb(189, 16, 22)\",\r\n              elevation: {\r\n                level0: \"transparent\",\r\n                level1: \"rgb(43, 34, 32)\",\r\n                level2: \"rgb(50, 38, 37)\",\r\n                level3: \"rgb(57, 43, 41)\",\r\n                level4: \"rgb(59, 45, 43)\",\r\n                level5: \"rgb(63, 48, 45)\",\r\n              },\r\n              surfaceDisabled: \"rgba(237, 224, 222, 0.12)\",\r\n              onSurfaceDisabled: \"rgba(237, 224, 222, 0.38)\",\r\n              backdrop: \"rgba(59, 45, 43, 0.4)\",\r\n            },\r\n          };\r\n      break;\r\n    case SpellElement.Earth:\r\n      colors = !isDark\r\n        ? {\r\n            colors: {\r\n              primary: \"rgb(152, 71, 23)\",\r\n              onPrimary: \"rgb(255, 255, 255)\",\r\n              primaryContainer: \"rgb(255, 219, 203)\",\r\n              onPrimaryContainer: \"rgb(52, 17, 0)\",\r\n              secondary: \"rgb(118, 88, 73)\",\r\n              onSecondary: \"rgb(255, 255, 255)\",\r\n              secondaryContainer: \"rgb(255, 219, 203)\",\r\n              onSecondaryContainer: \"rgb(44, 22, 11)\",\r\n              tertiary: \"rgb(101, 95, 49)\",\r\n              onTertiary: \"rgb(255, 255, 255)\",\r\n              tertiaryContainer: \"rgb(236, 228, 170)\",\r\n              onTertiaryContainer: \"rgb(31, 28, 0)\",\r\n              error: \"rgb(186, 26, 26)\",\r\n              onError: \"rgb(255, 255, 255)\",\r\n              errorContainer: \"rgb(255, 218, 214)\",\r\n              onErrorContainer: \"rgb(65, 0, 2)\",\r\n              background: \"rgb(255, 251, 255)\",\r\n              onBackground: \"rgb(32, 26, 24)\",\r\n              surface: \"rgb(255, 251, 255)\",\r\n              onSurface: \"rgb(32, 26, 24)\",\r\n              surfaceVariant: \"rgb(244, 222, 213)\",\r\n              onSurfaceVariant: \"rgb(82, 68, 61)\",\r\n              outline: \"rgb(133, 115, 108)\",\r\n              outlineVariant: \"rgb(215, 194, 185)\",\r\n              shadow: \"rgb(0, 0, 0)\",\r\n              scrim: \"rgb(0, 0, 0)\",\r\n              inverseSurface: \"rgb(54, 47, 44)\",\r\n              inverseOnSurface: \"rgb(251, 238, 233)\",\r\n              inversePrimary: \"rgb(255, 182, 146)\",\r\n              elevation: {\r\n                level0: \"transparent\",\r\n                level1: \"rgb(250, 242, 243)\",\r\n                level2: \"rgb(247, 237, 236)\",\r\n                level3: \"rgb(244, 231, 230)\",\r\n                level4: \"rgb(243, 229, 227)\",\r\n                level5: \"rgb(241, 226, 223)\",\r\n              },\r\n              surfaceDisabled: \"rgba(32, 26, 24, 0.12)\",\r\n              onSurfaceDisabled: \"rgba(32, 26, 24, 0.38)\",\r\n              backdrop: \"rgba(59, 46, 39, 0.4)\",\r\n            },\r\n          }\r\n        : {\r\n            colors: {\r\n              primary: \"rgb(255, 182, 146)\",\r\n              onPrimary: \"rgb(85, 32, 0)\",\r\n              primaryContainer: \"rgb(121, 49, 0)\",\r\n              onPrimaryContainer: \"rgb(255, 219, 203)\",\r\n              secondary: \"rgb(230, 190, 172)\",\r\n              onSecondary: \"rgb(67, 42, 30)\",\r\n              secondaryContainer: \"rgb(92, 64, 51)\",\r\n              onSecondaryContainer: \"rgb(255, 219, 203)\",\r\n              tertiary: \"rgb(208, 200, 144)\",\r\n              onTertiary: \"rgb(53, 49, 7)\",\r\n              tertiaryContainer: \"rgb(76, 72, 28)\",\r\n              onTertiaryContainer: \"rgb(236, 228, 170)\",\r\n              error: \"rgb(255, 180, 171)\",\r\n              onError: \"rgb(105, 0, 5)\",\r\n              errorContainer: \"rgb(147, 0, 10)\",\r\n              onErrorContainer: \"rgb(255, 180, 171)\",\r\n              background: \"rgb(32, 26, 24)\",\r\n              onBackground: \"rgb(237, 224, 219)\",\r\n              surface: \"rgb(32, 26, 24)\",\r\n              onSurface: \"rgb(237, 224, 219)\",\r\n              surfaceVariant: \"rgb(82, 68, 61)\",\r\n              onSurfaceVariant: \"rgb(215, 194, 185)\",\r\n              outline: \"rgb(160, 141, 133)\",\r\n              outlineVariant: \"rgb(82, 68, 61)\",\r\n              shadow: \"rgb(0, 0, 0)\",\r\n              scrim: \"rgb(0, 0, 0)\",\r\n              inverseSurface: \"rgb(237, 224, 219)\",\r\n              inverseOnSurface: \"rgb(54, 47, 44)\",\r\n              inversePrimary: \"rgb(152, 71, 23)\",\r\n              elevation: {\r\n                level0: \"transparent\",\r\n                level1: \"rgb(43, 34, 30)\",\r\n                level2: \"rgb(50, 39, 34)\",\r\n                level3: \"rgb(57, 43, 37)\",\r\n                level4: \"rgb(59, 45, 39)\",\r\n                level5: \"rgb(63, 48, 41)\",\r\n              },\r\n              surfaceDisabled: \"rgba(237, 224, 219, 0.12)\",\r\n              onSurfaceDisabled: \"rgba(237, 224, 219, 0.38)\",\r\n              backdrop: \"rgba(59, 46, 39, 0.4)\",\r\n            },\r\n          };\r\n      break;\r\n    case SpellElement.Water:\r\n      colors = !isDark\r\n        ? {\r\n            colors: {\r\n              primary: \"rgb(0, 100, 151)\",\r\n              onPrimary: \"rgb(255, 255, 255)\",\r\n              primaryContainer: \"rgb(204, 229, 255)\",\r\n              onPrimaryContainer: \"rgb(0, 30, 49)\",\r\n              secondary: \"rgb(81, 96, 111)\",\r\n              onSecondary: \"rgb(255, 255, 255)\",\r\n              secondaryContainer: \"rgb(212, 228, 246)\",\r\n              onSecondaryContainer: \"rgb(13, 29, 42)\",\r\n              tertiary: \"rgb(102, 88, 122)\",\r\n              onTertiary: \"rgb(255, 255, 255)\",\r\n              tertiaryContainer: \"rgb(237, 220, 255)\",\r\n              onTertiaryContainer: \"rgb(34, 21, 52)\",\r\n              error: \"rgb(186, 26, 26)\",\r\n              onError: \"rgb(255, 255, 255)\",\r\n              errorContainer: \"rgb(255, 218, 214)\",\r\n              onErrorContainer: \"rgb(65, 0, 2)\",\r\n              background: \"rgb(252, 252, 255)\",\r\n              onBackground: \"rgb(26, 28, 30)\",\r\n              surface: \"rgb(252, 252, 255)\",\r\n              onSurface: \"rgb(26, 28, 30)\",\r\n              surfaceVariant: \"rgb(222, 227, 235)\",\r\n              onSurfaceVariant: \"rgb(66, 71, 78)\",\r\n              outline: \"rgb(114, 120, 126)\",\r\n              outlineVariant: \"rgb(194, 199, 206)\",\r\n              shadow: \"rgb(0, 0, 0)\",\r\n              scrim: \"rgb(0, 0, 0)\",\r\n              inverseSurface: \"rgb(47, 49, 51)\",\r\n              inverseOnSurface: \"rgb(240, 240, 244)\",\r\n              inversePrimary: \"rgb(146, 204, 255)\",\r\n              elevation: {\r\n                level0: \"transparent\",\r\n                level1: \"rgb(239, 244, 250)\",\r\n                level2: \"rgb(232, 240, 247)\",\r\n                level3: \"rgb(224, 235, 244)\",\r\n                level4: \"rgb(222, 234, 243)\",\r\n                level5: \"rgb(217, 231, 240)\",\r\n              },\r\n              surfaceDisabled: \"rgba(26, 28, 30, 0.12)\",\r\n              onSurfaceDisabled: \"rgba(26, 28, 30, 0.38)\",\r\n              backdrop: \"rgba(43, 49, 55, 0.4)\",\r\n            },\r\n          }\r\n        : {\r\n            colors: {\r\n              primary: \"rgb(146, 204, 255)\",\r\n              onPrimary: \"rgb(0, 51, 81)\",\r\n              primaryContainer: \"rgb(0, 75, 115)\",\r\n              onPrimaryContainer: \"rgb(204, 229, 255)\",\r\n              secondary: \"rgb(184, 200, 218)\",\r\n              onSecondary: \"rgb(35, 50, 63)\",\r\n              secondaryContainer: \"rgb(57, 72, 87)\",\r\n              onSecondaryContainer: \"rgb(212, 228, 246)\",\r\n              tertiary: \"rgb(209, 191, 231)\",\r\n              onTertiary: \"rgb(55, 42, 74)\",\r\n              tertiaryContainer: \"rgb(78, 65, 98)\",\r\n              onTertiaryContainer: \"rgb(237, 220, 255)\",\r\n              error: \"rgb(255, 180, 171)\",\r\n              onError: \"rgb(105, 0, 5)\",\r\n              errorContainer: \"rgb(147, 0, 10)\",\r\n              onErrorContainer: \"rgb(255, 180, 171)\",\r\n              background: \"rgb(26, 28, 30)\",\r\n              onBackground: \"rgb(226, 226, 229)\",\r\n              surface: \"rgb(26, 28, 30)\",\r\n              onSurface: \"rgb(226, 226, 229)\",\r\n              surfaceVariant: \"rgb(66, 71, 78)\",\r\n              onSurfaceVariant: \"rgb(194, 199, 206)\",\r\n              outline: \"rgb(140, 145, 152)\",\r\n              outlineVariant: \"rgb(66, 71, 78)\",\r\n              shadow: \"rgb(0, 0, 0)\",\r\n              scrim: \"rgb(0, 0, 0)\",\r\n              inverseSurface: \"rgb(226, 226, 229)\",\r\n              inverseOnSurface: \"rgb(47, 49, 51)\",\r\n              inversePrimary: \"rgb(0, 100, 151)\",\r\n              elevation: {\r\n                level0: \"transparent\",\r\n                level1: \"rgb(32, 37, 41)\",\r\n                level2: \"rgb(36, 42, 48)\",\r\n                level3: \"rgb(39, 47, 55)\",\r\n                level4: \"rgb(40, 49, 57)\",\r\n                level5: \"rgb(43, 53, 62)\",\r\n              },\r\n              surfaceDisabled: \"rgba(226, 226, 229, 0.12)\",\r\n              onSurfaceDisabled: \"rgba(226, 226, 229, 0.38)\",\r\n              backdrop: \"rgba(43, 49, 55, 0.4)\",\r\n            },\r\n          };\r\n      break;\r\n    case SpellElement.Air:\r\n      colors = !isDark\r\n        ? {\r\n            colors: {\r\n              primary: \"rgb(39, 108, 43)\",\r\n              onPrimary: \"rgb(255, 255, 255)\",\r\n              primaryContainer: \"rgb(170, 245, 163)\",\r\n              onPrimaryContainer: \"rgb(0, 34, 4)\",\r\n              secondary: \"rgb(82, 99, 79)\",\r\n              onSecondary: \"rgb(255, 255, 255)\",\r\n              secondaryContainer: \"rgb(213, 232, 206)\",\r\n              onSecondaryContainer: \"rgb(17, 31, 15)\",\r\n              tertiary: \"rgb(56, 101, 106)\",\r\n              onTertiary: \"rgb(255, 255, 255)\",\r\n              tertiaryContainer: \"rgb(188, 235, 240)\",\r\n              onTertiaryContainer: \"rgb(0, 32, 35)\",\r\n              error: \"rgb(186, 26, 26)\",\r\n              onError: \"rgb(255, 255, 255)\",\r\n              errorContainer: \"rgb(255, 218, 214)\",\r\n              onErrorContainer: \"rgb(65, 0, 2)\",\r\n              background: \"rgb(252, 253, 246)\",\r\n              onBackground: \"rgb(26, 28, 25)\",\r\n              surface: \"rgb(252, 253, 246)\",\r\n              onSurface: \"rgb(26, 28, 25)\",\r\n              surfaceVariant: \"rgb(222, 229, 216)\",\r\n              onSurfaceVariant: \"rgb(66, 73, 64)\",\r\n              outline: \"rgb(114, 121, 111)\",\r\n              outlineVariant: \"rgb(194, 201, 189)\",\r\n              shadow: \"rgb(0, 0, 0)\",\r\n              scrim: \"rgb(0, 0, 0)\",\r\n              inverseSurface: \"rgb(47, 49, 45)\",\r\n              inverseOnSurface: \"rgb(240, 241, 235)\",\r\n              inversePrimary: \"rgb(143, 216, 138)\",\r\n              elevation: {\r\n                level0: \"transparent\",\r\n                level1: \"rgb(241, 246, 236)\",\r\n                level2: \"rgb(235, 241, 230)\",\r\n                level3: \"rgb(229, 237, 224)\",\r\n                level4: \"rgb(226, 236, 222)\",\r\n                level5: \"rgb(222, 233, 218)\",\r\n              },\r\n              surfaceDisabled: \"rgba(26, 28, 25, 0.12)\",\r\n              onSurfaceDisabled: \"rgba(26, 28, 25, 0.38)\",\r\n              backdrop: \"rgba(44, 50, 42, 0.4)\",\r\n            },\r\n          }\r\n        : {\r\n            colors: {\r\n              primary: \"rgb(143, 216, 138)\",\r\n              onPrimary: \"rgb(0, 57, 10)\",\r\n              primaryContainer: \"rgb(6, 83, 21)\",\r\n              onPrimaryContainer: \"rgb(170, 245, 163)\",\r\n              secondary: \"rgb(186, 204, 179)\",\r\n              onSecondary: \"rgb(37, 52, 35)\",\r\n              secondaryContainer: \"rgb(59, 75, 56)\",\r\n              onSecondaryContainer: \"rgb(213, 232, 206)\",\r\n              tertiary: \"rgb(160, 207, 212)\",\r\n              onTertiary: \"rgb(0, 54, 59)\",\r\n              tertiaryContainer: \"rgb(31, 77, 82)\",\r\n              onTertiaryContainer: \"rgb(188, 235, 240)\",\r\n              error: \"rgb(255, 180, 171)\",\r\n              onError: \"rgb(105, 0, 5)\",\r\n              errorContainer: \"rgb(147, 0, 10)\",\r\n              onErrorContainer: \"rgb(255, 180, 171)\",\r\n              background: \"rgb(26, 28, 25)\",\r\n              // background: \"rgb(8, 9, 7)\",\r\n              onBackground: \"rgb(226, 227, 221)\",\r\n              surface: \"rgb(26, 28, 25)\",\r\n              onSurface: \"rgb(226, 227, 221)\",\r\n              surfaceVariant: \"rgb(66, 73, 64)\",\r\n              onSurfaceVariant: \"rgb(194, 201, 189)\",\r\n              outline: \"rgb(140, 147, 136)\",\r\n              outlineVariant: \"rgb(66, 73, 64)\",\r\n              shadow: \"rgb(0, 0, 0)\",\r\n              scrim: \"rgb(0, 0, 0)\",\r\n              inverseSurface: \"rgb(226, 227, 221)\",\r\n              inverseOnSurface: \"rgb(47, 49, 45)\",\r\n              inversePrimary: \"rgb(39, 108, 43)\",\r\n              elevation: {\r\n                level0: \"transparent\",\r\n                level1: \"rgb(32, 37, 31)\",\r\n                level2: \"rgb(35, 43, 34)\",\r\n                level3: \"rgb(39, 49, 37)\",\r\n                level4: \"rgb(40, 51, 39)\",\r\n                level5: \"rgb(42, 54, 41)\",\r\n              },\r\n              surfaceDisabled: \"rgba(226, 227, 221, 0.12)\",\r\n              onSurfaceDisabled: \"rgba(226, 227, 221, 0.38)\",\r\n              backdrop: \"rgba(44, 50, 42, 0.4)\",\r\n            },\r\n          };\r\n      break;\r\n    case SpellElement.Poison:\r\n      colors = !isDark\r\n        ? {\r\n            colors: {\r\n              primary: \"rgb(126, 23, 239)\",\r\n              onPrimary: \"rgb(255, 255, 255)\",\r\n              primaryContainer: \"rgb(237, 220, 255)\",\r\n              onPrimaryContainer: \"rgb(40, 0, 86)\",\r\n              secondary: \"rgb(100, 90, 112)\",\r\n              onSecondary: \"rgb(255, 255, 255)\",\r\n              secondaryContainer: \"rgb(235, 221, 247)\",\r\n              onSecondaryContainer: \"rgb(31, 24, 42)\",\r\n              tertiary: \"rgb(127, 82, 91)\",\r\n              onTertiary: \"rgb(255, 255, 255)\",\r\n              tertiaryContainer: \"rgb(255, 217, 223)\",\r\n              onTertiaryContainer: \"rgb(50, 16, 25)\",\r\n              error: \"rgb(186, 26, 26)\",\r\n              onError: \"rgb(255, 255, 255)\",\r\n              errorContainer: \"rgb(255, 218, 214)\",\r\n              onErrorContainer: \"rgb(65, 0, 2)\",\r\n              background: \"rgb(255, 251, 255)\",\r\n              onBackground: \"rgb(29, 27, 30)\",\r\n              surface: \"rgb(255, 251, 255)\",\r\n              onSurface: \"rgb(29, 27, 30)\",\r\n              surfaceVariant: \"rgb(232, 224, 235)\",\r\n              onSurfaceVariant: \"rgb(74, 69, 78)\",\r\n              outline: \"rgb(123, 117, 127)\",\r\n              outlineVariant: \"rgb(203, 196, 207)\",\r\n              shadow: \"rgb(0, 0, 0)\",\r\n              scrim: \"rgb(0, 0, 0)\",\r\n              inverseSurface: \"rgb(50, 47, 51)\",\r\n              inverseOnSurface: \"rgb(245, 239, 244)\",\r\n              inversePrimary: \"rgb(215, 186, 255)\",\r\n              elevation: {\r\n                level0: \"transparent\",\r\n                level1: \"rgb(249, 240, 254)\",\r\n                level2: \"rgb(245, 233, 254)\",\r\n                level3: \"rgb(241, 226, 253)\",\r\n                level4: \"rgb(240, 224, 253)\",\r\n                level5: \"rgb(237, 219, 253)\",\r\n              },\r\n              surfaceDisabled: \"rgba(29, 27, 30, 0.12)\",\r\n              onSurfaceDisabled: \"rgba(29, 27, 30, 0.38)\",\r\n              backdrop: \"rgba(51, 47, 55, 0.4)\",\r\n            },\r\n          }\r\n        : {\r\n            colors: {\r\n              primary: \"rgb(215, 186, 255)\",\r\n              onPrimary: \"rgb(67, 0, 136)\",\r\n              primaryContainer: \"rgb(96, 0, 190)\",\r\n              onPrimaryContainer: \"rgb(237, 220, 255)\",\r\n              secondary: \"rgb(206, 194, 219)\",\r\n              onSecondary: \"rgb(53, 45, 64)\",\r\n              secondaryContainer: \"rgb(76, 67, 87)\",\r\n              onSecondaryContainer: \"rgb(235, 221, 247)\",\r\n              tertiary: \"rgb(241, 183, 194)\",\r\n              onTertiary: \"rgb(75, 37, 46)\",\r\n              tertiaryContainer: \"rgb(100, 59, 68)\",\r\n              onTertiaryContainer: \"rgb(255, 217, 223)\",\r\n              error: \"rgb(255, 180, 171)\",\r\n              onError: \"rgb(105, 0, 5)\",\r\n              errorContainer: \"rgb(147, 0, 10)\",\r\n              onErrorContainer: \"rgb(255, 180, 171)\",\r\n              background: \"rgb(29, 27, 30)\",\r\n              onBackground: \"rgb(231, 225, 230)\",\r\n              surface: \"rgb(29, 27, 30)\",\r\n              onSurface: \"rgb(231, 225, 230)\",\r\n              surfaceVariant: \"rgb(74, 69, 78)\",\r\n              onSurfaceVariant: \"rgb(203, 196, 207)\",\r\n              outline: \"rgb(149, 142, 153)\",\r\n              outlineVariant: \"rgb(74, 69, 78)\",\r\n              shadow: \"rgb(0, 0, 0)\",\r\n              scrim: \"rgb(0, 0, 0)\",\r\n              inverseSurface: \"rgb(231, 225, 230)\",\r\n              inverseOnSurface: \"rgb(50, 47, 51)\",\r\n              inversePrimary: \"rgb(126, 23, 239)\",\r\n              elevation: {\r\n                level0: \"transparent\",\r\n                level1: \"rgb(38, 35, 41)\",\r\n                level2: \"rgb(44, 40, 48)\",\r\n                level3: \"rgb(50, 45, 55)\",\r\n                level4: \"rgb(51, 46, 57)\",\r\n                level5: \"rgb(55, 49, 62)\",\r\n              },\r\n              surfaceDisabled: \"rgba(231, 225, 230, 0.12)\",\r\n              onSurfaceDisabled: \"rgba(231, 225, 230, 0.38)\",\r\n              backdrop: \"rgba(51, 47, 55, 0.4)\",\r\n            },\r\n          };\r\n      break;\r\n    case SpellElement.Mind:\r\n      colors = !isDark\r\n        ? {\r\n            colors: {\r\n              primary: \"rgb(0, 106, 106)\",\r\n              onPrimary: \"rgb(255, 255, 255)\",\r\n              primaryContainer: \"rgb(73, 249, 249)\",\r\n              onPrimaryContainer: \"rgb(0, 32, 32)\",\r\n              secondary: \"rgb(74, 99, 99)\",\r\n              onSecondary: \"rgb(255, 255, 255)\",\r\n              secondaryContainer: \"rgb(204, 232, 231)\",\r\n              onSecondaryContainer: \"rgb(5, 31, 31)\",\r\n              tertiary: \"rgb(75, 96, 124)\",\r\n              onTertiary: \"rgb(255, 255, 255)\",\r\n              tertiaryContainer: \"rgb(211, 228, 255)\",\r\n              onTertiaryContainer: \"rgb(4, 28, 53)\",\r\n              error: \"rgb(186, 26, 26)\",\r\n              onError: \"rgb(255, 255, 255)\",\r\n              errorContainer: \"rgb(255, 218, 214)\",\r\n              onErrorContainer: \"rgb(65, 0, 2)\",\r\n              background: \"rgb(250, 253, 252)\",\r\n              onBackground: \"rgb(25, 28, 28)\",\r\n              surface: \"rgb(250, 253, 252)\",\r\n              onSurface: \"rgb(25, 28, 28)\",\r\n              surfaceVariant: \"rgb(218, 229, 228)\",\r\n              onSurfaceVariant: \"rgb(63, 73, 72)\",\r\n              outline: \"rgb(111, 121, 121)\",\r\n              outlineVariant: \"rgb(190, 201, 200)\",\r\n              shadow: \"rgb(0, 0, 0)\",\r\n              scrim: \"rgb(0, 0, 0)\",\r\n              inverseSurface: \"rgb(45, 49, 49)\",\r\n              inverseOnSurface: \"rgb(239, 241, 240)\",\r\n              inversePrimary: \"rgb(0, 221, 221)\",\r\n              elevation: {\r\n                level0: \"transparent\",\r\n                level1: \"rgb(238, 246, 245)\",\r\n                level2: \"rgb(230, 241, 240)\",\r\n                level3: \"rgb(223, 237, 236)\",\r\n                level4: \"rgb(220, 235, 235)\",\r\n                level5: \"rgb(215, 232, 232)\",\r\n              },\r\n              surfaceDisabled: \"rgba(25, 28, 28, 0.12)\",\r\n              onSurfaceDisabled: \"rgba(25, 28, 28, 0.38)\",\r\n              backdrop: \"rgba(41, 50, 50, 0.4)\",\r\n            },\r\n          }\r\n        : {\r\n            colors: {\r\n              primary: \"rgb(0, 221, 221)\",\r\n              onPrimary: \"rgb(0, 55, 55)\",\r\n              primaryContainer: \"rgb(0, 79, 79)\",\r\n              onPrimaryContainer: \"rgb(73, 249, 249)\",\r\n              secondary: \"rgb(176, 204, 203)\",\r\n              onSecondary: \"rgb(27, 53, 52)\",\r\n              secondaryContainer: \"rgb(50, 75, 75)\",\r\n              onSecondaryContainer: \"rgb(204, 232, 231)\",\r\n              tertiary: \"rgb(179, 200, 232)\",\r\n              onTertiary: \"rgb(28, 49, 75)\",\r\n              tertiaryContainer: \"rgb(51, 72, 99)\",\r\n              onTertiaryContainer: \"rgb(211, 228, 255)\",\r\n              error: \"rgb(255, 180, 171)\",\r\n              onError: \"rgb(105, 0, 5)\",\r\n              errorContainer: \"rgb(147, 0, 10)\",\r\n              onErrorContainer: \"rgb(255, 180, 171)\",\r\n              background: \"rgb(25, 28, 28)\",\r\n              onBackground: \"rgb(224, 227, 226)\",\r\n              surface: \"rgb(25, 28, 28)\",\r\n              onSurface: \"rgb(224, 227, 226)\",\r\n              surfaceVariant: \"rgb(63, 73, 72)\",\r\n              onSurfaceVariant: \"rgb(190, 201, 200)\",\r\n              outline: \"rgb(136, 147, 146)\",\r\n              outlineVariant: \"rgb(63, 73, 72)\",\r\n              shadow: \"rgb(0, 0, 0)\",\r\n              scrim: \"rgb(0, 0, 0)\",\r\n              inverseSurface: \"rgb(224, 227, 226)\",\r\n              inverseOnSurface: \"rgb(45, 49, 49)\",\r\n              inversePrimary: \"rgb(0, 106, 106)\",\r\n              elevation: {\r\n                level0: \"transparent\",\r\n                level1: \"rgb(24, 38, 38)\",\r\n                level2: \"rgb(23, 43, 43)\",\r\n                level3: \"rgb(22, 49, 49)\",\r\n                level4: \"rgb(22, 51, 51)\",\r\n                level5: \"rgb(22, 55, 55)\",\r\n              },\r\n              surfaceDisabled: \"rgba(224, 227, 226, 0.12)\",\r\n              onSurfaceDisabled: \"rgba(224, 227, 226, 0.38)\",\r\n              backdrop: \"rgba(41, 50, 50, 0.4)\",\r\n            },\r\n          };\r\n      break;\r\n    case SpellElement.Life:\r\n      colors = !isDark\r\n        ? {\r\n            colors: {\r\n              primary: \"rgb(74, 103, 11)\",\r\n              onPrimary: \"rgb(255, 255, 255)\",\r\n              primaryContainer: \"rgb(202, 239, 135)\",\r\n              onPrimaryContainer: \"rgb(19, 31, 0)\",\r\n              secondary: \"rgb(89, 98, 72)\",\r\n              onSecondary: \"rgb(255, 255, 255)\",\r\n              secondaryContainer: \"rgb(221, 230, 198)\",\r\n              onSecondaryContainer: \"rgb(23, 30, 10)\",\r\n              tertiary: \"rgb(57, 102, 97)\",\r\n              onTertiary: \"rgb(255, 255, 255)\",\r\n              tertiaryContainer: \"rgb(188, 236, 229)\",\r\n              onTertiaryContainer: \"rgb(0, 32, 29)\",\r\n              error: \"rgb(186, 26, 26)\",\r\n              onError: \"rgb(255, 255, 255)\",\r\n              errorContainer: \"rgb(255, 218, 214)\",\r\n              onErrorContainer: \"rgb(65, 0, 2)\",\r\n              background: \"rgb(254, 252, 244)\",\r\n              onBackground: \"rgb(27, 28, 23)\",\r\n              surface: \"rgb(254, 252, 244)\",\r\n              onSurface: \"rgb(27, 28, 23)\",\r\n              surfaceVariant: \"rgb(226, 228, 212)\",\r\n              onSurfaceVariant: \"rgb(69, 72, 61)\",\r\n              outline: \"rgb(117, 120, 107)\",\r\n              outlineVariant: \"rgb(197, 200, 185)\",\r\n              shadow: \"rgb(0, 0, 0)\",\r\n              scrim: \"rgb(0, 0, 0)\",\r\n              inverseSurface: \"rgb(48, 49, 44)\",\r\n              inverseOnSurface: \"rgb(242, 241, 233)\",\r\n              inversePrimary: \"rgb(175, 211, 110)\",\r\n              elevation: {\r\n                level0: \"transparent\",\r\n                level1: \"rgb(245, 245, 232)\",\r\n                level2: \"rgb(240, 240, 225)\",\r\n                level3: \"rgb(234, 236, 218)\",\r\n                level4: \"rgb(232, 234, 216)\",\r\n                level5: \"rgb(229, 231, 211)\",\r\n              },\r\n              surfaceDisabled: \"rgba(27, 28, 23, 0.12)\",\r\n              onSurfaceDisabled: \"rgba(27, 28, 23, 0.38)\",\r\n              backdrop: \"rgba(47, 50, 39, 0.4)\",\r\n            },\r\n          }\r\n        : {\r\n            colors: {\r\n              primary: \"rgb(175, 211, 110)\",\r\n              onPrimary: \"rgb(36, 54, 0)\",\r\n              primaryContainer: \"rgb(54, 78, 0)\",\r\n              onPrimaryContainer: \"rgb(202, 239, 135)\",\r\n              secondary: \"rgb(193, 202, 171)\",\r\n              onSecondary: \"rgb(43, 51, 29)\",\r\n              secondaryContainer: \"rgb(66, 74, 50)\",\r\n              onSecondaryContainer: \"rgb(221, 230, 198)\",\r\n              tertiary: \"rgb(160, 208, 201)\",\r\n              onTertiary: \"rgb(1, 55, 51)\",\r\n              tertiaryContainer: \"rgb(31, 78, 73)\",\r\n              onTertiaryContainer: \"rgb(188, 236, 229)\",\r\n              error: \"rgb(255, 180, 171)\",\r\n              onError: \"rgb(105, 0, 5)\",\r\n              errorContainer: \"rgb(147, 0, 10)\",\r\n              onErrorContainer: \"rgb(255, 180, 171)\",\r\n              background: \"rgb(27, 28, 23)\",\r\n              onBackground: \"rgb(228, 227, 219)\",\r\n              surface: \"rgb(27, 28, 23)\",\r\n              onSurface: \"rgb(228, 227, 219)\",\r\n              surfaceVariant: \"rgb(69, 72, 61)\",\r\n              onSurfaceVariant: \"rgb(197, 200, 185)\",\r\n              outline: \"rgb(143, 146, 132)\",\r\n              outlineVariant: \"rgb(69, 72, 61)\",\r\n              shadow: \"rgb(0, 0, 0)\",\r\n              scrim: \"rgb(0, 0, 0)\",\r\n              inverseSurface: \"rgb(228, 227, 219)\",\r\n              inverseOnSurface: \"rgb(48, 49, 44)\",\r\n              inversePrimary: \"rgb(74, 103, 11)\",\r\n              elevation: {\r\n                level0: \"transparent\",\r\n                level1: \"rgb(34, 37, 27)\",\r\n                level2: \"rgb(39, 43, 30)\",\r\n                level3: \"rgb(43, 48, 33)\",\r\n                level4: \"rgb(45, 50, 33)\",\r\n                level5: \"rgb(48, 54, 35)\",\r\n              },\r\n              surfaceDisabled: \"rgba(228, 227, 219, 0.12)\",\r\n              onSurfaceDisabled: \"rgba(228, 227, 219, 0.38)\",\r\n              backdrop: \"rgba(46, 50, 39, 0.4)\",\r\n            },\r\n          };\r\n      break;\r\n    case SpellElement.Electric:\r\n      colors = !isDark\r\n        ? {\r\n            colors: {\r\n              primary: \"rgb(121, 89, 0)\",\r\n              onPrimary: \"rgb(255, 255, 255)\",\r\n              primaryContainer: \"rgb(255, 223, 160)\",\r\n              onPrimaryContainer: \"rgb(38, 26, 0)\",\r\n              secondary: \"rgb(107, 92, 63)\",\r\n              onSecondary: \"rgb(255, 255, 255)\",\r\n              secondaryContainer: \"rgb(245, 224, 187)\",\r\n              onSecondaryContainer: \"rgb(36, 26, 4)\",\r\n              tertiary: \"rgb(74, 101, 70)\",\r\n              onTertiary: \"rgb(255, 255, 255)\",\r\n              tertiaryContainer: \"rgb(204, 235, 196)\",\r\n              onTertiaryContainer: \"rgb(8, 32, 8)\",\r\n              error: \"rgb(186, 26, 26)\",\r\n              onError: \"rgb(255, 255, 255)\",\r\n              errorContainer: \"rgb(255, 218, 214)\",\r\n              onErrorContainer: \"rgb(65, 0, 2)\",\r\n              background: \"rgb(255, 251, 255)\",\r\n              onBackground: \"rgb(30, 27, 22)\",\r\n              surface: \"rgb(255, 251, 255)\",\r\n              onSurface: \"rgb(30, 27, 22)\",\r\n              surfaceVariant: \"rgb(237, 225, 207)\",\r\n              onSurfaceVariant: \"rgb(77, 70, 57)\",\r\n              outline: \"rgb(127, 118, 103)\",\r\n              outlineVariant: \"rgb(208, 197, 180)\",\r\n              shadow: \"rgb(0, 0, 0)\",\r\n              scrim: \"rgb(0, 0, 0)\",\r\n              inverseSurface: \"rgb(52, 48, 42)\",\r\n              inverseOnSurface: \"rgb(248, 239, 231)\",\r\n              inversePrimary: \"rgb(248, 189, 42)\",\r\n              elevation: {\r\n                level0: \"transparent\",\r\n                level1: \"rgb(248, 243, 242)\",\r\n                level2: \"rgb(244, 238, 235)\",\r\n                level3: \"rgb(240, 233, 227)\",\r\n                level4: \"rgb(239, 232, 224)\",\r\n                level5: \"rgb(236, 228, 219)\",\r\n              },\r\n              surfaceDisabled: \"rgba(30, 27, 22, 0.12)\",\r\n              onSurfaceDisabled: \"rgba(30, 27, 22, 0.38)\",\r\n              backdrop: \"rgba(54, 48, 36, 0.4)\",\r\n            },\r\n          }\r\n        : {\r\n            colors: {\r\n              primary: \"rgb(248, 189, 42)\",\r\n              onPrimary: \"rgb(64, 45, 0)\",\r\n              primaryContainer: \"rgb(92, 67, 0)\",\r\n              onPrimaryContainer: \"rgb(255, 223, 160)\",\r\n              secondary: \"rgb(216, 196, 160)\",\r\n              onSecondary: \"rgb(59, 47, 21)\",\r\n              secondaryContainer: \"rgb(83, 69, 42)\",\r\n              onSecondaryContainer: \"rgb(245, 224, 187)\",\r\n              tertiary: \"rgb(177, 207, 169)\",\r\n              onTertiary: \"rgb(29, 54, 27)\",\r\n              tertiaryContainer: \"rgb(51, 77, 48)\",\r\n              onTertiaryContainer: \"rgb(204, 235, 196)\",\r\n              error: \"rgb(255, 180, 171)\",\r\n              onError: \"rgb(105, 0, 5)\",\r\n              errorContainer: \"rgb(147, 0, 10)\",\r\n              onErrorContainer: \"rgb(255, 180, 171)\",\r\n              background: \"rgb(30, 27, 22)\",\r\n              onBackground: \"rgb(233, 225, 216)\",\r\n              surface: \"rgb(30, 27, 22)\",\r\n              onSurface: \"rgb(233, 225, 216)\",\r\n              surfaceVariant: \"rgb(77, 70, 57)\",\r\n              onSurfaceVariant: \"rgb(208, 197, 180)\",\r\n              outline: \"rgb(153, 143, 128)\",\r\n              outlineVariant: \"rgb(77, 70, 57)\",\r\n              shadow: \"rgb(0, 0, 0)\",\r\n              scrim: \"rgb(0, 0, 0)\",\r\n              inverseSurface: \"rgb(233, 225, 216)\",\r\n              inverseOnSurface: \"rgb(52, 48, 42)\",\r\n              inversePrimary: \"rgb(121, 89, 0)\",\r\n              elevation: {\r\n                level0: \"transparent\",\r\n                level1: \"rgb(41, 35, 23)\",\r\n                level2: \"rgb(47, 40, 24)\",\r\n                level3: \"rgb(54, 45, 24)\",\r\n                level4: \"rgb(56, 46, 24)\",\r\n                level5: \"rgb(61, 50, 25)\",\r\n              },\r\n              surfaceDisabled: \"rgba(233, 225, 216, 0.12)\",\r\n              onSurfaceDisabled: \"rgba(233, 225, 216, 0.38)\",\r\n              backdrop: \"rgba(54, 48, 36, 0.4)\",\r\n            },\r\n          };\r\n      break;\r\n    case SpellElement.Time:\r\n      colors = !isDark\r\n        ? {\r\n            colors: {\r\n              primary: \"rgb(183, 7, 106)\",\r\n              onPrimary: \"rgb(255, 255, 255)\",\r\n              primaryContainer: \"rgb(255, 217, 228)\",\r\n              onPrimaryContainer: \"rgb(62, 0, 32)\",\r\n              secondary: \"rgb(115, 86, 96)\",\r\n              onSecondary: \"rgb(255, 255, 255)\",\r\n              secondaryContainer: \"rgb(255, 217, 228)\",\r\n              onSecondaryContainer: \"rgb(42, 21, 29)\",\r\n              tertiary: \"rgb(125, 86, 54)\",\r\n              onTertiary: \"rgb(255, 255, 255)\",\r\n              tertiaryContainer: \"rgb(255, 220, 195)\",\r\n              onTertiaryContainer: \"rgb(47, 21, 0)\",\r\n              error: \"rgb(186, 26, 26)\",\r\n              onError: \"rgb(255, 255, 255)\",\r\n              errorContainer: \"rgb(255, 218, 214)\",\r\n              onErrorContainer: \"rgb(65, 0, 2)\",\r\n              background: \"rgb(255, 251, 255)\",\r\n              onBackground: \"rgb(32, 26, 28)\",\r\n              surface: \"rgb(255, 251, 255)\",\r\n              onSurface: \"rgb(32, 26, 28)\",\r\n              surfaceVariant: \"rgb(242, 221, 226)\",\r\n              onSurfaceVariant: \"rgb(81, 67, 71)\",\r\n              outline: \"rgb(131, 115, 119)\",\r\n              outlineVariant: \"rgb(213, 194, 198)\",\r\n              shadow: \"rgb(0, 0, 0)\",\r\n              scrim: \"rgb(0, 0, 0)\",\r\n              inverseSurface: \"rgb(53, 47, 48)\",\r\n              inverseOnSurface: \"rgb(250, 238, 240)\",\r\n              inversePrimary: \"rgb(255, 176, 203)\",\r\n              elevation: {\r\n                level0: \"transparent\",\r\n                level1: \"rgb(251, 239, 248)\",\r\n                level2: \"rgb(249, 232, 243)\",\r\n                level3: \"rgb(247, 224, 239)\",\r\n                level4: \"rgb(246, 222, 237)\",\r\n                level5: \"rgb(245, 217, 234)\",\r\n              },\r\n              surfaceDisabled: \"rgba(32, 26, 28, 0.12)\",\r\n              onSurfaceDisabled: \"rgba(32, 26, 28, 0.38)\",\r\n              backdrop: \"rgba(57, 45, 49, 0.4)\",\r\n            },\r\n          }\r\n        : {\r\n            colors: {\r\n              primary: \"rgb(255, 176, 203)\",\r\n              onPrimary: \"rgb(100, 0, 55)\",\r\n              primaryContainer: \"rgb(141, 0, 80)\",\r\n              onPrimaryContainer: \"rgb(255, 217, 228)\",\r\n              secondary: \"rgb(226, 189, 200)\",\r\n              onSecondary: \"rgb(66, 41, 50)\",\r\n              secondaryContainer: \"rgb(90, 63, 72)\",\r\n              onSecondaryContainer: \"rgb(255, 217, 228)\",\r\n              tertiary: \"rgb(240, 188, 149)\",\r\n              onTertiary: \"rgb(72, 41, 13)\",\r\n              tertiaryContainer: \"rgb(98, 63, 33)\",\r\n              onTertiaryContainer: \"rgb(255, 220, 195)\",\r\n              error: \"rgb(255, 180, 171)\",\r\n              onError: \"rgb(105, 0, 5)\",\r\n              errorContainer: \"rgb(147, 0, 10)\",\r\n              onErrorContainer: \"rgb(255, 180, 171)\",\r\n              background: \"rgb(32, 26, 28)\",\r\n              onBackground: \"rgb(235, 224, 225)\",\r\n              surface: \"rgb(32, 26, 28)\",\r\n              onSurface: \"rgb(235, 224, 225)\",\r\n              surfaceVariant: \"rgb(81, 67, 71)\",\r\n              onSurfaceVariant: \"rgb(213, 194, 198)\",\r\n              outline: \"rgb(158, 140, 145)\",\r\n              outlineVariant: \"rgb(81, 67, 71)\",\r\n              shadow: \"rgb(0, 0, 0)\",\r\n              scrim: \"rgb(0, 0, 0)\",\r\n              inverseSurface: \"rgb(235, 224, 225)\",\r\n              inverseOnSurface: \"rgb(53, 47, 48)\",\r\n              inversePrimary: \"rgb(183, 7, 106)\",\r\n              elevation: {\r\n                level0: \"transparent\",\r\n                level1: \"rgb(43, 34, 37)\",\r\n                level2: \"rgb(50, 38, 42)\",\r\n                level3: \"rgb(57, 43, 47)\",\r\n                level4: \"rgb(59, 44, 49)\",\r\n                level5: \"rgb(63, 47, 53)\",\r\n              },\r\n              surfaceDisabled: \"rgba(235, 224, 225, 0.12)\",\r\n              onSurfaceDisabled: \"rgba(235, 224, 225, 0.38)\",\r\n              backdrop: \"rgba(57, 45, 49, 0.4)\",\r\n            },\r\n          };\r\n      break;\r\n    case SpellElement.Space:\r\n      colors = !isDark\r\n        ? {\r\n            colors: {\r\n              primary: \"rgb(56, 88, 182)\",\r\n              onPrimary: \"rgb(255, 255, 255)\",\r\n              primaryContainer: \"rgb(220, 225, 255)\",\r\n              onPrimaryContainer: \"rgb(0, 22, 78)\",\r\n              secondary: \"rgb(89, 94, 114)\",\r\n              onSecondary: \"rgb(255, 255, 255)\",\r\n              secondaryContainer: \"rgb(222, 225, 249)\",\r\n              onSecondaryContainer: \"rgb(22, 27, 44)\",\r\n              tertiary: \"rgb(116, 84, 112)\",\r\n              onTertiary: \"rgb(255, 255, 255)\",\r\n              tertiaryContainer: \"rgb(255, 215, 246)\",\r\n              onTertiaryContainer: \"rgb(44, 18, 42)\",\r\n              error: \"rgb(186, 26, 26)\",\r\n              onError: \"rgb(255, 255, 255)\",\r\n              errorContainer: \"rgb(255, 218, 214)\",\r\n              onErrorContainer: \"rgb(65, 0, 2)\",\r\n              background: \"rgb(254, 251, 255)\",\r\n              onBackground: \"rgb(27, 27, 31)\",\r\n              surface: \"rgb(254, 251, 255)\",\r\n              onSurface: \"rgb(27, 27, 31)\",\r\n              surfaceVariant: \"rgb(226, 225, 236)\",\r\n              onSurfaceVariant: \"rgb(69, 70, 79)\",\r\n              outline: \"rgb(118, 118, 128)\",\r\n              outlineVariant: \"rgb(198, 198, 208)\",\r\n              shadow: \"rgb(0, 0, 0)\",\r\n              scrim: \"rgb(0, 0, 0)\",\r\n              inverseSurface: \"rgb(48, 48, 52)\",\r\n              inverseOnSurface: \"rgb(242, 240, 244)\",\r\n              inversePrimary: \"rgb(181, 196, 255)\",\r\n              elevation: {\r\n                level0: \"transparent\",\r\n                level1: \"rgb(244, 243, 251)\",\r\n                level2: \"rgb(238, 238, 249)\",\r\n                level3: \"rgb(232, 233, 247)\",\r\n                level4: \"rgb(230, 231, 246)\",\r\n                level5: \"rgb(226, 228, 245)\",\r\n              },\r\n              surfaceDisabled: \"rgba(27, 27, 31, 0.12)\",\r\n              onSurfaceDisabled: \"rgba(27, 27, 31, 0.38)\",\r\n              backdrop: \"rgba(46, 48, 56, 0.4)\",\r\n            },\r\n          }\r\n        : {\r\n            colors: {\r\n              primary: \"rgb(181, 196, 255)\",\r\n              onPrimary: \"rgb(0, 40, 124)\",\r\n              primaryContainer: \"rgb(27, 63, 157)\",\r\n              onPrimaryContainer: \"rgb(220, 225, 255)\",\r\n              secondary: \"rgb(193, 197, 221)\",\r\n              onSecondary: \"rgb(43, 48, 66)\",\r\n              secondaryContainer: \"rgb(65, 70, 89)\",\r\n              onSecondaryContainer: \"rgb(222, 225, 249)\",\r\n              tertiary: \"rgb(227, 186, 219)\",\r\n              onTertiary: \"rgb(67, 39, 64)\",\r\n              tertiaryContainer: \"rgb(91, 61, 87)\",\r\n              onTertiaryContainer: \"rgb(255, 215, 246)\",\r\n              error: \"rgb(255, 180, 171)\",\r\n              onError: \"rgb(105, 0, 5)\",\r\n              errorContainer: \"rgb(147, 0, 10)\",\r\n              onErrorContainer: \"rgb(255, 180, 171)\",\r\n              background: \"rgb(27, 27, 31)\",\r\n              onBackground: \"rgb(228, 226, 230)\",\r\n              surface: \"rgb(27, 27, 31)\",\r\n              onSurface: \"rgb(228, 226, 230)\",\r\n              surfaceVariant: \"rgb(69, 70, 79)\",\r\n              onSurfaceVariant: \"rgb(198, 198, 208)\",\r\n              outline: \"rgb(143, 144, 154)\",\r\n              outlineVariant: \"rgb(69, 70, 79)\",\r\n              shadow: \"rgb(0, 0, 0)\",\r\n              scrim: \"rgb(0, 0, 0)\",\r\n              inverseSurface: \"rgb(228, 226, 230)\",\r\n              inverseOnSurface: \"rgb(48, 48, 52)\",\r\n              inversePrimary: \"rgb(56, 88, 182)\",\r\n              elevation: {\r\n                level0: \"transparent\",\r\n                level1: \"rgb(35, 35, 42)\",\r\n                level2: \"rgb(39, 41, 49)\",\r\n                level3: \"rgb(44, 46, 56)\",\r\n                level4: \"rgb(46, 47, 58)\",\r\n                level5: \"rgb(49, 51, 62)\",\r\n              },\r\n              surfaceDisabled: \"rgba(228, 226, 230, 0.12)\",\r\n              onSurfaceDisabled: \"rgba(228, 226, 230, 0.38)\",\r\n              backdrop: \"rgba(47, 48, 56, 0.4)\",\r\n            },\r\n          };\r\n      break;\r\n    // Death and Holy might need tweaking\r\n    case SpellElement.Death:\r\n      const deathColors = clone(\r\n        getThemeByElementAndDarkModeUnmemoized(SpellElement.Poison, isDark),\r\n      );\r\n      for (let colorToChange of isDark\r\n        ? COLORS_TO_REGENERATE_DARK\r\n        : COLORS_TO_REGENERATE_LIGHT) {\r\n        deathColors.colors[colorToChange] = generateDeathColor(\r\n          deathColors.colors[colorToChange],\r\n          isDark,\r\n        );\r\n      }\r\n      for (let colorToChange of TO_GRAYSCALE_ONLY) {\r\n        deathColors.colors[colorToChange] = color(\r\n          deathColors.colors[colorToChange],\r\n        )\r\n          .grayscale()\r\n          .hexa();\r\n      }\r\n      colors = deathColors;\r\n      break;\r\n    case SpellElement.Holy:\r\n      const holyColors = clone(\r\n        getThemeByElementAndDarkModeUnmemoized(SpellElement.Electric, isDark),\r\n      );\r\n      for (let colorToChange of isDark\r\n        ? COLORS_TO_REGENERATE_DARK\r\n        : COLORS_TO_REGENERATE_LIGHT) {\r\n        holyColors.colors[colorToChange] = generateHolyColor(\r\n          holyColors.colors[colorToChange],\r\n          isDark,\r\n        );\r\n      }\r\n      for (let colorToChange of TO_GRAYSCALE_ONLY) {\r\n        holyColors.colors[colorToChange] = color(\r\n          holyColors.colors[colorToChange],\r\n        )\r\n          .grayscale()\r\n          .hexa();\r\n      }\r\n      colors = holyColors;\r\n      break;\r\n  }\r\n\r\n  const baseTheme = isDark ? MD3DarkTheme : MD3LightTheme;\r\n  return {\r\n    ...baseTheme,\r\n    colors: {\r\n      ...baseTheme.colors,\r\n      ...colors.colors,\r\n      error: isDark ? \"rgb(246, 26, 26)\" : \"rgb(246, 26, 26)\",\r\n      hpBarForeground: isDark ? \"rgb(226, 0, 0)\" : \"rgb(255, 36, 36)\",\r\n      hpBarBackground: isDark ? \"rgb(100, 0, 0)\" : \"rgb(120, 0, 0)\",\r\n      background: isDark\r\n        ? // @ts-ignore Type not declared\r\n          color(colors.colors.background).darken(0.5).hexa()\r\n        : // @ts-ignore Type not declared\r\n          colors.colors.background,\r\n    },\r\n    fonts: {\r\n      ...baseTheme.fonts,\r\n      labelSmall: {\r\n        ...baseTheme.fonts.labelSmall,\r\n        letterSpacing: 0,\r\n      },\r\n      labelMedium: {\r\n        ...baseTheme.fonts.labelMedium,\r\n        letterSpacing: 0,\r\n      },\r\n      bodySmall: {\r\n        ...baseTheme.fonts.bodySmall,\r\n        letterSpacing: 0,\r\n      },\r\n      bodyMedium: {\r\n        ...baseTheme.fonts.bodyMedium,\r\n        letterSpacing: 0,\r\n      },\r\n    },\r\n    roundness: 2,\r\n  };\r\n}\r\n\r\nconst getThemeByElementAndDarkMode = memoize(\r\n  getThemeByElementAndDarkModeUnmemoized,\r\n);\r\n\r\nexport const getThemeWithOverriddenOnError = memoize((theme, onError) => {\r\n  const newTheme = clone(theme);\r\n  newTheme.colors.onError = onError;\r\n  return newTheme;\r\n});\r\n\r\nexport { getThemeByElementAndDarkMode };\r\n","import { hasFlag, hasWorldFlag, setFlag, setWorldFlag } from \"../../Flags\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { DataStore } from \"../../generic/DataStore\";\r\nimport { getMaxOfMaxPrimaryElementLevels } from \"../../spells/Elements\";\r\nimport { Dungeon } from \"./Dungeon\";\r\nimport { DungeonFloor } from \"./DungeonFloor\";\r\n\r\nconst Dungeons = new DataStore<Dungeon>();\r\nconst DungeonFloors = new DataStore<DungeonFloor>();\r\n\r\nexport { Dungeons, DungeonFloors };\r\n\r\nexport function getUnlockedDungeons(state: GameState): Dungeon[] {\r\n  return Dungeons.getAll().filter((dungeon) => dungeon.isUnlocked(state));\r\n}\r\n\r\nexport function isDungeonFloorCompletedThisRun(\r\n  state: GameState,\r\n  floor: DungeonFloor | string,\r\n): boolean {\r\n  return hasFlag(\r\n    state,\r\n    (typeof floor === \"string\" ? floor : floor.getId()) +\r\n      \"_dungeon_floor_completed\",\r\n  );\r\n}\r\n\r\nexport function isDungeonFloorEverCompleted(\r\n  state: GameState,\r\n  floor: DungeonFloor | string,\r\n): boolean {\r\n  return hasWorldFlag(\r\n    state,\r\n    (typeof floor === \"string\" ? floor : floor.getId()) +\r\n      \"_dungeon_floor_completed\",\r\n  );\r\n}\r\n\r\nexport function setDungeonFloorCompleted(\r\n  state: GameState,\r\n  floorId: string,\r\n): GameState {\r\n  state = setFlag(floorId + \"_dungeon_floor_completed\")(state);\r\n  state.run.lastDungeonFloorCompleted = floorId;\r\n  return setWorldFlag(floorId + \"_dungeon_floor_completed\")(state);\r\n}\r\n\r\nexport function minMPLRecommendation(state: GameState): number {\r\n  const unlockedDungeons = getUnlockedDungeons(state);\r\n  const floors = unlockedDungeons\r\n    .map((dungeon) =>\r\n      dungeon\r\n        .getDungeonFloors()\r\n        .filter(\r\n          (floor) => floor.isUnlocked(state) && floor.isMainStoryDungeonFloor(),\r\n        ),\r\n    )\r\n    .flat();\r\n  const maxLowRecommendation = Math.max(\r\n    ...floors.map((floor) => floor.getMinimumMPLRecommendation() ?? 0),\r\n  );\r\n  return maxLowRecommendation;\r\n}\r\n\r\nexport function mplIsTooLow(state: GameState): boolean {\r\n  const maxLowRecommendation = minMPLRecommendation(state);\r\n  const currentMPL = getMaxOfMaxPrimaryElementLevels(state);\r\n  return currentMPL < maxLowRecommendation;\r\n}\r\n\r\nexport function maxMPLRecommendation(state: GameState): number {\r\n  const unlockedDungeons = getUnlockedDungeons(state);\r\n  const floors = unlockedDungeons\r\n    .map((dungeon) =>\r\n      dungeon\r\n        .getDungeonFloors()\r\n        .filter(\r\n          (floor) => floor.isUnlocked(state) && floor.isMainStoryDungeonFloor(),\r\n        ),\r\n    )\r\n    .flat();\r\n  const maxHighRecommendation = Math.max(\r\n    ...floors.map((floor) => floor.getMaximumMPLRecommendation() ?? Infinity),\r\n  );\r\n  return maxHighRecommendation;\r\n}\r\n\r\nexport function mplIsTooHigh(state: GameState): boolean {\r\n  const minHighRecommendation = maxMPLRecommendation(state);\r\n  const currentMPL = getMaxOfMaxPrimaryElementLevels(state);\r\n  return currentMPL > minHighRecommendation;\r\n}\r\n","import { t } from \"../../utils/I18n\";\r\nimport { hasFlag, hasWorldFlag, setFlag, setWorldFlag } from \"../Flags\";\r\nimport { GameState } from \"../GameState\";\r\nimport {\r\n  SpellElement,\r\n  getElementLevel,\r\n  getUnlockedElements,\r\n} from \"../spells/Elements\";\r\n\r\nexport enum StorylineStatus {\r\n  HIDDEN = \"HIDDEN\",\r\n  LOCKED = \"LOCKED\",\r\n  UNLOCKED = \"UNLOCKED\",\r\n  HINT_REVEALED = \"HINT_REVEALED\",\r\n  COMPLETED = \"COMPLETED\",\r\n  BONUS_ACTIVE = \"BONUS_ACTIVE\",\r\n}\r\n\r\nexport const STORYLINE_STATUS_ORDER = [\r\n  StorylineStatus.LOCKED,\r\n  StorylineStatus.UNLOCKED,\r\n  StorylineStatus.HINT_REVEALED,\r\n  StorylineStatus.COMPLETED,\r\n  StorylineStatus.BONUS_ACTIVE,\r\n];\r\n\r\nexport function translateStorylineStatus(status: StorylineStatus): string {\r\n  switch (status) {\r\n    case StorylineStatus.HIDDEN:\r\n      return t(\"Hidden\");\r\n    case StorylineStatus.LOCKED:\r\n      return t(\"Undiscovered\");\r\n    case StorylineStatus.UNLOCKED:\r\n      return t(\"Discoverable\");\r\n    case StorylineStatus.HINT_REVEALED:\r\n      return t(\"Hint Available\");\r\n    case StorylineStatus.COMPLETED:\r\n      return t(\"Completed\");\r\n    case StorylineStatus.BONUS_ACTIVE:\r\n      return t(\"Bonus Active\");\r\n  }\r\n}\r\n\r\nexport class Storyline {\r\n  id: string;\r\n  name: string;\r\n  // Order semantics\r\n  // Increment by 10 per storyline \"group\" and by 1 per outcome on that\r\n  // storyline.\r\n  order: number;\r\n  mindRequirementForHint: number;\r\n  hintDescription: (state: GameState) => string;\r\n  getBonusDescription: (state: GameState) => string;\r\n  isHintUnlockable: (state: GameState) => boolean;\r\n  isHidden?: (state: GameState) => boolean;\r\n\r\n  constructor(\r\n    id: string,\r\n    name: string,\r\n    order: number,\r\n    mindRequirementForHint: number,\r\n    hintDescription: string | ((state: GameState) => string),\r\n    getBonusDescription: string | ((state: GameState) => string),\r\n    isHintUnlockable: (state: GameState) => boolean,\r\n    isHidden?: (state: GameState) => boolean,\r\n  ) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.order = order;\r\n    this.mindRequirementForHint = mindRequirementForHint;\r\n    this.hintDescription =\r\n      typeof hintDescription === \"string\"\r\n        ? (state) => hintDescription\r\n        : hintDescription;\r\n    this.getBonusDescription =\r\n      typeof getBonusDescription === \"string\"\r\n        ? (state) => getBonusDescription\r\n        : getBonusDescription;\r\n    this.isHintUnlockable = isHintUnlockable;\r\n    this.isHidden = isHidden ?? ((_state) => false);\r\n  }\r\n\r\n  getId(): string {\r\n    return this.id;\r\n  }\r\n\r\n  getName(): string {\r\n    return this.name;\r\n  }\r\n\r\n  getCompletedFlag(): string {\r\n    return \"storyline_\" + this.getId() + \"_completed\";\r\n  }\r\n\r\n  isCompleted(state: GameState): boolean {\r\n    return hasWorldFlag(state, \"storyline_\" + this.getId() + \"_completed\");\r\n  }\r\n\r\n  isCompletedThisRun(state: GameState): boolean {\r\n    return hasFlag(state, \"storyline_\" + this.getId() + \"_completed\");\r\n  }\r\n\r\n  isBonusActive(state: GameState): boolean {\r\n    return hasWorldFlag(state, \"storyline_\" + this.getId() + \"_bonus_active\");\r\n  }\r\n\r\n  isHintRevealed(state: GameState): boolean {\r\n    return hasWorldFlag(state, \"storyline_\" + this.getId() + \"_hint_revealed\");\r\n  }\r\n\r\n  complete(state: GameState): GameState {\r\n    state = setFlag(\"storyline_\" + this.getId() + \"_completed\")(state);\r\n    return setWorldFlag(\"storyline_\" + this.getId() + \"_completed\")(state);\r\n  }\r\n\r\n  activateBonus(state: GameState): GameState {\r\n    state = setFlag(\"storyline_\" + this.getId() + \"_bonus_active\")(state);\r\n    return setWorldFlag(\"storyline_\" + this.getId() + \"_bonus_active\")(state);\r\n  }\r\n\r\n  revealHint(state: GameState): GameState {\r\n    state = setFlag(\"storyline_\" + this.getId() + \"_hint_revealed\")(state);\r\n    return setWorldFlag(\"storyline_\" + this.getId() + \"_hint_revealed\")(state);\r\n  }\r\n\r\n  shouldRevealHint(state: GameState): boolean {\r\n    return (\r\n      !this.isHintRevealed(state) &&\r\n      this.isHintUnlockable(state) &&\r\n      hasWorldFlag(state, \"storyline_diviningTheWorld_bonus_active\") &&\r\n      getUnlockedElements(state).includes(SpellElement.Mind) &&\r\n      getElementLevel(state, SpellElement.Mind) >= this.mindRequirementForHint\r\n    );\r\n  }\r\n\r\n  getStatus(state: GameState): StorylineStatus {\r\n    if (this.isHidden(state)) {\r\n      return StorylineStatus.HIDDEN;\r\n    }\r\n    if (this.isBonusActive(state)) {\r\n      return StorylineStatus.BONUS_ACTIVE;\r\n    }\r\n    if (this.isCompleted(state)) {\r\n      return StorylineStatus.COMPLETED;\r\n    }\r\n    if (this.isHintRevealed(state)) {\r\n      return StorylineStatus.HINT_REVEALED;\r\n    }\r\n    if (this.isHintUnlockable(state)) {\r\n      return StorylineStatus.UNLOCKED;\r\n    }\r\n    return StorylineStatus.LOCKED;\r\n  }\r\n}\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { isDungeonFloorEverCompleted } from \"../../../exploration/dungeons/Dungeons\";\r\nimport { Storyline } from \"../../../storylines/Storyline\";\r\n\r\nconst storyline = new Storyline(\r\n  \"schematics\",\r\n  t(\"Schematics\"),\r\n  425,\r\n  25,\r\n  t('Defeat at least 15 enemies in the Exploration area \"Temple of Life\"'),\r\n  t(\"Unlock item quality feature (combine items)\"),\r\n  (state) => isDungeonFloorEverCompleted(state, \"templeOfLife\"),\r\n);\r\n\r\nexport { storyline as Schematics };\r\n","export enum Flag {\r\n  // Progression\r\n  ChannelingUnlocked = \"ChannelingUnlocked\",\r\n  ManaSpoutsUnlocked = \"ManaSpoutsUnlocked\",\r\n  ManaShardsUnlocked = \"ManaShardsUnlocked\",\r\n  StoragesUnlocked = \"StoragesUnlocked\",\r\n  CatalystsUnlocked = \"CatalystsUnlocked\",\r\n  StudyUnlocked = \"StudyUnlocked\",\r\n  TransmutationUnlocked = \"TransmutationUnlocked\",\r\n  WizardsUnlocked = \"WizardsUnlocked\",\r\n  SaleStallsUnlocked = \"SaleStallsUnlocked\",\r\n  ResearchersUnlocked = \"ResearchersUnlocked\",\r\n  LandPurchaseUnlocked = \"LandPurchaseUnlocked\",\r\n  ExplorationUnlocked = \"ExplorationUnlocked\",\r\n  RestOfTrainingUnlocked = \"RestOfTrainingUnlocked\",\r\n  EnhancementsUnlocked = \"EnhancementsUnlocked\",\r\n  SewersUnlocked = \"SewersUnlocked\",\r\n  MonstruariumsUnlocked = \"MonstruariumsUnlocked\",\r\n  SynchroUnlocked = \"SynchroUnlocked\",\r\n  VastDesertUnlocked = \"VastDesertUnlocked\",\r\n  ManaClustersUnlocked = \"ManaClustersUnlocked\",\r\n  DeepCavernsUnlocked = \"LifeCavernsUnlocked\",\r\n  FamiliarsUnlocked = \"FamiliarsUnlocked\",\r\n  ResearcherCooperation = \"ResearcherCooperation\",\r\n  LostForestUnlocked = \"LostForestUnlocked\",\r\n  MountainPassUnlocked = \"MountainPassUnlocked\",\r\n  TheSchoolUnlocked = \"TheSchoolUnlocked\",\r\n  SchoolGroundsFirstBossDefeated = \"SchoolGroundsFirstBossDefeated\",\r\n  AberrantRealmUnlocked = \"AberrantRealmUnlocked\",\r\n  HeadmasterFollowing = \"HeadmasterFollowing\",\r\n  MagicalResearchCardObtained = \"MagicalResearchCardObtained\",\r\n  FortressUnlocked = \"FortressUnlocked\",\r\n  DragonShrineUnlocked = \"DragonShrineUnlocked\",\r\n  SecretPrisonUnlocked = \"SecretPrisonUnlocked\",\r\n  SecretPrisonFirstBossDefeated = \"SecretPrisonFirstBossDefeated\",\r\n  PlainsUnlocked = \"PlainsUnlocked\",\r\n  DivineScriptReceived = \"DivineScriptReceived\",\r\n  HiredWizardConsumedStone = \"HiredWizardConsumedStone\",\r\n  DeflectiveShieldCreated = \"DeflectiveShieldCreated\",\r\n  CrossroadsOfWorldsUnlocked = \"CrossroadsOfWorldsUnlocked\",\r\n\r\n  // Other\r\n  SomeonesTrashTreasureGranted = \"SomeonesTrashTreasureGranted\",\r\n  AncientPowerStorylineFinished = \"AncientPowerStorylineFinished\",\r\n  SphinxUnlocked = \"SphinxUnlocked\",\r\n  WizardsConditionsUnlocked = \"WizardsConditionsUnlocked\",\r\n  HeadInstructorDefeated = \"HeadInstructorDefeated\",\r\n  MasteryDungeonUnlocked = \"MasteryDungeonUnlocked\",\r\n  ItemQualityCombinationUnlocked = \"ItemQualityCombinationUnlocked\",\r\n  SewageSystemMakesAll = \"SewageSystemMakesAll\",\r\n  AutoPurchaseUnlocked = \"AutoPurchaseUnlocked\",\r\n  PermaCastUnlocked = \"PermaCastUnlocked\",\r\n  RitualsUnlocked = \"RitualsUnlocked\",\r\n  ChallengesUnlocked = \"ChallengesUnlocked\",\r\n  AssignedWizard = \"AssignedWizard\",\r\n  Ending2CompletedFirstTime = \"Ending2CompletedFirstTime\",\r\n  Ending3CompletedFirstTime = \"Ending3CompletedFirstTime\",\r\n  UniversalChallengeLastStretch = \"UniversalChallengeLastStretch\",\r\n  UniversalChallengeCompletedFirstTime = \"UniversalChallengeCompletedFirstTime\",\r\n  CreatorPath = \"CreatorPath\",\r\n  EverUsedSynchro = \"EverUsedSynchro\",\r\n  SpellcraftUnlocked = \"SpellcraftUnlocked\",\r\n}\r\n","import { Schematics } from \"../events/storyline/cavern/SchematicsStoryline\";\r\nimport { Flag } from \"../Flag\";\r\nimport { hasEverHadFlag, hasFlag } from \"../Flags\";\r\nimport { GameState } from \"../GameState\";\r\nimport { DataStore } from \"../generic/DataStore\";\r\nimport { Item } from \"./Item\";\r\n\r\nconst Items = new DataStore<Item>();\r\n\r\nexport { Items };\r\n\r\nexport function isInventoryUnlocked(state: GameState): boolean {\r\n  return hasFlag(state, Flag.TransmutationUnlocked);\r\n}\r\n\r\nexport function isInventoryEverUnlocked(state: GameState): boolean {\r\n  return hasEverHadFlag(state, Flag.TransmutationUnlocked);\r\n}\r\n\r\nexport function isCraftingUnlocked(state: GameState): boolean {\r\n  return hasFlag(state, Flag.TransmutationUnlocked);\r\n}\r\n\r\nexport function isItemQualityUnlocked(state: GameState): boolean {\r\n  return Schematics.isBonusActive(state);\r\n}\r\n\r\nexport function hasEverUnlockedCrafting(state: GameState): boolean {\r\n  return hasEverHadFlag(state, Flag.TransmutationUnlocked);\r\n}\r\n\r\nexport function combineAll(state: GameState): GameState {\r\n  let combined;\r\n  do {\r\n    combined = false;\r\n    const inventory = state.run.inventory;\r\n    for (let stack of inventory) {\r\n      const item = Items.getById(stack.itemOccurrence.itemId);\r\n      const combineActions = item.getCombineActions(\r\n        state,\r\n        stack.itemOccurrence.params,\r\n      );\r\n      if (combineActions.length > 0) {\r\n        const combineAllAction = combineActions[combineActions.length - 1];\r\n        if (combineAllAction.isEnabled) {\r\n          state = combineAllAction.transform(state);\r\n          combined = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  } while (combined);\r\n  return state;\r\n}\r\n\r\nexport function sellLowQualityItems(state: GameState): GameState {\r\n  const inventory = state.run.inventory;\r\n  let sold = false;\r\n  do {\r\n    sold = false;\r\n    for (let stack of inventory) {\r\n      const item = Items.getById(stack.itemOccurrence.itemId);\r\n      const hasHigherQuality =\r\n        state.run.inventory.filter(\r\n          (itemStack) =>\r\n            itemStack.itemOccurrence.itemId == item.getId() &&\r\n            (itemStack.itemOccurrence.params?.itemQuality ?? 0) >\r\n              (stack.itemOccurrence.params?.itemQuality ?? 0),\r\n        ).length > 0;\r\n\r\n      if (hasHigherQuality) {\r\n        const saleActions = item.getSaleActions(\r\n          state,\r\n          stack.itemOccurrence.params,\r\n        );\r\n        const saleAction = saleActions[saleActions.length - 1];\r\n        if (saleAction?.isEnabled) {\r\n          state = saleAction.transform(state);\r\n          sold = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  } while (sold);\r\n  return state;\r\n}\r\n","import { clone } from \"../../utils/CoreUtils\";\r\nimport { setFlag } from \"../Flags\";\r\nimport { GameState, GameStateTransform } from \"../GameState\";\r\nimport { addGameStateListener } from \"../GameStateListeners\";\r\nimport { DataStore } from \"../generic/DataStore\";\r\nimport { Item, ItemOccurrence, ItemStack } from \"./Item\";\r\nimport { isInventoryUnlocked, Items } from \"./Items\";\r\nimport { ItemTagEnum } from \"./ItemTagEnum\";\r\n\r\nfunction getItemOccurrenceIndex(\r\n  itemOccurrence: ItemOccurrence,\r\n  state: GameState,\r\n): number {\r\n  const itemOccurrenceParamsJSON = JSON.stringify(itemOccurrence.params);\r\n  return state.run.inventory.findIndex((itemStack) => {\r\n    return (\r\n      itemStack.itemOccurrence.itemId == itemOccurrence.itemId &&\r\n      itemOccurrenceParamsJSON ==\r\n        JSON.stringify(itemStack.itemOccurrence.params)\r\n    );\r\n  });\r\n}\r\n\r\nexport function isItemOccurrenceEqual(\r\n  itemOccurrenceA: ItemOccurrence,\r\n  itemOccurrenceB: ItemOccurrence,\r\n) {\r\n  return (\r\n    itemOccurrenceA?.itemId == itemOccurrenceB?.itemId &&\r\n    JSON.stringify(itemOccurrenceA?.params) ==\r\n      JSON.stringify(itemOccurrenceB?.params)\r\n  );\r\n}\r\n\r\nexport function getItemStackFromInventory(\r\n  state: GameState,\r\n  itemOccurrence: ItemOccurrence,\r\n): ItemStack | null {\r\n  const index = getItemOccurrenceIndex(itemOccurrence, state);\r\n  if (index === -1) {\r\n    return null;\r\n  }\r\n  return state.run.inventory[index];\r\n}\r\n\r\nexport const AddToInventoryForFirstTimeListeners =\r\n  new DataStore<GameStateTransform>();\r\n\r\nexport function addToInventory(\r\n  itemOccurrence: ItemOccurrence,\r\n  amount: number,\r\n  state: GameState,\r\n): GameState {\r\n  if (!state.world.itemsEverAddedToInventory[itemOccurrence.itemId]) {\r\n    state.world.itemsEverAddedToInventory[itemOccurrence.itemId] = true;\r\n    AddToInventoryForFirstTimeListeners.getAll().forEach((transform) => {\r\n      state = transform(state);\r\n    });\r\n  }\r\n  const previousIndex = getItemOccurrenceIndex(itemOccurrence, state);\r\n\r\n  if (previousIndex >= 0) {\r\n    state.run.inventory[previousIndex] = {\r\n      itemOccurrence,\r\n      amount: state.run.inventory[previousIndex].amount + amount,\r\n    };\r\n    return state;\r\n  }\r\n\r\n  state.run.inventory.push({\r\n    itemOccurrence,\r\n    amount,\r\n  });\r\n\r\n  return state;\r\n}\r\n\r\nexport function removeFromInventory(\r\n  itemOccurrence: ItemOccurrence,\r\n  amount: number,\r\n  state: GameState,\r\n): GameState {\r\n  const previousIndex = getItemOccurrenceIndex(itemOccurrence, state);\r\n  if (previousIndex < 0) {\r\n    return state;\r\n  }\r\n\r\n  const newAmount = state.run.inventory[previousIndex].amount - amount;\r\n  if (newAmount > 0) {\r\n    state.run.inventory[previousIndex] = {\r\n      itemOccurrence,\r\n      amount: newAmount,\r\n    };\r\n  } else {\r\n    state.run.inventory.splice(previousIndex, 1);\r\n  }\r\n  return state;\r\n}\r\n\r\nexport function getAmountOfItem(\r\n  itemOccurrence: ItemOccurrence,\r\n  state: GameState,\r\n): number {\r\n  const index = getItemOccurrenceIndex(itemOccurrence, state);\r\n  if (index === -1) {\r\n    return 0;\r\n  }\r\n  return state.run.inventory[index].amount;\r\n}\r\n\r\nexport function getTotalAmountOfItem(item: Item, state: GameState): number {\r\n  return state.run.inventory\r\n    .filter((itemStack) => itemStack.itemOccurrence.itemId == item.getId())\r\n    .reduce((count, current) => count + current.amount, 0);\r\n}\r\n\r\nexport function getTotalAmountOfItemWithMinimumQuality(\r\n  item: Item,\r\n  minimumQuality: number,\r\n  state: GameState,\r\n): number {\r\n  return state.run.inventory\r\n    .filter(\r\n      (itemStack) =>\r\n        itemStack.itemOccurrence.itemId == item.getId() &&\r\n        (itemStack.itemOccurrence.params.itemQuality ?? 0) >= minimumQuality,\r\n    )\r\n    .reduce((count, current) => count + current.amount, 0);\r\n}\r\n\r\nexport function removeFromInventoryWithAnyParams(\r\n  item: Item,\r\n  amount: number,\r\n  state: GameState,\r\n): GameState {\r\n  const oldRunState = state.run.inventory;\r\n  state.run.inventory = clone(state.run.inventory);\r\n\r\n  while (amount > 0) {\r\n    const inventory = state.run.inventory;\r\n    const firstIndex = inventory.findIndex(\r\n      (itemStack) => itemStack.itemOccurrence.itemId == item.getId(),\r\n    );\r\n    if (firstIndex < 0) {\r\n      // Abort\r\n      state.run.inventory = oldRunState;\r\n      return state;\r\n    }\r\n    const itemAmount = inventory[firstIndex].amount;\r\n    state = removeFromInventory(\r\n      inventory[firstIndex].itemOccurrence,\r\n      Math.min(itemAmount, amount),\r\n      state,\r\n    );\r\n    amount -= itemAmount;\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nexport function removeFromInventoryWithMinimumQuality(\r\n  item: Item,\r\n  amount: number,\r\n  minimumQuality: number,\r\n  state: GameState,\r\n): GameState {\r\n  const oldRunState = state.run.inventory;\r\n  state.run.inventory = clone(state.run.inventory);\r\n\r\n  while (amount > 0) {\r\n    const matchingItems = state.run.inventory.filter(\r\n      (itemStack) =>\r\n        itemStack.itemOccurrence.itemId == item.getId() &&\r\n        (itemStack.itemOccurrence.params.itemQuality ?? 0) >= minimumQuality,\r\n    );\r\n    const sortedByQuality = matchingItems.sort(\r\n      (a, b) =>\r\n        (a.itemOccurrence.params.itemQuality ?? 0) -\r\n        (b.itemOccurrence.params.itemQuality ?? 0),\r\n    );\r\n    if (sortedByQuality.length <= 0) {\r\n      // Abort\r\n      state.run.inventory = oldRunState;\r\n      return state;\r\n    }\r\n    const itemAmount = sortedByQuality[0].amount;\r\n    state = removeFromInventory(\r\n      sortedByQuality[0].itemOccurrence,\r\n      Math.min(itemAmount, amount),\r\n      state,\r\n    );\r\n    amount -= itemAmount;\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\n// Place items with those tags in order\r\nconst ITEM_TAG_ORDER = [\"Consumable\", \"Hand\", \"Body\", \"Accessory\"];\r\n// Then if two items have the same tags from the above list, put those who\r\n// have this tag in the back of that sub-category\r\nconst ITEM_TAG_LAST_ORDER = [\"Material\"];\r\n\r\nfunction hasTag(\r\n  itemOccurrence: ItemOccurrence,\r\n  state: GameState,\r\n  tag: string,\r\n): boolean {\r\n  const item = Items.getById(itemOccurrence.itemId);\r\n  return item.getTags().includes(tag as ItemTagEnum);\r\n}\r\n\r\nexport function sortInventory(state: GameState): GameState {\r\n  state.run.inventory.sort((a, b) => {\r\n    for (let tag of ITEM_TAG_ORDER) {\r\n      const aHasTag = hasTag(a.itemOccurrence, state, tag);\r\n      const bHasTag = hasTag(b.itemOccurrence, state, tag);\r\n      if (aHasTag && !bHasTag) {\r\n        return -1;\r\n      }\r\n      if (bHasTag && !aHasTag) {\r\n        return 1;\r\n      }\r\n    }\r\n    for (let tag of ITEM_TAG_LAST_ORDER) {\r\n      const aHasTag = hasTag(a.itemOccurrence, state, tag);\r\n      const bHasTag = hasTag(b.itemOccurrence, state, tag);\r\n      if (aHasTag && !bHasTag) {\r\n        return 1;\r\n      }\r\n      if (bHasTag && !aHasTag) {\r\n        return -1;\r\n      }\r\n    }\r\n    return 0;\r\n  });\r\n  return state;\r\n}\r\n\r\nexport function loadInventoryListener() {\r\n  addGameStateListener(\"InventoryUnlockerListener\", (newState) => {\r\n    if (newState.run.inventory.length > 0 && !isInventoryUnlocked(newState)) {\r\n      return setFlag(\"new_inventory_unlocked\");\r\n    }\r\n  });\r\n}\r\n","import { t } from \"../../utils/I18n\";\r\n\r\nexport enum AttackTarget {\r\n  Player = \"Player\",\r\n  Enemy = \"Enemy\",\r\n  Familiar = \"Familiar\",\r\n}\r\n\r\nexport function translateAttackTarget(target: AttackTarget): string {\r\n  switch (target) {\r\n    case AttackTarget.Player:\r\n      return t(\"Player\");\r\n    case AttackTarget.Enemy:\r\n      return t(\"Enemy\");\r\n    case AttackTarget.Familiar:\r\n      return t(\"Familiar\");\r\n  }\r\n}\r\n","import memoize from \"sonic-memoize\";\r\nimport { valuesOf } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { hasFlag } from \"../Flags\";\r\nimport { GameState } from \"../GameState\";\r\nimport {\r\n  applyTransformations,\r\n  explainTransformationsText,\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { AttackTarget } from \"./AttackTarget\";\r\n\r\nexport enum CombatStat {\r\n  MaxHP = \"MaxHP\",\r\n  Attack = \"Attack\",\r\n  AttackDelay = \"AttackDelay\",\r\n  Defense = \"Defense\",\r\n  HPRegen = \"HPRegen\",\r\n  Dodge = \"Dodge\",\r\n  Accuracy = \"Accuracy\",\r\n  Crit = \"Crit\",\r\n}\r\n\r\nconst BASE_VALUES: Record<CombatStat, number> = {\r\n  MaxHP: 60,\r\n  Attack: 5,\r\n  Defense: 0,\r\n  AttackDelay: 2.0,\r\n  HPRegen: 0.0033,\r\n  Dodge: 100,\r\n  Accuracy: 100,\r\n  Crit: 0,\r\n};\r\n\r\nexport function calculatePlayerMaxHP(state: GameState) {\r\n  return calculatePlayerCombatStat(state, CombatStat.MaxHP);\r\n}\r\n\r\nexport function calculatePlayerAttack(state: GameState) {\r\n  return calculatePlayerCombatStat(state, CombatStat.Attack);\r\n}\r\n\r\nexport function calculatePlayerAttackDelaySec(state: GameState) {\r\n  return calculatePlayerCombatStat(state, CombatStat.AttackDelay);\r\n}\r\n\r\nexport function calculatePlayerDefense(state: GameState) {\r\n  return calculatePlayerCombatStat(state, CombatStat.Defense);\r\n}\r\n\r\nexport function calculatePlayerHPRegenRatioPerSec(state: GameState) {\r\n  return calculatePlayerCombatStat(state, CombatStat.HPRegen);\r\n}\r\n\r\nexport function calculatePlayerDodgePoints(state: GameState) {\r\n  return calculatePlayerCombatStat(state, CombatStat.Dodge);\r\n}\r\n\r\nexport function calculatePlayerAccuracyPoints(state: GameState) {\r\n  return calculatePlayerCombatStat(state, CombatStat.Accuracy);\r\n}\r\n\r\nexport function calculatePlayerCritPoints(state: GameState) {\r\n  return calculatePlayerCombatStat(state, CombatStat.Crit);\r\n}\r\n\r\nconst playerStatTags = memoize((stat) => [AttackTarget.Player, stat]);\r\n\r\nexport function calculatePlayerCombatStat(state: GameState, stat: CombatStat) {\r\n  return getCachedCombatStat(state, AttackTarget.Player, stat, (state) =>\r\n    applyTransformations(playerStatTags(stat), state, BASE_VALUES[stat]),\r\n  );\r\n}\r\n\r\nexport function getCachedCombatStat(\r\n  state: GameState,\r\n  target: AttackTarget,\r\n  stat: CombatStat,\r\n  fn: (state: GameState) => number,\r\n  familiarId?: string,\r\n  level?: number,\r\n): number {\r\n  if (target == AttackTarget.Familiar) {\r\n    // Familiars have an extra level of indirection because there are many familiars\r\n    let collection = state.temp.combatStatCache[target][stat];\r\n    if (collection == null) {\r\n      state.temp.combatStatCache[target][stat] = {};\r\n    }\r\n    let value = state.temp.combatStatCache[target][stat][familiarId];\r\n    if (value == null || value.level != level) {\r\n      value = { value: fn(state), level: level };\r\n      state.temp.combatStatCache[target][stat][familiarId] = value;\r\n    }\r\n    return value.value;\r\n  } else {\r\n    let value = state.temp.combatStatCache[target][stat];\r\n    if (value == null) {\r\n      value = fn(state);\r\n      state.temp.combatStatCache[target][stat] = value;\r\n    }\r\n    return value;\r\n  }\r\n}\r\n\r\nexport function clearCombatStatCache(\r\n  state: GameState,\r\n  target?: AttackTarget,\r\n  stat?: CombatStat,\r\n) {\r\n  if (target != null) {\r\n    if (stat != null) {\r\n      delete state.temp.combatStatCache[target][stat];\r\n    } else {\r\n      for (let stat of valuesOf(CombatStat)) {\r\n        state = clearCombatStatCache(state, target, stat);\r\n      }\r\n    }\r\n  } else {\r\n    for (let target of valuesOf(AttackTarget)) {\r\n      state = clearCombatStatCache(state, target, stat);\r\n    }\r\n  }\r\n  return state;\r\n}\r\n\r\nexport function explainPlayerCombatStat(\r\n  state: GameState,\r\n  stat: CombatStat,\r\n  explainParams?: Record<string, any>,\r\n) {\r\n  return explainTransformationsText(\r\n    playerStatTags(stat),\r\n    state,\r\n    BASE_VALUES[stat],\r\n    explainParams,\r\n  );\r\n}\r\n\r\nregisterTransformation(\r\n  [\r\n    [AttackTarget.Player, CombatStat.MaxHP],\r\n    [AttackTarget.Player, CombatStat.HPRegen],\r\n  ],\r\n  \"DebugInvincibility\",\r\n  t(\"Debug invincibility\"),\r\n  TransformationType.Addition,\r\n  (state) => {\r\n    if (hasFlag(state, \"debug_invincibility\")) {\r\n      return 99999999;\r\n    }\r\n    return 0;\r\n  },\r\n);\r\n\r\nregisterTransformation(\r\n  [[AttackTarget.Player, CombatStat.Attack]],\r\n  \"DebugInsvincibility\",\r\n  t(\"Debug invincibility attack\"),\r\n  TransformationType.Addition,\r\n  (state) => {\r\n    if (hasFlag(state, \"debug_invincibility\")) {\r\n      return 99999999999;\r\n    }\r\n    return 0;\r\n  },\r\n);\r\n","import { GameStateTransform } from \"../GameState\";\r\nimport { DataStore } from \"../generic/DataStore\";\r\nimport { Identifiable } from \"../generic/Identifiable\";\r\n\r\nexport type OfflineTickTransform = (\r\n  secsPassed: number,\r\n) => GameStateTransform | null | undefined | void;\r\n\r\nexport class OfflineTickListener implements Identifiable {\r\n  id: string;\r\n  listener: OfflineTickTransform;\r\n\r\n  constructor(id: string, listener: OfflineTickTransform) {\r\n    this.id = id;\r\n    this.listener = listener;\r\n  }\r\n\r\n  getId(): string {\r\n    return this.id;\r\n  }\r\n\r\n  getListener(): OfflineTickTransform {\r\n    return this.listener;\r\n  }\r\n}\r\n\r\nconst OfflineTickListeners = new DataStore<OfflineTickListener>();\r\n\r\nexport { OfflineTickListeners };\r\n","import { GameStateTransform } from \"../GameState\";\r\nimport { DataStore } from \"../generic/DataStore\";\r\nimport { Identifiable } from \"../generic/Identifiable\";\r\n\r\nexport type WarpTimeTransform = (\r\n  secsPassed: number,\r\n) => GameStateTransform | null | undefined | void;\r\n\r\nexport class WarpTimeListener implements Identifiable {\r\n  id: string;\r\n  listener: WarpTimeTransform;\r\n\r\n  constructor(id: string, listener: WarpTimeTransform) {\r\n    this.id = id;\r\n    this.listener = listener;\r\n  }\r\n\r\n  getId(): string {\r\n    return this.id;\r\n  }\r\n\r\n  getListener(): WarpTimeTransform {\r\n    return this.listener;\r\n  }\r\n}\r\n\r\nconst WarpTimeListeners = new DataStore<WarpTimeListener>();\r\n\r\nexport { WarpTimeListeners };\r\n","import memoize from \"sonic-memoize\";\r\nimport { keysOf } from \"../../utils/CoreUtils\";\r\nimport { GameState, GameStateTransform } from \"../GameState\";\r\nimport { applyAllTransforms } from \"../GameStateListeners\";\r\nimport { applyTransformations } from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { OfflineTickListeners } from \"./OfflineTickListeners\";\r\nimport { WarpTimeListeners } from \"./WarpTimeListeners\";\r\n\r\ntype TimeTickListener = (\r\n  state: GameState,\r\n  timeElapsedSec: number,\r\n  isWarp: boolean,\r\n) => GameState;\r\n\r\nconst listeners: Record<\r\n  string,\r\n  { listener: TimeTickListener; priority: number }\r\n> = {};\r\n\r\nexport function nextFrame() {\r\n  return new Promise(function (resolve, reject) {\r\n    requestAnimationFrame(function () {\r\n      resolve(null);\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n *\r\n * @param id\r\n * @param listener\r\n * @param priority Default priority is 0. Higher values run later. Lower values run earlier.\r\n */\r\nexport function registerTimeTickListener(\r\n  id: string,\r\n  listener: TimeTickListener,\r\n  priority?: number,\r\n) {\r\n  listeners[id] = { listener, priority: priority ?? 0 };\r\n}\r\n\r\nconst sortedListeners = memoize(() =>\r\n  keysOf(listeners)\r\n    .sort((idA, idB) => listeners[idA].priority - listeners[idB].priority)\r\n    .map((listenerId) => listeners[listenerId].listener),\r\n);\r\n\r\nconst gameSpeedTags = [TransformationTags.GameSpeed];\r\nexport function processTimeTick(\r\n  this: any,\r\n  timeElapsedSec: number,\r\n  isWarp: boolean,\r\n): GameStateTransform {\r\n  return (state) => {\r\n    const speedMultiplier = applyTransformations(gameSpeedTags, state, 1.0, {\r\n      isWarp: isWarp,\r\n    });\r\n    const timeElapsedSecAfterTransform = timeElapsedSec * speedMultiplier;\r\n    sortedListeners().forEach((listener) => {\r\n      state = listener(state, timeElapsedSecAfterTransform, isWarp);\r\n    });\r\n    return state;\r\n  };\r\n}\r\n\r\nconst WARP_TIME_PROCESSING_CONFIG_DEFAULT = {\r\n  secsPerTick: 0.25,\r\n};\r\n\r\nlet warpTimeProcessingConfig = WARP_TIME_PROCESSING_CONFIG_DEFAULT;\r\n\r\nexport function setWarpTimeSecsPerTick(secsPerTick: number): void {\r\n  warpTimeProcessingConfig = { secsPerTick: secsPerTick };\r\n}\r\n\r\nexport async function processOfflineTicks(\r\n  initialState: GameState,\r\n  secsTotal: number,\r\n  lastProcessedTime: number,\r\n  setPlayerState: (state: GameState) => void,\r\n): Promise<void> {\r\n  let currentState = initialState;\r\n  currentState.run.lastProcessedTime = lastProcessedTime;\r\n\r\n  OfflineTickListeners.getAll().forEach((listener) => {\r\n    const transform = listener.getListener()(secsTotal);\r\n    if (transform) {\r\n      currentState = transform(currentState);\r\n    }\r\n  });\r\n\r\n  setPlayerState(currentState);\r\n}\r\n\r\nexport async function processWarpTime(\r\n  initialState: GameState,\r\n  lastProcessedTime: () => number,\r\n  onLoadingProgress: (secsProcessedSoFar: number, ticksTotal: number) => void,\r\n  setPlayerState: (state: GameState) => void,\r\n): Promise<void> {\r\n  warpTimeProcessingConfig = WARP_TIME_PROCESSING_CONFIG_DEFAULT;\r\n  const secsTotal = initialState.run.warpTimeSecs;\r\n  let secsProcessedSoFar = 0;\r\n  let currentState = initialState;\r\n  onLoadingProgress(secsProcessedSoFar, secsTotal);\r\n  let ticksProcessedSoFar = 0;\r\n  while (secsProcessedSoFar < secsTotal) {\r\n    const speedMultiplier = applyTransformations(\r\n      gameSpeedTags,\r\n      currentState,\r\n      1.0,\r\n      { isWarp: true },\r\n    );\r\n    const secsPerTick =\r\n      warpTimeProcessingConfig.secsPerTick / Math.min(5, speedMultiplier);\r\n    const secsToProcess = Math.min(secsPerTick, secsTotal - secsProcessedSoFar);\r\n    currentState = applyAllTransforms(\r\n      currentState,\r\n      processTimeTick(secsToProcess, true),\r\n    );\r\n    secsProcessedSoFar += secsToProcess;\r\n    ticksProcessedSoFar += 1;\r\n    if ((ticksProcessedSoFar - 1) % 100 == 0) {\r\n      onLoadingProgress(secsProcessedSoFar, secsTotal);\r\n      await nextFrame();\r\n    }\r\n  }\r\n  currentState.run.lastProcessedTime = lastProcessedTime();\r\n  currentState.run.warpTimeSecs = 0;\r\n\r\n  WarpTimeListeners.getAll().forEach((listener) => {\r\n    const transform = listener.getListener()(secsTotal);\r\n    if (transform) {\r\n      currentState = transform(currentState);\r\n    }\r\n  });\r\n\r\n  setPlayerState(currentState);\r\n  onLoadingProgress(secsTotal, secsTotal);\r\n}\r\n","import { GameState } from \"../GameState\";\r\nimport { applyTransformations } from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { registerTimeTickListener } from \"./TimeTick\";\r\n\r\nexport function loadTotalTimePlayed() {\r\n  const gameSpeedTags = [TransformationTags.GameSpeed];\r\n  registerTimeTickListener(\r\n    \"TotalTimePlayed\",\r\n    (state, timeElapsedSec, isWarp) => {\r\n      state.global.secondsPlayed += timeElapsedSec;\r\n      state.world.secondsPlayed += timeElapsedSec;\r\n      state.run.secondsPlayed += timeElapsedSec;\r\n      if (!isWarp) {\r\n        // To calculate active play time we need to de-transform the timeElapsedSec\r\n        const speed = applyTransformations(gameSpeedTags, state, 1.0);\r\n        if (speed > 0) {\r\n          state.global.activeSecondsPlayed += timeElapsedSec / speed;\r\n          state.world.activeSecondsPlayed += timeElapsedSec / speed;\r\n          state.run.activeSecondsPlayed += timeElapsedSec / speed;\r\n        }\r\n      }\r\n      return state;\r\n    },\r\n  );\r\n}\r\n\r\nexport function getTotalSecondsPlayed(state: GameState) {\r\n  return state.global.secondsPlayed || 0;\r\n}\r\n\r\nexport function getTotalActiveSecondsPlayed(state: GameState) {\r\n  return state.global.activeSecondsPlayed || 0;\r\n}\r\n\r\nexport function getSecondsPlayed(state: GameState) {\r\n  return state.run.secondsPlayed || 0;\r\n}\r\n","import memoize from \"sonic-memoize\";\r\nimport { fromEntries, keysOf } from \"../../utils/CoreUtils\";\r\nimport { cacheBySecondsPlayed } from \"../Caching\";\r\nimport { Flag } from \"../Flag\";\r\nimport { hasFlag } from \"../Flags\";\r\nimport { GameState } from \"../GameState\";\r\nimport { DataStore } from \"../generic/DataStore\";\r\nimport { registerTimeTickListener } from \"../timetick/TimeTick\";\r\nimport { getSecondsPlayed } from \"../timetick/TotalTimePlayed\";\r\nimport { Action } from \"./Action\";\r\nimport {\r\n  ActionArea,\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"./ActionAreas\";\r\n\r\nexport const Actions = new DataStore<Action>();\r\n\r\nexport function getVisibleActionsForAreaBySubcategory(\r\n  state: GameState,\r\n  area: ActionArea,\r\n): Partial<Record<ActionSubcategories, Action[]>> {\r\n  return cacheBySecondsPlayed(\r\n    state,\r\n    \"visibleActionsBySubcategory\" + area,\r\n    (state) => {\r\n      const actionsBySubcategory = actionsByAreaAndSubcategory[area];\r\n      return fromEntries(\r\n        (area == ActionArea.HOME && state.options.hideChannelingSpellsOnHome\r\n          ? keysOf(actionsBySubcategory).filter(\r\n              (key) => key != ActionSubcategories.CHANNELING,\r\n            )\r\n          : keysOf(actionsBySubcategory)\r\n        ).map((subcategory) => {\r\n          return [\r\n            subcategory,\r\n            actionsBySubcategory[subcategory].filter((action) =>\r\n              action.isVisible(state),\r\n            ),\r\n          ];\r\n        }),\r\n      );\r\n    },\r\n  );\r\n}\r\n\r\nconst actionsByAreaAndSubcategory: Record<\r\n  ActionArea,\r\n  Partial<Record<ActionSubcategory, Action[]>>\r\n> = {\r\n  HOME: {},\r\n  SPELL_MENU: {},\r\n  STUDY: {},\r\n  TRANSMUTE: {},\r\n  EXPLORATION: {},\r\n  ENHANCEMENT: {},\r\n  BOOST: {},\r\n  FAMILIARS: {},\r\n};\r\n\r\nexport function registerAction(action: Action) {\r\n  if (Actions.getByIdNullable(action.getId()) != null) {\r\n    return;\r\n  }\r\n  Actions.register(action);\r\n  const areas = action.getAreas();\r\n  for (let area of keysOf(areas)) {\r\n    const subcategories = areas[area];\r\n    for (let subcategory of subcategories) {\r\n      if (actionsByAreaAndSubcategory[area][subcategory] == null) {\r\n        actionsByAreaAndSubcategory[area][subcategory] = [];\r\n      }\r\n      actionsByAreaAndSubcategory[area][subcategory].push(action);\r\n    }\r\n  }\r\n}\r\n\r\nexport function getActionById(id: string) {\r\n  return Actions.getById(id);\r\n}\r\n\r\nexport function isAutoPurchaseUnlocked(state: GameState): boolean {\r\n  return hasFlag(state, Flag.AutoPurchaseUnlocked);\r\n}\r\n\r\nexport const getAutoPurchaseActions = memoize(() =>\r\n  Actions.getAll().filter((action) => action.canAutoPurchaseMax()),\r\n);\r\n\r\nexport function loadActionsCommonLogic() {\r\n  registerTimeTickListener(\r\n    \"actionAutoPurchaseMax\",\r\n    (state, timeElapsedSec, isWarp) => {\r\n      const secondsPlayed = getSecondsPlayed(state);\r\n      if (\r\n        Math.floor(state.temp.lastAutoPurchaseRun) != Math.floor(secondsPlayed)\r\n      ) {\r\n        getAutoPurchaseActions().forEach((action) => {\r\n          if (state.run.autoPurchaseActions[action.getId()] ?? false) {\r\n            if (action.isEnabled(state)) {\r\n              state = action.doAction({ isAutomatic: true }, state);\r\n            }\r\n          }\r\n          return state;\r\n        });\r\n        state.temp.lastAutoPurchaseRun = secondsPlayed;\r\n      }\r\n      return state;\r\n    },\r\n  );\r\n}\r\n","import { fromEntries, keysOf, valuesOfCached } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { ActionArea, ActionSubcategory } from \"../action/ActionAreas\";\r\nimport { registerAction } from \"../action/Actions\";\r\nimport { cacheIndefinitely, clearCacheKey } from \"../Caching\";\r\nimport { createHypotheticalState, GameState } from \"../GameState\";\r\nimport { addGameStateListener } from \"../GameStateListeners\";\r\nimport { DataStore } from \"../generic/DataStore\";\r\nimport { Resource } from \"../Resources\";\r\nimport { getSecondsPlayed } from \"../timetick/TotalTimePlayed\";\r\nimport {\r\n  clearTransformationCache,\r\n  registerTransformation,\r\n  TransformationTag,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport {\r\n  getElementLevel,\r\n  getTotalExpRequiredForLevel,\r\n  getUnlockedElements,\r\n  SpellElement,\r\n} from \"./Elements\";\r\nimport { Spell } from \"./Spell\";\r\nimport { clearVisibleSpellsCache } from \"./VisibleSpellsCache\";\r\n\r\nconst Spells = new DataStore<Spell>();\r\n\r\nexport function registerSpell(spell: Spell) {\r\n  Spells.register(spell);\r\n  registerAction(spell);\r\n}\r\n\r\nexport { Spells };\r\n\r\nexport function getAllSpellsByAscendingLevel(): Spell[] {\r\n  return Spells.getAll().sort(\r\n    (a, b) =>\r\n      Math.max(...valuesOfCached(a.getLevelRequirements())) -\r\n      Math.max(...valuesOfCached(b.getLevelRequirements())),\r\n  );\r\n}\r\n\r\nexport function getVisibleSpellsForArea(\r\n  state: GameState,\r\n  area: ActionArea,\r\n): Partial<Record<ActionSubcategory, Spell[]>> {\r\n  const spellsBySubcategory: Partial<Record<ActionSubcategory, Spell[]>> = {};\r\n  for (let spell of Spells.getAll()) {\r\n    if (\r\n      (area == null || spell.getAreas()?.[area] != null) &&\r\n      spell.isVisible(state)\r\n    ) {\r\n      for (let subcategory of spell.getAreas()[area] ?? []) {\r\n        if (spellsBySubcategory?.[subcategory] === undefined) {\r\n          spellsBySubcategory[subcategory] = [];\r\n        }\r\n        spellsBySubcategory[subcategory]?.push(spell);\r\n      }\r\n    }\r\n  }\r\n  return spellsBySubcategory;\r\n}\r\n\r\nexport function getVisibleSpellsByElement(\r\n  state: GameState,\r\n  area?: ActionArea,\r\n): Record<SpellElement, Spell[]> {\r\n  return cacheIndefinitely(\r\n    state,\r\n    (_state) => \"spellByElement:\" + (area ?? \"undefined\"),\r\n    (state) => {\r\n      const spellsByElement: Record<SpellElement, Spell[]> = fromEntries(\r\n        valuesOfCached(SpellElement).map((element) => [element, [] as Spell[]]),\r\n      );\r\n      const unlockedElements = getUnlockedElements(state);\r\n      for (let spell of Spells.getAll()) {\r\n        if (\r\n          (area == null || spell.getAreas()?.[area] != null) &&\r\n          spell.isVisible(state)\r\n        ) {\r\n          const elementRequirements = spell.getLevelRequirements();\r\n          for (let element in elementRequirements) {\r\n            if (!unlockedElements.includes(element as SpellElement)) {\r\n              continue;\r\n            }\r\n            if (spellsByElement?.[element] === undefined) {\r\n              spellsByElement[element] = [];\r\n            }\r\n            spellsByElement[element].push(spell);\r\n          }\r\n        }\r\n      }\r\n      for (let element of keysOf(spellsByElement)) {\r\n        if (spellsByElement[element].length === 0) {\r\n          delete spellsByElement[element];\r\n        } else {\r\n          spellsByElement[element].sort(\r\n            (a, b) =>\r\n              (b.getLevelRequirements()[element] || 0) -\r\n              (a.getLevelRequirements()[element] || 0),\r\n          );\r\n        }\r\n      }\r\n      return spellsByElement;\r\n    },\r\n  );\r\n}\r\n\r\nexport function getVisibleSpellsForElement(\r\n  state: GameState,\r\n  element: SpellElement,\r\n  area?: ActionArea,\r\n  extraLevels?: number,\r\n) {\r\n  if (!extraLevels) {\r\n    return getVisibleSpellsByElement(state, area)?.[element] || [];\r\n  }\r\n  const fakeState = createHypotheticalState(state);\r\n  fakeState.run.elementExperience[element] = getTotalExpRequiredForLevel(\r\n    fakeState,\r\n    getElementLevel(state, element) + extraLevels,\r\n    element,\r\n  );\r\n  return getVisibleSpellsByElement(fakeState, area)?.[element] || [];\r\n}\r\n\r\nexport function getSpellsForElementThatCanBeLearnedSoon(\r\n  state: GameState,\r\n  element: SpellElement,\r\n) {\r\n  const currentSpells = getVisibleSpellsForElement(state, element);\r\n  const otherUnlockedElements = getUnlockedElements(state).filter(\r\n    (unlockedElement) => unlockedElement != element,\r\n  );\r\n\r\n  let learnedSoon: Spell[] = [];\r\n\r\n  for (let elementIdx in otherUnlockedElements) {\r\n    const otherElement = otherUnlockedElements[elementIdx];\r\n    const fakeState = createHypotheticalState(state);\r\n    fakeState.run.elementExperience[otherElement] = getTotalExpRequiredForLevel(\r\n      fakeState,\r\n      getElementLevel(state, otherElement) + 1,\r\n      otherElement,\r\n    );\r\n    const soonVisibleSpells = getVisibleSpellsForElement(fakeState, element);\r\n    learnedSoon = learnedSoon.concat(\r\n      soonVisibleSpells.filter((spell) => !currentSpells.includes(spell)),\r\n    );\r\n  }\r\n\r\n  return learnedSoon;\r\n}\r\n\r\nexport function getRecentSpellsCast(state: GameState): Spell[] {\r\n  return (state.run.recentSpellsCast || [])\r\n    .map(Spells.getById)\r\n    .filter((spell) => spell != null);\r\n}\r\n\r\nexport function addRecentSpellCast(spell: Spell, state: GameState) {\r\n  const id = spell.getId();\r\n  state.run.recentSpellsCast = state.run.recentSpellsCast.filter(\r\n    (recentSpellName) => recentSpellName != id,\r\n  );\r\n  state.run.recentSpellsCast.unshift(id);\r\n  state.run.recentSpellsCast = state.run.recentSpellsCast.slice(0, 3);\r\n  return state;\r\n}\r\n\r\nexport function setLastCastedTime(spell: Spell, state: GameState) {\r\n  state.run.lastSpellCastTimes[spell.getId()] = getSecondsPlayed(state);\r\n  return state;\r\n}\r\n\r\nexport function getFavoriteSpells(state: GameState): Spell[] {\r\n  return state.run?.favoriteSpells?.map((id) => Spells.getById(id)) ?? [];\r\n}\r\n\r\nexport function addFavoriteSpell(state: GameState, spell: Spell): GameState {\r\n  if (isInFavoriteSpells(state, spell)) {\r\n    return state;\r\n  }\r\n  state.run.favoriteSpells.push(spell.getId());\r\n  return state;\r\n}\r\n\r\nexport function removeFromFavoriteSpells(\r\n  state: GameState,\r\n  spell: Spell,\r\n): GameState {\r\n  const index = state.run.favoriteSpells.findIndex(\r\n    (id) => spell.getId() === id,\r\n  );\r\n  if (index < 0) {\r\n    return state;\r\n  }\r\n  state.run.favoriteSpells.splice(index, 1);\r\n  return state;\r\n}\r\n\r\nexport function isInFavoriteSpells(state: GameState, spell: Spell): boolean {\r\n  return state.run.favoriteSpells.findIndex((id) => spell.getId() === id) >= 0;\r\n}\r\n\r\nexport function toggleEmpowered(state: GameState, spell: Spell): GameState {\r\n  const empowered = spell.isEmpowered(state);\r\n  state.run.empoweredSpells[spell.getId()] = !empowered;\r\n  state.temp.spellManaCostCache = {};\r\n  state.temp.spellExpCache = {};\r\n  state = callSpellCacheListeners(state);\r\n  return state;\r\n}\r\n\r\nconst spellCacheListeners = [];\r\n\r\nfunction callSpellCacheListeners(state: GameState): GameState {\r\n  for (let listener of spellCacheListeners) {\r\n    state = listener(state);\r\n  }\r\n  return state;\r\n}\r\n\r\nexport function registerSpellCacheClearedListener(\r\n  fn: (state: GameState) => GameState,\r\n) {\r\n  spellCacheListeners.push(fn);\r\n}\r\n\r\nexport function clearAutocastPointsCache(state: GameState): GameState {\r\n  state.temp.autocastPointsRequirementCache = {};\r\n  return callSpellCacheListeners(state);\r\n}\r\n\r\nexport function registerAutocastPointsClearer(\r\n  id: string,\r\n  valueFn: (state: GameState) => any,\r\n) {\r\n  addGameStateListener(\r\n    id + \"-autocastPointsClearer\",\r\n    (state) => {\r\n      return clearAutocastPointsCache;\r\n    },\r\n    valueFn,\r\n  );\r\n}\r\n\r\nexport function clearManaCostCache(state: GameState): GameState {\r\n  state.temp.spellManaCostCache = {};\r\n  state.temp.spellExpCache = {};\r\n  return callSpellCacheListeners(state);\r\n}\r\n\r\nexport function registerManaCostClearer(\r\n  id: string,\r\n  valueFn: (state: GameState) => any,\r\n) {\r\n  addGameStateListener(\r\n    id + \"-ManaCostClearer\",\r\n    (state) => {\r\n      return clearManaCostCache;\r\n    },\r\n    valueFn,\r\n  );\r\n}\r\n\r\nexport function clearCanCastSpellCache(state: GameState): GameState {\r\n  state = clearTransformationCache(\r\n    new Set([TransformationTags.CanCastSpell]),\r\n    state,\r\n  );\r\n  return callSpellCacheListeners(state);\r\n}\r\n\r\nexport function registerCanCastSpellClearer(\r\n  id: string,\r\n  valueFn: (state: GameState) => any,\r\n) {\r\n  addGameStateListener(\r\n    id + \"-CanCastSpellClearer\",\r\n    (state) => {\r\n      return clearCanCastSpellCache;\r\n    },\r\n    valueFn,\r\n  );\r\n}\r\n\r\nexport function clearSpellCooldownCache(state: GameState): GameState {\r\n  state = clearTransformationCache(\r\n    new Set([TransformationTags.SpellCooldown]),\r\n    state,\r\n  );\r\n  return callSpellCacheListeners(state);\r\n}\r\n\r\nexport function registerSpellCooldownClearer(\r\n  id: string,\r\n  valueFn: (state: GameState) => any,\r\n) {\r\n  addGameStateListener(\r\n    id + \"-spellCooldownCapClearer\",\r\n    (state) => clearSpellCooldownCache,\r\n    valueFn,\r\n  );\r\n}\r\n\r\nexport function clearSpellDurationCache(state: GameState): GameState {\r\n  for (let key of state.temp.cache.keys()) {\r\n    if (key.startsWith(\"minAutocastDelayDuration\")) {\r\n      state = clearCacheKey(state, () => key);\r\n    }\r\n  }\r\n  return callSpellCacheListeners(state);\r\n}\r\n\r\nexport function clearAllSpellCaches(state: GameState): GameState {\r\n  state = clearSpellCooldownCache(state);\r\n  state = clearCanCastSpellCache(state);\r\n  state = clearManaCostCache(state);\r\n  state = clearAutocastPointsCache(state);\r\n  state = clearVisibleSpellsCache(state);\r\n  state = clearSpellDurationCache(state);\r\n  return state;\r\n}\r\n\r\nexport function registerEmpowerEffects(\r\n  spell: Spell,\r\n  tags: TransformationTag[],\r\n  multiplier: number,\r\n) {\r\n  registerTransformation(\r\n    [[spell.getId(), ...tags]],\r\n    spell.getId() + \"empowered\" + tags.join(),\r\n    t(\"Spell Empowering\"),\r\n    TransformationType.Multiplier,\r\n    (state) => (spell.isEmpowered(state) ? multiplier : 1),\r\n  );\r\n}\r\n\r\nexport function registerStandardEmpowerEffects(\r\n  spell: Spell,\r\n  actionEffectMultiplier: number,\r\n  manaCostMultiplier: number,\r\n) {\r\n  registerEmpowerEffects(\r\n    spell,\r\n    [TransformationTags.ActionEffect],\r\n    actionEffectMultiplier,\r\n  );\r\n  registerEmpowerEffects(\r\n    spell,\r\n    [TransformationTags.Cost, Resource.Mana],\r\n    manaCostMultiplier,\r\n  );\r\n}\r\n\r\nexport function registerBuffEmpowerEffects(\r\n  spell: Spell,\r\n  effectMagnitudeMultiplier: number,\r\n  manaCostMultiplier: number,\r\n) {\r\n  registerEmpowerEffects(\r\n    spell,\r\n    [TransformationTags.TemporaryEffectMagnitude],\r\n    effectMagnitudeMultiplier,\r\n  );\r\n  registerEmpowerEffects(\r\n    spell,\r\n    [TransformationTags.Cost, Resource.Mana],\r\n    manaCostMultiplier,\r\n  );\r\n}\r\n","import { t } from \"../../utils/I18n\";\r\nimport { GameState, ResearcherAutoAssignStrategy } from \"../GameState\";\r\nimport {\r\n  SpellElement,\r\n  getElementLevel,\r\n  getMaxElementLevel,\r\n  getPrimaryElements,\r\n  getUnlockedElements,\r\n} from \"../spells/Elements\";\r\n\r\nexport function translateResearcherAutoAssignStrategy(\r\n  strategy: ResearcherAutoAssignStrategy,\r\n): string {\r\n  switch (strategy) {\r\n    case ResearcherAutoAssignStrategy.OFF:\r\n      return t(\"Off\");\r\n    case ResearcherAutoAssignStrategy.SPREAD_EVENLY:\r\n      return t(\"Spread evenly\");\r\n    case ResearcherAutoAssignStrategy.HIGHEST_AMOUNT:\r\n      return t(\"Most researchers\");\r\n    case ResearcherAutoAssignStrategy.SPREAD_THEN_HIGHEST:\r\n      return t(\"Spread, then most researchers\");\r\n  }\r\n}\r\n\r\nexport function decideOnAutoAssigning(\r\n  state: GameState,\r\n): SpellElement | undefined {\r\n  const elements = getUnlockedElements(state);\r\n  const strategy = state.options.researcherAutoAssignStrategy;\r\n\r\n  // First, check if any elements have no researchers\r\n  if (strategy == ResearcherAutoAssignStrategy.SPREAD_THEN_HIGHEST) {\r\n    for (let element of elements) {\r\n      const assignedResearchers = state.run.studyAllocation[element];\r\n      if (\r\n        assignedResearchers == 0 &&\r\n        getElementLevel(state, element) < getMaxElementLevel(state)\r\n      ) {\r\n        return element;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Then, assign them to that which has the most\r\n  if (\r\n    strategy == ResearcherAutoAssignStrategy.SPREAD_THEN_HIGHEST ||\r\n    strategy == ResearcherAutoAssignStrategy.HIGHEST_AMOUNT\r\n  ) {\r\n    let maxElement = null;\r\n    let maxElementResearchers = 0;\r\n    for (let element of elements) {\r\n      const assignedResearchers = state.run.studyAllocation[element];\r\n      if (\r\n        assignedResearchers > maxElementResearchers &&\r\n        getElementLevel(state, element) < getMaxElementLevel(state)\r\n      ) {\r\n        maxElement = element;\r\n        maxElementResearchers = assignedResearchers;\r\n      } else if (\r\n        assignedResearchers == maxElementResearchers &&\r\n        getPrimaryElements(state).includes(element) &&\r\n        getElementLevel(state, element) < getMaxElementLevel(state)\r\n      ) {\r\n        maxElement = element;\r\n      }\r\n    }\r\n\r\n    return maxElement;\r\n  }\r\n\r\n  // Or maybe to that which has the least\r\n  if (strategy == ResearcherAutoAssignStrategy.SPREAD_EVENLY) {\r\n    let minElement = null;\r\n    let minElementResearchers = 1e99;\r\n    for (let element of elements) {\r\n      const assignedResearchers = state.run.studyAllocation[element];\r\n      if (\r\n        assignedResearchers < minElementResearchers &&\r\n        getElementLevel(state, element) < getMaxElementLevel(state)\r\n      ) {\r\n        minElement = element;\r\n        minElementResearchers = assignedResearchers;\r\n      } else if (\r\n        assignedResearchers == minElementResearchers &&\r\n        getPrimaryElements(state).includes(element) &&\r\n        getElementLevel(state, element) < getMaxElementLevel(state)\r\n      ) {\r\n        minElement = element;\r\n      }\r\n    }\r\n\r\n    return minElement;\r\n  }\r\n}\r\n","import { fromEntries, keysOf, valuesOf } from \"../../utils/CoreUtils\";\r\nimport { Flag } from \"../Flag\";\r\nimport { hasEverHadFlag, hasFlag } from \"../Flags\";\r\nimport {\r\n  GameState,\r\n  GameStateTransform,\r\n  ResearcherAutoAssignStrategy,\r\n} from \"../GameState\";\r\nimport { addGameStateListener } from \"../GameStateListeners\";\r\nimport {\r\n  SpellElement,\r\n  getUnlockedElements,\r\n  grantElementExp,\r\n} from \"../spells/Elements\";\r\nimport { registerTimeTickListener } from \"../timetick/TimeTick\";\r\nimport {\r\n  applyTransformations,\r\n  explainTransformationsText,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { decideOnAutoAssigning } from \"./ResearcherAutoAssignStrategy\";\r\n\r\nfunction onTick(state: GameState, elapsedTimeSec: number): GameState {\r\n  const expPerSec = getResearcherExpPerSecForElements(state);\r\n  for (let element in expPerSec) {\r\n    state = grantElementExp(\r\n      element as SpellElement,\r\n      (expPerSec?.[element as SpellElement] ?? 0) * elapsedTimeSec,\r\n    )(state);\r\n  }\r\n  return state;\r\n}\r\n\r\nexport const BASE_RESEARCH_EXP_PER_SEC_PER_RESEARCHER = 2.0;\r\n\r\nexport const expGainTagsCache = fromEntries(\r\n  valuesOf(SpellElement).map((element) => [\r\n    element,\r\n    [element, TransformationTags.ExpGain, TransformationTags.Study],\r\n  ]),\r\n);\r\n\r\nexport function getResearcherExpPerSecAndResearcher(\r\n  state: GameState,\r\n): Partial<Record<SpellElement, number>> {\r\n  const researchRates: Partial<Record<SpellElement, number>> = {};\r\n  for (let element of getUnlockedElements(state)) {\r\n    const researchRatePerResearcher = applyTransformations(\r\n      expGainTagsCache[element],\r\n      state,\r\n      BASE_RESEARCH_EXP_PER_SEC_PER_RESEARCHER,\r\n      { fromResearch: true },\r\n    );\r\n    researchRates[element] = researchRatePerResearcher;\r\n  }\r\n  return researchRates;\r\n}\r\n\r\nexport function getResearcherExpPerSecForElements(\r\n  state: GameState,\r\n): Partial<Record<SpellElement, number>> {\r\n  let value = state.temp.researchPerSecCache;\r\n  if (value == null) {\r\n    const researcherAllocation = state.run.studyAllocation;\r\n    const totalExpPerSec: Partial<Record<SpellElement, number>> = {};\r\n    for (let element of keysOf(researcherAllocation)) {\r\n      const allocatedResearchers = researcherAllocation[element] || 0;\r\n      if (allocatedResearchers > 0) {\r\n        const researchRatePerResearcher = applyTransformations(\r\n          expGainTagsCache[element],\r\n          state,\r\n          BASE_RESEARCH_EXP_PER_SEC_PER_RESEARCHER,\r\n          { fromResearch: true },\r\n        );\r\n        totalExpPerSec[element] =\r\n          researchRatePerResearcher * allocatedResearchers;\r\n      }\r\n    }\r\n    value = totalExpPerSec;\r\n    state.temp.researchPerSecCache = value;\r\n  }\r\n  return value;\r\n}\r\n\r\nexport function clearResearcherExpCache(state: GameState) {\r\n  state.temp.researchPerSecCache = undefined;\r\n  return state;\r\n}\r\n\r\nconst expGainStudyTags = [TransformationTags.ExpGain, TransformationTags.Study];\r\n\r\nexport function getBaseResearchRate(state: GameState) {\r\n  return applyTransformations(\r\n    expGainStudyTags,\r\n    state,\r\n    BASE_RESEARCH_EXP_PER_SEC_PER_RESEARCHER,\r\n  );\r\n}\r\n\r\nexport function explainBaseResearchRate(state: GameState) {\r\n  return explainTransformationsText(\r\n    expGainStudyTags,\r\n    state,\r\n    BASE_RESEARCH_EXP_PER_SEC_PER_RESEARCHER,\r\n  );\r\n}\r\n\r\nconst researcherAmountTags = [TransformationTags.ResearcherAmount];\r\n\r\nexport function getTotalResearchers(state: GameState) {\r\n  return applyTransformations(researcherAmountTags, state, 1);\r\n}\r\n\r\nexport function getFreeResearchers(state: GameState): number {\r\n  const researcherAllocation = state.run.studyAllocation;\r\n  let researchersAllocated = 0;\r\n  for (let element of keysOf(researcherAllocation)) {\r\n    researchersAllocated += researcherAllocation[element] || 0;\r\n  }\r\n  return getTotalResearchers(state) - researchersAllocated;\r\n}\r\n\r\nfunction allocateResearchersToElementImpl(\r\n  element: SpellElement,\r\n  amount: number,\r\n  state: GameState,\r\n) {\r\n  const currentAllocation = state.run.studyAllocation[element] || 0;\r\n  const actualAmountToAllocate =\r\n    amount > 0\r\n      ? Math.min(getFreeResearchers(state), amount)\r\n      : Math.max(-currentAllocation, amount);\r\n  state.run.studyAllocation[element] =\r\n    currentAllocation + actualAmountToAllocate;\r\n  if (amount < 0) {\r\n    state.options.researcherAutoAssignStrategy =\r\n      ResearcherAutoAssignStrategy.OFF;\r\n  }\r\n  state = clearResearcherExpCache(state);\r\n  return state;\r\n}\r\n\r\nexport function allocateResearchersToElement(\r\n  this: any,\r\n  element: SpellElement,\r\n  amount: number,\r\n): GameStateTransform {\r\n  // Do it this way to avoid creating extra functions and avoid rerenders\r\n  return allocateResearchersToElementImpl.bind(this, element, amount);\r\n}\r\n\r\nexport function isStudyUnlocked(state: GameState): boolean {\r\n  return hasFlag(state, Flag.StudyUnlocked);\r\n}\r\n\r\nexport function isStudyEverUnlocked(state: GameState): boolean {\r\n  return hasEverHadFlag(state, Flag.StudyUnlocked);\r\n}\r\n\r\nexport function loadResearchers(): void {\r\n  registerTimeTickListener(\"Researchers\", onTick);\r\n\r\n  addGameStateListener(\"researcherAssignerOrRemover\", (state) => {\r\n    const freeResearchers = getFreeResearchers(state);\r\n    if (freeResearchers < 0) {\r\n      return (state: GameState) => {\r\n        let freeResearchers = getFreeResearchers(state);\r\n        const elements = getUnlockedElements(state);\r\n        const elementLength = elements.length;\r\n        let currentElementIdx = elementLength - 1;\r\n        while (freeResearchers < 0 && currentElementIdx >= 0) {\r\n          const element = elements[currentElementIdx];\r\n          const assignedResearchers = state.run.studyAllocation[element];\r\n          if (assignedResearchers > 0) {\r\n            state = allocateResearchersToElement(element, -1)(state);\r\n            freeResearchers++;\r\n          } else {\r\n            currentElementIdx--;\r\n          }\r\n        }\r\n        return state;\r\n      };\r\n    } else if (\r\n      freeResearchers > 0 &&\r\n      state.options.researcherAutoAssignStrategy !=\r\n        ResearcherAutoAssignStrategy.OFF\r\n    ) {\r\n      return (state: GameState) => {\r\n        let freeResearchers = getFreeResearchers(state);\r\n        while (freeResearchers > 0) {\r\n          const elementToAssign = decideOnAutoAssigning(state);\r\n          if (elementToAssign == null) {\r\n            // Usually means all elements maxed\r\n            state.options.researcherAutoAssignStrategy =\r\n              ResearcherAutoAssignStrategy.OFF;\r\n            return state;\r\n          }\r\n          state = allocateResearchersToElement(elementToAssign, 1)(state);\r\n          freeResearchers--;\r\n        }\r\n        return state;\r\n      };\r\n    }\r\n  });\r\n}\r\n","import memoize from \"sonic-memoize\";\r\nimport { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { cacheByTickCount } from \"../Caching\";\r\nimport { GameState } from \"../GameState\";\r\nimport { DataStore } from \"../generic/DataStore\";\r\nimport { Identifiable } from \"../generic/Identifiable\";\r\nimport {\r\n  getResourceAmount,\r\n  getResourceCap,\r\n  grantResource,\r\n  Resource,\r\n} from \"../Resources\";\r\nimport {\r\n  applyTransformations,\r\n  explainTransformationsText,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { registerTimeTickListener } from \"./TimeTick\";\r\n\r\nexport type IncomeOverTimeCalculator = (\r\n  state: GameState,\r\n) => Partial<Record<Resource, number>>;\r\n\r\n// If something produces (or consumes) income over time,\r\n// register it here. This will make it visible in the UI later.\r\nexport class IncomeOverTimeProducer implements Identifiable {\r\n  id: string;\r\n  displayName: string;\r\n  calculator: IncomeOverTimeCalculator;\r\n\r\n  constructor(\r\n    id: string,\r\n    displayName: string,\r\n    calculator: IncomeOverTimeCalculator,\r\n  ) {\r\n    this.id = id;\r\n    this.displayName = displayName;\r\n    this.calculator = calculator;\r\n  }\r\n\r\n  getId(): string {\r\n    return this.id;\r\n  }\r\n\r\n  getDisplayName(): string {\r\n    return this.displayName;\r\n  }\r\n\r\n  getCalculator(): IncomeOverTimeCalculator {\r\n    return this.calculator;\r\n  }\r\n}\r\n\r\nconst IncomeOverTimeProducers = new DataStore<IncomeOverTimeProducer>();\r\n\r\n// This method does not apply income if the resource is capped,\r\n// which is a \"smarter\" behavior.\r\nfunction onTick(state: GameState, elapsedTimeSec: number): GameState {\r\n  const incomes = IncomeOverTimeProducers.getAll().map((producer) =>\r\n    producer.getCalculator()(state),\r\n  );\r\n\r\n  let changed = false;\r\n  const incomeSet = new Set(incomes);\r\n  const appliedTotals: Partial<Record<Resource, number>> = {};\r\n  const appliedIncomes = new Set<Partial<Record<Resource, number>>>();\r\n  do {\r\n    changed = false;\r\n    for (let resString of Object.values(Resource)) {\r\n      const resource = resString as Resource;\r\n      if (\r\n        getResourceAmount(state, resource) + (appliedTotals?.[resource] ?? 0) <\r\n        getResourceCap(state, resource)\r\n      ) {\r\n        // Apply all incomes for this resource\r\n        const incomesThatHaveResource = Array.from(incomeSet).filter(\r\n          (income) => (income?.[resource] ?? 0) > 0,\r\n        );\r\n        incomesThatHaveResource.forEach((income) => {\r\n          let canApply = true;\r\n          for (let subResString in income) {\r\n            const subResource = subResString as Resource;\r\n            const subResourceIncome =\r\n              (income[subResource] ?? 0) * elapsedTimeSec;\r\n            if (\r\n              subResourceIncome < 0 &&\r\n              getResourceAmount(state, subResource) +\r\n                (appliedTotals?.[subResource] ?? 0) <\r\n                -subResourceIncome\r\n            ) {\r\n              canApply = false;\r\n            }\r\n          }\r\n          if (canApply) {\r\n            appliedIncomes.add(income);\r\n            for (let subResString in income) {\r\n              const subResource = subResString as Resource;\r\n              appliedTotals[subResource] =\r\n                (appliedTotals?.[subResource] ?? 0) +\r\n                (income[subResource] ?? 0) * elapsedTimeSec;\r\n            }\r\n          }\r\n        });\r\n        if (appliedIncomes.size > 0) {\r\n          appliedIncomes.forEach((appliedIncome) =>\r\n            incomeSet.delete(appliedIncome),\r\n          );\r\n          appliedIncomes.clear();\r\n          changed = true;\r\n        }\r\n      }\r\n    }\r\n  } while (changed && incomeSet.size > 0);\r\n\r\n  // Now we have calculated the total incomes, grant the resources\r\n  for (let resString in appliedTotals) {\r\n    if ((appliedTotals?.[resString as Resource] ?? 0) != 0) {\r\n      state = grantResource(\r\n        resString as Resource,\r\n        appliedTotals?.[resString as Resource] ?? 0,\r\n      )(state);\r\n    }\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nfunction calculatedIncomeCached(\r\n  state: GameState,\r\n  producerId: string,\r\n  readCacheOnly: boolean,\r\n): Partial<Record<Resource, number>> | null {\r\n  let value = state.temp.incomeOverTimeCache[producerId];\r\n  if (readCacheOnly) {\r\n    return value;\r\n  }\r\n  if (value == null) {\r\n    value = IncomeOverTimeProducers.getById(producerId).getCalculator()(state);\r\n    state.temp.incomeOverTimeCache[producerId] = value;\r\n  }\r\n  return value;\r\n}\r\n\r\nexport function clearCalculatedIncomeCache(state: GameState): GameState {\r\n  state.temp.incomeOverTimeCache = {};\r\n  return state;\r\n}\r\n\r\nfunction calculatedIncomesCached(\r\n  state: GameState,\r\n  readCacheOnly: boolean,\r\n): { displayName: string; income: Partial<Record<Resource, number>> }[] {\r\n  return cacheByTickCount(\r\n    state,\r\n    \"incomePerSec\",\r\n    (state) =>\r\n      IncomeOverTimeProducers.getAll().map((producer) => ({\r\n        income: calculatedIncomeCached(state, producer.getId(), readCacheOnly),\r\n        displayName: producer.getDisplayName(),\r\n      })),\r\n    readCacheOnly,\r\n  );\r\n}\r\n\r\nconst finalIncomeTags = memoize((resource) => [\r\n  TransformationTags.FinalIncomePerSec,\r\n  resource,\r\n]);\r\n\r\n// This method applies all incomes even if resources are capped.\r\nfunction onTickApplyAll(state: GameState, elapsedTimeSec: number): GameState {\r\n  if (elapsedTimeSec <= 0) {\r\n    return state;\r\n  }\r\n\r\n  const incomes = calculatedIncomesCached(state, false);\r\n\r\n  const appliedTotals: Partial<Record<Resource, number>> = {};\r\n  for (let income of incomes) {\r\n    let canApply = true;\r\n    for (let subResString in income.income) {\r\n      const subResource = subResString as Resource;\r\n      const subResourceIncome =\r\n        (income.income[subResource] ?? 0) * elapsedTimeSec;\r\n      if (\r\n        subResourceIncome < 0 &&\r\n        getResourceAmount(state, subResource) < -subResourceIncome\r\n      ) {\r\n        canApply = false;\r\n      }\r\n    }\r\n\r\n    if (canApply) {\r\n      for (let subResString in income.income) {\r\n        const subResource = subResString as Resource;\r\n        const subResourceIncome =\r\n          (income.income[subResource] ?? 0) * elapsedTimeSec;\r\n        appliedTotals[subResource] =\r\n          (appliedTotals?.[subResource] ?? 0) + subResourceIncome;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Transform the totals\r\n  for (let resource in appliedTotals) {\r\n    appliedTotals[resource as Resource] =\r\n      applyTransformations(\r\n        finalIncomeTags(resource),\r\n        state,\r\n        (appliedTotals[resource as Resource] ?? 0) / elapsedTimeSec,\r\n      ) * elapsedTimeSec;\r\n  }\r\n\r\n  // Now we have calculated the total incomes, grant the resources\r\n  for (let resString in appliedTotals) {\r\n    if ((appliedTotals?.[resString as Resource] ?? 0) != 0) {\r\n      state = grantResource(\r\n        resString as Resource,\r\n        appliedTotals?.[resString as Resource] ?? 0,\r\n      )(state);\r\n    }\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\n// Lower priority listener as otherwise mana bar doesn't fully fill\r\nregisterTimeTickListener(\"IncomeOverTime\", onTickApplyAll, 10);\r\n\r\n// Only use for display purposes\r\nexport function calculateIncomePerSecond(\r\n  state: GameState,\r\n): Partial<Record<Resource, number>> {\r\n  return cacheByTickCount(state, \"incomePerSecondDisplay\", (state) => {\r\n    let total: Partial<Record<Resource, number>> = {};\r\n    const incomes = calculatedIncomesCached(state, true);\r\n    incomes.forEach((income) => {\r\n      let canApply = true;\r\n      for (let subResString in income.income) {\r\n        const subResource = subResString as Resource;\r\n        const subResourceIncome = (income.income[subResource] ?? 0) * 0.5;\r\n        if (\r\n          subResourceIncome < 0 &&\r\n          getResourceAmount(state, subResource) < -subResourceIncome\r\n        ) {\r\n          canApply = false;\r\n        }\r\n      }\r\n\r\n      // Skip incomes that cannot be applied unless they are negative\r\n      for (let resString in income.income) {\r\n        const resource = resString as Resource;\r\n        const existingIncome = total?.[resource] ?? 0;\r\n        if (canApply || (income.income?.[resource] ?? 0) < 0) {\r\n          total[resource] = existingIncome + (income.income?.[resource] ?? 0);\r\n        }\r\n      }\r\n    });\r\n\r\n    // Transform the totals\r\n    for (let resource in total) {\r\n      total[resource as Resource] = applyTransformations(\r\n        finalIncomeTags(resource),\r\n        state,\r\n        total[resource as Resource] ?? 0,\r\n      );\r\n    }\r\n    return total;\r\n  });\r\n}\r\n\r\nexport function explainIncomePerSecondPreTransform(\r\n  state: GameState,\r\n): Partial<Record<Resource, { displayName: string; income: number }[]>> {\r\n  let total: Partial<\r\n    Record<Resource, { displayName: string; income: number }[]>\r\n  > = {};\r\n  const incomes = calculatedIncomesCached(state, true);\r\n  incomes.forEach((income) => {\r\n    let canApply = true;\r\n    let foundNonzero = false;\r\n    for (let subResString in income.income) {\r\n      const subResource = subResString as Resource;\r\n      const subResourceIncome = (income.income[subResource] ?? 0) * 0.5;\r\n      if (\r\n        subResourceIncome < 0 &&\r\n        getResourceAmount(state, subResource) < -subResourceIncome\r\n      ) {\r\n        canApply = false;\r\n      }\r\n      if (subResourceIncome != 0) {\r\n        foundNonzero = true;\r\n      }\r\n    }\r\n\r\n    if (foundNonzero) {\r\n      for (let resString in income.income) {\r\n        const resource = resString as Resource;\r\n        const existingIncome = total?.[resource] ?? [];\r\n        if (canApply || (income.income?.[resource] ?? 0) < 0) {\r\n          existingIncome.push({\r\n            income: income.income?.[resource],\r\n            displayName: income.displayName,\r\n          });\r\n        }\r\n        total[resource] = existingIncome;\r\n      }\r\n    }\r\n  });\r\n\r\n  return total;\r\n}\r\n\r\nexport function explainIncomePerSecText(\r\n  state: GameState,\r\n): Partial<Record<Resource, string>> {\r\n  const explanations = explainIncomePerSecondPreTransform(state);\r\n\r\n  function toTextAddition(result: {\r\n    displayName: string;\r\n    income: number | undefined;\r\n  }) {\r\n    return t(\"{{amount}}/s ({{description}})\", {\r\n      amount:\r\n        result.income > 0\r\n          ? \"+\" + formatNumber(result.income)\r\n          : formatNumber(result.income),\r\n      description: result.displayName,\r\n    });\r\n  }\r\n\r\n  const total = {};\r\n  // Transform the totals\r\n  for (let resource in explanations) {\r\n    const values = explanations[resource] as {\r\n      displayName: string;\r\n      income: number;\r\n    }[];\r\n    const valuesText = values\r\n      .map((value) => toTextAddition(value))\r\n      .join(t(\", \"));\r\n\r\n    const postTransformationExplanation = explainTransformationsText(\r\n      finalIncomeTags(resource),\r\n      state,\r\n      total[resource as Resource] ?? 0,\r\n    );\r\n\r\n    if (postTransformationExplanation != \"\") {\r\n      total[resource as Resource] = t(\r\n        \"{{valuesText}}; and further changed by: {{postTransformationExplanation}}\",\r\n        { valuesText, postTransformationExplanation },\r\n      );\r\n    } else {\r\n      total[resource as Resource] = valuesText;\r\n    }\r\n  }\r\n  return total;\r\n}\r\n\r\nexport { IncomeOverTimeProducers };\r\n","import { t } from \"../../utils/I18n\";\r\nimport { GameState, GameStateTransform } from \"../GameState\";\r\nimport {\r\n  addToInventory,\r\n  getAmountOfItem,\r\n  removeFromInventory,\r\n} from \"./Inventory\";\r\nimport { ItemAction, ItemOccurrence } from \"./Item\";\r\n\r\nimport bind from \"memoize-bind\";\r\nimport { valuesOf } from \"../../utils/CoreUtils\";\r\nimport { clearResourceCapCache } from \"../Resources\";\r\nimport { clearCombatStatCache } from \"../exploration/CombatStats\";\r\nimport { DataStore } from \"../generic/DataStore\";\r\nimport { clearAllSpellCaches } from \"../spells/Spells\";\r\nimport { clearResearcherExpCache } from \"../study/Study\";\r\nimport { clearCalculatedIncomeCache } from \"../timetick/IncomeOverTime\";\r\nimport { applyTransformationsCached } from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { Items } from \"./Items\";\r\nimport { EquippableItem } from \"./equipment/EquippableItem\";\r\nimport { PouchItem } from \"./equipment/PouchItem\";\r\n\r\nexport enum EquipmentSlot {\r\n  Hand = \"Hand\",\r\n  Body = \"Body\",\r\n  Accessory = \"Accessory\",\r\n  Pouch = \"Pouch\",\r\n}\r\n\r\nexport function translateEquipmentSlot(slot: EquipmentSlot): string {\r\n  switch (slot) {\r\n    case EquipmentSlot.Hand:\r\n      return t(\"Hand\");\r\n    case EquipmentSlot.Body:\r\n      return t(\"Body\");\r\n    case EquipmentSlot.Accessory:\r\n      return t(\"Accessory\");\r\n    case EquipmentSlot.Pouch:\r\n      return t(\"Pouch\");\r\n  }\r\n}\r\n\r\nconst POUCH_SIZE_TAGS = [TransformationTags.PouchSize];\r\nconst ACCESSORY_SIZE_TAGS = [TransformationTags.AccessorySize];\r\n\r\nexport function getMaxEquippedItemsPerSlot(\r\n  state: GameState,\r\n  slot: EquipmentSlot,\r\n): number {\r\n  if (slot == EquipmentSlot.Pouch) {\r\n    return applyTransformationsCached(POUCH_SIZE_TAGS, state, 4);\r\n  }\r\n  if (slot == EquipmentSlot.Accessory) {\r\n    return applyTransformationsCached(ACCESSORY_SIZE_TAGS, state, 1);\r\n  }\r\n  return 1;\r\n}\r\n\r\nexport function canUnequipItem(\r\n  state: GameState,\r\n  slot: EquipmentSlot,\r\n  index: number,\r\n): boolean {\r\n  const items = getEquippedItems(state, slot);\r\n  if (items.length <= index) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function canEquipItem(\r\n  state: GameState,\r\n  slot: EquipmentSlot,\r\n  item: ItemOccurrence,\r\n): boolean {\r\n  if (getAmountOfItem(item, state) <= 0) {\r\n    return false;\r\n  }\r\n\r\n  if (getMaxEquippedItemsPerSlot(state, slot) == 0) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport const EquipmentChangeListeners = new DataStore<\r\n  (state: GameState) => GameState\r\n>();\r\n\r\nexport function equipToSlot(\r\n  state: GameState,\r\n  slot: EquipmentSlot,\r\n  item: ItemOccurrence,\r\n  position?: number,\r\n  skipSave?: boolean,\r\n): GameState {\r\n  if (!canEquipItem(state, slot, item)) {\r\n    return state;\r\n  }\r\n\r\n  const actualItem = Items.getById(item.itemId) as EquippableItem;\r\n\r\n  const extraSlots = actualItem.getExtraSlots();\r\n\r\n  const capacity = getMaxEquippedItemsPerSlot(state, slot);\r\n  const equippedItems = getEquippedItems(state, slot);\r\n\r\n  const equippedExtraSlotItem = getEquippedExtraSlotItem(state, slot, position);\r\n\r\n  if (position == null) {\r\n    // If we are under capacity, just push it to the end\r\n    let done = false;\r\n    for (\r\n      let i = equippedExtraSlotItem != null && capacity > 1 ? 1 : 0;\r\n      i < capacity;\r\n      i++\r\n    ) {\r\n      if (equippedItems?.[i] == null) {\r\n        position = i;\r\n        done = true;\r\n        break;\r\n      }\r\n    }\r\n    if (!done) {\r\n      position =\r\n        equippedExtraSlotItem != null &&\r\n        capacity > 1 &&\r\n        slot != EquipmentSlot.Pouch\r\n          ? 1\r\n          : 0;\r\n    }\r\n  }\r\n\r\n  if (slot != EquipmentSlot.Pouch) {\r\n    // If there is already any slot that has this item, force position\r\n    // to be that item\r\n    // (cannot have 2 accessories of the same kind equipped)\r\n    for (let i = 0; i < capacity; i++) {\r\n      if (\r\n        equippedItems?.[i] != null &&\r\n        equippedItems[i].itemId == item.itemId\r\n      ) {\r\n        position = i;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // We unequip the item from the slot\r\n  state = unequipFromSlotImpl(slot, position, skipSave, state);\r\n  // Whatever we do, we must also remove the *first* item from any extra slots\r\n  for (let extraSlot of extraSlots) {\r\n    state = unequipFromSlotImpl(extraSlot, 0, skipSave, state);\r\n  }\r\n\r\n  // Then equip it\r\n  equippedItems[position] = item;\r\n  state.run.equipment[slot] = equippedItems;\r\n  // And then finally remove from inventory\r\n  state = removeFromInventory(item, 1, state);\r\n  // And finally, if it's a pouch item, we mark it used\r\n  if (slot == EquipmentSlot.Pouch) {\r\n    state.run.exploration.pouchItemsUsesLeft[position] = 0;\r\n  }\r\n\r\n  if (!skipSave) {\r\n    state = saveEquipmentLoadoutToPosition(\r\n      state,\r\n      state.run.lastEquipmentLoadoutModified,\r\n    );\r\n  }\r\n\r\n  // We must clear all combat caches.\r\n  // This is because equipment can have complex interactions. For example,\r\n  // the Synergizer increases the effect of other equipment.\r\n  state = clearCombatStatCache(state);\r\n  state = clearResourceCapCache(state);\r\n  state = clearCalculatedIncomeCache(state);\r\n  state = clearResearcherExpCache(state);\r\n  state = clearAllSpellCaches(state);\r\n\r\n  EquipmentChangeListeners.getAll().forEach((listener) => {\r\n    state = listener(state);\r\n  });\r\n\r\n  return state;\r\n}\r\n\r\nexport function getEquippedItem(\r\n  state: GameState,\r\n  slot: EquipmentSlot,\r\n  position?: number,\r\n): ItemOccurrence | undefined {\r\n  const item = state.run.equipment?.[slot];\r\n  return item?.[position ?? 0];\r\n}\r\n\r\nexport function getEquippedItems(\r\n  state: GameState,\r\n  slot: EquipmentSlot,\r\n): ItemOccurrence[] {\r\n  const items = state.run.equipment?.[slot] ?? [];\r\n  return items;\r\n}\r\n\r\nexport function getEquippedExtraSlotItem(\r\n  state: GameState,\r\n  slot: EquipmentSlot,\r\n  position?: number,\r\n): ItemOccurrence | undefined {\r\n  const equipped = getEquippedItem(state, slot, position);\r\n  if (equipped || (position ?? 0) > 0) {\r\n    return equipped;\r\n  }\r\n\r\n  for (let otherSlot of valuesOf(EquipmentSlot)) {\r\n    const capacity = getMaxEquippedItemsPerSlot(state, slot);\r\n    for (let i = 0; i < capacity; i++) {\r\n      const equippedItem = getEquippedItem(state, otherSlot, i);\r\n      if (equippedItem) {\r\n        const equippedActualItem = Items.getById(\r\n          equippedItem.itemId,\r\n        ) as EquippableItem;\r\n        if (equippedActualItem.getExtraSlots().includes(slot)) {\r\n          return equippedItem;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction unequipFromSlotImpl(\r\n  slot: EquipmentSlot,\r\n  position: number,\r\n  skipSave: boolean,\r\n  state: GameState,\r\n): GameState {\r\n  let item = getEquippedItem(state, slot, position);\r\n  if (!item) {\r\n    // Check if there might be another equipment item with this as its extra slot\r\n    item = getEquippedExtraSlotItem(state, slot, position);\r\n    if (!item) {\r\n      return state;\r\n    }\r\n  }\r\n\r\n  const actualItem = Items.getById(item.itemId) as EquippableItem;\r\n\r\n  // If we are unequipping from pouch, clean up the effect\r\n  if (slot == EquipmentSlot.Pouch) {\r\n    state = (actualItem as PouchItem).doCleanup(state, item.params);\r\n  }\r\n\r\n  state = addToInventory(item, 1, state);\r\n  state.run.equipment[actualItem.getSlot()][position] = null;\r\n\r\n  if (!skipSave) {\r\n    state = saveEquipmentLoadoutToPosition(\r\n      state,\r\n      state.run.lastEquipmentLoadoutModified,\r\n    );\r\n  }\r\n\r\n  // We must clear all combat caches.\r\n  // This is because equipment can have complex interactions. For example,\r\n  // the Synergizer increases the effect of other equipment.\r\n  state = clearCombatStatCache(state);\r\n  state = clearResourceCapCache(state);\r\n  state = clearCalculatedIncomeCache(state);\r\n  state = clearResearcherExpCache(state);\r\n  state = clearAllSpellCaches(state);\r\n\r\n  EquipmentChangeListeners.getAll().forEach((listener) => {\r\n    state = listener(state);\r\n  });\r\n\r\n  return state;\r\n}\r\n\r\nexport function unequipFromSlot(\r\n  this: any,\r\n  slot: EquipmentSlot,\r\n  position: number,\r\n  skipSave?: boolean,\r\n): GameStateTransform {\r\n  // Do it this way to avoid creating extra functions and avoid rerenders\r\n  return bind(unequipFromSlotImpl, this, slot, position, skipSave);\r\n}\r\n\r\nexport function getUnequipAction(\r\n  state: GameState,\r\n  slot: EquipmentSlot,\r\n  position: number,\r\n): ItemAction {\r\n  return {\r\n    id: \"unequip\" + slot + position,\r\n    description: t(\"Unequip\"),\r\n    isEnabled: canUnequipItem(state, slot, position),\r\n    transform: unequipFromSlot(slot, position),\r\n  };\r\n}\r\n\r\nexport function saveEquipmentLoadoutToPosition(\r\n  state: GameState,\r\n  position: number,\r\n  name?: string,\r\n): GameState {\r\n  const equipment = JSON.parse(JSON.stringify(state.run.equipment));\r\n  state.run.equipmentLoadouts[position] = {\r\n    name: name ?? t(\"Slot {{position}}\", { position: position + 1 }),\r\n    equipment: equipment,\r\n  };\r\n  state.run.lastEquipmentLoadoutModified = position;\r\n  return state;\r\n}\r\n\r\nexport function loadEquipmentLoadoutFromPosition(\r\n  state: GameState,\r\n  position: number,\r\n): GameState {\r\n  const equipment = JSON.parse(\r\n    JSON.stringify(\r\n      state.run.equipmentLoadouts?.[position]?.equipment || {\r\n        Hand: [],\r\n        Body: [],\r\n        Accessory: [],\r\n        Pouch: [],\r\n      },\r\n    ),\r\n  );\r\n\r\n  for (let slot of Object.values(EquipmentSlot)) {\r\n    if (slot == EquipmentSlot.Pouch) {\r\n      // Pouch items are NOT part of equipment loadouts, to avoid potions warding off\r\n      continue;\r\n    }\r\n    const capacity = getMaxEquippedItemsPerSlot(state, slot);\r\n\r\n    // First, unequip everything\r\n    for (let i = 0; i < capacity; i++) {\r\n      const currentItemOccurrence = getEquippedItem(\r\n        state,\r\n        slot as EquipmentSlot,\r\n        i,\r\n      );\r\n      if (currentItemOccurrence != null) {\r\n        state = unequipFromSlotImpl(slot as EquipmentSlot, i, true, state);\r\n      }\r\n    }\r\n\r\n    // Then, equip everything\r\n    for (let i = 0; i < capacity; i++) {\r\n      const itemOccurrence = equipment?.[slot]?.[i];\r\n      const currentItemOccurrence = getEquippedItem(\r\n        state,\r\n        slot as EquipmentSlot,\r\n        i,\r\n      );\r\n      if (itemOccurrence == null && currentItemOccurrence != null) {\r\n        // We want to unequip since there is nothing assigned to this slot\r\n        if (!canUnequipItem(state, slot as EquipmentSlot, i)) {\r\n          // Skip as there is no space to unequip\r\n          continue;\r\n        }\r\n        state = unequipFromSlotImpl(slot as EquipmentSlot, i, true, state);\r\n      } else {\r\n        // We want to equip the new item\r\n        if (itemOccurrence != null) {\r\n          state = equipToSlot(\r\n            state,\r\n            slot as EquipmentSlot,\r\n            itemOccurrence,\r\n            i,\r\n            true,\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  state.run.lastEquipmentLoadoutModified = position;\r\n  return state;\r\n}\r\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { Buffer } from \"buffer\";\r\nimport deepmerge from \"deepmerge\";\r\nimport zlib from \"react-zlib-js\";\r\nimport { isArray, promisify } from \"util\";\r\nimport { clone } from \"../utils/CoreUtils\";\r\nimport {\r\n  AUTOCAST_INITIAL_STATE,\r\n  createTempState,\r\n  GameState,\r\n  INITIAL_STATE,\r\n} from \"./GameState\";\r\nimport { EquipmentSlot } from \"./items/Equipment\";\r\nimport { getTotalSecondsPlayed } from \"./timetick/TotalTimePlayed\";\r\n\r\nconst gzipCompress = promisify(zlib.gzip);\r\nconst gzipDecompress = promisify(zlib.gunzip);\r\n\r\nexport async function loadData(): Promise<GameState> {\r\n  const jsonValue = await AsyncStorage.getItem(\"MR2.GameState\");\r\n  if (jsonValue !== null) {\r\n    const state = JSON.parse(jsonValue);\r\n\r\n    // Fix all the save compatibility changes\r\n    return makeCompatible(state);\r\n  }\r\n  return clone(INITIAL_STATE);\r\n}\r\n\r\nexport async function saveData(state: GameState): Promise<void> {\r\n  const lastSaveDataTime = Math.max(\r\n    Number.parseFloat(\r\n      (await AsyncStorage.getItem(\"MR2.LastSaveSecondsPlayed\")) || \"0\",\r\n    ),\r\n    0,\r\n  );\r\n  if (Math.max(getTotalSecondsPlayed(state), 0) >= lastSaveDataTime) {\r\n    await saveDataUnsafe(state);\r\n  } else {\r\n    throw new Error(\"Not saving!!\");\r\n  }\r\n}\r\n\r\nexport async function saveDataUnsafe(state: GameState): Promise<void> {\r\n  // Do not save temp\r\n  const oldTemp = state.temp;\r\n  // @ts-ignore We are doing this for saving only\r\n  state.temp = {};\r\n  const jsonValue = JSON.stringify(state);\r\n  state.temp = oldTemp;\r\n  await AsyncStorage.setItem(\r\n    \"MR2.LastSaveSecondsPlayed\",\r\n    Math.max(getTotalSecondsPlayed(state), 0).toString(),\r\n  );\r\n  await AsyncStorage.setItem(\"MR2.GameState\", jsonValue);\r\n}\r\n\r\nexport function makeCompatible(obj: GameState): GameState {\r\n  if (obj.global.autocast == null) {\r\n    obj.global.autocast = AUTOCAST_INITIAL_STATE;\r\n    obj.global.autocast.currentStrategy =\r\n      // @ts-expect-error These values were moved\r\n      clone(obj.run.autocast.strategies[obj.run.autocast.currentStrategyIndex]);\r\n    // @ts-expect-error These values were moved\r\n    delete obj.run.autocast.strategies;\r\n    // @ts-expect-error These values were moved\r\n    delete obj.run.autocast.currentStrategyIndex;\r\n  }\r\n\r\n  for (let rule of obj.global.autocast.currentStrategy.rules) {\r\n    if (rule.id == null) {\r\n      rule.id = Math.random().toString();\r\n    }\r\n  }\r\n\r\n  for (let slot in EquipmentSlot) {\r\n    if (!isArray(obj.run.equipment[slot])) {\r\n      obj.run.equipment[slot] =\r\n        obj.run.equipment[slot] != null ? [obj.run.equipment[slot]] : [];\r\n    }\r\n    obj.run.equipmentLoadouts.forEach((loadout) => {\r\n      if (loadout != null && !isArray(loadout.equipment[slot])) {\r\n        loadout.equipment[slot] =\r\n          loadout.equipment[slot] != null ? [loadout.equipment[slot]] : [];\r\n      }\r\n    });\r\n  }\r\n\r\n  // Dp not load temp\r\n  obj.temp = createTempState();\r\n  return deepmerge(clone(INITIAL_STATE), obj);\r\n}\r\n\r\nexport async function loadBase64Data(\r\n  saveData: string,\r\n): Promise<GameState | null> {\r\n  const decodedBuffer = Buffer.from(\r\n    Buffer.from(saveData, \"base64\").toString(),\r\n    \"base64\",\r\n  );\r\n  const decodedJSON = await gzipDecompress(decodedBuffer);\r\n  const decodedData = JSON.parse(decodedJSON.toString());\r\n  if (decodedData !== null) {\r\n    return makeCompatible(decodedData);\r\n  }\r\n  return null;\r\n}\r\n\r\nexport async function serializeSaveData(state: GameState): Promise<string> {\r\n  // Do not save temp\r\n  const oldTemp = state.temp;\r\n  // @ts-ignore We are doing this for serialization only\r\n  state.temp = {};\r\n  const jsonValue = JSON.stringify(state);\r\n  state.temp = oldTemp;\r\n\r\n  const compressedJSON = await gzipCompress(jsonValue);\r\n  // Double converting to Base64 so it copies well on Android\r\n  return Buffer.from(compressedJSON.toString(\"base64\")).toString(\"base64\");\r\n}\r\n","import { GameState } from \"./GameState\";\r\n\r\nexport function getUICommands(state: GameState) {\r\n  return state.run.uiCommands || [];\r\n}\r\n\r\nexport function clearUICommands(state: GameState) {\r\n  state.run.uiCommands = [];\r\n  return state;\r\n}\r\n\r\nexport function addUICommand(state: GameState, command: string): GameState {\r\n  state.run.uiCommands.push(command);\r\n  return state;\r\n}\r\n","let requiredElectron = null;\r\ntry {\r\n  requiredElectron = window.require(\"electron\");\r\n} catch (e) {\r\n  // Do nothing\r\n}\r\n\r\nexport function isElectron() {\r\n  return requiredElectron != null;\r\n}\r\n\r\nexport function electron() {\r\n  return requiredElectron;\r\n}\r\n","import { Achievement } from \"../backend/Achievement\";\r\nimport { electron, isElectron } from \"./ElectronUtils\";\r\n\r\nexport const ACHIEVEMENTS_SUPPORTED = isElectron();\r\n\r\nexport function unlockAchievementRaw(achievementName: Achievement): void {\r\n  // On Electron, we do want to do something!\r\n  if (isElectron()) {\r\n    electron().ipcRenderer.send(\"unlockAchievement\", achievementName);\r\n  }\r\n}\r\n","import { GameState } from \"./GameState\";\r\n\r\nexport function incrementAccumulatorVariable(\r\n  state: GameState,\r\n  variableName: string,\r\n  amount?: number,\r\n): GameState {\r\n  const currentValue = (state.run.variables?.[variableName] as number) ?? 0;\r\n  state.run.variables[variableName] = currentValue + (amount ?? 0);\r\n  const worldValue = (state.world.variables?.[variableName] as number) ?? 0;\r\n  state.world.variables[variableName] = worldValue + (amount ?? 0);\r\n  return state;\r\n}\r\n\r\nexport function getAccumulatorVariable(\r\n  state: GameState,\r\n  variableName: string,\r\n): number {\r\n  return (state.run.variables?.[variableName] as number) ?? 0;\r\n}\r\n\r\nexport function getWorldAccumulatorVariable(\r\n  state: GameState,\r\n  variableName: string,\r\n): number {\r\n  return (state.world.variables?.[variableName] as number) ?? 0;\r\n}\r\n","import { GameState } from \"../../GameState\";\r\nimport { DataStore } from \"../../generic/DataStore\";\r\nimport { Enemy } from \"./Enemy\";\r\n\r\nconst Enemies = new DataStore<Enemy>();\r\n\r\nexport { Enemies };\r\n\r\nexport function getCurrentEnemy(state: GameState): Enemy {\r\n  return Enemies.getById(state.run.exploration.currentEnemy?.id || \"\");\r\n}\r\n","import { GameState } from \"../GameState\";\r\nimport { CombatActionResult } from \"./ExplorationActionResult\";\r\nimport { ExplorationStatus } from \"./ExplorationStatus\";\r\n\r\n// This is meant to be used primarily inside enemy attack transforms\r\nexport function getLastQueuedActionResult(\r\n  state: GameState,\r\n): CombatActionResult | undefined {\r\n  if (state.run.exploration.actionResultQueue.length == 0) {\r\n    return undefined;\r\n  }\r\n  return state.run.exploration.actionResultQueue[\r\n    state.run.exploration.actionResultQueue.length - 1\r\n  ];\r\n}\r\n\r\nexport function getExplorationStatus(state: GameState): ExplorationStatus {\r\n  return state.run.exploration?.explorationStatus || ExplorationStatus.None;\r\n}\r\n","import { keysOf, valuesOf } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { cacheByArbitraryVersion, cacheIndefinitely } from \"../Caching\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport {\r\n  clearCombatStatCache,\r\n  CombatStat,\r\n  getCachedCombatStat,\r\n} from \"../exploration/CombatStats\";\r\nimport { DungeonFloor } from \"../exploration/dungeons/DungeonFloor\";\r\nimport {\r\n  DungeonFloors,\r\n  getUnlockedDungeons,\r\n} from \"../exploration/dungeons/Dungeons\";\r\nimport { Enemies } from \"../exploration/enemies/Enemies\";\r\nimport { ExplorationStatus } from \"../exploration/ExplorationStatus\";\r\nimport { getExplorationStatus } from \"../exploration/ExplorationUtils\";\r\nimport { Flag } from \"../Flag\";\r\nimport { hasEverHadFlag, hasFlag } from \"../Flags\";\r\nimport { GameState, GameStateTransform, MessageLog } from \"../GameState\";\r\nimport { addGameStateListener } from \"../GameStateListeners\";\r\nimport { DataStore } from \"../generic/DataStore\";\r\nimport { registerTimeTickListener } from \"../timetick/TimeTick\";\r\nimport { getSecondsPlayed } from \"../timetick/TotalTimePlayed\";\r\nimport {\r\n  applyTransformations,\r\n  applyTransformationsCached,\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { FamiliarClass } from \"./FamiliarClass\";\r\n\r\nexport enum FamiliarStatusType {\r\n  Idle = \"Idle\",\r\n  Exploring = \"Exploring\",\r\n  Companion = \"Companion\",\r\n}\r\n\r\nexport function translateFamiliarStatusType(\r\n  status: FamiliarStatusType,\r\n): string {\r\n  switch (status) {\r\n    case FamiliarStatusType.Idle:\r\n      return t(\"Idle\");\r\n    case FamiliarStatusType.Exploring:\r\n      return t(\"Exploring\");\r\n    case FamiliarStatusType.Companion:\r\n      return t(\"At your side\");\r\n    // Do not add a default\r\n  }\r\n}\r\n\r\nexport enum FamiliarCompanionStatusType {\r\n  Reviving = \"Reviving\",\r\n  Exploring = \"Exploring\",\r\n  Combat = \"Combat\",\r\n  Preparing = \"Preparing\",\r\n}\r\n\r\nexport function translateFamiliarCompanionStatusType(\r\n  status: FamiliarCompanionStatusType,\r\n): string {\r\n  switch (status) {\r\n    case FamiliarCompanionStatusType.Preparing:\r\n      return t(\"Getting ready\");\r\n    case FamiliarCompanionStatusType.Exploring:\r\n      return t(\"Exploring\");\r\n    case FamiliarCompanionStatusType.Reviving:\r\n      return t(\"Recovering\");\r\n    case FamiliarCompanionStatusType.Combat:\r\n      return t(\"Fighting\");\r\n    // Do not add a default\r\n  }\r\n}\r\n\r\nexport type FamiliarStatus = {\r\n  status: FamiliarStatusType;\r\n  exploringDungeonFloorId: string;\r\n  exploringNextRandomRoll: number;\r\n  autoExploring: boolean;\r\n  currentHp: number;\r\n  triggerFamiliarDeath: boolean;\r\n  actionProgress: number;\r\n  companionStatus: FamiliarCompanionStatusType;\r\n};\r\n\r\nexport type FamiliarData = {\r\n  id: string;\r\n  familiarClassId: string;\r\n  exp: number;\r\n  status: FamiliarStatus;\r\n  messageLog: MessageLog[];\r\n};\r\n\r\nexport function getFamiliarData(\r\n  state: GameState,\r\n  familiarId: string,\r\n): FamiliarData | undefined {\r\n  return state.run.familiars?.[familiarId];\r\n}\r\n\r\nexport const FamiliarDeletionListeners: DataStore<GameStateTransform> =\r\n  new DataStore();\r\n\r\nexport function deleteFamiliar(\r\n  state: GameState,\r\n  familiarId: string,\r\n): GameState {\r\n  delete state.run.familiars[familiarId];\r\n  FamiliarDeletionListeners.getAll().forEach((transform) => {\r\n    state = transform(state);\r\n  });\r\n  return state;\r\n}\r\n\r\nexport function getCurrentCompanionId(state: GameState): string {\r\n  return getCurrentCompanionData(state)?.id;\r\n}\r\n\r\nexport function getCurrentCompanionData(\r\n  state: GameState,\r\n): FamiliarData | undefined {\r\n  return valuesOf(state.run.familiars).find(\r\n    (familiarData) =>\r\n      familiarData.status.status === FamiliarStatusType.Companion,\r\n  );\r\n}\r\n\r\nexport function getCurrentCompanionClass(\r\n  state: GameState,\r\n): FamiliarClass | undefined {\r\n  const companionData = getCurrentCompanionData(state);\r\n  if (companionData == null) {\r\n    return undefined;\r\n  }\r\n\r\n  return Familiars.getById(companionData.familiarClassId);\r\n}\r\n\r\nexport function setCurrentCompanion(\r\n  state: GameState,\r\n  familiarId: string,\r\n): GameState {\r\n  const currentCompanion = getCurrentCompanionData(state);\r\n  if (currentCompanion != null) {\r\n    currentCompanion.status.status = FamiliarStatusType.Idle;\r\n  }\r\n\r\n  const newCompanionData = getFamiliarData(state, familiarId);\r\n  if (newCompanionData == null) {\r\n    return state;\r\n  }\r\n\r\n  newCompanionData.status.status = FamiliarStatusType.Companion;\r\n  newCompanionData.status.companionStatus =\r\n    FamiliarCompanionStatusType.Preparing;\r\n  newCompanionData.status.actionProgress = 0;\r\n\r\n  return state;\r\n}\r\n\r\nexport function setFamiliarToExplore(\r\n  state: GameState,\r\n  familiarId: string,\r\n  dungeonFloorId: string,\r\n): GameState {\r\n  const familiarData = getFamiliarData(state, familiarId);\r\n  if (familiarData == null) {\r\n    return state;\r\n  }\r\n\r\n  familiarData.status.status = FamiliarStatusType.Exploring;\r\n  familiarData.status.actionProgress = 0;\r\n  familiarData.status.exploringDungeonFloorId = dungeonFloorId;\r\n  familiarData.status.autoExploring = false;\r\n  familiarData.status.exploringNextRandomRoll = Math.random();\r\n\r\n  return state;\r\n}\r\n\r\nexport function setAllFamiliarsToExplore(\r\n  state: GameState,\r\n  dungeonFloorId: string,\r\n): GameState {\r\n  for (let familiarId of keysOf(state.run.familiars)) {\r\n    const familiarData = getFamiliarData(state, familiarId);\r\n    if (\r\n      familiarData == null ||\r\n      familiarData.status.status == FamiliarStatusType.Companion\r\n    ) {\r\n      continue;\r\n    }\r\n    state = setFamiliarToExplore(state, familiarId, dungeonFloorId);\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nexport function setFamiliarToAutoExplore(\r\n  state: GameState,\r\n  familiarId: string,\r\n): GameState {\r\n  const familiarData = getFamiliarData(state, familiarId);\r\n  if (familiarData == null) {\r\n    return state;\r\n  }\r\n\r\n  familiarData.status.status = FamiliarStatusType.Exploring;\r\n  familiarData.status.actionProgress = 0;\r\n  familiarData.status.exploringDungeonFloorId = findMaxFloorForFamiliar(\r\n    state,\r\n    familiarId,\r\n  ).getId();\r\n  familiarData.status.autoExploring = true;\r\n  familiarData.status.exploringNextRandomRoll = Math.random();\r\n\r\n  return state;\r\n}\r\n\r\nexport function setAllFamiliarsToAutoExplore(state: GameState): GameState {\r\n  for (let familiarId of keysOf(state.run.familiars)) {\r\n    const familiarData = getFamiliarData(state, familiarId);\r\n    if (\r\n      familiarData == null ||\r\n      familiarData.status.status == FamiliarStatusType.Companion\r\n    ) {\r\n      continue;\r\n    }\r\n    state = setFamiliarToAutoExplore(state, familiarId);\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nexport function setIdle(state: GameState, familiarId: string): GameState {\r\n  const familiarData = getFamiliarData(state, familiarId);\r\n  if (familiarData == null) {\r\n    return state;\r\n  }\r\n\r\n  familiarData.status.status = FamiliarStatusType.Idle;\r\n  return state;\r\n}\r\n\r\nexport function getFamiliarAmount(state: GameState): number {\r\n  return keysOf(state.run.familiars).length;\r\n}\r\n\r\nexport function getFamiliarMessageLog(\r\n  state: GameState,\r\n  familiarId: string,\r\n): MessageLog[] {\r\n  return getFamiliarData(state, familiarId)?.messageLog;\r\n}\r\n\r\nlet throttleTimestamps: Record<string, number> = {};\r\nlet throttleCounts: Record<string, number> = {};\r\n\r\nconst THROTTLE_THRESHOLD = 40;\r\n\r\nexport function wouldBeThrottledIfPushingToCreatureMessageLog(\r\n  state: GameState,\r\n  familiarId: string,\r\n) {\r\n  const timestamp = Date.now();\r\n  const timestampSec = Math.floor(timestamp / 1000);\r\n  const throttleTimestamp = throttleTimestamps?.[familiarId] ?? 0;\r\n  const throttleCount = throttleCounts?.[familiarId] ?? 0;\r\n  return (\r\n    timestampSec == throttleTimestamp && throttleCount >= THROTTLE_THRESHOLD\r\n  );\r\n}\r\n\r\nexport function pushToFamiliarMessageLog(\r\n  state: GameState,\r\n  familiarId: string,\r\n  log: string,\r\n): GameState {\r\n  const timestamp = Date.now();\r\n  const timestampSec = Math.floor(timestamp / 1000);\r\n  const throttleTimestamp = throttleTimestamps?.[familiarId] ?? 0;\r\n  let throttleCount = throttleCounts?.[familiarId] ?? 0;\r\n  if (throttleTimestamp == timestampSec) {\r\n    throttleCounts[familiarId] = throttleCount++;\r\n  } else {\r\n    throttleTimestamps[familiarId] = timestampSec;\r\n    throttleCounts[familiarId] = 1;\r\n  }\r\n  const familiarData = getFamiliarData(state, familiarId);\r\n  if (familiarData == null) {\r\n    return state;\r\n  }\r\n  const familiarMessageLog = familiarData.messageLog;\r\n  if (throttleCount == THROTTLE_THRESHOLD) {\r\n    familiarMessageLog.unshift({\r\n      id: Math.random().toString(),\r\n      secondsPlayed: getSecondsPlayed(state),\r\n      realTimestamp: timestamp,\r\n      message: t(\"(More loot omitted)\"),\r\n    });\r\n  } else if (throttleCount < THROTTLE_THRESHOLD) {\r\n    familiarMessageLog.unshift({\r\n      id: Math.random().toString(),\r\n      secondsPlayed: getSecondsPlayed(state),\r\n      realTimestamp: timestamp,\r\n      message: log,\r\n    });\r\n  }\r\n  familiarData.messageLog = familiarMessageLog.slice(0, 40);\r\n  return state;\r\n}\r\n\r\nexport function areFamiliarsUnlocked(state: GameState): boolean {\r\n  return hasFlag(state, Flag.FamiliarsUnlocked);\r\n}\r\n\r\nexport function areFamiliarsEverUnlocked(state: GameState): boolean {\r\n  return hasEverHadFlag(state, Flag.FamiliarsUnlocked);\r\n}\r\n\r\nexport function isDungeonFloorValidForFamiliars(\r\n  state: GameState,\r\n  dungeonFloorId: string,\r\n): boolean {\r\n  const dungeonFloor = DungeonFloors.getById(dungeonFloorId);\r\n\r\n  if (!dungeonFloor.isUnlocked(state)) {\r\n    return false;\r\n  }\r\n\r\n  if (\r\n    !dungeonFloor.canFightBoss(state) &&\r\n    dungeonFloor.getBoss(state) !== undefined\r\n  ) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function getFloorsAvailableForFamiliars(state: GameState) {\r\n  if (!areFamiliarsUnlocked(state)) {\r\n    return [];\r\n  }\r\n  return cacheIndefinitely(\r\n    state,\r\n    (_state) => \"floorsAvailableForFamiliars\",\r\n    (state) => {\r\n      const dungeons = getUnlockedDungeons(state);\r\n      const floors = dungeons\r\n        .map((dungeon) => {\r\n          return dungeon\r\n            .getDungeonFloors()\r\n            .filter((floor) =>\r\n              isDungeonFloorValidForFamiliars(state, floor.getId()),\r\n            );\r\n        })\r\n        .flat();\r\n      return floors;\r\n    },\r\n  );\r\n}\r\n\r\nconst Familiars = new DataStore<FamiliarClass>();\r\n\r\nexport { Familiars };\r\n\r\nconst familiarExplorationDelayTags = [\r\n  TransformationTags.FamiliarExplorationDelay,\r\n];\r\n\r\nfunction calculateExplorationDelaySec(\r\n  state: GameState,\r\n  familiarId: string,\r\n): number {\r\n  const familiarData = getFamiliarData(state, familiarId);\r\n  const familiarClass = Familiars.getById(familiarData.familiarClassId);\r\n  const dungeonFloor = DungeonFloors.getById(\r\n    familiarData.status.exploringDungeonFloorId,\r\n  );\r\n  const explorationResult = dungeonFloor.doExplore(\r\n    state,\r\n    true,\r\n    familiarData.status.exploringNextRandomRoll,\r\n  );\r\n  const enemy = explorationResult.enemy;\r\n  const familiarLevel = familiarClass.getLevel(state, familiarId);\r\n  const enemyLevel = enemy?.getLevel() ?? familiarLevel;\r\n  const overlevel = Math.max(0, familiarLevel - enemyLevel);\r\n  const baseExplorationTime = applyTransformationsCached(\r\n    familiarExplorationDelayTags,\r\n    state,\r\n    30.0,\r\n  );\r\n  const explorationTime = Math.pow(0.94, overlevel) * baseExplorationTime;\r\n  return explorationTime;\r\n}\r\n\r\nfunction findMaxFloorForFamiliar(\r\n  state: GameState,\r\n  familiarId: string,\r\n): DungeonFloor | undefined {\r\n  return cacheByArbitraryVersion(\r\n    state,\r\n    \"maxFloorForFamiliarId\" + familiarId,\r\n    (state) => {\r\n      const floors = getFloorsAvailableForFamiliars(state);\r\n      floors.sort(\r\n        (a, b) =>\r\n          b.calculateAverageEnemyLevelForFamiliars(state) -\r\n          a.calculateAverageEnemyLevelForFamiliars(state),\r\n      );\r\n      const topFloor = floors.filter(\r\n        (floor) => !floor.isDangerousForFamiliar(state, familiarId),\r\n      )[0];\r\n      return topFloor;\r\n    },\r\n    (state) => {\r\n      const familiarData = getFamiliarData(state, familiarId);\r\n      const familiarClass = Familiars.getById(familiarData.familiarClassId);\r\n      const level = familiarClass.getLevel(state, familiarId);\r\n\r\n      const floors = getFloorsAvailableForFamiliars(state);\r\n\r\n      return level.toString() + floors.length.toString();\r\n    },\r\n  );\r\n}\r\n\r\nexport function loadFamiliarCommonLogic() {\r\n  registerTransformation(\r\n    [[TransformationTags.FamiliarExp]],\r\n    \"familiarExpScalingFromEnemyLevel\",\r\n    t(\"Strong Enemy\"),\r\n    TransformationType.Multiplier,\r\n    (state, params) => {\r\n      const enemyId = params.enemyId;\r\n      const familiarId = params.familiarId;\r\n\r\n      if (familiarId == null) {\r\n        return 1.0;\r\n      }\r\n\r\n      const enemyLevel = Enemies.getById(enemyId).getLevel();\r\n      const familiarClass = Familiars.getById(\r\n        getFamiliarData(state, familiarId).familiarClassId,\r\n      );\r\n      const familiarLevel = familiarClass.getLevel(state, familiarId);\r\n      const levelDifferenceFactor = Math.max(\r\n        0,\r\n        Math.min(10, enemyLevel - familiarLevel),\r\n      );\r\n\r\n      return Math.pow(1.2, levelDifferenceFactor);\r\n    },\r\n  );\r\n\r\n  const familiarHPRegenTags = [CombatStat.HPRegen, AttackTarget.Familiar];\r\n  registerTimeTickListener(\r\n    \"Familiars\",\r\n    (state, timeElapsedSec, isWarp) => {\r\n      for (let familiarId in state.run.familiars) {\r\n        const familiarData = getFamiliarData(state, familiarId);\r\n        const familiarClass = Familiars.getById(familiarData.familiarClassId);\r\n\r\n        // Apply HP regen: fully recover in 2 minutes normally,\r\n        // but boost HP regen by 10x outside of combat for the current\r\n        // companion\r\n        const regenFraction =\r\n          (timeElapsedSec / 120.0) *\r\n          (getExplorationStatus(state) != ExplorationStatus.Combat &&\r\n          familiarData.status.status == FamiliarStatusType.Companion\r\n            ? 10.0\r\n            : 1.0);\r\n        const maxHP = familiarClass.getMaxHP(state, familiarId);\r\n        const hpToRegenMultiplier = getCachedCombatStat(\r\n          state,\r\n          AttackTarget.Familiar,\r\n          CombatStat.HPRegen,\r\n          (state) => applyTransformations(familiarHPRegenTags, state, maxHP),\r\n          familiarId,\r\n          familiarClass.getLevel(state, familiarId),\r\n        );\r\n        familiarData.status.currentHp = Math.min(\r\n          familiarData.status.currentHp + hpToRegenMultiplier * regenFraction,\r\n          maxHP,\r\n        );\r\n\r\n        if (familiarData.status.status == FamiliarStatusType.Exploring) {\r\n          // We will need to make progress here, AKA breeding-style\r\n          const dungeonFloor = DungeonFloors.getById(\r\n            familiarData.status.exploringDungeonFloorId,\r\n          );\r\n          let explorationResult = dungeonFloor.doExplore(\r\n            state,\r\n            true,\r\n            familiarData.status.exploringNextRandomRoll,\r\n          );\r\n          let explorationTime = calculateExplorationDelaySec(state, familiarId);\r\n          const progress = Math.min(1.0, timeElapsedSec / explorationTime);\r\n          let totalProgress = progress + familiarData.status.actionProgress;\r\n          while (totalProgress >= 1.0) {\r\n            // Explore\r\n            totalProgress -= 1.0;\r\n            state = explorationResult.familiar(state, familiarId);\r\n            const overflowProgress = totalProgress;\r\n            familiarData.status.exploringNextRandomRoll = Math.random();\r\n\r\n            // If auto-exploring, check highest-level floor\r\n            // and switch dungeons if desired\r\n            if (familiarData.status.autoExploring) {\r\n              const nextFloor = findMaxFloorForFamiliar(state, familiarId);\r\n              familiarData.status.exploringDungeonFloorId = nextFloor.getId();\r\n            }\r\n\r\n            const newExplorationTime = calculateExplorationDelaySec(\r\n              state,\r\n              familiarId,\r\n            );\r\n            // Adapt the overflow progress\r\n            totalProgress =\r\n              (overflowProgress * explorationTime) / newExplorationTime;\r\n            explorationResult = dungeonFloor.doExplore(\r\n              state,\r\n              true,\r\n              familiarData.status.exploringNextRandomRoll,\r\n            );\r\n            explorationTime = newExplorationTime;\r\n          }\r\n          familiarData.status.actionProgress = totalProgress;\r\n        }\r\n      }\r\n      return state;\r\n    },\r\n    -20,\r\n  );\r\n\r\n  addGameStateListener(\r\n    \"FamiliarCombatEnd\",\r\n    (state) => {\r\n      const companion = getCurrentCompanionData(state);\r\n      if (companion != null) {\r\n        if (\r\n          (getExplorationStatus(state) === ExplorationStatus.Exploring ||\r\n            getExplorationStatus(state) === ExplorationStatus.ExploringBoss) &&\r\n          (companion.status.companionStatus ===\r\n            FamiliarCompanionStatusType.Combat ||\r\n            companion.status.companionStatus ===\r\n              FamiliarCompanionStatusType.Preparing)\r\n        ) {\r\n          companion.status.companionStatus =\r\n            FamiliarCompanionStatusType.Exploring;\r\n          state = clearCombatStatCache(state, AttackTarget.Familiar);\r\n        }\r\n\r\n        if (\r\n          getExplorationStatus(state) === ExplorationStatus.Combat &&\r\n          companion.status.companionStatus ===\r\n            FamiliarCompanionStatusType.Exploring\r\n        ) {\r\n          companion.status.companionStatus = FamiliarCompanionStatusType.Combat;\r\n          state = clearCombatStatCache(state, AttackTarget.Familiar);\r\n        }\r\n      }\r\n    },\r\n    (state) => getExplorationStatus(state),\r\n  );\r\n\r\n  addGameStateListener(\"FamiliarRevived\", (state) => {\r\n    const companion = getCurrentCompanionData(state);\r\n    if (companion != null) {\r\n      if (\r\n        companion.status.companionStatus ===\r\n          FamiliarCompanionStatusType.Reviving &&\r\n        companion.status.currentHp >=\r\n          getCurrentCompanionClass(state).getStatsForCompanion(state).maxHP *\r\n            0.999\r\n      ) {\r\n        // Reviving is done and ready to go!\r\n        switch (getExplorationStatus(state)) {\r\n          case ExplorationStatus.Exploring:\r\n          case ExplorationStatus.ExploringBoss:\r\n          case ExplorationStatus.Reviving:\r\n          case ExplorationStatus.None:\r\n            companion.status.companionStatus =\r\n              FamiliarCompanionStatusType.Exploring;\r\n          case ExplorationStatus.Combat:\r\n            companion.status.companionStatus =\r\n              FamiliarCompanionStatusType.Combat;\r\n        }\r\n        state = clearCombatStatCache(state, AttackTarget.Familiar);\r\n      }\r\n    }\r\n  });\r\n}\r\n","import memoize from \"sonic-memoize\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport { clearCombatStatCache, CombatStat } from \"../exploration/CombatStats\";\r\nimport { hasWorldFlag, setWorldFlag } from \"../Flags\";\r\nimport { GameState, GameStateTransform } from \"../GameState\";\r\nimport { DataStore } from \"../generic/DataStore\";\r\nimport { getSecondsPlayed } from \"../timetick/TotalTimePlayed\";\r\nimport {\r\n  applyTransformations,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\n\r\nconst TemporaryEffects = new DataStore<TemporaryEffect>();\r\nexport { TemporaryEffects };\r\n\r\nconst TEMPORARY_EFFECT_DELTA = 1e10;\r\nconst CLEAR_EPSILON = TEMPORARY_EFFECT_DELTA / 100;\r\n\r\nexport type TemporaryEffectData = {\r\n  id: string;\r\n  setTime: number;\r\n  endTime: number;\r\n  target: AttackTarget;\r\n  params: Record<string, any>;\r\n  fromAutocast: boolean;\r\n  fromPermacast: boolean;\r\n  fromPouch: boolean;\r\n  registeredClear: boolean;\r\n};\r\n\r\nfunction getLookupId(id: string, target?: AttackTarget): string {\r\n  return id + (target ?? AttackTarget.Player);\r\n}\r\n\r\nexport function getTemporaryEffectEndTime(\r\n  state: GameState,\r\n  id: string,\r\n  target?: AttackTarget,\r\n): number {\r\n  return getTemporaryEffectEndTimeRaw(state, getLookupId(id, target));\r\n}\r\n\r\nexport function getTemporaryEffectEndTimeRaw(\r\n  state: GameState,\r\n  fullId: string,\r\n): number {\r\n  return (\r\n    (state.run.temporaryEffects[fullId] as TemporaryEffectData)?.endTime || 0\r\n  );\r\n}\r\n\r\nexport function getTemporaryEffectSetTime(\r\n  state: GameState,\r\n  id: string,\r\n  target?: AttackTarget,\r\n): number {\r\n  return (\r\n    (\r\n      state.run.temporaryEffects?.[\r\n        getLookupId(id, target)\r\n      ] as TemporaryEffectData\r\n    )?.setTime || 0\r\n  );\r\n}\r\n\r\nexport function wasTemporaryEffectCleared(\r\n  state: GameState,\r\n  id: string,\r\n  target?: AttackTarget,\r\n): boolean {\r\n  const endTime = getTemporaryEffectEndTimeRaw(state, getLookupId(id, target));\r\n  return (\r\n    endTime < getSecondsPlayed(state) - TEMPORARY_EFFECT_DELTA + CLEAR_EPSILON\r\n  );\r\n}\r\n\r\nexport function hasTemporaryEffect(\r\n  state: GameState,\r\n  id: string,\r\n  target?: AttackTarget,\r\n): boolean {\r\n  return hasTemporaryEffectRaw(state, getLookupId(id, target));\r\n}\r\n\r\nfunction hasTemporaryEffectRaw(state: GameState, fullId: string): boolean {\r\n  return getTemporaryEffectEndTimeRaw(state, fullId) > getSecondsPlayed(state);\r\n}\r\n\r\nexport function hasEverHadTemporaryEffect(\r\n  state: GameState,\r\n  id: string,\r\n): boolean {\r\n  return hasWorldFlag(state, \"everHadTemporaryEffect-\" + id);\r\n}\r\n\r\nexport function getTemporaryEffectData(\r\n  state: GameState,\r\n  id: string,\r\n  target?: AttackTarget,\r\n  includeEvenIfExpired?: boolean,\r\n): TemporaryEffectData | undefined {\r\n  if (!includeEvenIfExpired && !hasTemporaryEffect(state, id, target)) {\r\n    return undefined;\r\n  }\r\n  return state.run.temporaryEffects[getLookupId(id, target)];\r\n}\r\n\r\nexport function getTemporaryEffects(\r\n  state: GameState,\r\n  filter?: (state: GameState, effect: TemporaryEffectData) => boolean,\r\n): Array<TemporaryEffectData> {\r\n  let temporaryEffects: TemporaryEffectData[] = [];\r\n  const secondsPlayed = getSecondsPlayed(state);\r\n  for (let effectName in state.run.temporaryEffects) {\r\n    const temporaryEffect = state.run.temporaryEffects[effectName];\r\n    if (\r\n      temporaryEffect.endTime > secondsPlayed &&\r\n      (!filter || filter(state, temporaryEffect))\r\n    ) {\r\n      temporaryEffects.push(temporaryEffect);\r\n    }\r\n  }\r\n  return temporaryEffects;\r\n}\r\n\r\nexport function getTemporaryEffectsForTarget(\r\n  state: GameState,\r\n  target: AttackTarget,\r\n): Array<TemporaryEffectData> {\r\n  let temporaryEffects: TemporaryEffectData[] = [];\r\n  for (let effectName in state.run.temporaryEffects) {\r\n    if (\r\n      state.run.temporaryEffects[effectName].target == target &&\r\n      hasTemporaryEffectRaw(state, effectName)\r\n    ) {\r\n      const temporaryEffect = state.run.temporaryEffects[effectName];\r\n      temporaryEffects.push(temporaryEffect);\r\n    }\r\n  }\r\n  return temporaryEffects;\r\n}\r\n\r\nconst temporaryEffectDurationTags = memoize((id, target) => [\r\n  TransformationTags.TemporaryEffectDurationPostProcessing,\r\n  id,\r\n  target,\r\n]);\r\n\r\nfunction grantTemporaryEffectImpl(\r\n  id: string,\r\n  baseDurationSec: number,\r\n  extra: {\r\n    mode?: \"replace\" | \"add\";\r\n    target?: AttackTarget;\r\n    params?: Record<string, any>;\r\n  },\r\n  state: GameState,\r\n): GameState {\r\n  const mode = extra.mode ?? \"replace\";\r\n  const target = extra.target ?? AttackTarget.Player;\r\n  const params = extra.params ?? {};\r\n  const durationSec = applyTransformations(\r\n    temporaryEffectDurationTags(id, target),\r\n    state,\r\n    baseDurationSec,\r\n    { effectExtra: extra },\r\n  );\r\n\r\n  const newEndTime =\r\n    baseDurationSec == Infinity\r\n      ? Number.MAX_VALUE / 10\r\n      : getSecondsPlayed(state) + durationSec;\r\n  let temporaryEffectData: TemporaryEffectData = {\r\n    id: id,\r\n    setTime: getSecondsPlayed(state),\r\n    endTime: newEndTime,\r\n    target: target,\r\n    params: params,\r\n    fromAutocast: state.temp.isInAutocast,\r\n    fromPermacast: state.temp.isInPermacast,\r\n    fromPouch: state.temp.isInPouch,\r\n    registeredClear: baseDurationSec < 0,\r\n  };\r\n  if (hasTemporaryEffect(state, id, target)) {\r\n    const temporaryEffect = TemporaryEffects.getById(id);\r\n    temporaryEffectData = temporaryEffect.mergeData(\r\n      state,\r\n      getTemporaryEffectData(state, id, target),\r\n      temporaryEffectData,\r\n      mode,\r\n    );\r\n  }\r\n  for (let listener of Object.values(temporaryEffectListeners)) {\r\n    temporaryEffectData = listener(state, temporaryEffectData);\r\n  }\r\n  state.run.temporaryEffects[getLookupId(id, target)] = temporaryEffectData;\r\n  state = setWorldFlag(\"everHadTemporaryEffect-\" + id)(state);\r\n  return state;\r\n}\r\n\r\nexport const grantTemporaryEffect = (\r\n  id: string,\r\n  baseDurationSec: number,\r\n  extra: {\r\n    mode?: \"replace\" | \"add\";\r\n    target?: AttackTarget;\r\n    params?: Record<string, any>;\r\n  },\r\n) => grantTemporaryEffectImpl.bind(this, id, baseDurationSec, extra);\r\n\r\nexport function clearTemporaryEffect(\r\n  this: any,\r\n  id: string,\r\n  target?: AttackTarget,\r\n): GameStateTransform {\r\n  return grantTemporaryEffectImpl.bind(this, id, -TEMPORARY_EFFECT_DELTA, {\r\n    target: target,\r\n  });\r\n}\r\n\r\nexport function clearCombatTemporaryEffects(state: GameState): GameState {\r\n  const effects = getTemporaryEffects(state);\r\n  effects.forEach((effect) => {\r\n    const effectObject = TemporaryEffects.getById(effect.id);\r\n    if (effectObject.isCombatOnly() || effect.target == AttackTarget.Enemy) {\r\n      state = clearTemporaryEffect(effect.id, effect.target)(state);\r\n    }\r\n  });\r\n  return state;\r\n}\r\n\r\nexport const getTemporaryEffectsForCommonBuff = memoize(\r\n  (stat: CombatStat, type: TransformationType): TemporaryEffect[] => {\r\n    return TemporaryEffects.getAll().filter((effect) =>\r\n      effect\r\n        .isCommonBuffEnabled()\r\n        .some((value) => value.stat == stat && value.type == type),\r\n    );\r\n  },\r\n);\r\n\r\nexport type TemporaryEffectListenerTransform = (\r\n  state: GameState,\r\n  temporaryEffect: TemporaryEffectData,\r\n) => TemporaryEffectData;\r\n\r\nconst temporaryEffectListeners: Record<\r\n  string,\r\n  TemporaryEffectListenerTransform\r\n> = {};\r\n\r\nexport function registerTemporaryEffectListener(\r\n  id: string,\r\n  listener: TemporaryEffectListenerTransform,\r\n  registerExpiration?: boolean,\r\n) {\r\n  temporaryEffectListeners[id] = listener;\r\n  if (registerExpiration) {\r\n    TemporaryEffectExpirationListeners.register(listener);\r\n  }\r\n}\r\n\r\nexport const TemporaryEffectExpirationListeners = new DataStore<\r\n  (state: GameState, effect: TemporaryEffectData) => void\r\n>();\r\n\r\nexport function registerTemporaryEffectCombatStatCacheClearer(\r\n  id: string,\r\n  stat: CombatStat,\r\n) {\r\n  registerTemporaryEffectListener(\r\n    id + stat + \"cacheClearer\",\r\n    (state, effect) => {\r\n      if (effect.id == id) {\r\n        state = clearCombatStatCache(state, effect.target, stat);\r\n      }\r\n      return effect;\r\n    },\r\n    true,\r\n  );\r\n}\r\n","import { GameState } from \"../GameState\";\r\nimport { DataStore } from \"../generic/DataStore\";\r\nimport { AttackTarget } from \"./AttackTarget\";\r\n\r\n/**\r\n * PlayerDeathInterceptors return true if player death is to be prevented.\r\n * Use in conjunction with some ContextListener that does some action.\r\n */\r\n\r\nexport type DeathInterceptor = (\r\n  state: GameState,\r\n  target: AttackTarget,\r\n) => boolean;\r\n\r\nconst DeathInterceptors = new DataStore<DeathInterceptor>();\r\n\r\nexport { DeathInterceptors };\r\n","import { GameState } from \"../GameState\";\r\nimport { DataStore } from \"../generic/DataStore\";\r\nimport { getSecondsPlayed } from \"../timetick/TotalTimePlayed\";\r\nimport { AttackTarget } from \"./AttackTarget\";\r\n\r\nexport type CombatActionResult = {\r\n  id: string;\r\n  damage: number;\r\n  isHit: boolean;\r\n  isCrit: boolean;\r\n  time: number;\r\n  source: AttackTarget;\r\n  target: AttackTarget;\r\n  tags: string[];\r\n};\r\n\r\nexport type CombatActionResultListener = (\r\n  state: GameState,\r\n  result: CombatActionResult,\r\n) => GameState;\r\n\r\nconst CombatActionResultListeners = new DataStore<CombatActionResultListener>();\r\n\r\nexport { CombatActionResultListeners };\r\n\r\nexport function pushCombatActionResult(\r\n  state: GameState,\r\n  combatActionResult: CombatActionResult,\r\n): GameState {\r\n  state.run.exploration.actionResultQueue.push(combatActionResult);\r\n  state.run.exploration.lastActionResultPushedTime = getSecondsPlayed(state);\r\n\r\n  // Prevent super long action queues\r\n  if (state.run.exploration.actionResultQueue.length > 20) {\r\n    state.run.exploration.actionResultQueue =\r\n      state.run.exploration.actionResultQueue.slice(-10);\r\n  }\r\n\r\n  CombatActionResultListeners.getAll().forEach((listener) => {\r\n    state = listener(state, combatActionResult);\r\n  });\r\n  return state;\r\n}\r\n","import {\r\n  FamiliarCompanionStatusType,\r\n  getCurrentCompanionData,\r\n} from \"../familiars/Familiar\";\r\nimport { GameState } from \"../GameState\";\r\n\r\nexport function hasCurrentActiveCompanion(state: GameState): boolean {\r\n  return (\r\n    getCurrentCompanionData(state) != null &&\r\n    getCurrentCompanionData(state).status.companionStatus ===\r\n      FamiliarCompanionStatusType.Combat\r\n  );\r\n}\r\n\r\nexport function hasCurrentCompanion(state: GameState): boolean {\r\n  return getCurrentCompanionData(state) != null;\r\n}\r\n","import memoize from \"sonic-memoize\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { incrementAccumulatorVariable } from \"../AccumulatorVariables\";\r\nimport { clearCacheKey } from \"../Caching\";\r\nimport { Flag } from \"../Flag\";\r\nimport {\r\n  clearFlag,\r\n  getCombatVariable,\r\n  hasEverHadFlag,\r\n  hasFlag,\r\n  resetAllCombatVariables,\r\n  setCombatVariable,\r\n  setFlag,\r\n} from \"../Flags\";\r\nimport {\r\n  EXPLORATION_INITIAL_STATE,\r\n  GameState,\r\n  GameStateTransform,\r\n} from \"../GameState\";\r\nimport {\r\n  addGameStateListener,\r\n  addHighPriorityGameStateListener,\r\n} from \"../GameStateListeners\";\r\nimport {\r\n  FamiliarCompanionStatusType,\r\n  getCurrentCompanionClass,\r\n  getCurrentCompanionData,\r\n} from \"../familiars/Familiar\";\r\nimport { FamiliarClass } from \"../familiars/FamiliarClass\";\r\nimport { DataStore } from \"../generic/DataStore\";\r\nimport { EquipmentSlot, getEquippedItems } from \"../items/Equipment\";\r\nimport { Items } from \"../items/Items\";\r\nimport { PouchItem } from \"../items/equipment/PouchItem\";\r\nimport {\r\n  TemporaryEffects,\r\n  clearCombatTemporaryEffects,\r\n  clearTemporaryEffect,\r\n  getTemporaryEffects,\r\n} from \"../temporaryeffects/TemporaryEffects\";\r\nimport { registerTimeTickListener } from \"../timetick/TimeTick\";\r\nimport { getSecondsPlayed } from \"../timetick/TotalTimePlayed\";\r\nimport {\r\n  TransformationType,\r\n  applyTransformations,\r\n  registerTransformation,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { AttackTarget } from \"./AttackTarget\";\r\nimport {\r\n  CombatStat,\r\n  calculatePlayerAccuracyPoints,\r\n  calculatePlayerAttack,\r\n  calculatePlayerAttackDelaySec,\r\n  calculatePlayerCritPoints,\r\n  calculatePlayerDefense,\r\n  calculatePlayerDodgePoints,\r\n  calculatePlayerHPRegenRatioPerSec,\r\n  calculatePlayerMaxHP,\r\n  clearCombatStatCache,\r\n  getCachedCombatStat,\r\n} from \"./CombatStats\";\r\nimport { DeathInterceptors } from \"./DeathInterceptors\";\r\nimport {\r\n  CombatActionResult,\r\n  pushCombatActionResult,\r\n} from \"./ExplorationActionResult\";\r\nimport { ExplorationStatus } from \"./ExplorationStatus\";\r\nimport { getExplorationStatus } from \"./ExplorationUtils\";\r\nimport { hasCurrentActiveCompanion } from \"./Summoning\";\r\nimport { DungeonFloor } from \"./dungeons/DungeonFloor\";\r\nimport { DungeonFloors } from \"./dungeons/Dungeons\";\r\nimport { getCurrentEnemy } from \"./enemies/Enemies\";\r\nimport { BattlerAction, Enemy } from \"./enemies/Enemy\";\r\n\r\nlet lastSelectedEnemyAction: BattlerAction | undefined = undefined;\r\nlet lastSelectedFamiliarAction: BattlerAction | undefined = undefined;\r\n\r\nexport function isExplorationUnlocked(state: GameState): boolean {\r\n  return hasFlag(state, Flag.ExplorationUnlocked);\r\n}\r\n\r\nexport function isExplorationEverUnlocked(state: GameState): boolean {\r\n  return hasEverHadFlag(state, Flag.ExplorationUnlocked);\r\n}\r\n\r\nexport function startExplorationOnFloor(\r\n  state: GameState,\r\n  dungeonFloor: DungeonFloor,\r\n): GameState {\r\n  if (!state.run.exploration) {\r\n    state.run.exploration = EXPLORATION_INITIAL_STATE;\r\n  }\r\n  if (!dungeonFloor.isUnlocked(state)) {\r\n    return state;\r\n  }\r\n  state.run.exploration.currentDungeonFloorId = dungeonFloor.getId();\r\n  return startExploration(state);\r\n}\r\n\r\nexport function startExploration(state: GameState): GameState {\r\n  if (!state.run.exploration) {\r\n    state.run.exploration = EXPLORATION_INITIAL_STATE;\r\n  }\r\n  state.run.exploration.explorationStartTime = getSecondsPlayed(state);\r\n  state.run.exploration.explorationStatus = ExplorationStatus.Exploring;\r\n  return state;\r\n}\r\n\r\nexport function startBossExploration(state: GameState): GameState {\r\n  if (!state.run.exploration) {\r\n    state.run.exploration = EXPLORATION_INITIAL_STATE;\r\n  }\r\n  state.run.exploration.explorationStartTime = getSecondsPlayed(state);\r\n  state.run.exploration.explorationStatus = ExplorationStatus.ExploringBoss;\r\n  return state;\r\n}\r\n\r\nexport function getExplorationStartTime(state: GameState): number {\r\n  return state.run.exploration?.explorationStartTime || 0;\r\n}\r\n\r\nexport function getCurrentDungeonFloor(state: GameState): DungeonFloor {\r\n  return DungeonFloors.getById(\r\n    state.run.exploration?.currentDungeonFloorId || \"\",\r\n  );\r\n}\r\n\r\nfunction startCombatImpl(enemy: Enemy, state: GameState): GameState {\r\n  if (!state.run.exploration) {\r\n    state.run.exploration = EXPLORATION_INITIAL_STATE;\r\n  }\r\n  state = clearCombatTemporaryEffects(state);\r\n  state = resetAllCombatVariables(state);\r\n  for (let itemOccurrence of getEquippedItems(state, EquipmentSlot.Pouch)) {\r\n    if (itemOccurrence != null) {\r\n      const item = Items.getById(itemOccurrence.itemId) as PouchItem;\r\n      state = item.doCleanup(state, itemOccurrence.params);\r\n    }\r\n  }\r\n  state.run.exploration.pouchItemsUsesLeft = {};\r\n  state.run.exploration.explorationStatus = ExplorationStatus.Combat;\r\n  state.run.exploration.currentEnemy = {\r\n    id: enemy.getId(),\r\n    currentHP: enemy.getMaxHP(state),\r\n  };\r\n  state = clearCombatStatCache(state, AttackTarget.Enemy);\r\n  // Do this one more time as getMaxHP depends on currentEnemy being set\r\n  state.run.exploration.currentEnemy.currentHP = enemy.getMaxHP(state);\r\n  state = enemy.onEncounter(state);\r\n  lastSelectedEnemyAction = enemy.getNextAction(state);\r\n  lastSelectedFamiliarAction = undefined;\r\n  const hasCompanion = hasCurrentActiveCompanion(state);\r\n  if (hasCompanion) {\r\n    const companion = getCurrentCompanionClass(state) as FamiliarClass;\r\n    lastSelectedFamiliarAction = companion.getNextActionForCompanion(state);\r\n    state.run.exploration.familiarActionProgress = 0.0;\r\n  }\r\n  state.run.exploration.playerActionProgress = 0.0;\r\n  state.run.exploration.enemyActionProgress = 0.0;\r\n  return state;\r\n}\r\n\r\nexport function getPlayerActionProgress(state: GameState): number {\r\n  return state.run.exploration?.playerActionProgress || 0.0;\r\n}\r\n\r\nexport function getEnemyActionProgress(state: GameState): number {\r\n  return state.run.exploration?.enemyActionProgress || 0.0;\r\n}\r\n\r\nexport function getFamiliarActionProgress(state: GameState): number {\r\n  return state.run.exploration?.familiarActionProgress || 0.0;\r\n}\r\n\r\nexport function startCombat(this: any, enemy: Enemy): GameStateTransform {\r\n  return startCombatImpl.bind(this, enemy);\r\n}\r\n\r\nexport function getCurrentPlayerHP(state: GameState): number {\r\n  return state.run.exploration?.currentHP || 0;\r\n}\r\n\r\nexport function getCurrentFamiliarHP(state: GameState): number {\r\n  return getCurrentCompanionData(state)?.status?.currentHp || 0;\r\n}\r\n\r\nexport function getCurrentEnemyHP(state: GameState): number {\r\n  return state.run.exploration?.currentEnemy?.currentHP || 0;\r\n}\r\n\r\nexport function getCurrentPlayerHPFraction(state: GameState): number {\r\n  return getCurrentPlayerHP(state) / calculatePlayerMaxHP(state);\r\n}\r\n\r\nexport function getCurrentFamiliarHPFraction(state: GameState): number {\r\n  return (\r\n    getCurrentFamiliarHP(state) /\r\n    getCurrentCompanionClass(state).getStatsForCompanion(state).maxHP\r\n  );\r\n}\r\n\r\nexport function getCurrentEnemyHPFraction(state: GameState): number {\r\n  return (\r\n    getCurrentEnemyHP(state) / (getCurrentEnemy(state)?.getMaxHP(state) ?? 1.0)\r\n  );\r\n}\r\n\r\nconst DAMAGE_INFLECTION = 1.15;\r\nexport function calculateDamage(attack: number, defense: number): number {\r\n  let damage = 1;\r\n  if (attack * DAMAGE_INFLECTION > defense) {\r\n    damage = attack - defense / 2;\r\n  } else {\r\n    damage =\r\n      attack -\r\n      (attack * DAMAGE_INFLECTION) / 2 -\r\n      ((Math.pow(attack, 2) * Math.pow(DAMAGE_INFLECTION, 2)) / 2) *\r\n        -1 *\r\n        (1 / defense - 1 / (DAMAGE_INFLECTION * attack));\r\n  }\r\n  return Math.max(damage, 1);\r\n}\r\n\r\nexport function calculateIsHit(\r\n  accuracyPoints: number,\r\n  dodgePoints: number,\r\n): boolean {\r\n  const ratio = Math.min(accuracyPoints / Math.max(1, dodgePoints), 1.0);\r\n  // This formula creates the following effect:\r\n  // Ratio >= 1: hitOdds is 100%+\r\n  // Ratio == 0.66: hitOdds is about 74%\r\n  // Ratio == 0.5: hitOdds is about 50%\r\n  // Ratio == 0.25: hitOdds is 0%\r\n  const hitOdds = -1.33333 * Math.pow(ratio, 2) + 3 * ratio - 0.66667;\r\n  return Math.random() < hitOdds;\r\n}\r\n\r\nexport function modifyTargetCurrentHP(\r\n  state: GameState,\r\n  target: AttackTarget,\r\n  amount: number,\r\n  cause?: string | null,\r\n): GameState {\r\n  switch (target) {\r\n    case AttackTarget.Player:\r\n      return modifyPlayerCurrentHP(state, amount, cause);\r\n    case AttackTarget.Familiar:\r\n      return modifyCompanionCurrentHP(state, amount, cause);\r\n    case AttackTarget.Enemy:\r\n      return modifyEnemyCurrentHP(state, amount);\r\n  }\r\n}\r\n\r\nexport function modifyPlayerCurrentHP(\r\n  state: GameState,\r\n  amount: number,\r\n  cause?: string | null,\r\n): GameState {\r\n  if (\r\n    amount < 0 &&\r\n    state.run.exploration.currentHP + amount <= 0 &&\r\n    !state.run.exploration.triggerPlayerDeath\r\n  ) {\r\n    cause = cause ?? lastSelectedEnemyAction?.name;\r\n    state.run.exploration.lastPlayerDamageCause = cause;\r\n  }\r\n  state.run.exploration.currentHP = Math.min(\r\n    calculatePlayerMaxHP(state),\r\n    Math.max(state.run.exploration.currentHP + amount, 0),\r\n  );\r\n  if (state.run.exploration.currentHP <= 0) {\r\n    state.run.exploration.triggerPlayerDeath = true;\r\n  }\r\n  return state;\r\n}\r\n\r\nexport function modifyCompanionCurrentHP(\r\n  state: GameState,\r\n  amount: number,\r\n  cause: string | null | undefined,\r\n): GameState {\r\n  if (!hasCurrentActiveCompanion(state)) {\r\n    return state;\r\n  }\r\n\r\n  const currentCompanion = getCurrentCompanionClass(state) as FamiliarClass;\r\n  const currentCompanionData = getCurrentCompanionData(state);\r\n  currentCompanionData.status.currentHp = Math.min(\r\n    currentCompanion.getStatsForCompanion(state).maxHP,\r\n    Math.max(currentCompanionData.status.currentHp + amount, 0),\r\n  );\r\n  if (currentCompanionData.status.currentHp <= 0) {\r\n    currentCompanionData.status.triggerFamiliarDeath = true;\r\n  }\r\n  return state;\r\n}\r\n\r\nexport function modifyEnemyCurrentHP(\r\n  state: GameState,\r\n  amount: number,\r\n): GameState {\r\n  const currentEnemy = getCurrentEnemy(state);\r\n  state.run.exploration.currentEnemy.currentHP = Math.min(\r\n    currentEnemy.getMaxHP(state),\r\n    state.run.exploration.currentEnemy.currentHP + amount,\r\n  );\r\n  return state;\r\n}\r\n\r\nexport function executePlayerAutoAttack(state: GameState): GameState {\r\n  state = standardPlayerAttackEffect(state, calculatePlayerAttack(state), {\r\n    tags: [TransformationTags.AutoAttack],\r\n  });\r\n  return state;\r\n}\r\n\r\nexport function executeFamiliarAction(state: GameState): GameState {\r\n  const familiar = getCurrentCompanionData(state);\r\n  if (\r\n    lastSelectedFamiliarAction &&\r\n    familiar != null &&\r\n    familiar.status.companionStatus === FamiliarCompanionStatusType.Combat\r\n  ) {\r\n    state = lastSelectedFamiliarAction.transform(state);\r\n  }\r\n  return state;\r\n}\r\n\r\nexport function executeEnemyAction(state: GameState): GameState {\r\n  if (lastSelectedEnemyAction) {\r\n    state = lastSelectedEnemyAction.transform(state);\r\n  }\r\n  return state;\r\n}\r\n\r\nexport function getCurrentHPFromTarget(\r\n  state: GameState,\r\n  target: AttackTarget,\r\n): number {\r\n  switch (target) {\r\n    case AttackTarget.Player:\r\n      return getCurrentPlayerHP(state);\r\n    case AttackTarget.Familiar:\r\n      return getCurrentFamiliarHP(state);\r\n    case AttackTarget.Enemy:\r\n      return getCurrentEnemyHP(state);\r\n  }\r\n}\r\n\r\nexport function getStatFromTarget(\r\n  state: GameState,\r\n  target: AttackTarget,\r\n  stat: CombatStat,\r\n): number {\r\n  switch (target) {\r\n    case AttackTarget.Player:\r\n      switch (stat) {\r\n        case CombatStat.MaxHP:\r\n          return calculatePlayerMaxHP(state);\r\n        case CombatStat.Attack:\r\n          return calculatePlayerAttack(state);\r\n        case CombatStat.AttackDelay:\r\n          return calculatePlayerAttackDelaySec(state);\r\n        case CombatStat.Defense:\r\n          return calculatePlayerDefense(state);\r\n        case CombatStat.Accuracy:\r\n          return calculatePlayerAccuracyPoints(state);\r\n        case CombatStat.Dodge:\r\n          return calculatePlayerDodgePoints(state);\r\n        case CombatStat.Crit:\r\n          return calculatePlayerCritPoints(state);\r\n        case CombatStat.HPRegen:\r\n          return calculatePlayerHPRegenRatioPerSec(state);\r\n      }\r\n    case AttackTarget.Familiar:\r\n      const familiar = getCurrentCompanionClass(state);\r\n      if (stat === CombatStat.HPRegen) {\r\n        return 0;\r\n      }\r\n      return familiar.getStatsForCompanion(state, stat)[\r\n        stat[0].toLowerCase() + stat.substring(1)\r\n      ];\r\n    case AttackTarget.Enemy:\r\n      const enemy = getCurrentEnemy(state);\r\n      switch (stat) {\r\n        case CombatStat.MaxHP:\r\n          return enemy?.getMaxHP?.(state);\r\n        case CombatStat.Attack:\r\n          return enemy?.getAttack?.(state);\r\n        case CombatStat.AttackDelay:\r\n          return enemy?.getAttackDelay?.(state);\r\n        case CombatStat.Defense:\r\n          return enemy?.getDefense?.(state);\r\n        case CombatStat.Accuracy:\r\n          return enemy?.getAccuracyPoints?.(state);\r\n        case CombatStat.Dodge:\r\n          return enemy?.getDodgePoints?.(state);\r\n        case CombatStat.Crit:\r\n          return enemy?.getCriticalPoints?.(state);\r\n        case CombatStat.HPRegen:\r\n          return 0;\r\n      }\r\n  }\r\n}\r\n\r\nexport function calculateAttackTarget(state: GameState): AttackTarget {\r\n  if (\r\n    hasCurrentActiveCompanion(state) &&\r\n    !state.run.exploration.familiarIsInBackRow\r\n  ) {\r\n    return AttackTarget.Familiar;\r\n  }\r\n  return AttackTarget.Player;\r\n}\r\n\r\nexport function calculateIsEnemyHit(\r\n  state: GameState,\r\n  modifiedAccuracyPoints: number,\r\n  forcedTarget?: AttackTarget,\r\n): boolean {\r\n  const target = forcedTarget ?? calculateAttackTarget(state);\r\n  let dodgePoints = getStatFromTarget(state, target, CombatStat.Dodge);\r\n  return calculateIsHit(modifiedAccuracyPoints, dodgePoints);\r\n}\r\n\r\nconst attackDamageReceivedByTargetTags = memoize((target) => [\r\n  TransformationTags.AttackDamageReceived,\r\n  target,\r\n]);\r\n\r\nconst critResistanceByTargetTags = memoize((target) => [\r\n  target,\r\n  TransformationTags.CriticalResistance,\r\n]);\r\n\r\nexport function standardEnemyAttackEffect(\r\n  state: GameState,\r\n  attack: number,\r\n  options?: {\r\n    accuracyMultiplier?: number;\r\n    accuracyAddition?: number;\r\n    critChanceMultiplier?: number;\r\n    forcedTarget?: AttackTarget;\r\n    tags?: string[];\r\n    cause?: string;\r\n    onHit?: (state: GameState, actionResult: CombatActionResult) => GameState;\r\n  },\r\n): GameState {\r\n  const enemy = getCurrentEnemy(state);\r\n  const modifiedAccuracyPoints =\r\n    (enemy.getAccuracyPoints(state) + (options?.accuracyAddition ?? 0.0)) *\r\n    (options?.accuracyMultiplier ?? 1.0);\r\n  const target = options?.forcedTarget ?? calculateAttackTarget(state);\r\n  const isHit = calculateIsEnemyHit(state, modifiedAccuracyPoints, target);\r\n  let damage = 0,\r\n    isCrit = false;\r\n  if (isHit) {\r\n    const critChance =\r\n      (enemy.getCriticalPoints(state) *\r\n        (options?.critChanceMultiplier ?? 1.0)) /\r\n      100.0;\r\n    isCrit = Math.random() < (critChance ?? 0);\r\n    const critMultiplier = 1.5;\r\n\r\n    if (isCrit) {\r\n      const critResistance = applyTransformations(\r\n        critResistanceByTargetTags(target),\r\n        state,\r\n        0,\r\n        { target, tags: options?.tags },\r\n      );\r\n      if (Math.random() < critResistance) {\r\n        isCrit = false;\r\n      }\r\n    }\r\n    const defense = getStatFromTarget(state, target, CombatStat.Defense);\r\n    damage = calculateDamage(\r\n      isCrit ? attack * critMultiplier : attack,\r\n      isCrit ? 0 : defense,\r\n    );\r\n    damage = applyTransformations(\r\n      attackDamageReceivedByTargetTags(target),\r\n      state,\r\n      damage,\r\n      {\r\n        target,\r\n        tags: options?.tags,\r\n      },\r\n    );\r\n    state = modifyTargetCurrentHP(state, target, -damage, options?.cause);\r\n  }\r\n  const enemyAction = {\r\n    id: Math.random().toString(),\r\n    damage,\r\n    isHit,\r\n    isCrit,\r\n    time: getSecondsPlayed(state),\r\n    source: AttackTarget.Enemy,\r\n    target,\r\n    tags: options?.tags ?? [],\r\n  };\r\n  state = pushCombatActionResult(state, enemyAction);\r\n  state = options?.onHit != null ? options.onHit(state, enemyAction) : state;\r\n  return state;\r\n}\r\n\r\nexport function aoeEnemyAttackEffect(\r\n  state: GameState,\r\n  attack: number,\r\n  options?: {\r\n    accuracyMultiplier?: number;\r\n    accuracyAddition?: number;\r\n    critChanceMultiplier?: number;\r\n    cause?: string;\r\n    tags?: string[];\r\n    onHit?: (state: GameState, actionResult: CombatActionResult) => GameState;\r\n  },\r\n) {\r\n  if (hasCurrentActiveCompanion(state)) {\r\n    state = standardEnemyAttackEffect(state, attack, {\r\n      ...options,\r\n      forcedTarget: AttackTarget.Familiar,\r\n    });\r\n  }\r\n  state = standardEnemyAttackEffect(state, attack, {\r\n    ...options,\r\n    forcedTarget: AttackTarget.Player,\r\n  });\r\n  return state;\r\n}\r\n\r\nexport function fractionEnemyAttackEffect(\r\n  state: GameState,\r\n  fraction: number,\r\n  options?: {\r\n    accuracyMultiplier?: number;\r\n    forcedTarget?: AttackTarget;\r\n    cause?: string;\r\n    tags?: string[];\r\n  },\r\n): GameState {\r\n  const enemy = getCurrentEnemy(state);\r\n  const modifiedAccuracyPoints =\r\n    enemy.getAccuracyPoints(state) * (options?.accuracyMultiplier ?? 1.0);\r\n  const target = options?.forcedTarget ?? calculateAttackTarget(state);\r\n  const isHit = calculateIsEnemyHit(state, modifiedAccuracyPoints, target);\r\n  const isCrit = false;\r\n  let damage = 0;\r\n  if (isHit) {\r\n    if (target === AttackTarget.Player) {\r\n      damage = getCurrentPlayerHP(state) * fraction;\r\n      state = modifyPlayerCurrentHP(state, -damage, options?.cause);\r\n    } else if (target === AttackTarget.Familiar) {\r\n      damage = getCurrentFamiliarHP(state) * fraction;\r\n      state = modifyCompanionCurrentHP(state, -damage, options?.cause);\r\n    } else {\r\n      damage = getCurrentEnemyHP(state) * fraction;\r\n      state = modifyEnemyCurrentHP(state, -damage);\r\n    }\r\n  }\r\n  const enemyAction = {\r\n    id: Math.random().toString(),\r\n    damage,\r\n    isHit,\r\n    isCrit,\r\n    time: getSecondsPlayed(state),\r\n    source: AttackTarget.Enemy,\r\n    target,\r\n    tags: options?.tags,\r\n  };\r\n  state = pushCombatActionResult(state, enemyAction);\r\n  return state;\r\n}\r\n\r\nexport function pierceDefenseAoEEnemyAttackEffect(\r\n  state: GameState,\r\n  attack: number,\r\n  options?: {\r\n    accuracyMultiplier?: number;\r\n    critChanceMultiplier?: number;\r\n    cause?: string;\r\n    tags?: string[];\r\n  },\r\n) {\r\n  if (hasCurrentActiveCompanion(state)) {\r\n    state = pierceDefenseEnemyAttackEffect(state, attack, {\r\n      ...options,\r\n      forcedTarget: AttackTarget.Familiar,\r\n    });\r\n  }\r\n  state = pierceDefenseEnemyAttackEffect(state, attack, {\r\n    ...options,\r\n    forcedTarget: AttackTarget.Player,\r\n  });\r\n  return state;\r\n}\r\n\r\nexport function pierceDefenseEnemyAttackEffect(\r\n  state: GameState,\r\n  attack: number,\r\n  options?: {\r\n    accuracyMultiplier?: number;\r\n    critChanceMultiplier?: number;\r\n    forcedTarget?: AttackTarget;\r\n    cause?: string;\r\n    tags?: string[];\r\n  },\r\n): GameState {\r\n  const enemy = getCurrentEnemy(state);\r\n  const modifiedAccuracyPoints =\r\n    enemy.getAccuracyPoints(state) * (options?.accuracyMultiplier ?? 1.0);\r\n  const target = options?.forcedTarget ?? calculateAttackTarget(state);\r\n  const isHit = calculateIsEnemyHit(state, modifiedAccuracyPoints, target);\r\n  let damage = 0,\r\n    isCrit = false;\r\n  if (isHit) {\r\n    const critChance =\r\n      (enemy.getCriticalPoints(state) *\r\n        (options?.critChanceMultiplier ?? 1.0)) /\r\n      100.0;\r\n    isCrit = Math.random() < (critChance ?? 0);\r\n\r\n    if (isCrit) {\r\n      const critResistance = applyTransformations(\r\n        critResistanceByTargetTags(target),\r\n        state,\r\n        0,\r\n        { target, tags: options?.tags },\r\n      );\r\n      if (Math.random() < critResistance) {\r\n        isCrit = false;\r\n      }\r\n    }\r\n\r\n    const critMultiplier = 1.5;\r\n    damage = isCrit ? attack * critMultiplier : attack;\r\n    damage = applyTransformations(\r\n      attackDamageReceivedByTargetTags(target),\r\n      state,\r\n      damage,\r\n      {\r\n        target,\r\n        tags: options?.tags,\r\n      },\r\n    );\r\n    state = modifyTargetCurrentHP(state, target, -damage, options?.cause);\r\n  }\r\n  const enemyAction = {\r\n    id: Math.random().toString(),\r\n    damage,\r\n    isHit,\r\n    isCrit,\r\n    time: getSecondsPlayed(state),\r\n    source: AttackTarget.Enemy,\r\n    target,\r\n    tags: options?.tags ?? [],\r\n  };\r\n  state = pushCombatActionResult(state, enemyAction);\r\n  return state;\r\n}\r\n\r\nexport function drainingEnemyAttackEffect(\r\n  state: GameState,\r\n  attack: number,\r\n  options?: {\r\n    accuracyMultiplier?: number;\r\n    critChanceMultiplier?: number;\r\n    forcedTarget?: AttackTarget;\r\n    cause?: string;\r\n    tags?: string[];\r\n  },\r\n): GameState {\r\n  const enemy = getCurrentEnemy(state);\r\n  const modifiedAccuracyPoints =\r\n    enemy.getAccuracyPoints(state) * (options?.accuracyMultiplier ?? 1.0);\r\n  const target = options?.forcedTarget ?? calculateAttackTarget(state);\r\n  const isHit = calculateIsEnemyHit(state, modifiedAccuracyPoints, target);\r\n  let damage = 0,\r\n    isCrit = false;\r\n  if (isHit) {\r\n    const critChance =\r\n      (enemy.getCriticalPoints(state) *\r\n        (options?.critChanceMultiplier ?? 1.0)) /\r\n      100.0;\r\n    isCrit = Math.random() < (critChance ?? 0);\r\n\r\n    if (isCrit) {\r\n      const critResistance = applyTransformations(\r\n        critResistanceByTargetTags(target),\r\n        state,\r\n        0,\r\n        { target, tags: options?.tags },\r\n      );\r\n      if (Math.random() < critResistance) {\r\n        isCrit = false;\r\n      }\r\n    }\r\n\r\n    const critMultiplier = 1.5;\r\n    damage = isCrit ? attack * critMultiplier : attack;\r\n    const defense = getStatFromTarget(state, target, CombatStat.Defense);\r\n    damage = calculateDamage(\r\n      isCrit ? attack * critMultiplier : attack,\r\n      isCrit ? 0 : defense,\r\n    );\r\n    damage = applyTransformations(\r\n      attackDamageReceivedByTargetTags(target),\r\n      state,\r\n      damage,\r\n      {\r\n        target,\r\n        tags: options?.tags,\r\n      },\r\n    );\r\n    state = modifyTargetCurrentHP(state, target, -damage, options?.cause);\r\n    state = modifyEnemyCurrentHP(state, +damage);\r\n\r\n    const healingAction = {\r\n      id: Math.random().toString(),\r\n      damage: -damage,\r\n      isHit: true,\r\n      isCrit: false,\r\n      time: getSecondsPlayed(state),\r\n      source: AttackTarget.Enemy,\r\n      target: AttackTarget.Enemy,\r\n      tags: options?.tags ?? [],\r\n    };\r\n    state = pushCombatActionResult(state, healingAction);\r\n  }\r\n\r\n  const enemyAction = {\r\n    id: Math.random().toString(),\r\n    damage,\r\n    isHit,\r\n    isCrit,\r\n    time: getSecondsPlayed(state),\r\n    source: AttackTarget.Enemy,\r\n    target: AttackTarget.Player,\r\n    tags: options?.tags ?? [],\r\n  };\r\n  state = pushCombatActionResult(state, enemyAction);\r\n\r\n  return state;\r\n}\r\n\r\nexport function dispelAllEnemyAttackEffect(\r\n  state: GameState,\r\n  includeBeneficial?: boolean,\r\n): GameState {\r\n  const tempEffects = getTemporaryEffects(state);\r\n  tempEffects.forEach((tempEffect) => {\r\n    const tempEffectObj = TemporaryEffects.getById(tempEffect.id);\r\n    if (\r\n      tempEffect.target == AttackTarget.Enemy &&\r\n      tempEffectObj.isDispellable() &&\r\n      (includeBeneficial || !tempEffectObj.isBeneficial())\r\n    ) {\r\n      state = clearTemporaryEffect(tempEffect.id, AttackTarget.Enemy)(state);\r\n    }\r\n  });\r\n  return state;\r\n}\r\n\r\nexport function standardFamiliarAttackEffect(\r\n  state: GameState,\r\n  attack: number,\r\n  options?: {\r\n    accuracyMultiplier?: number;\r\n    critChanceMultiplier?: number;\r\n    forcedTarget?: AttackTarget;\r\n    cause?: string;\r\n    tags?: string[];\r\n    onHit?: (state: GameState, actionResult: CombatActionResult) => GameState;\r\n  },\r\n): GameState {\r\n  const target = options?.forcedTarget ?? AttackTarget.Enemy;\r\n  const familiar = getCurrentCompanionClass(state);\r\n  const dodgePoints = getStatFromTarget(state, target, CombatStat.Dodge);\r\n  const familiarStats = familiar.getStatsForCompanion(state);\r\n  const modifiedAccuracyPoints =\r\n    familiarStats.accuracy * (options?.accuracyMultiplier ?? 1.0);\r\n  const isHit = calculateIsHit(modifiedAccuracyPoints, dodgePoints);\r\n  let damage = 0,\r\n    isCrit = false;\r\n  if (isHit) {\r\n    const critChance =\r\n      (familiarStats.crit * (options?.critChanceMultiplier ?? 1.0)) / 100.0;\r\n    isCrit = Math.random() < (critChance ?? 0);\r\n    const critResistance = applyTransformations(\r\n      critResistanceByTargetTags(target),\r\n      state,\r\n      0,\r\n      { target, tags: options?.tags },\r\n    );\r\n    if (Math.random() < critResistance) {\r\n      isCrit = false;\r\n    }\r\n    const critMultiplier = 1.5;\r\n\r\n    damage = calculateDamage(\r\n      isCrit ? attack * critMultiplier : attack,\r\n      isCrit ? 0 : getStatFromTarget(state, target, CombatStat.Defense),\r\n    );\r\n    damage = applyTransformations(\r\n      attackDamageReceivedByTargetTags(target),\r\n      state,\r\n      damage,\r\n      {\r\n        target,\r\n        source: AttackTarget.Familiar,\r\n        tags: options?.tags,\r\n      },\r\n    );\r\n    state = modifyTargetCurrentHP(state, target, -damage, options?.cause);\r\n  }\r\n  const summonAction = {\r\n    id: Math.random().toString(),\r\n    damage,\r\n    isHit,\r\n    isCrit,\r\n    time: getSecondsPlayed(state),\r\n    source: AttackTarget.Familiar,\r\n    target: target,\r\n    tags: options?.tags ?? [],\r\n  };\r\n  state = pushCombatActionResult(state, summonAction);\r\n  state = options?.onHit != null ? options.onHit(state, summonAction) : state;\r\n  return state;\r\n}\r\n\r\nexport function drainingSummonAttackEffect(\r\n  state: GameState,\r\n  attack: number,\r\n  options?: {\r\n    accuracyMultiplier?: number;\r\n    critChanceMultiplier?: number;\r\n    forcedTarget?: AttackTarget;\r\n    cause?: string;\r\n    tags?: string[];\r\n  },\r\n): GameState {\r\n  const familiar = getCurrentCompanionClass(state);\r\n  const target = options?.forcedTarget ?? AttackTarget.Enemy;\r\n  const dodgePoints = getStatFromTarget(state, target, CombatStat.Dodge);\r\n  const familiarStats = familiar.getStatsForCompanion(state);\r\n  const modifiedAccuracyPoints =\r\n    familiarStats.accuracy * (options?.accuracyMultiplier ?? 1.0);\r\n  const isHit = calculateIsHit(modifiedAccuracyPoints, dodgePoints);\r\n  let damage = 0,\r\n    isCrit = false;\r\n  if (isHit) {\r\n    const critChance =\r\n      familiarStats.crit * (options?.critChanceMultiplier ?? 1.0);\r\n    isCrit = Math.random() < (critChance ?? 0);\r\n    const critResistance = applyTransformations(\r\n      critResistanceByTargetTags(target),\r\n      state,\r\n      0,\r\n      { target, tags: options?.tags },\r\n    );\r\n    if (Math.random() < critResistance) {\r\n      isCrit = false;\r\n    }\r\n    const critMultiplier = 1.5;\r\n\r\n    damage = calculateDamage(\r\n      isCrit ? attack * critMultiplier : attack,\r\n      isCrit ? 0 : getStatFromTarget(state, target, CombatStat.Defense),\r\n    );\r\n    damage = applyTransformations(\r\n      attackDamageReceivedByTargetTags(target),\r\n      state,\r\n      damage,\r\n      {\r\n        target: AttackTarget.Enemy,\r\n        source: AttackTarget.Familiar,\r\n        tags: options?.tags,\r\n      },\r\n    );\r\n    state = modifyTargetCurrentHP(state, target, -damage, options?.cause);\r\n    state = modifyCompanionCurrentHP(state, +damage, options?.cause);\r\n    const healingAction = {\r\n      id: Math.random().toString(),\r\n      damage: -damage,\r\n      isHit,\r\n      isCrit: false,\r\n      time: getSecondsPlayed(state),\r\n      source: AttackTarget.Familiar,\r\n      target: AttackTarget.Familiar,\r\n      tags: options?.tags ?? [],\r\n    };\r\n    state = pushCombatActionResult(state, healingAction);\r\n  }\r\n  const summonAction = {\r\n    id: Math.random().toString(),\r\n    damage,\r\n    isHit,\r\n    isCrit,\r\n    time: getSecondsPlayed(state),\r\n    source: AttackTarget.Familiar,\r\n    target: target,\r\n    tags: options?.tags ?? [],\r\n  };\r\n  state = pushCombatActionResult(state, summonAction);\r\n  return state;\r\n}\r\n\r\nexport function standardPlayerAttackEffect(\r\n  state: GameState,\r\n  attack: number,\r\n  options?: {\r\n    accuracyMultiplier?: number;\r\n    overrideAccuracy?: number;\r\n    critChanceMultiplier?: number;\r\n    critChanceAddition?: number;\r\n    targetDefenseMultiplier?: number;\r\n    overrideCritChance?: number;\r\n    forcedTarget?: AttackTarget;\r\n    cause?: string;\r\n    tags: string[];\r\n  },\r\n): GameState {\r\n  const target = options?.forcedTarget ?? AttackTarget.Enemy;\r\n  const accuracyPoints =\r\n    options?.overrideAccuracy ??\r\n    calculatePlayerAccuracyPoints(state) * (options?.accuracyMultiplier ?? 1.0);\r\n  const dodgePoints = getStatFromTarget(state, target, CombatStat.Dodge);\r\n  const isHit = calculateIsHit(accuracyPoints, dodgePoints);\r\n  let damage = 0,\r\n    isCrit = false;\r\n  if (isHit) {\r\n    const critChancePoints =\r\n      options.overrideCritChance ??\r\n      calculatePlayerCritPoints(state) + (options?.critChanceAddition ?? 0);\r\n    isCrit =\r\n      Math.random() <\r\n      (critChancePoints * (options?.critChanceMultiplier ?? 1.0)) / 100;\r\n    const critResistance = applyTransformations(\r\n      critResistanceByTargetTags(target),\r\n      state,\r\n      0,\r\n      { target, tags: options?.tags },\r\n    );\r\n    if (Math.random() < critResistance) {\r\n      isCrit = false;\r\n    }\r\n    const critMultiplier = 1.5;\r\n    damage = calculateDamage(\r\n      isCrit ? attack * critMultiplier : attack,\r\n      isCrit\r\n        ? 0\r\n        : getStatFromTarget(state, target, CombatStat.Defense) *\r\n            (options?.targetDefenseMultiplier ?? 1.0),\r\n    );\r\n    damage = applyTransformations(\r\n      attackDamageReceivedByTargetTags(target),\r\n      state,\r\n      damage,\r\n      {\r\n        target,\r\n        source: AttackTarget.Player,\r\n        tags: options?.tags,\r\n      },\r\n    );\r\n    state = modifyTargetCurrentHP(state, target, -damage, options?.cause);\r\n  }\r\n  const playerAction = {\r\n    id: Math.random().toString(),\r\n    damage,\r\n    isHit,\r\n    isCrit,\r\n    time: getSecondsPlayed(state),\r\n    source: AttackTarget.Player,\r\n    target: target,\r\n    tags: options?.tags ?? [],\r\n  };\r\n  state = pushCombatActionResult(state, playerAction);\r\n\r\n  return state;\r\n}\r\n\r\nexport function getCurrentEnemyAction(state: GameState) {\r\n  return lastSelectedEnemyAction;\r\n}\r\n\r\nexport function getCurrentFamiliarAction(state: GameState) {\r\n  return lastSelectedFamiliarAction;\r\n}\r\n\r\nexport function getMessageLog(state: GameState) {\r\n  return state.run.explorationMessageLog || [];\r\n}\r\n\r\nexport function getCumulativeLosses(state: GameState, enemyId: string): number {\r\n  return state.world.timesEnemyDefeated?.[enemyId]?.losses ?? 0;\r\n}\r\n\r\nexport function incrementCumulativeLosses(\r\n  state: GameState,\r\n  enemyId: string,\r\n): GameState {\r\n  const timesEnemyDefeated = state.world.timesEnemyDefeated?.[enemyId] ?? {\r\n    player: 0,\r\n    familiars: 0,\r\n    losses: 0,\r\n  };\r\n\r\n  timesEnemyDefeated.losses += 1;\r\n\r\n  state.world.timesEnemyDefeated[enemyId] = timesEnemyDefeated;\r\n\r\n  return state;\r\n}\r\n\r\nexport function getSuccessfulExplorationsForFloor(\r\n  state: GameState,\r\n  dungeonFloorId: string,\r\n) {\r\n  return (\r\n    state.run.exploration?.successfulExplorationsPerFloor?.[dungeonFloorId] || 0\r\n  );\r\n}\r\n\r\nexport function pushToMessageLog(state: GameState, log: string): GameState {\r\n  if (!state.run.explorationMessageLog) {\r\n    state.run.explorationMessageLog = [];\r\n  }\r\n  state.run.explorationMessageLog.unshift({\r\n    id: Math.random().toString(),\r\n    realTimestamp: Date.now(),\r\n    secondsPlayed: getSecondsPlayed(state),\r\n    message: log,\r\n    accessibleMessage: log,\r\n  });\r\n  state.run.explorationMessageLog = state.run.explorationMessageLog.slice(\r\n    0,\r\n    40,\r\n  );\r\n  return state;\r\n}\r\n\r\nexport function endExploration(state: GameState): GameState {\r\n  if (!state.run.exploration) {\r\n    state.run.exploration = EXPLORATION_INITIAL_STATE;\r\n  }\r\n  state.run.exploration.explorationStatus = ExplorationStatus.None;\r\n  state = pushToMessageLog(state, `You stop exploring.`);\r\n  return state;\r\n}\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.ExplorationDelay]],\r\n  \"PauseExplorationHandler\",\r\n  t(\"Pause Exploration\"),\r\n  TransformationType.Override,\r\n  (state) => (hasFlag(state, \"exploration_paused\") ? Infinity : undefined),\r\n);\r\n\r\nexport function pauseExploration(state: GameState): GameState {\r\n  state = setFlag(\"exploration_paused\")(state);\r\n  return state;\r\n}\r\n\r\nexport function resumeExploration(state: GameState): GameState {\r\n  state = clearFlag(\"exploration_paused\")(state);\r\n  state.run.exploration.explorationStartTime = getSecondsPlayed(state);\r\n  return state;\r\n}\r\n\r\nconst explorationDelayTags = [TransformationTags.ExplorationDelay];\r\nexport function getExplorationTimeRequirementSec(state: GameState): number {\r\n  const explorationStatus = getExplorationStatus(state);\r\n  if (\r\n    explorationStatus != ExplorationStatus.Exploring &&\r\n    explorationStatus != ExplorationStatus.ExploringBoss\r\n  ) {\r\n    return 0;\r\n  }\r\n  const dungeonFloor = getCurrentDungeonFloor(state);\r\n  return applyTransformations(\r\n    explorationDelayTags,\r\n    state,\r\n    dungeonFloor.getExplorationRequiredTimeSecBase(),\r\n  );\r\n}\r\n\r\nconst familiarAttackDelayTags = [AttackTarget.Familiar, CombatStat.AttackDelay];\r\nexport function getFamiliarAttackDelay(state: GameState): number | undefined {\r\n  const currentFamiliar = getCurrentCompanionClass(state);\r\n  if (\r\n    !currentFamiliar ||\r\n    state.run.exploration?.explorationStatus != ExplorationStatus.Combat\r\n  ) {\r\n    return undefined;\r\n  }\r\n\r\n  if (!lastSelectedFamiliarAction) {\r\n    lastSelectedFamiliarAction =\r\n      currentFamiliar.getNextActionForCompanion(state);\r\n  }\r\n\r\n  // TODO: This is a bug, because the delay was calculated at the time the action\r\n  // was generated, but now it was changed (i.e. stun or something).\r\n  // If we transform it again, the effects like haste are doubled.\r\n  // Need to refactor the familiars.\r\n  return lastSelectedFamiliarAction.delay;\r\n  // return applyTransformations(\r\n  //   familiarAttackDelayTags,\r\n  //   state,\r\n  //   lastSelectedFamiliarAction.delay,\r\n  // );\r\n}\r\n\r\nconst enemyAttackDelayTags = [AttackTarget.Enemy, CombatStat.AttackDelay];\r\nexport function getEnemyAttackDelay(state: GameState): number {\r\n  const currentEnemy = getCurrentEnemy(state);\r\n  if (!lastSelectedEnemyAction) {\r\n    lastSelectedEnemyAction = currentEnemy.getNextAction(state);\r\n  }\r\n\r\n  const baseEnemyAttackDelay = currentEnemy.getAttackDelay(state);\r\n  const actualEnemyAttackDelay = getCachedCombatStat(\r\n    state,\r\n    AttackTarget.Enemy,\r\n    CombatStat.AttackDelay,\r\n    (state) =>\r\n      applyTransformations(enemyAttackDelayTags, state, baseEnemyAttackDelay),\r\n  );\r\n\r\n  // actionAttackDelay is calculated based on base attack delay\r\n  const actionAttackDelay = lastSelectedEnemyAction.delay;\r\n\r\n  // So we convert\r\n  return (actionAttackDelay * actualEnemyAttackDelay) / baseEnemyAttackDelay;\r\n}\r\n\r\nexport function resetEnemyNextAction(): void {\r\n  lastSelectedEnemyAction = undefined;\r\n}\r\n\r\nexport function resetFamiliarNextAction(): void {\r\n  lastSelectedFamiliarAction = undefined;\r\n}\r\n\r\nexport function getEnemyTurnCounter(state: GameState): number {\r\n  return getCombatVariable(state, \"enemyTurnCounter\") ?? 1;\r\n}\r\n\r\nexport type EnemyDeathListener = (state: GameState, enemy: Enemy) => GameState;\r\n\r\nconst enemyDeathListeners: DataStore<EnemyDeathListener> = new DataStore();\r\n\r\nexport function addEnemyDeathListener(\r\n  id: string,\r\n  listener: EnemyDeathListener,\r\n) {\r\n  enemyDeathListeners.register(listener, id);\r\n}\r\n\r\nexport function triggerEnemyDeathListeners(\r\n  state: GameState,\r\n  enemy: Enemy,\r\n): GameState {\r\n  enemyDeathListeners.getAll().forEach((listener) => {\r\n    state = listener(state, enemy);\r\n  });\r\n  return state;\r\n}\r\n\r\nexport function triggerCombatLoss(state: GameState): GameState {\r\n  const currentEnemy = getCurrentEnemy(state);\r\n  state = clearCombatTemporaryEffects(state);\r\n  state = resetAllCombatVariables(state);\r\n  if (currentEnemy.isBoss()) {\r\n    state.run.autoAttemptBoss = false;\r\n  }\r\n  lastSelectedFamiliarAction = undefined;\r\n  state.run.exploration.explorationStatus = ExplorationStatus.Reviving;\r\n  if (hasCurrentActiveCompanion(state)) {\r\n    getCurrentCompanionData(state).status.companionStatus =\r\n      FamiliarCompanionStatusType.Preparing;\r\n  }\r\n  const currentEnemyName = currentEnemy?.getName();\r\n  let fromEnemyMessage = \"\";\r\n  if (currentEnemyName) {\r\n    fromEnemyMessage = t(` from {{enemy}}`, {\r\n      enemy: currentEnemyName,\r\n    });\r\n  }\r\n  const cause =\r\n    state.run.exploration.lastPlayerDamageCause ?? t(\"something unknown\");\r\n  state = pushToMessageLog(\r\n    state,\r\n    t(\r\n      \"You run away{{fromEnemyMessage}} to recover from your injuries caused by {{cause}}...\",\r\n      { fromEnemyMessage: fromEnemyMessage, cause: cause },\r\n    ),\r\n  );\r\n  state = incrementAccumulatorVariable(state, \"deathCount\", 1);\r\n  state = incrementAccumulatorVariable(\r\n    state,\r\n    \"deathCountIn-\" + getCurrentDungeonFloor(state).getId(),\r\n    1,\r\n  );\r\n  if (currentEnemy != null) {\r\n    incrementCumulativeLosses(state, currentEnemy.getId());\r\n    state = currentEnemy.onPlayerDeath(state);\r\n  }\r\n  return state;\r\n}\r\n\r\nexport function loadExploration() {\r\n  registerTimeTickListener(\r\n    \"Exploration\",\r\n    (state: GameState, timeElapsedSec: number) => {\r\n      const explorationStatus = getExplorationStatus(state);\r\n      if (\r\n        explorationStatus != ExplorationStatus.Exploring &&\r\n        explorationStatus != ExplorationStatus.ExploringBoss\r\n      ) {\r\n        return state;\r\n      }\r\n\r\n      const dungeonFloor = getCurrentDungeonFloor(state);\r\n      const explorationTimeRequirement =\r\n        getExplorationTimeRequirementSec(state);\r\n\r\n      const nextExplorationTime =\r\n        getExplorationStartTime(state) + explorationTimeRequirement;\r\n      if (getSecondsPlayed(state) > nextExplorationTime) {\r\n        if (!state.run.exploration) {\r\n          state.run.exploration = EXPLORATION_INITIAL_STATE;\r\n        }\r\n        state.run.exploration.explorationStartTime = nextExplorationTime;\r\n        if (explorationStatus == ExplorationStatus.Exploring) {\r\n          const outcome = dungeonFloor.doExplore(state, false);\r\n          if (outcome != null) {\r\n            return outcome.normal(state);\r\n          }\r\n        } else {\r\n          const transform = dungeonFloor.doFightBoss(state);\r\n          return transform ? transform(state) : state;\r\n        }\r\n      }\r\n\r\n      return state;\r\n    },\r\n  );\r\n\r\n  registerTimeTickListener(\r\n    \"Combat\",\r\n    (state: GameState, timeElapsedSec: number) => {\r\n      const explorationStatus = getExplorationStatus(state);\r\n      if (explorationStatus != ExplorationStatus.Combat) {\r\n        return state;\r\n      }\r\n\r\n      const currentEnemy = getCurrentEnemy(state);\r\n      const currentFamiliar = getCurrentCompanionClass(state);\r\n\r\n      // First, pass the time\r\n      const attackDelayPlayer = calculatePlayerAttackDelaySec(state);\r\n      const attackDelayEnemy = getEnemyAttackDelay(state);\r\n      const attackDelayFamiliar = getFamiliarAttackDelay(state);\r\n\r\n      state.run.exploration.playerActionProgress +=\r\n        timeElapsedSec / attackDelayPlayer;\r\n      state.run.exploration.enemyActionProgress +=\r\n        timeElapsedSec / attackDelayEnemy;\r\n      if (attackDelayFamiliar != null && hasCurrentActiveCompanion(state)) {\r\n        state.run.exploration.familiarActionProgress +=\r\n          timeElapsedSec / attackDelayFamiliar;\r\n      }\r\n\r\n      while (state.run.exploration.playerActionProgress > 1.0) {\r\n        state.run.exploration.playerActionProgress -= 1.0;\r\n        let extraSec =\r\n          state.run.exploration.playerActionProgress * attackDelayPlayer;\r\n        if (extraSec == Infinity) {\r\n          // Guard against stunning\r\n          extraSec = 0;\r\n        }\r\n        state = executePlayerAutoAttack(state);\r\n        const newAttackDelay = calculatePlayerAttackDelaySec(state);\r\n        state.run.exploration.playerActionProgress = extraSec / newAttackDelay;\r\n      }\r\n\r\n      if (\r\n        lastSelectedFamiliarAction != null &&\r\n        attackDelayFamiliar != null &&\r\n        state.run.exploration.familiarActionProgress > 1.0\r\n      ) {\r\n        state.run.exploration.familiarActionProgress -= 1.0;\r\n        const extraSec =\r\n          state.run.exploration.familiarActionProgress * attackDelayFamiliar;\r\n        state = executeFamiliarAction(state);\r\n        lastSelectedFamiliarAction =\r\n          currentFamiliar?.getNextActionForCompanion(state);\r\n        const newAttackDelay = getFamiliarAttackDelay(state);\r\n        if (newAttackDelay != null) {\r\n          state.run.exploration.familiarActionProgress =\r\n            extraSec / newAttackDelay;\r\n        }\r\n      }\r\n\r\n      if (state.run.exploration.enemyActionProgress > 1.0) {\r\n        state.run.exploration.enemyActionProgress -= 1.0;\r\n        let extraSec =\r\n          state.run.exploration.enemyActionProgress * attackDelayEnemy;\r\n        if (extraSec == Infinity) {\r\n          // Guard against stunning\r\n          extraSec = 0;\r\n        }\r\n        state = executeEnemyAction(state);\r\n        state = setCombatVariable(\r\n          \"enemyTurnCounter\",\r\n          getEnemyTurnCounter(state) + 1,\r\n        )(state);\r\n        lastSelectedEnemyAction = currentEnemy.getNextAction(state);\r\n        const newAttackDelay = getEnemyAttackDelay(state);\r\n        state.run.exploration.enemyActionProgress = extraSec / newAttackDelay;\r\n      }\r\n\r\n      return state;\r\n    },\r\n  );\r\n\r\n  addGameStateListener(\r\n    \"CombatFamiliarDeathListener\",\r\n    (newState: GameState) => {\r\n      if (getExplorationStatus(newState) != ExplorationStatus.Combat) {\r\n        return;\r\n      }\r\n\r\n      if (\r\n        hasCurrentActiveCompanion(newState) &&\r\n        (getCurrentFamiliarHP(newState) <= 0 ||\r\n          getCurrentCompanionData(newState).status.triggerFamiliarDeath)\r\n      ) {\r\n        return (state) => {\r\n          lastSelectedFamiliarAction = undefined;\r\n          state.run.exploration.familiarActionProgress = 0;\r\n\r\n          const familiar = getCurrentCompanionData(state);\r\n          if (familiar == null) {\r\n            return state;\r\n          }\r\n\r\n          state = pushToMessageLog(\r\n            state,\r\n            t(\"Your familiar is exhausted and needs to recover!\"),\r\n          );\r\n          familiar.status.triggerFamiliarDeath = false;\r\n          familiar.status.companionStatus =\r\n            FamiliarCompanionStatusType.Reviving;\r\n          state = clearCombatStatCache(state, AttackTarget.Familiar);\r\n          return state;\r\n        };\r\n      }\r\n    },\r\n    (state) => getCurrentFamiliarHP(state),\r\n  );\r\n\r\n  addGameStateListener(\r\n    \"CombatCleaningCrew\",\r\n    (newState: GameState) => {\r\n      if (getExplorationStatus(newState) !== ExplorationStatus.Combat) {\r\n        return (state) => {\r\n          state = clearCombatTemporaryEffects(state);\r\n          state = resetAllCombatVariables(state);\r\n          for (let itemOccurrence of getEquippedItems(\r\n            state,\r\n            EquipmentSlot.Pouch,\r\n          )) {\r\n            if (itemOccurrence != null) {\r\n              const item = Items.getById(itemOccurrence.itemId) as PouchItem;\r\n              state = item.doCleanup(state, itemOccurrence.params);\r\n            }\r\n          }\r\n          state.run.exploration.pouchItemsUsesLeft = {};\r\n          state.run.exploration.triggerPlayerDeath = false;\r\n          lastSelectedFamiliarAction = undefined;\r\n          return state;\r\n        };\r\n      }\r\n    },\r\n    (state) => getExplorationStatus(state),\r\n  );\r\n\r\n  addHighPriorityGameStateListener(\r\n    \"CombatDeathListener\",\r\n    (newState: GameState) => {\r\n      if (getExplorationStatus(newState) != ExplorationStatus.Combat) {\r\n        return;\r\n      }\r\n\r\n      if (\r\n        getCurrentPlayerHP(newState) <= 0 ||\r\n        newState.run.exploration.triggerPlayerDeath\r\n      ) {\r\n        newState.run.exploration.triggerPlayerDeath = false;\r\n        const shouldPreventDeath = DeathInterceptors.getAll()\r\n          .map((interceptor) => interceptor(newState, AttackTarget.Player))\r\n          .some((value) => value);\r\n        if (!shouldPreventDeath) {\r\n          // Player death occurred\r\n          return triggerCombatLoss;\r\n        }\r\n      }\r\n\r\n      if (getCurrentEnemyHP(newState) <= 0) {\r\n        const shouldPreventDeath = DeathInterceptors.getAll()\r\n          .map((interceptor) => interceptor(newState, AttackTarget.Enemy))\r\n          .some((value) => value);\r\n        if (!shouldPreventDeath) {\r\n          return (state) => {\r\n            const currentEnemy = getCurrentEnemy(state);\r\n            state = pushToMessageLog(\r\n              state,\r\n              t(\"You defeated {{enemy}}!\", { enemy: currentEnemy.getName() }),\r\n            );\r\n            state = currentEnemy.onDeath(state, false);\r\n            const floorId = state.run.exploration.currentDungeonFloorId;\r\n            const floor = DungeonFloors.getById(floorId);\r\n            const couldFightBoss = floor.canFightBoss(state);\r\n            state.run.exploration.successfulExplorationsPerFloor[floorId] =\r\n              getSuccessfulExplorationsForFloor(state, floorId) + 1;\r\n            const canFightBoss = floor.canFightBoss(state);\r\n            if (couldFightBoss != canFightBoss) {\r\n              state = clearCacheKey(\r\n                state,\r\n                (_state) => \"floorsAvailableForFamiliars\",\r\n              );\r\n            }\r\n            state = triggerEnemyDeathListeners(state, currentEnemy);\r\n\r\n            if (state.options.waitUntilFullyHealedBeforeExplore) {\r\n              state.run.exploration.explorationStatus =\r\n                ExplorationStatus.Reviving;\r\n              return state;\r\n            }\r\n\r\n            return startExplorationOrAutoAdvance(state);\r\n          };\r\n        }\r\n      }\r\n    },\r\n  );\r\n\r\n  registerTimeTickListener(\r\n    \"PlayerHPRegen\",\r\n    (state: GameState, timeElapsedSec: number) => {\r\n      const explorationStatus = getExplorationStatus(state);\r\n\r\n      // This is necessary or else the player never dies because they regenerate HP\r\n      // in the same update\r\n      const currentHP = getCurrentPlayerHP(state);\r\n      if (explorationStatus == ExplorationStatus.Combat && currentHP <= 0) {\r\n        return state;\r\n      }\r\n\r\n      const playerMaxHP = calculatePlayerMaxHP(state);\r\n      if (currentHP >= playerMaxHP) {\r\n        return state;\r\n      }\r\n\r\n      const hpRegenBase = calculatePlayerHPRegenRatioPerSec(state);\r\n      let hpRegenMultiplier = 1.0;\r\n      if (explorationStatus != ExplorationStatus.Combat) {\r\n        hpRegenMultiplier = 10.0;\r\n      }\r\n      state = modifyPlayerCurrentHP(\r\n        state,\r\n        playerMaxHP * hpRegenBase * hpRegenMultiplier * timeElapsedSec,\r\n        t(\"HP Regeneration\"),\r\n      );\r\n      return state;\r\n    },\r\n  );\r\n\r\n  function startExplorationOrAutoAdvance(state: GameState): GameState {\r\n    if (\r\n      state.run.autoAdvanceToNextFloor &&\r\n      getCurrentDungeonFloor(state).getNextFloor(state)?.isUnlocked?.(state)\r\n    ) {\r\n      return startExplorationOnFloor(\r\n        state,\r\n        getCurrentDungeonFloor(state).getNextFloor(state),\r\n      );\r\n    } else if (\r\n      state.run.autoAttemptBoss &&\r\n      getCurrentDungeonFloor(state).canFightBoss(state)\r\n    ) {\r\n      return startBossExploration(state);\r\n    }\r\n\r\n    return startExploration(state);\r\n  }\r\n\r\n  addGameStateListener(\"ContinueExplorationAfterReviving\", (newState) => {\r\n    if (\r\n      getExplorationStatus(newState) == ExplorationStatus.Reviving &&\r\n      getCurrentPlayerHP(newState) >= calculatePlayerMaxHP(newState) * 0.99\r\n    ) {\r\n      return startExplorationOrAutoAdvance;\r\n    }\r\n  });\r\n}\r\n","import { valuesOf } from \"../../utils/CoreUtils\";\r\nimport { GameState } from \"../GameState\";\r\nimport { FamiliarData, Familiars, FamiliarStatusType } from \"./Familiar\";\r\nimport { FamiliarClass } from \"./FamiliarClass\";\r\n\r\nexport function getCurrentCompanionId(state: GameState): string {\r\n  return getCurrentCompanionData(state)?.id;\r\n}\r\n\r\nexport function getCurrentCompanionData(\r\n  state: GameState,\r\n): FamiliarData | undefined {\r\n  return valuesOf(state.run.familiars).find(\r\n    (familiarData) =>\r\n      familiarData.status.status === FamiliarStatusType.Companion,\r\n  );\r\n}\r\n\r\nexport function getCurrentCompanionClass(\r\n  state: GameState,\r\n): FamiliarClass | undefined {\r\n  const companionData = getCurrentCompanionData(state);\r\n  if (companionData == null) {\r\n    return undefined;\r\n  }\r\n\r\n  return Familiars.getById(companionData.familiarClassId);\r\n}\r\n","import memoize from \"sonic-memoize\";\r\nimport { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { hasWorldFlag } from \"../../Flags\";\r\nimport { GameState, GameStateTransform } from \"../../GameState\";\r\nimport { Resource, grantResource } from \"../../Resources\";\r\nimport {\r\n  Familiars,\r\n  getCurrentCompanionData,\r\n  getFamiliarData,\r\n  pushToFamiliarMessageLog,\r\n  wouldBeThrottledIfPushingToCreatureMessageLog,\r\n} from \"../../familiars/Familiar\";\r\nimport {\r\n  getCurrentCompanionClass,\r\n  getCurrentCompanionId,\r\n} from \"../../familiars/FamiliarUtils\";\r\nimport { Identifiable } from \"../../generic/Identifiable\";\r\nimport { addToInventory } from \"../../items/Inventory\";\r\nimport { Items } from \"../../items/Items\";\r\nimport {\r\n  applyTransformations,\r\n  applyTransformationsCached,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { AttackTarget } from \"../AttackTarget\";\r\nimport { CombatStat, getCachedCombatStat } from \"../CombatStats\";\r\nimport {\r\n  getCumulativeLosses,\r\n  pushToMessageLog,\r\n  standardEnemyAttackEffect,\r\n} from \"../Exploration\";\r\nimport { hasCurrentActiveCompanion } from \"../Summoning\";\r\nimport { Enemies } from \"./Enemies\";\r\n\r\nexport interface BattlerStats {\r\n  maxHP: number;\r\n  attack: number;\r\n  attackDelay: number;\r\n  defense: number;\r\n  accuracy: number;\r\n  dodge: number;\r\n  crit: number;\r\n}\r\n\r\nexport interface BattlerAction {\r\n  name: string;\r\n  delay: number;\r\n  transform: GameStateTransform;\r\n}\r\n\r\nexport interface EnemyLoot {\r\n  itemId: string;\r\n  chance: number;\r\n  amount: number;\r\n  params?: any;\r\n}\r\n\r\nexport enum BestiaryState {\r\n  Hidden = \"Hidden\",\r\n  SpriteOnly = \"SpriteOnly\",\r\n  Basic = \"Basic\",\r\n  Expanded = \"Expanded\",\r\n  Loot = \"Loot\",\r\n}\r\n\r\nexport function getCombatStatFromBattlerStat(battlerStat: string): CombatStat {\r\n  switch (battlerStat) {\r\n    case \"maxHP\":\r\n      return CombatStat.MaxHP;\r\n    case \"attack\":\r\n      return CombatStat.Attack;\r\n    case \"attackDelay\":\r\n      return CombatStat.AttackDelay;\r\n    case \"defense\":\r\n      return CombatStat.Defense;\r\n    case \"accuracy\":\r\n      return CombatStat.Accuracy;\r\n    case \"dodge\":\r\n      return CombatStat.Dodge;\r\n    case \"crit\":\r\n      return CombatStat.Crit;\r\n  }\r\n  throw new Error(\"Invalid battler stat\");\r\n}\r\n\r\nexport function getCumulativeEnemyKills(\r\n  state: GameState,\r\n  enemyId: string,\r\n): number {\r\n  return (\r\n    getCumulativeEnemyKillsFromCreatures(state, enemyId) +\r\n    (state.world.timesEnemyDefeated?.[enemyId]?.player ?? 0)\r\n  );\r\n}\r\n\r\nexport function getCumulativeEnemyKillsFromCreatures(\r\n  state: GameState,\r\n  enemyId: string,\r\n): number {\r\n  return state.world.timesEnemyDefeated?.[enemyId]?.familiars ?? 0;\r\n}\r\n\r\nexport function getBestiaryVisibleEnemies(state: GameState): Enemy[] {\r\n  return Enemies.getAll().filter(\r\n    (enemy) => enemy.getBestiaryState(state) != BestiaryState.Hidden,\r\n  );\r\n}\r\n\r\nexport function isBestiaryUnlocked(state: GameState): boolean {\r\n  return hasWorldFlag(state, \"storyline_bookOfMonsters_completed\");\r\n}\r\n\r\nconst enemyStatTags = memoize((stat) => [AttackTarget.Enemy, stat]);\r\n\r\nexport const KILLS_FOR_EXPANDED_BESTIARY = 10;\r\nexport const KILLS_FOR_BESTIARY_LOOT = 50;\r\n\r\nexport abstract class Enemy implements Identifiable {\r\n  abstract getId(): string;\r\n  abstract getName(): string;\r\n  abstract getBaseStats(): BattlerStats;\r\n  abstract getPicture(state: GameState): any;\r\n  abstract getLevel(): number;\r\n\r\n  getMaxHP(state: GameState): number {\r\n    return getCachedCombatStat(\r\n      state,\r\n      AttackTarget.Enemy,\r\n      CombatStat.MaxHP,\r\n      (state) =>\r\n        applyTransformations(\r\n          enemyStatTags(CombatStat.MaxHP),\r\n          state,\r\n          this.getBaseStats().maxHP,\r\n        ),\r\n    );\r\n  }\r\n  getAttack(state: GameState): number {\r\n    return getCachedCombatStat(\r\n      state,\r\n      AttackTarget.Enemy,\r\n      CombatStat.Attack,\r\n      (state) =>\r\n        applyTransformations(\r\n          enemyStatTags(CombatStat.Attack),\r\n          state,\r\n          this.getBaseStats().attack,\r\n        ),\r\n    );\r\n  }\r\n  getAttackDelay(state: GameState): number {\r\n    // Transformed elsewhere\r\n    return this.getBaseStats().attackDelay;\r\n  }\r\n  getCriticalPoints(state: GameState): number {\r\n    return getCachedCombatStat(\r\n      state,\r\n      AttackTarget.Enemy,\r\n      CombatStat.Crit,\r\n      (state) =>\r\n        applyTransformations(\r\n          enemyStatTags(CombatStat.Crit),\r\n          state,\r\n          this.getBaseStats().crit,\r\n        ),\r\n    );\r\n  }\r\n  getDefense(state: GameState): number {\r\n    return getCachedCombatStat(\r\n      state,\r\n      AttackTarget.Enemy,\r\n      CombatStat.Defense,\r\n      (state) =>\r\n        applyTransformations(\r\n          enemyStatTags(CombatStat.Defense),\r\n          state,\r\n          this.getBaseStats().defense,\r\n        ),\r\n    );\r\n  }\r\n  getAccuracyPoints(state: GameState): number {\r\n    return getCachedCombatStat(\r\n      state,\r\n      AttackTarget.Enemy,\r\n      CombatStat.Accuracy,\r\n      (state) =>\r\n        applyTransformations(\r\n          enemyStatTags(CombatStat.Accuracy),\r\n          state,\r\n          this.getBaseStats().accuracy,\r\n        ),\r\n    );\r\n  }\r\n  getDodgePoints(state: GameState): number {\r\n    return getCachedCombatStat(\r\n      state,\r\n      AttackTarget.Enemy,\r\n      CombatStat.Dodge,\r\n      (state) =>\r\n        applyTransformations(\r\n          enemyStatTags(CombatStat.Dodge),\r\n          state,\r\n          this.getBaseStats().dodge,\r\n        ),\r\n    );\r\n  }\r\n\r\n  getNextAction(state: GameState): BattlerAction {\r\n    return {\r\n      name: t(\"Attack\"),\r\n      delay: this.getAttackDelay(state),\r\n      transform: (state) =>\r\n        standardEnemyAttackEffect(state, this.getAttack(state)),\r\n    };\r\n  }\r\n\r\n  abstract getCoinsAwardedBase(state: GameState): number;\r\n\r\n  abstract getMonstiumAwardedBase(state: GameState): number;\r\n\r\n  getItemsAwardedBase(state: GameState): EnemyLoot[] {\r\n    return [];\r\n  }\r\n\r\n  isBoss(): boolean {\r\n    return false;\r\n  }\r\n\r\n  getBackdropColor(state: GameState): string | undefined {\r\n    return undefined;\r\n  }\r\n\r\n  getBestiaryState(state: GameState): BestiaryState {\r\n    const kills = getCumulativeEnemyKills(state, this.getId());\r\n    const losses = getCumulativeLosses(state, this.getId());\r\n    if (kills >= (this.isBoss() ? 1 : KILLS_FOR_BESTIARY_LOOT)) {\r\n      return BestiaryState.Loot;\r\n    }\r\n    if (kills >= (this.isBoss() ? 1 : KILLS_FOR_EXPANDED_BESTIARY)) {\r\n      return BestiaryState.Expanded;\r\n    }\r\n    if (kills > 0 || losses >= 2) {\r\n      return BestiaryState.Basic;\r\n    }\r\n    if (losses > 0) {\r\n      return BestiaryState.SpriteOnly;\r\n    }\r\n    return BestiaryState.Hidden;\r\n  }\r\n\r\n  lootTags = memoize((isFromCreatures, resource) => [\r\n    TransformationTags.Loot,\r\n    resource,\r\n    isFromCreatures\r\n      ? TransformationTags.FromFamiliarExploration\r\n      : TransformationTags.FromExploration,\r\n  ]);\r\n\r\n  lootChanceTags = memoize((isFromCreatures) => [\r\n    TransformationTags.LootChance,\r\n    isFromCreatures\r\n      ? TransformationTags.FromFamiliarExploration\r\n      : TransformationTags.FromExploration,\r\n  ]);\r\n\r\n  onEncounter(state: GameState): GameState {\r\n    return state;\r\n  }\r\n\r\n  onPlayerDeath(state: GameState): GameState {\r\n    return state;\r\n  }\r\n\r\n  _enemyIdParams = { enemyId: this.getId() };\r\n\r\n  _familiarParams = memoize((familiarId: string) => ({\r\n    ...this._enemyIdParams,\r\n    familiarId,\r\n  }));\r\n\r\n  onDeath(\r\n    state: GameState,\r\n    isFromFamiliars: boolean,\r\n    familiarId?: string,\r\n  ): GameState {\r\n    const totalTimesDefeated = state.world.timesEnemyDefeated?.[\r\n      this.getId()\r\n    ] ?? { player: 0, familiars: 0, losses: 0 };\r\n    if (isFromFamiliars) {\r\n      totalTimesDefeated.familiars++;\r\n    } else {\r\n      totalTimesDefeated.player++;\r\n    }\r\n    state.world.timesEnemyDefeated[this.getId()] = totalTimesDefeated;\r\n\r\n    const baseCoinsAwarded = this.getCoinsAwardedBase(state);\r\n    const baseMonstiumAwarded = this.getMonstiumAwardedBase(state);\r\n    const coinsAwarded = applyTransformationsCached(\r\n      this.lootTags(isFromFamiliars, Resource.Coins),\r\n      state,\r\n      baseCoinsAwarded,\r\n    );\r\n    const monstiumAwarded = applyTransformationsCached(\r\n      this.lootTags(isFromFamiliars, Resource.Monstium),\r\n      state,\r\n      baseMonstiumAwarded,\r\n    );\r\n    const familiarExpAwarded = applyTransformationsCached(\r\n      this.lootTags(isFromFamiliars, TransformationTags.FamiliarExp),\r\n      state,\r\n      isFromFamiliars ? baseMonstiumAwarded / 2 : baseMonstiumAwarded,\r\n      this._familiarParams(\r\n        isFromFamiliars ? familiarId : getCurrentCompanionId(state),\r\n      ),\r\n    );\r\n\r\n    state = grantResource(Resource.Coins, coinsAwarded)(state);\r\n    state = grantResource(Resource.Monstium, monstiumAwarded)(state);\r\n    if (!isFromFamiliars) {\r\n      state = pushToMessageLog(\r\n        state,\r\n        t(\r\n          `You found {{coinsAwarded}} :coins: and {{monstiumAwarded}} :monstium:!`,\r\n          {\r\n            coinsAwarded: formatNumber(coinsAwarded),\r\n            monstiumAwarded: formatNumber(monstiumAwarded),\r\n          },\r\n        ),\r\n      );\r\n      if (hasCurrentActiveCompanion(state)) {\r\n        const familiar = getCurrentCompanionData(state);\r\n        const familiarClass = getCurrentCompanionClass(state);\r\n        const oldLevel = familiarClass.getLevel(state, familiar.id);\r\n        familiar.exp += familiarExpAwarded;\r\n        const newLevel = familiarClass.getLevel(state, familiar.id);\r\n        if (newLevel > oldLevel) {\r\n          state = pushToMessageLog(\r\n            state,\r\n            t(\r\n              `Your familiar earned {{expAwarded}} exp and leveled up to {{newLevel}}!`,\r\n              {\r\n                expAwarded: formatNumber(familiarExpAwarded),\r\n                newLevel: formatNumber(newLevel),\r\n              },\r\n            ),\r\n          );\r\n          state = pushToFamiliarMessageLog(\r\n            state,\r\n            familiar.id,\r\n            t(\r\n              `Your familiar earned {{expAwarded}} exp and leveled up to {{newLevel}}!`,\r\n              {\r\n                expAwarded: formatNumber(familiarExpAwarded),\r\n                newLevel: formatNumber(newLevel),\r\n              },\r\n            ),\r\n          );\r\n        } else {\r\n          state = pushToMessageLog(\r\n            state,\r\n            t(`Your familiar earned {{expAwarded}} exp!`, {\r\n              expAwarded: formatNumber(familiarExpAwarded),\r\n            }),\r\n          );\r\n          state = pushToFamiliarMessageLog(\r\n            state,\r\n            familiar.id,\r\n            t(`Your familiar earned {{expAwarded}} exp!`, {\r\n              expAwarded: formatNumber(familiarExpAwarded),\r\n            }),\r\n          );\r\n        }\r\n      }\r\n    } else {\r\n      const familiar = getFamiliarData(state, familiarId);\r\n      const familiarClass = Familiars.getById(familiar.familiarClassId);\r\n      const oldLevel = familiarClass.getLevel(state, familiar.id);\r\n      familiar.exp += familiarExpAwarded;\r\n      const newLevel = familiarClass.getLevel(state, familiar.id);\r\n      if (!wouldBeThrottledIfPushingToCreatureMessageLog(state, familiarId)) {\r\n        state = pushToFamiliarMessageLog(\r\n          state,\r\n          familiarId,\r\n          t(\r\n            `Your familiar found {{coinsAwarded}} :coins: and {{monstiumAwarded}} :monstium:!`,\r\n            {\r\n              coinsAwarded: formatNumber(coinsAwarded),\r\n              monstiumAwarded: formatNumber(monstiumAwarded),\r\n            },\r\n          ),\r\n        );\r\n        if (newLevel > oldLevel) {\r\n          state = pushToFamiliarMessageLog(\r\n            state,\r\n            familiar.id,\r\n            t(\r\n              `Your familiar earned {{expAwarded}} exp and leveled up to {{newLevel}}!`,\r\n              {\r\n                expAwarded: formatNumber(familiarExpAwarded),\r\n                newLevel: formatNumber(newLevel),\r\n              },\r\n            ),\r\n          );\r\n        } else {\r\n          state = pushToFamiliarMessageLog(\r\n            state,\r\n            familiar.id,\r\n            t(`Your familiar earned {{expAwarded}} exp!`, {\r\n              expAwarded: formatNumber(familiarExpAwarded),\r\n            }),\r\n          );\r\n        }\r\n      }\r\n    }\r\n    const itemsAwarded = this.getItemsAwardedBase(state);\r\n    itemsAwarded.forEach((enemyLoot) => {\r\n      let chance = enemyLoot.chance;\r\n      chance = applyTransformations(\r\n        this.lootChanceTags(isFromFamiliars),\r\n        state,\r\n        chance,\r\n      );\r\n      if (Math.random() < chance) {\r\n        const item = Items.getById(enemyLoot.itemId);\r\n        const params = enemyLoot.params || {};\r\n        const itemOccurrence = { itemId: enemyLoot.itemId, params };\r\n        const amount = applyTransformations(\r\n          this._memoizedEnemyLootTags(enemyLoot.itemId, isFromFamiliars),\r\n          state,\r\n          enemyLoot.amount,\r\n        );\r\n        state = addToInventory(itemOccurrence, amount, state);\r\n        const foundLoot =\r\n          state.world.knownEnemiesThatDrop[enemyLoot.itemId] ?? {};\r\n        if (!foundLoot[this.getId()]) {\r\n          foundLoot[this.getId()] = true;\r\n        }\r\n        state.world.knownEnemiesThatDrop[enemyLoot.itemId] = foundLoot;\r\n        if (!isFromFamiliars) {\r\n          state = pushToMessageLog(\r\n            state,\r\n            t(\"You found {{amount}} {{item}}!\", {\r\n              amount: amount,\r\n              item: item.getName(params),\r\n            }),\r\n          );\r\n        } else {\r\n          state = pushToFamiliarMessageLog(\r\n            state,\r\n            familiarId,\r\n            t(\"Your familiar found {{amount}} {{item}}!\", {\r\n              amount: amount,\r\n              item: item.getName(params),\r\n            }),\r\n          );\r\n        }\r\n      }\r\n    });\r\n    return state;\r\n  }\r\n\r\n  _memoizedEnemyLootTags = memoize(\r\n    (enemyLootId: string, isFromFamiliars: boolean): string[] => {\r\n      return [\r\n        TransformationTags.LootItemAmount,\r\n        enemyLootId,\r\n        this.getId(),\r\n        isFromFamiliars\r\n          ? TransformationTags.FromFamiliarExploration\r\n          : TransformationTags.FromExploration,\r\n      ];\r\n    },\r\n  );\r\n\r\n  // Tips on how to fight\r\n  getTips(): string | undefined {\r\n    return undefined;\r\n  }\r\n}\r\n","import {\r\n  ACHIEVEMENTS_SUPPORTED,\r\n  unlockAchievementRaw,\r\n} from \"../utils/Achievements\";\r\nimport { Achievement } from \"./Achievement\";\r\nimport { SetFlagListeners, hasEverHadFlag, hasFlag } from \"./Flags\";\r\nimport { GameState } from \"./GameState\";\r\nimport { addGameStateListener } from \"./GameStateListeners\";\r\nimport { addEnemyDeathListener } from \"./exploration/Exploration\";\r\nimport { Enemy, getCumulativeEnemyKills } from \"./exploration/enemies/Enemy\";\r\nimport { DataStore } from \"./generic/DataStore\";\r\nimport { Storyline } from \"./storylines/Storyline\";\r\n\r\nconst achievementsUnlocked: Partial<Record<Achievement, boolean>> = {};\r\n\r\nexport function registerAchievementUnlocker(\r\n  checker: (state: GameState) => boolean,\r\n  achievement: Achievement,\r\n) {\r\n  // Do not add achievements if not supported, to avoid all the calculations\r\n  if (ACHIEVEMENTS_SUPPORTED) {\r\n    addGameStateListener(achievement + \"unlocker\", (state) => {\r\n      // Using local stored values for throttling rather than flags,\r\n      // so that restarting the game will re-unlock achievements, just in case\r\n      if (!achievementsUnlocked?.[achievement] && checker(state)) {\r\n        unlockAchievement(achievement);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// Prefer not to use as achievement sync is unsupported\r\nexport function unlockAchievement(achievement: Achievement) {\r\n  if (!achievementsUnlocked?.[achievement]) {\r\n    achievementsUnlocked[achievement] = true;\r\n    if (ACHIEVEMENTS_SUPPORTED) {\r\n      unlockAchievementRaw(achievement);\r\n    }\r\n  }\r\n}\r\n\r\nexport const AchievementSyncListeners = new DataStore<\r\n  (state: GameState) => void\r\n>();\r\n\r\nexport function runAchievementSync(state: GameState) {\r\n  if (ACHIEVEMENTS_SUPPORTED) {\r\n    for (let listener of AchievementSyncListeners.getAll()) {\r\n      listener(state);\r\n    }\r\n  }\r\n}\r\n\r\nexport function registerAchievementUnlockerFromFlag(\r\n  flag: string,\r\n  achievement: Achievement,\r\n) {\r\n  if (ACHIEVEMENTS_SUPPORTED) {\r\n    SetFlagListeners.register((state, flagSet) => {\r\n      if (flagSet == flag && hasFlag(state, flagSet)) {\r\n        unlockAchievement(achievement);\r\n      }\r\n      return state;\r\n    }, achievement + \"-achievementUnlocker\");\r\n    AchievementSyncListeners.register((state) => {\r\n      if (hasEverHadFlag(state, flag)) {\r\n        unlockAchievement(achievement);\r\n      }\r\n    }, achievement + \"-syncUnlocker\");\r\n  }\r\n}\r\n\r\nexport function registerAchievementUnlockerFromEnemy(\r\n  enemy: Enemy,\r\n  achievement: Achievement,\r\n) {\r\n  if (ACHIEVEMENTS_SUPPORTED) {\r\n    addEnemyDeathListener(\r\n      achievement + \"-achievementUnlocker\",\r\n      (state: GameState, enemyDefeated: Enemy) => {\r\n        if (enemyDefeated == enemy) {\r\n          unlockAchievement(achievement);\r\n        }\r\n        return state;\r\n      },\r\n    );\r\n    AchievementSyncListeners.register((state) => {\r\n      if (getCumulativeEnemyKills(state, enemy.getId()) > 0) {\r\n        unlockAchievement(achievement);\r\n      }\r\n    }, achievement + \"-syncUnlocker\");\r\n  }\r\n}\r\n\r\nexport function registerAchievementUnlockerFromStoryline(\r\n  storyline: Storyline,\r\n  achievement: Achievement,\r\n) {\r\n  registerAchievementUnlockerFromFlag(\r\n    storyline.getCompletedFlag(),\r\n    achievement,\r\n  );\r\n}\r\n","import { t } from \"../../utils/I18n\";\r\nimport { Storyline } from \"../storylines/Storyline\";\r\n\r\nconst storyline = new Storyline(\r\n  \"combatClasses\",\r\n  t(\"Types of Wizards\"),\r\n  150,\r\n  10,\r\n  t(\"Complete Combat Training\"),\r\n  t(\"Unlock ability to choose a Class after retirement\"),\r\n  (state) => true,\r\n);\r\n\r\nexport { storyline as CombatClassesStoryline };\r\n","import memoize from \"sonic-memoize\";\r\nimport { GameState } from \"../GameState\";\r\nimport { ActionEffect } from \"../action/Action\";\r\nimport { DataStore } from \"../generic/DataStore\";\r\nimport { Identifiable } from \"../generic/Identifiable\";\r\nimport {\r\n  applyTransformationsPermaCached,\r\n  explainTransformationsText,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { CombatClassesStoryline } from \"./CombatClassesStoryline\";\r\n\r\nexport abstract class CombatClass implements Identifiable {\r\n  abstract getId(): string;\r\n  abstract getDisplayName(): string;\r\n  abstract getDisplayDescription(state: GameState): string;\r\n  abstract getDisplayEffect(state: GameState): string;\r\n\r\n  isActive(state: GameState): boolean {\r\n    return getCurrentCombatClass(state) == this;\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return isCombatClassSelectionUnlocked(state);\r\n  }\r\n\r\n  protected getBaseClassEffects(): Record<string, ActionEffect> {\r\n    return {};\r\n  }\r\n\r\n  getCachedBaseClassEffects = memoize(() => this.getBaseClassEffects());\r\n\r\n  tagsByEffect: Record<string, string[]> = {};\r\n  getTagsByEffect(key: string, baseEffect: ActionEffect): string[] {\r\n    if (this.tagsByEffect?.[key] == null) {\r\n      this.tagsByEffect[key] = [\r\n        ...(baseEffect.tags ?? []),\r\n        TransformationTags.ClassEffect,\r\n        key,\r\n      ];\r\n    }\r\n    return this.tagsByEffect[key];\r\n  }\r\n\r\n  getClassEffects(state: GameState, onlyId?: string): Record<string, number> {\r\n    const baseEffects = this.getCachedBaseClassEffects();\r\n    const finalEffects: Record<string, number> = {};\r\n    for (let key in baseEffects) {\r\n      if (onlyId != null && key != onlyId) {\r\n        continue;\r\n      }\r\n      const baseEffect = baseEffects[key];\r\n      finalEffects[key] = applyTransformationsPermaCached(\r\n        this.getTagsByEffect(key, baseEffect),\r\n        state,\r\n        baseEffect.value,\r\n      );\r\n    }\r\n    return finalEffects;\r\n  }\r\n\r\n  getClassEffectExplanations(\r\n    state: GameState,\r\n    onlyId?: string,\r\n  ): Record<string, string> {\r\n    const baseEffects = this.getCachedBaseClassEffects();\r\n    const finalEffects: Record<string, string> = {};\r\n    for (let key in baseEffects) {\r\n      if (onlyId != null && key != onlyId) {\r\n        continue;\r\n      }\r\n      const baseEffect = baseEffects[key];\r\n      finalEffects[key] = explainTransformationsText(\r\n        this.getTagsByEffect(key, baseEffect),\r\n        state,\r\n        baseEffect.value,\r\n        {\r\n          unit: baseEffect.unit,\r\n          valueType: baseEffect.valueType,\r\n        },\r\n      );\r\n    }\r\n    return finalEffects;\r\n  }\r\n}\r\n\r\nexport const CombatClasses = new DataStore<CombatClass>();\r\n\r\nexport function isCombatClassSelectionUnlocked(state: GameState): boolean {\r\n  return CombatClassesStoryline.isBonusActive(state);\r\n}\r\n\r\nexport function getCurrentCombatClass(\r\n  state: GameState,\r\n): CombatClass | undefined {\r\n  return state.run.combatClassId != null\r\n    ? CombatClasses.getById(state.run.combatClassId)\r\n    : undefined;\r\n}\r\n\r\nexport function getSelectableCombatClasses(state: GameState): CombatClass[] {\r\n  if (!isCombatClassSelectionUnlocked(state)) {\r\n    return [];\r\n  }\r\n  return CombatClasses.getAll().filter((combatClass) =>\r\n    combatClass.isVisible(state),\r\n  );\r\n}\r\n","import memoize from \"sonic-memoize\";\r\nimport { isDemo } from \"../Demo\";\r\nimport { DataStore } from \"../generic/DataStore\";\r\nimport { Storyline } from \"./Storyline\";\r\n\r\nexport const Storylines = new DataStore<Storyline>();\r\n\r\nfunction _getSortedStorylines(): Storyline[] {\r\n  return Storylines.getAll().sort((a, b) => a.order - b.order);\r\n}\r\n\r\nexport const getSortedStorylines = memoize(_getSortedStorylines);\r\n\r\nexport const getTotalStorylineCount = () =>\r\n  Storylines.getAll().length - (isDemo() ? 0 : 1);\r\n\r\nexport const storylineHintUnlockChecker = (state) => {\r\n  const storylines = Storylines.getAll().filter((storyline) =>\r\n    storyline.shouldRevealHint(state),\r\n  );\r\n  if (storylines.length > 0) {\r\n    storylines.forEach((storyline) => {\r\n      state = storyline.revealHint(state);\r\n    });\r\n  }\r\n  return state;\r\n};\r\n","import { clone } from \"../../utils/CoreUtils\";\r\nimport { Achievement } from \"../Achievement\";\r\nimport { registerAchievementUnlocker } from \"../Achievements\";\r\nimport { getCurrentCombatClass } from \"../classes/CombatClasses\";\r\nimport { EndingStats, GameState, GameStateTransform } from \"../GameState\";\r\nimport { DataStore } from \"../generic/DataStore\";\r\nimport {\r\n  getElementLevel,\r\n  getMaxOfMaxPrimaryElementLevels,\r\n  getPrimaryElements,\r\n  maximumElementLevelExpMultiplier,\r\n  maximumElementLevelProductionMultiplierDx,\r\n} from \"../spells/Elements\";\r\nimport { Storylines } from \"../storylines/Storylines\";\r\nimport { addUICommand } from \"../UICommands\";\r\n\r\nexport type Ending = {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  storylineId: string;\r\n};\r\n\r\nexport const Endings = new DataStore<Ending>();\r\n\r\nexport function addEnding(\r\n  id: string,\r\n  title: string,\r\n  contents: string,\r\n  storylineId: string,\r\n): void {\r\n  Endings.register({ id, description: contents, title, storylineId }, id);\r\n\r\n  registerAchievementUnlocker(\r\n    (state) => hasEverTriggeredEnding(state, id),\r\n    id as Achievement,\r\n  );\r\n}\r\n\r\nexport function getEndingData(state: GameState): EndingStats | undefined {\r\n  return state.run.endingTriggered;\r\n}\r\n\r\nexport function hasEverTriggeredEnding(state: GameState, id: string): boolean {\r\n  return state.world.endingsHistory.some((ending) => ending.endingId == id);\r\n}\r\n\r\nexport const EndingCloseListeners = new DataStore<GameStateTransform>();\r\n\r\nexport function setGameEnding(state: GameState, id: string): GameState {\r\n  if (\r\n    state.run.endingTriggered != null &&\r\n    state.run.endingTriggered.endingId === id\r\n  ) {\r\n    // Do nothing\r\n    return state;\r\n  }\r\n\r\n  const ending = Endings.getById(id);\r\n  const storyline = Storylines.getById(ending.storylineId);\r\n  if (!storyline.isCompleted(state)) {\r\n    state = storyline.complete(state);\r\n  }\r\n\r\n  const allStorylines = Storylines.getAll();\r\n  const completedStorylines = allStorylines.filter((storyline) => {\r\n    return storyline.isCompleted(state);\r\n  });\r\n  state.run.endingTriggered = {\r\n    endingId: id,\r\n    timestamp: Date.now(),\r\n    challengeId: state.run.currentChallengeId,\r\n    totalTimePlayed: state.global.secondsPlayed,\r\n    totalTimePlayedThisWorld: state.world.secondsPlayed,\r\n    totalTimePlayedThisRun: state.run.secondsPlayed,\r\n    totalActiveTimePlayed: state.global.activeSecondsPlayed,\r\n    totalActiveTimePlayedThisWorld: state.world.activeSecondsPlayed,\r\n    totalActiveTimePlayedThisRun: state.run.activeSecondsPlayed,\r\n    totalRealWorldTimePlayed: (Date.now() - state.global.startTimestamp) / 1000,\r\n    totalRealWorldTimePlayedThisWorld:\r\n      (Date.now() - state.world.startTimestamp) / 1000,\r\n    totalRealWorldTimePlayedThisRun:\r\n      (Date.now() - state.run.startTimestamp) / 1000,\r\n    timePiecesConsumed: state.global.timePiecesConsumed,\r\n    timePiecesConsumedThisWorld: state.world.timePiecesConsumed,\r\n    timePiecesConsumedThisRun: state.run.timePiecesConsumed,\r\n    totalRetirements: state.world.totalTimesResetted,\r\n    primaryElement: getPrimaryElements(state)?.[0],\r\n    primaryElementLevelOnEnding: getElementLevel(\r\n      state,\r\n      getPrimaryElements(state)?.[0],\r\n    ),\r\n    secondaryElement: getPrimaryElements(state)?.[1],\r\n    secondaryElementLevelOnEnding:\r\n      getPrimaryElements(state).length > 1\r\n        ? getElementLevel(state, getPrimaryElements(state)?.[1])\r\n        : undefined,\r\n    combatClassId: getCurrentCombatClass(state)?.getId?.(),\r\n    mpl: getMaxOfMaxPrimaryElementLevels(state),\r\n    researchMultiplier: maximumElementLevelExpMultiplier(state),\r\n    productionMultiplier: maximumElementLevelProductionMultiplierDx(state),\r\n    completedStorylines: completedStorylines.length,\r\n    worldsCreated: state.global.newGamePlusCount,\r\n    sheerPowerLevel: state.world.sheerPowerLevel,\r\n    storylineOracleLevel: state.world.storylineOracleLevel,\r\n    blazingSpeedLevel: state.world.blazingSpeedLevel,\r\n    worldDifficultyLevel: state.world.worldDifficultyLevel,\r\n  };\r\n  const endingsHistory = state.world.endingsHistory;\r\n  endingsHistory.push(clone(state.run.endingTriggered));\r\n  state.global.endingsHistory.push(clone(state.run.endingTriggered));\r\n  state = addUICommand(state, \"goToEnding\");\r\n  state = addUICommand(state, \"closeAllMenus\");\r\n  state = addUICommand(state, \"closeEventOverlay\");\r\n  return state;\r\n}\r\n","import { t } from \"../../utils/I18n\";\r\nimport { GameState } from \"../GameState\";\r\nimport { EventMessage, EventMessageOption } from \"./GameEvent\";\r\n\r\nclass EmptyEventMessageImpl implements EventMessage {\r\n  constructor() {}\r\n\r\n  getId(): string {\r\n    return t(\"empty\");\r\n  }\r\n  getTitle(params: any): string {\r\n    return t(\"[Deleted]\");\r\n  }\r\n  getDescription(state: GameState, params: any): string {\r\n    return t(\"This is a deleted game event\");\r\n  }\r\n  getAllowedOptions(state: GameState, params: any): EventMessageOption[] {\r\n    return [];\r\n  }\r\n  isTerminal(): boolean {\r\n    return true;\r\n  }\r\n  isActionable(state: GameState, params: any): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nconst EmptyEventMessage = new EmptyEventMessageImpl();\r\n\r\nexport { EmptyEventMessage };\r\n","import { GameState } from \"../GameState\";\r\nimport { Storyline } from \"../storylines/Storyline\";\r\n\r\nexport enum EventTag {\r\n  MAIN_QUEST = \"MAIN_QUEST\",\r\n  INCONSEQUENTIAL_RANDOM_EVENT = \"INCONSEQUENTIAL_RANDOM_EVENT\",\r\n  LEVEL_UP = \"LEVEL_UP\",\r\n  LEVEL_UP_EMPTY = \"LEVEL_UP_EMPTY\",\r\n  LEVEL_UP_ALREADY_REACHED = \"LEVEL_UP_ALREADY_REACHED\",\r\n  MAIN_QUEST_SEEN_BEFORE = \"MAIN_QUEST_SEEN_BEFORE\",\r\n  STORYLINE = \"STORYLINE\",\r\n  DO_NOT_AUTO_TRIGGER_IF_ONGOING = \"DO_NOT_AUTO_TRIGGER_IF_ONGOING\",\r\n  DO_NOT_POPUP = \"DO_NOT_POPUP\",\r\n  DO_NOT_POPUP_IF_BOSS_FIGHT = \"DO_NOT_POPUP_IF_BOSS_FIGHT\",\r\n}\r\n\r\nexport type EventTransform = (state: GameState, params: any) => GameState;\r\n\r\nexport interface EventMessageOption {\r\n  description: string;\r\n  isEnabled: boolean;\r\n  transform?: (state: GameState, params: any) => GameState;\r\n  nextMessage?: EventMessage;\r\n}\r\n\r\nexport interface EventMessage {\r\n  getId(): string;\r\n  getTitle(params: any): string;\r\n  getDescription(state: GameState, params: any): string;\r\n  getAllowedOptions(state: GameState, params: any): EventMessageOption[];\r\n  isTerminal(): boolean;\r\n  isActionable(state: GameState, params: any): boolean;\r\n}\r\n\r\nexport interface GameEvent {\r\n  getId(): string;\r\n  getMainEventMessage(): EventMessage;\r\n  onTrigger(): EventTransform;\r\n  hasTriggered(state: GameState): boolean;\r\n  hasEverTriggered(state: GameState): boolean;\r\n  getTags(): EventTag[];\r\n  getStorylines(): Storyline[];\r\n}\r\n","import { valuesOf } from \"../../utils/CoreUtils\";\r\nimport { setWorldFlag } from \"../Flags\";\r\nimport { GameState, GameStateTransform } from \"../GameState\";\r\nimport { getCurrentEnemyHP } from \"../exploration/Exploration\";\r\nimport { ExplorationStatus } from \"../exploration/ExplorationStatus\";\r\nimport { getExplorationStatus } from \"../exploration/ExplorationUtils\";\r\nimport { getCurrentEnemy } from \"../exploration/enemies/Enemies\";\r\nimport { getSecondsPlayed } from \"../timetick/TotalTimePlayed\";\r\nimport { EmptyEventMessage } from \"./EmptyEventMessage\";\r\nimport {\r\n  EventMessage,\r\n  EventMessageOption,\r\n  EventTag,\r\n  GameEvent,\r\n} from \"./GameEvent\";\r\n\r\nconst eventMessages: Record<string, EventMessage> = {};\r\n\r\nexport function registerEventMessage(message: EventMessage) {\r\n  eventMessages[message.getId()] = message;\r\n}\r\n\r\nexport function eventMessageExists(id: string): boolean {\r\n  return Boolean(eventMessages?.[id]);\r\n}\r\n\r\nexport function getEventMessageById(id: string): EventMessage {\r\n  return (eventMessages?.[id] || EmptyEventMessage) as EventMessage;\r\n}\r\n\r\nexport type EventOccurrenceData = {\r\n  eventOccurrenceId: string;\r\n  eventId: string;\r\n  currentMessageId: string | null;\r\n  timestamp: number;\r\n  timestampSecondsPlayed: number;\r\n  params: any;\r\n  messageHistory: string[];\r\n};\r\n\r\nconst gameEvents: Record<string, GameEvent> = {};\r\n\r\nexport function registerGameEvent(event: GameEvent) {\r\n  gameEvents[event.getId()] = event;\r\n}\r\n\r\nexport function getGameEventById(id: string): GameEvent {\r\n  return gameEvents?.[id] as GameEvent;\r\n}\r\n\r\nexport function getAllGameEvents(): Record<string, GameEvent> {\r\n  return gameEvents;\r\n}\r\n\r\nexport function getEventOccurrenceById(\r\n  state: GameState,\r\n  id: string,\r\n): EventOccurrenceData | undefined {\r\n  return state.run.eventOccurrences?.[id];\r\n}\r\n\r\nfunction executeEventOccurrenceActionImpl(\r\n  occurrenceId: string,\r\n  selectedOption: EventMessageOption,\r\n  state: GameState,\r\n) {\r\n  const nextMessage = selectedOption.nextMessage;\r\n  if (nextMessage) {\r\n    if (state.run.eventOccurrences[occurrenceId].messageHistory == null) {\r\n      state.run.eventOccurrences[occurrenceId].messageHistory = [];\r\n    }\r\n    state.run.eventOccurrences[occurrenceId].messageHistory.push(\r\n      state.run.eventOccurrences[occurrenceId].currentMessageId as string,\r\n    );\r\n    state.run.eventOccurrences[occurrenceId].currentMessageId =\r\n      nextMessage.getId();\r\n\r\n    // Do this to avoid accidentally cleaning up events after they go terminal\r\n    if (nextMessage.isTerminal()) {\r\n      state.run.eventOccurrences[occurrenceId].timestamp = Date.now();\r\n      state.run.eventOccurrences[occurrenceId].timestampSecondsPlayed =\r\n        getSecondsPlayed(state);\r\n    }\r\n  }\r\n\r\n  if (selectedOption.transform) {\r\n    state = selectedOption.transform(\r\n      state,\r\n      state.run.eventOccurrences[occurrenceId].params,\r\n    );\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nexport function executeEventOccurrenceAction(\r\n  this: any,\r\n  occurrenceId: string,\r\n  selectedOption: EventMessageOption,\r\n): GameStateTransform {\r\n  return executeEventOccurrenceActionImpl.bind(\r\n    this,\r\n    occurrenceId,\r\n    selectedOption,\r\n  );\r\n}\r\n\r\nexport function jumpEventToMessageIfExists(\r\n  state: GameState,\r\n  eventId: string,\r\n  messageId: string,\r\n): GameState {\r\n  const eventOccurrence = valuesOf(state.run.eventOccurrences).find(\r\n    (eventOccurrence) => eventOccurrence.eventId == eventId,\r\n  );\r\n  if (eventOccurrence == null) {\r\n    return state;\r\n  }\r\n\r\n  eventOccurrence.messageHistory.push(eventOccurrence.currentMessageId);\r\n  eventOccurrence.currentMessageId = eventId + messageId;\r\n  eventOccurrence.timestamp = Date.now();\r\n  state = addOccurrenceToQueueImpl(eventOccurrence.eventOccurrenceId, state);\r\n\r\n  return state;\r\n}\r\n\r\nfunction addOccurrenceToQueueImpl(occurrenceId: string, state: GameState) {\r\n  if (!state.run.eventQueue.includes(occurrenceId)) {\r\n    state.run.eventQueue.push(occurrenceId);\r\n  }\r\n  return state;\r\n}\r\n\r\nexport function addOccurrenceToQueue(\r\n  this: any,\r\n  occurrenceId: string,\r\n): GameStateTransform {\r\n  return addOccurrenceToQueueImpl.bind(this, occurrenceId);\r\n}\r\n\r\nfunction removeOccurrenceFromQueueImpl(occurrenceId: string, state: GameState) {\r\n  const position = state.run.eventQueue.lastIndexOf(occurrenceId);\r\n  if (position >= 0) {\r\n    state.run.eventQueue.splice(position, 1);\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nexport function removeOccurrenceFromQueue(\r\n  this: any,\r\n  occurrenceId: string,\r\n): GameStateTransform {\r\n  return removeOccurrenceFromQueueImpl.bind(this, occurrenceId);\r\n}\r\n\r\nfunction triggerEventImpl(\r\n  event: GameEvent,\r\n  params: any,\r\n  extraTags: EventTag[],\r\n  state: GameState,\r\n) {\r\n  const totalTags: EventTag[] = [];\r\n  totalTags.push(...event.getTags());\r\n  totalTags.push(...extraTags);\r\n\r\n  if (\r\n    totalTags.includes(EventTag.DO_NOT_AUTO_TRIGGER_IF_ONGOING) &&\r\n    !state.run.nextEventIsManuallyTriggered\r\n  ) {\r\n    const isAlreadyOngoing = Object.values(state.run.eventOccurrences).find(\r\n      (occurrenceData) =>\r\n        occurrenceData.eventId == event.getId() &&\r\n        occurrenceData.currentMessageId &&\r\n        !getEventMessageById(occurrenceData.currentMessageId).isTerminal(),\r\n    );\r\n    if (isAlreadyOngoing) {\r\n      return state;\r\n    }\r\n  }\r\n\r\n  if (totalTags.includes(EventTag.STORYLINE)) {\r\n    state = setWorldFlag(\"storyline_event_ever_triggered\")(state);\r\n  }\r\n\r\n  const occurrenceId = event.getId() + Date.now();\r\n  state.run.eventOccurrences[occurrenceId] = {\r\n    eventOccurrenceId: occurrenceId,\r\n    eventId: event.getId(),\r\n    currentMessageId: event.getMainEventMessage().getId(),\r\n    timestamp: Date.now(),\r\n    timestampSecondsPlayed: getSecondsPlayed(state),\r\n    params,\r\n    messageHistory: [],\r\n  };\r\n\r\n  const everTriggered = event.hasEverTriggered(state);\r\n  if (\r\n    totalTags.includes(EventTag.MAIN_QUEST) &&\r\n    state.options.hideEventTags.includes(EventTag.MAIN_QUEST_SEEN_BEFORE) &&\r\n    everTriggered\r\n  ) {\r\n    let currentMessage = getEventMessageById(\r\n      getEventOccurrenceById(state, occurrenceId).currentMessageId,\r\n    );\r\n    while (\r\n      !currentMessage.isTerminal() &&\r\n      currentMessage.getAllowedOptions(state, params).length == 1\r\n    ) {\r\n      state = executeEventOccurrenceActionImpl(\r\n        occurrenceId,\r\n        currentMessage.getAllowedOptions(state, params)[0],\r\n        state,\r\n      );\r\n      currentMessage = getEventMessageById(\r\n        getEventOccurrenceById(state, occurrenceId).currentMessageId,\r\n      );\r\n    }\r\n  }\r\n\r\n  const transform = event.onTrigger();\r\n  if (transform) {\r\n    state = transform(state, params);\r\n  }\r\n  if (\r\n    shouldPopUpEventWithTags(\r\n      state,\r\n      event,\r\n      occurrenceId,\r\n      totalTags,\r\n      everTriggered,\r\n    ) ||\r\n    state.run.nextEventIsManuallyTriggered\r\n  ) {\r\n    state.run.eventQueue.unshift(occurrenceId);\r\n  }\r\n  state.run.nextEventIsManuallyTriggered = false;\r\n  return state;\r\n}\r\n\r\nexport function triggerEvent(\r\n  this: any,\r\n  event: GameEvent,\r\n  params?: any,\r\n  extraTags?: EventTag[],\r\n): GameStateTransform {\r\n  return triggerEventImpl.bind(this, event, params || {}, extraTags ?? []);\r\n}\r\n\r\nexport function shouldHideEventsWithTag(\r\n  state: GameState,\r\n  tag: EventTag,\r\n): boolean {\r\n  return state.options.hideEventTags.includes(tag);\r\n}\r\n\r\nexport function shouldPopUpEventWithTags(\r\n  state: GameState,\r\n  event: GameEvent,\r\n  occurrenceId: string,\r\n  tags: EventTag[],\r\n  everTriggered: boolean,\r\n): boolean {\r\n  if (\r\n    tags.includes(EventTag.MAIN_QUEST) &&\r\n    state.options.hideEventTags.includes(EventTag.MAIN_QUEST_SEEN_BEFORE) &&\r\n    everTriggered\r\n  ) {\r\n    const currentMessage = getEventMessageById(\r\n      getEventOccurrenceById(state, occurrenceId).currentMessageId,\r\n    );\r\n    if (currentMessage.isTerminal()) {\r\n      return false;\r\n    }\r\n  }\r\n  if (\r\n    state.options.doNotPopupEventsDuringBossFights &&\r\n    getExplorationStatus(state) == ExplorationStatus.Combat &&\r\n    getCurrentEnemy(state)?.isBoss?.() &&\r\n    getCurrentEnemyHP(state) > 0\r\n  ) {\r\n    return false;\r\n  }\r\n  return (\r\n    !state.options.hideEventTags.some((tag) => tags.includes(tag)) &&\r\n    !tags.includes(EventTag.DO_NOT_POPUP)\r\n  );\r\n}\r\n","import { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { hasFlag, hasWorldFlag, setFlag, setWorldFlag } from \"../Flags\";\r\nimport { GameState } from \"../GameState\";\r\nimport { Storyline } from \"../storylines/Storyline\";\r\nimport { Storylines } from \"../storylines/Storylines\";\r\nimport { registerEventMessage, registerGameEvent } from \"./Events\";\r\nimport {\r\n  EventMessage,\r\n  EventMessageOption,\r\n  EventTag,\r\n  EventTransform,\r\n  GameEvent,\r\n} from \"./GameEvent\";\r\n\r\n/*\r\n// Usage of the new hotness:\r\nconst eventBuilder = buildEvent(\"EventId\", \"Event Title\", []);\r\neventBuilder.message(\"A\");\r\neventBuilder\r\n  .message(\"B\")\r\n  .option(\r\n    \"Charm\",\r\n    {\r\n      isVisible(state, params) {\r\n        return state.run.activeSecondsPlayed > 1;\r\n      },\r\n    },\r\n    \"C1\",\r\n  )\r\n  .option(\"Pay\", {}, \"C2\")\r\n  .option(\"Decline\", \"C3\");\r\neventBuilder\r\n  .message(\"C1\")\r\n  .option(\"Pay less\", {}, \"goto C2\")\r\n  .option(\"Decline\", \"goto C3\");\r\neventBuilder.message(\"C2\", \"C2\");\r\neventBuilder.message(\"D\");\r\neventBuilder.message(\"E\").end();\r\neventBuilder.message(\"C3\", \"C3\").end();\r\neventBuilder.build();\r\n*/\r\n\r\n/*\r\nstaffEventBuilder.createMessage()\r\n  .setSimpleDescription(\"A staff was found on the ground.\");\r\nstaffEventBuilder.createMessage()\r\n  .setSimpleDescription(\"It is shiny.\")\r\n  .addOption(\r\n    \"Pick up\",\r\n    { transform: grantResource(Resource.Mana, -100) },  \r\n    staffEventBuilder.createMessage()\r\n      .setSimpleDescription(\r\n        \"You pick up the staff. It's cursed! You feel your mana getting drained.\",\r\n      ),\r\n  )\r\n  .addOption(\r\n    \"Destroy\",\r\n    staffEventBuilder.createMessage()\r\n      .setSimpleDescription(\r\n        \"You destroy the staff. Wonder what it could have been...\",\r\n      ),\r\n  );\r\n\r\nconst staffEvent = staffEventBuilder.build();\r\n*/\r\n\r\n/*\r\nUsage:\r\n\r\nconst staffEventBuilder = buildEvent(\"RandomSpoutEvents_1\", \"Found a staff!\");\r\nstaffEventBuilder.createMessage()\r\n  .setSimpleDescription(\"A staff was found on the ground.\")\r\n  .addOption(\r\n    \"Pick up\",\r\n    { transform: grantResource(Resource.Mana, -100) },  \r\n    staffEventBuilder.createMessage()\r\n      .setSimpleDescription(\r\n        \"You pick up the staff. It's cursed! You feel your mana getting drained.\",\r\n      ),\r\n  )\r\n  .addOption(\r\n    \"Destroy\",\r\n    staffEventBuilder.createMessage()\r\n      .setSimpleDescription(\r\n        \"You destroy the staff. Wonder what it could have been...\",\r\n      ),\r\n  );\r\n\r\nconst staffEvent = staffEventBuilder.build();\r\n*/\r\n\r\nexport const STUB_OPTION: EventMessageOptionStub = {};\r\n\r\ntype EventMessageOptionWithVisibility = {\r\n  option: Omit<EventMessageOption, \"isEnabled\">;\r\n  isVisible?: (state: GameState, params?: any) => boolean;\r\n  isEnabled?: (state: GameState, params?: any) => boolean;\r\n};\r\n\r\nfunction replaceWithParams(text: string, params: any) {\r\n  if (!params) {\r\n    return text;\r\n  }\r\n  Object.keys(params)\r\n    .map((key) => [\r\n      new RegExp(\"/\" + key + \"/\", \"g\"),\r\n      isNaN(params[key]) || params[key] === \"\"\r\n        ? params[key]\r\n        : formatNumber(params[key]),\r\n    ])\r\n    .forEach((replacement) => {\r\n      text = text.replace(replacement[0], replacement[1]);\r\n    });\r\n  return text;\r\n}\r\n\r\nexport class EventMessageImpl implements EventMessage {\r\n  constructor(\r\n    private id: string,\r\n    private title: string,\r\n    private description: (state: GameState) => string,\r\n    private options: EventMessageOptionWithVisibility[],\r\n  ) {\r\n    registerEventMessage(this);\r\n  }\r\n\r\n  getId(): string {\r\n    return this.id;\r\n  }\r\n  getTitle(params: any): string {\r\n    return replaceWithParams(this.title, params);\r\n  }\r\n  getDescription(state: GameState, params: any): string {\r\n    return replaceWithParams(this.description(state), params);\r\n  }\r\n  getAllowedOptions(state: GameState, params: any): EventMessageOption[] {\r\n    return this.options\r\n      .filter(\r\n        (option) => option.isVisible == null || option.isVisible(state, params),\r\n      )\r\n      .map((option) => ({\r\n        ...option.option,\r\n        description: replaceWithParams(option.option.description, params),\r\n        isEnabled: option.isEnabled == null || option.isEnabled(state, params),\r\n      }));\r\n  }\r\n  isTerminal(): boolean {\r\n    return this.options.every(\r\n      (option) => !option.option.nextMessage && !option.option.transform,\r\n    );\r\n  }\r\n  isActionable(state: GameState, params: any): boolean {\r\n    return this.getAllowedOptions(state, params).some(\r\n      (option) => (option.nextMessage || option.transform) && option.isEnabled,\r\n    );\r\n  }\r\n}\r\n\r\ntype EventMessageOptionStub = {\r\n  description?: string;\r\n  nextMessageId?: string;\r\n  transform?: (state: GameState, params: any) => GameState;\r\n  isVisible?: (state: GameState, params: any) => boolean;\r\n  isEnabled?: (state: GameState, params: any) => boolean;\r\n};\r\n\r\nclass EventMessageBuilderDeluxe {\r\n  id: string;\r\n  description: (state: GameState) => string = () => \"\";\r\n  options: EventMessageOptionStub[] = [];\r\n  isEnd: boolean = false;\r\n  built: boolean;\r\n\r\n  constructor(id: string) {\r\n    this.id = id;\r\n  }\r\n\r\n  tag(id: string) {\r\n    this.id = id;\r\n    return this;\r\n  }\r\n\r\n  setDescription(description: (state: GameState) => string) {\r\n    this.description = description;\r\n    return this;\r\n  }\r\n\r\n  setSimpleDescription(description: string) {\r\n    this.setDescription((state: GameState) => description);\r\n    return this;\r\n  }\r\n\r\n  option(\r\n    description: string,\r\n    paramsOrNextMessageId:\r\n      | {\r\n          transform?: (state: GameState, params: any) => GameState;\r\n          isVisible?: (state: GameState, params: any) => boolean;\r\n          isEnabled?: (state: GameState, params: any) => boolean;\r\n        }\r\n      | string = {},\r\n    nextMessageId?: string,\r\n  ) {\r\n    if (typeof paramsOrNextMessageId === \"string\") {\r\n      nextMessageId = paramsOrNextMessageId;\r\n      paramsOrNextMessageId = {};\r\n    }\r\n\r\n    this.options.push({\r\n      description,\r\n      nextMessageId,\r\n      transform: paramsOrNextMessageId?.transform,\r\n      isVisible: paramsOrNextMessageId?.isVisible,\r\n      isEnabled: paramsOrNextMessageId?.isEnabled,\r\n    });\r\n    return this;\r\n  }\r\n\r\n  getOptions() {\r\n    return this.options.length > 0 ? this.options : [STUB_OPTION];\r\n  }\r\n\r\n  end() {\r\n    this.isEnd = true;\r\n  }\r\n}\r\n\r\nclass SimpleGameEvent implements GameEvent {\r\n  triggerString: string;\r\n\r\n  constructor(\r\n    private id: string,\r\n    private message: EventMessage,\r\n    private tags: EventTag[],\r\n    private onTriggerTransform?: EventTransform,\r\n    private storylineIds?: string[],\r\n  ) {\r\n    registerGameEvent(this);\r\n    this.triggerString = \"event_triggered_\" + this.id;\r\n  }\r\n\r\n  onTrigger(): EventTransform {\r\n    return (state, params) => {\r\n      state = setWorldFlag(this.triggerString)(state);\r\n      state = setFlag(this.triggerString)(state);\r\n      state = this.onTriggerTransform\r\n        ? this.onTriggerTransform(state, params)\r\n        : state;\r\n      return state;\r\n    };\r\n  }\r\n\r\n  hasTriggered(state: GameState): boolean {\r\n    return hasFlag(state, this.triggerString);\r\n  }\r\n\r\n  hasEverTriggered(state: GameState): boolean {\r\n    return hasWorldFlag(state, this.triggerString);\r\n  }\r\n\r\n  getId(): string {\r\n    return this.id;\r\n  }\r\n\r\n  getMainEventMessage(): EventMessage {\r\n    return this.message;\r\n  }\r\n\r\n  getTags(): EventTag[] {\r\n    return this.tags;\r\n  }\r\n\r\n  getStorylines(): Storyline[] {\r\n    return (this.storylineIds ?? []).map((id) =>\r\n      Storylines.getByIdNullable(id),\r\n    );\r\n  }\r\n}\r\n\r\nfunction createGameEvent(\r\n  id: string,\r\n  message: EventMessage,\r\n  tags: EventTag[],\r\n  onTrigger?: EventTransform,\r\n  storylineIds?: string[],\r\n): GameEvent {\r\n  return new SimpleGameEvent(id, message, tags, onTrigger, storylineIds);\r\n}\r\n\r\nclass EventBuilder {\r\n  constructor(\r\n    private id: string,\r\n    private title: string,\r\n    private tags: EventTag[],\r\n  ) {}\r\n\r\n  messages: EventMessageBuilderDeluxe[] = [];\r\n\r\n  private lastMessageId: number = 0;\r\n  private onTrigger?: EventTransform;\r\n  private storylineIds?: string[];\r\n\r\n  message(description: string, tag?: string): EventMessageBuilderDeluxe {\r\n    const builder = new EventMessageBuilderDeluxe(tag ?? this.newMessageId());\r\n    builder.setSimpleDescription(description);\r\n    this.messages.push(builder);\r\n    return builder;\r\n  }\r\n\r\n  newMessageId(): string {\r\n    return (this.lastMessageId++).toString();\r\n  }\r\n\r\n  setOnTrigger(onTrigger: EventTransform) {\r\n    this.onTrigger = onTrigger;\r\n    return this;\r\n  }\r\n\r\n  setStorylineIds(storylineIds: string | string[]) {\r\n    this.storylineIds =\r\n      typeof storylineIds === \"string\" ? [storylineIds] : storylineIds;\r\n    return this;\r\n  }\r\n\r\n  build(): GameEvent {\r\n    // Start from the first message\r\n    const message = this.buildRecursive(0);\r\n    if (message == null) {\r\n      throw new Error(\"Events should always have at least one message\");\r\n    }\r\n    // Make sure all messages are built!\r\n    for (let i in this.messages) {\r\n      if (!this.messages[i].built) {\r\n        this.buildRecursive(Number.parseInt(i));\r\n      }\r\n    }\r\n    return createGameEvent(\r\n      this.id,\r\n      message,\r\n      this.tags,\r\n      this.onTrigger,\r\n      this.storylineIds,\r\n    );\r\n  }\r\n\r\n  private findMessageIndexWithId(idToSearch: string | undefined): number {\r\n    return this.messages.findIndex(\r\n      (messageBuilder) => messageBuilder.id === idToSearch,\r\n    );\r\n  }\r\n\r\n  private buildRecursive(index: number): EventMessage | undefined {\r\n    const messageBuilder = this.messages?.[index];\r\n    if (!(messageBuilder instanceof EventMessageBuilderDeluxe)) {\r\n      return undefined;\r\n    }\r\n    const options = messageBuilder.getOptions().map((optionStub) => {\r\n      let nextMessageId = optionStub?.nextMessageId;\r\n\r\n      if (nextMessageId == null && !messageBuilder.isEnd) {\r\n        nextMessageId = this.messages?.[index + 1]?.id;\r\n      }\r\n\r\n      const nextMessageIndex = this.findMessageIndexWithId(nextMessageId);\r\n\r\n      let message: EventMessage | undefined = undefined;\r\n\r\n      if (nextMessageIndex >= 0) {\r\n        message = this.buildRecursive(nextMessageIndex);\r\n      }\r\n      return {\r\n        option: {\r\n          description:\r\n            optionStub.description ??\r\n            (nextMessageId != null ? t(\"Continue\") : t(\"Close\")),\r\n          transform: optionStub.transform,\r\n          nextMessage: message,\r\n        },\r\n        isVisible: optionStub.isVisible,\r\n        isEnabled: optionStub.isEnabled,\r\n      };\r\n    });\r\n    messageBuilder.built = true;\r\n    return new EventMessageImpl(\r\n      this.id + messageBuilder.id,\r\n      this.title,\r\n      messageBuilder.description,\r\n      options,\r\n    );\r\n  }\r\n}\r\n\r\nexport function buildEvent(id: string, title: string, tags: EventTag[]) {\r\n  return new EventBuilder(id, title, tags);\r\n}\r\n","import { isElectron } from \"../../utils/ElectronUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { isDemo } from \"../Demo\";\r\nimport { Flag } from \"../Flag\";\r\nimport { SetFlagListeners } from \"../Flags\";\r\nimport { buildEvent } from \"./EventMessageBuilder\";\r\nimport { triggerEvent } from \"./Events\";\r\n\r\nexport const getDemoAboutText = () =>\r\n  isElectron()\r\n    ? t(\r\n        \"Get the full version for Windows on [Steam](https://store.steampowered.com/app/2864890/Magic_Research_2/?utm_source=demo_about_steam)!\",\r\n      )\r\n    : t(\r\n        \"Get the full version for Windows on [Steam](https://store.steampowered.com/app/2864890/Magic_Research_2/?utm_source=demo_about_web), for Android in [the Google Play Store](https://play.google.com/store/apps/details?id=com.mcolotto.magicresearchtwo&utm_source=demo_about_web) or for iOS in [the App Store](https://apps.apple.com/app/id6478566840)!\",\r\n      );\r\n\r\nconst fullGameLink = () =>\r\n  isElectron()\r\n    ? t(\r\n        \"[**Get the full game now!**](https://store.steampowered.com/app/2864890/Magic_Research_2/?utm_source=demo_end_steam)\",\r\n      )\r\n    : t(\r\n        \"**Get the full game now for Windows on [Steam](https://store.steampowered.com/app/2864890/Magic_Research_2/?utm_source=demo_end_web), for Android in [the Google Play Store](https://play.google.com/store/apps/details?id=com.mcolotto.magicresearchtwo&utm_source=demo_end_web) or for iOS in [the App Store](https://apps.apple.com/app/id6478566840)!**\",\r\n      );\r\n\r\nexport const getMR1AboutText = () =>\r\n  isElectron()\r\n    ? t(\r\n        \"If you like the game, you may also like the original [Magic Research](https://store.steampowered.com/app/2311680/Magic_Research/?utm_source=mr2_about_steam)!\",\r\n      )\r\n    : t(\r\n        \"If you like the game, you may also like the original **Magic Research**, for Windows on [Steam](https://store.steampowered.com/app/2311680/Magic_Research/?utm_source=mr2_about_web), for Android in [the Google Play Store](https://play.google.com/store/apps/details?id=com.mcolotto.magicresearch&utm_source=mr2_about_web) or for iOS in [the App Store](https://apps.apple.com/app/id1671272877)!\",\r\n      );\r\n\r\nexport function loadDemoEndEvent() {\r\n  // Do nothing\r\n  const eventBuilder = buildEvent(\"demoEnd\", t(\"End of the Demo\"), []);\r\n\r\n  eventBuilder.message(\r\n    t(\r\n      `Congratulations! You have defeated the Man-Eating Plant. This is the end of the Demo Version of Magic Research 2. **Thank you for playing!**\r\n  \r\nIn the full game, you can expect much more content: more places to explore, more spells and items, and plenty more secrets to discover! Your progress in the Demo can be easily transferred to the full game.\r\n\r\n*Will you be able to successfully heal the deadly disease with the Philosopher's Stone?*\r\n\r\n{{fullGameLink}}`,\r\n      { fullGameLink: fullGameLink() },\r\n    ),\r\n  );\r\n\r\n  const event = eventBuilder.build();\r\n\r\n  if (isDemo()) {\r\n    SetFlagListeners.register((state, flag) => {\r\n      if (flag == Flag.VastDesertUnlocked && !event.hasTriggered(state)) {\r\n        state = triggerEvent(event)(state);\r\n      }\r\n      return state;\r\n    });\r\n  }\r\n}\r\n","import React, { useContext } from \"react\";\r\n\r\nexport type AuxOptions = {\r\n  compactLayout: boolean;\r\n};\r\n\r\nexport const AuxOptionsContext = React.createContext<AuxOptions>({\r\n  compactLayout: false,\r\n});\r\n\r\nexport function useAuxOptions() {\r\n  return useContext(AuxOptionsContext);\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport {\r\n  I18nManager,\r\n  Text as NativeText,\r\n  StyleProp,\r\n  StyleSheet,\r\n  TextStyle,\r\n} from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { TextRef } from \"react-native-paper/lib/typescript/src/components/Typography/Text\";\r\nimport { VariantProp } from \"react-native-paper/lib/typescript/src/components/Typography/types\";\r\nimport { ThemeProp } from \"react-native-paper/lib/typescript/src/types\";\r\n\r\nexport type Props = React.ComponentProps<typeof NativeText> & {\r\n  /**\r\n   * @supported Available in v5.x with theme version 3\r\n   *\r\n   * Variant defines appropriate text styles for type role and its size.\r\n   * Available variants:\r\n   *\r\n   *  Display: `displayLarge`, `displayMedium`, `displaySmall`\r\n   *\r\n   *  Headline: `headlineLarge`, `headlineMedium`, `headlineSmall`\r\n   *\r\n   *  Title: `titleLarge`, `titleMedium`, `titleSmall`\r\n   *\r\n   *  Label:  `labelLarge`, `labelMedium`, `labelSmall`\r\n   *\r\n   *  Body: `bodyLarge`, `bodyMedium`, `bodySmall`\r\n   */\r\n  variant?: VariantProp<string>;\r\n  children: React.ReactNode;\r\n  theme?: ThemeProp;\r\n  style?: StyleProp<TextStyle>;\r\n  h1?: boolean;\r\n  h2?: boolean;\r\n  h3?: boolean;\r\n  h4?: boolean;\r\n  doNotScaleFonts?: boolean;\r\n};\r\n\r\nconst PaperText = (\r\n  { style, variant, h1, h2, h3, h4, doNotScaleFonts, ...rest }: Props,\r\n  ref: TextRef,\r\n) => {\r\n  const theme = useTheme();\r\n  const writingDirection = I18nManager.getConstants().isRTL ? \"rtl\" : \"ltr\";\r\n\r\n  const ariaLevel = h1 ? 1 : h2 ? 2 : h3 ? 3 : h4 ? 4 : undefined;\r\n  const computedStyle = useMemo(\r\n    () => [\r\n      h1 && styles.h1,\r\n      h2 && styles.h2,\r\n      h3 && styles.h3,\r\n      h4 && styles.h4,\r\n      style,\r\n    ],\r\n    [h1, h2, h3, h4, style],\r\n  );\r\n\r\n  const fullStyle = useMemo(() => {\r\n    if (variant) {\r\n      return [\r\n        theme.fonts[variant],\r\n        styles.text,\r\n        { writingDirection, color: theme.colors.onSurface },\r\n        computedStyle,\r\n      ];\r\n    } else {\r\n      const font = theme.fonts.default;\r\n      const textStyle = {\r\n        ...font,\r\n        color: theme.colors?.onSurface,\r\n      };\r\n      return [styles.text, textStyle, { writingDirection }, computedStyle];\r\n    }\r\n  }, [theme, writingDirection, computedStyle]);\r\n\r\n  if (variant) {\r\n    return (\r\n      <NativeText\r\n        // @ts-ignore Not sure why this is giving error now\r\n        style={fullStyle}\r\n        maxFontSizeMultiplier={doNotScaleFonts === true ? 1.0 : 0}\r\n        accessibilityRole={h1 || h2 || h3 || h4 ? \"header\" : undefined}\r\n        selectable={false}\r\n        // @ts-ignore We want to send this prop anyway\r\n        ariaLevel={ariaLevel}\r\n        accessibilityLevel={ariaLevel}\r\n        aria-level={ariaLevel}\r\n        {...rest}\r\n      />\r\n    );\r\n  } else {\r\n    return (\r\n      <NativeText\r\n        accessibilityRole={h1 || h2 || h3 || h4 ? \"header\" : undefined}\r\n        selectable={false}\r\n        // @ts-ignore We want to send this prop anyway\r\n        ariaLevel={ariaLevel}\r\n        accessibilityLevel={ariaLevel}\r\n        aria-level={ariaLevel}\r\n        maxFontSizeMultiplier={doNotScaleFonts === true ? 1.0 : 0}\r\n        {...rest}\r\n        // @ts-ignore Not sure why this is giving error now\r\n        style={fullStyle}\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nconst Text = React.memo<Props>(PaperText);\r\n\r\nexport { Text };\r\n\r\n/*\r\nexport function Text(props: any) {\r\n  let children = props.children || [];\r\n  if (!Array.isArray(children)) {\r\n    children = [children];\r\n  }\r\n  const newChildren = children.map((child: any) => {\r\n    if (typeof child == \"string\") {\r\n      const splitString = child.split(\"{wood}\");\r\n      const newStringChildren = [\r\n        <StyledText props={props}>{splitString[0]}</StyledText>,\r\n      ] as Object[];\r\n      for (let i = 1; i < splitString.length; i++) {\r\n        newStringChildren.push(<Icon name=\"close\" />);\r\n        newStringChildren.push(\r\n          <StyledText props={props}>{splitString[i]}</StyledText>,\r\n        );\r\n      }\r\n      return <View>{newStringChildren}</View>;\r\n    }\r\n    //return child;\r\n  });\r\n  return <View>{newChildren}</View>;\r\n}*/\r\n\r\nconst styles = StyleSheet.create({\r\n  h1: {\r\n    fontSize: 20,\r\n  },\r\n  h2: {\r\n    fontSize: 18,\r\n  },\r\n  h3: {\r\n    fontSize: 16,\r\n  },\r\n  h4: {\r\n    fontSize: 14,\r\n  },\r\n  text: {\r\n    textAlign: \"left\",\r\n  },\r\n});\r\n","import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport type { ViewStyle } from \"react-native\";\r\nimport { Platform, StyleSheet, View } from \"react-native\";\r\nimport {\r\n  ButtonProps,\r\n  Button as PaperButton,\r\n  useTheme,\r\n} from \"react-native-paper\";\r\nimport { valuesOf } from \"../../utils/CoreUtils\";\r\n// import PaperButton from \"./PaperButton\";\r\nimport { useAuxOptions } from \"./AuxOptionsContext\";\r\nimport { Text } from \"./Text\";\r\n\r\nexport function Button(\r\n  props: Omit<Omit<ButtonProps, \"onPress\">, \"children\"> & {\r\n    onPress: () => void;\r\n    enableAutoRepress?: boolean;\r\n    autoRepressConfig?: {\r\n      minTimeMs?: number;\r\n      startingThreshold?: number;\r\n      startingRepressTime?: number;\r\n      dropoffMultiplier?: number;\r\n    };\r\n    ButtonComponent?: React.ElementType;\r\n    size?: number;\r\n    TextComponent?: React.ElementType;\r\n    children?: React.ReactNode;\r\n    numberOfLines?: number | null;\r\n    passthroughStyle?: ViewStyle;\r\n    disableDisabledRenderingOptimization?: boolean;\r\n  },\r\n) {\r\n  const {\r\n    disabled,\r\n    autoRepressConfig,\r\n    enableAutoRepress,\r\n    style,\r\n    labelStyle,\r\n    passthroughStyle,\r\n    disableDisabledRenderingOptimization,\r\n    TextComponent,\r\n    ...rest\r\n  } = props;\r\n  const pressed = useRef(false);\r\n  const disabledRef = useRef(disabled);\r\n  disabledRef.current = disabled;\r\n  const currentRepressTimeout = useRef(300);\r\n  const currentRepressHandler = useRef<NodeJS.Timeout | null>(null);\r\n  const [flash, setFlash] = useState(false);\r\n  const shouldDisableRenderingOptimization =\r\n    disableDisabledRenderingOptimization || rest.ButtonComponent != null;\r\n\r\n  useEffect(() => {\r\n    if (flash) {\r\n      const timeoutHandler = setTimeout(\r\n        () => setFlash(false),\r\n        (autoRepressConfig?.minTimeMs ?? 100) / 3,\r\n      );\r\n      return () => clearTimeout(timeoutHandler);\r\n    }\r\n  }, [flash]);\r\n  const rePress = useCallback(() => {\r\n    if (pressed.current) {\r\n      if (!disabledRef.current) {\r\n        props.onPress && props.onPress();\r\n      }\r\n      setFlash(true);\r\n      currentRepressTimeout.current = Math.max(\r\n        autoRepressConfig?.minTimeMs ?? 100,\r\n        currentRepressTimeout.current *\r\n          (autoRepressConfig?.dropoffMultiplier ?? 0.94),\r\n      );\r\n      currentRepressHandler.current = setTimeout(\r\n        rePress,\r\n        currentRepressTimeout.current,\r\n      );\r\n    }\r\n  }, [props.onPress]);\r\n  const onPressInCallback = useCallback(() => {\r\n    pressed.current = true;\r\n    currentRepressHandler.current = setTimeout(() => {\r\n      if (pressed.current && !disabledRef.current) {\r\n        currentRepressTimeout.current =\r\n          autoRepressConfig?.startingRepressTime ?? 300;\r\n        rePress();\r\n      }\r\n    }, autoRepressConfig?.startingThreshold ?? 600);\r\n  }, [rePress]);\r\n  const onPressOutCallback = useCallback(() => {\r\n    pressed.current = false;\r\n    if (currentRepressHandler.current != null) {\r\n      clearTimeout(currentRepressHandler.current);\r\n      currentRepressHandler.current = null;\r\n    }\r\n  }, [rePress]);\r\n  useEffect(() => {\r\n    return () => {\r\n      onPressOutCallback();\r\n    };\r\n  }, [onPressOutCallback]);\r\n  const ButtonComponent = props.ButtonComponent ?? PaperButton;\r\n  const theme = useTheme();\r\n  const auxOptions = useAuxOptions();\r\n  const basicLabelStyle =\r\n    props.compact && Platform.OS != \"web\"\r\n      ? theme.fonts.labelSmall\r\n      : theme.fonts.labelLarge;\r\n  const verticallyNarrowLayout = auxOptions.compactLayout;\r\n  const verticalLabelStyle = verticallyNarrowLayout\r\n    ? styles.compactLabel\r\n    : undefined;\r\n  const styleFlash = useMemo(\r\n    () => [passthroughStyle, flash && { opacity: 0.9 }],\r\n    [passthroughStyle, flash],\r\n  );\r\n  const computedLabelStyle = useMemo(\r\n    () => [basicLabelStyle, verticalLabelStyle, labelStyle],\r\n    [basicLabelStyle, verticalLabelStyle, labelStyle],\r\n  );\r\n  const activeButton = useMemo(\r\n    () => (\r\n      <ButtonComponent\r\n        onPressIn={enableAutoRepress ? onPressInCallback : undefined}\r\n        onPressOut={enableAutoRepress ? onPressOutCallback : undefined}\r\n        disabled={shouldDisableRenderingOptimization ? disabled : false}\r\n        mode=\"contained\"\r\n        style={styleFlash}\r\n        labelStyle={computedLabelStyle}\r\n        TextComponent={TextComponent ?? Text}\r\n        {...rest}\r\n      />\r\n    ),\r\n    [\r\n      enableAutoRepress,\r\n      onPressInCallback,\r\n      onPressOutCallback,\r\n      styleFlash,\r\n      computedLabelStyle,\r\n      TextComponent,\r\n      shouldDisableRenderingOptimization ? disabled : false,\r\n      ...valuesOf(rest),\r\n    ],\r\n  );\r\n  const disabledButton = useMemo(\r\n    () =>\r\n      shouldDisableRenderingOptimization ? null : (\r\n        <ButtonComponent\r\n          onPressIn={enableAutoRepress ? onPressInCallback : undefined}\r\n          onPressOut={enableAutoRepress ? onPressOutCallback : undefined}\r\n          disabled={true}\r\n          mode=\"contained\"\r\n          style={styleFlash}\r\n          labelStyle={computedLabelStyle}\r\n          TextComponent={TextComponent ?? Text}\r\n          {...rest}\r\n        />\r\n      ),\r\n    [\r\n      enableAutoRepress,\r\n      onPressInCallback,\r\n      onPressOutCallback,\r\n      styleFlash,\r\n      computedLabelStyle,\r\n      TextComponent,\r\n      shouldDisableRenderingOptimization,\r\n      ...valuesOf(rest),\r\n    ],\r\n  );\r\n  return useMemo(\r\n    () =>\r\n      shouldDisableRenderingOptimization ? (\r\n        <View style={style}>\r\n          <View>{activeButton}</View>\r\n        </View>\r\n      ) : (\r\n        <View style={style}>\r\n          <View style={disabled && { display: \"none\" }}>{activeButton}</View>\r\n          <View style={!disabled && { display: \"none\" }}>{disabledButton}</View>\r\n        </View>\r\n      ),\r\n    [\r\n      style,\r\n      disabled,\r\n      activeButton,\r\n      disabledButton,\r\n      shouldDisableRenderingOptimization,\r\n    ],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  compactLabel: {\r\n    marginVertical: 5,\r\n  },\r\n});\r\n","import React, { useMemo } from \"react\";\r\nimport { Image, ImageProps, ImageSourcePropType } from \"react-native\";\r\nimport { Items } from \"../../../backend/items/Items\";\r\n\r\ntype IconProps = Omit<ImageProps, \"source\"> & {\r\n  icon: string;\r\n  small?: boolean;\r\n};\r\n\r\nconst icons: Record<string, ImageSourcePropType> = {\r\n  // Elements\r\n  fire: require(\"./assets/fire.png\"),\r\n  earth: require(\"./assets/earth.png\"),\r\n  water: require(\"./assets/water.png\"),\r\n  air: require(\"./assets/air.png\"),\r\n  poison: require(\"./assets/poison.png\"),\r\n  mind: require(\"./assets/mind.png\"),\r\n  life: require(\"./assets/life.png\"),\r\n  electric: require(\"./assets/electric.png\"),\r\n  death: require(\"./assets/death.png\"),\r\n  holy: require(\"./assets/holy.png\"),\r\n  time: require(\"./assets/time.png\"),\r\n  space: require(\"./assets/space.png\"),\r\n\r\n  // Resources\r\n  fireessence: require(\"./assets/fireEssence.png\"),\r\n  earthessence: require(\"./assets/earthEssence.png\"),\r\n  wateressence: require(\"./assets/waterEssence.png\"),\r\n  airessence: require(\"./assets/airEssence.png\"),\r\n  poisonessence: require(\"./assets/poisonEssence.png\"),\r\n  mindessence: require(\"./assets/mindEssence.png\"),\r\n  lifeessence: require(\"./assets/lifeEssence.png\"),\r\n  electricessence: require(\"./assets/electricEssence.png\"),\r\n  deathessence: require(\"./assets/deathEssence.png\"),\r\n  holyessence: require(\"./assets/holyEssence.png\"),\r\n  timeessence: require(\"./assets/timeEssence.png\"),\r\n  spaceessence: require(\"./assets/spaceEssence.png\"),\r\n  land: require(\"./assets/land.png\"),\r\n  coins: require(\"./assets/coins.png\"),\r\n  mana: require(\"./assets/mana.png\"),\r\n  wizardpower: require(\"./assets/wizardPower.png\"),\r\n\r\n  // Stats and others\r\n  boost: require(\"./assets/boost.png\"),\r\n  attack: require(\"./assets/attack.png\"),\r\n  attackDelay: require(\"./assets/attackDelay.png\"),\r\n  defense: require(\"./assets/defense.png\"),\r\n  hp: require(\"./assets/hp.png\"),\r\n  monstium: require(\"./assets/monstium.png\"),\r\n  debuff: require(\"./assets/debuff.png\"),\r\n  generic: require(\"./assets/generic.png\"),\r\n  accuracy: require(\"./assets/accuracy.png\"),\r\n  dodge: require(\"./assets/dodge.png\"),\r\n  timepiece: require(\"./assets/timepiece.png\"),\r\n  critChance: require(\"./assets/critChance.png\"),\r\n  exchange: require(\"./assets/exchange.png\"),\r\n  corruption: require(\"./assets/corruption.png\"),\r\n  x: require(\"./assets/x.png\"),\r\n\r\n  // Menu sections\r\n  about: require(\"./assets/about.png\"),\r\n  apprentices: require(\"./assets/apprentices.png\"),\r\n  boosts: require(\"./assets/boosts.png\"),\r\n  compendium: require(\"./assets/compendium.png\"),\r\n  creatures: require(\"./assets/creatures.png\"),\r\n  ending: require(\"./assets/ending.png\"),\r\n  enhance: require(\"./assets/enhance.png\"),\r\n  exploration: require(\"./assets/exploration.png\"),\r\n  familiars: require(\"./assets/familiars.png\"),\r\n  help: require(\"./assets/help.png\"),\r\n  home: require(\"./assets/home.png\"),\r\n  inventory: require(\"./assets/inventory.png\"),\r\n  options: require(\"./assets/options.png\"),\r\n  research: require(\"./assets/research.png\"),\r\n  retirement: require(\"./assets/retirement.png\"),\r\n  rituals: require(\"./assets/rituals.png\"),\r\n  spellcraft: require(\"./assets/spellcraft.png\"),\r\n  stats: require(\"./assets/stats.png\"),\r\n  study: require(\"./assets/study.png\"),\r\n  synchro: require(\"./assets/synchro.png\"),\r\n  transmute: require(\"./assets/transmute.png\"),\r\n  wizards: require(\"./assets/wizards.png\"),\r\n  worlds: require(\"./assets/worlds.png\"),\r\n};\r\n\r\nfunction GameIconNonMemo(props: IconProps) {\r\n  const { icon, style, ...otherProps } = props;\r\n  let imageSource = icons[icon];\r\n  let label = icon;\r\n  if (!imageSource) {\r\n    // It could be an item\r\n    const item = Items.getByIdNullable(icon);\r\n    if (item) {\r\n      imageSource = item.getPicture();\r\n      label = item.getName(item.getDefaultParams());\r\n    }\r\n  }\r\n  if (!imageSource) {\r\n    return null;\r\n  }\r\n  const computedStyle = useMemo(\r\n    () => [\r\n      { width: 32, height: 32 },\r\n      style,\r\n      props.small ? { width: 16, height: 16 } : {},\r\n    ],\r\n    [style, props.small],\r\n  );\r\n\r\n  return (\r\n    <Image\r\n      source={imageSource}\r\n      accessibilityLabel={label}\r\n      accessibilityRole=\"image\"\r\n      style={computedStyle}\r\n      {...otherProps}\r\n    />\r\n  );\r\n}\r\n\r\nconst GameIcon = React.memo(GameIconNonMemo);\r\n\r\nexport { GameIcon };\r\n","import Plugin from \"markdown-it-regexp\";\r\n\r\nconst plugin = Plugin(\r\n  // regexp to match\r\n  /\\:([a-zA-Z_-]+)\\:/,\r\n\r\n  // this function will be called when something matches\r\n  (match: any[], utils: any) => {\r\n    const icon = match[1];\r\n\r\n    return icon;\r\n  },\r\n);\r\n\r\nexport default plugin;\r\n","import Plugin from \"markdown-it-regexp\";\r\n\r\nconst plugin = Plugin(\r\n  // regexp to match\r\n  /\\^(.+?)\\^<(.*?)>/,\r\n\r\n  // this function will be called when something matches\r\n  (match: any[], utils: any) => {\r\n    const base = match[1];\r\n    const tooltip = match[2];\r\n\r\n    return [base, tooltip];\r\n  },\r\n);\r\n\r\nexport default plugin;\r\n","import React, { useMemo } from \"react\";\r\nimport { Platform, StyleSheet, View } from \"react-native\";\r\nimport LibraryMarkdown, {\r\n  MarkdownIt,\r\n  getUniqueID,\r\n} from \"react-native-markdown-display\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { Text } from \"../utility/Text\";\r\nimport type { Props as PaperTooltipProps } from \"../utility/tooltip/PaperTooltip\";\r\nimport { GameIcon } from \"./icons/GameIcon\";\r\nimport MarkdownIconPlugin from \"./markdown/MarkdownIconPlugin\";\r\nimport MarkdownTooltipPlugin from \"./markdown/MarkdownTooltipPlugin\";\r\n\r\nlet Tooltip: React.ComponentType<PaperTooltipProps> = null;\r\n\r\nexport function setTooltipComponentForMarkdown(\r\n  component: React.ComponentType<PaperTooltipProps>,\r\n) {\r\n  Tooltip = component;\r\n}\r\n\r\nconst markdownItInstance = MarkdownIt({ typographer: false })\r\n  .use(MarkdownIconPlugin, {\r\n    containerClassName: \"icon-embed\",\r\n  })\r\n  .use(MarkdownTooltipPlugin, {});\r\n\r\nconst markdownRules = {\r\n  paragraph: (node: any, children: any, parent: any, markdownStyles: any) => {\r\n    return (\r\n      <View key={node.key} style={[node.index > 0 && styles.markdownParagraph]}>\r\n        {children}\r\n      </View>\r\n    );\r\n  },\r\n  text: (node, children, parent, styles, inheritedStyles = {}) => (\r\n    <Text key={node.key} style={[inheritedStyles, styles.text]}>\r\n      {node.content}\r\n    </Text>\r\n  ),\r\n  \"regexp-0\": (node: any, children: any, parent: any, markdownStyles: any) => {\r\n    const icon = node.sourceMeta.match[1];\r\n    // \\u200b is \"zero-width space\". It needs to be added because\r\n    // in devices like the Google Pixel phones and tablets,\r\n    // if a line contains exclusively the icon with no text,\r\n    // the icon gets cut off.\r\n    return Platform.select({\r\n      default: (\r\n        <Text key={getUniqueID()}>\r\n          <GameIcon\r\n            key={getUniqueID()}\r\n            style={\r\n              icon === \"attack\"\r\n                ? styles.imageStyleAndroidAttack\r\n                : styles.imageStyleAndroid\r\n            }\r\n            small={true}\r\n            resizeMode=\"contain\"\r\n            icon={icon}\r\n          />\r\n          {Platform.OS === \"android\" && \"\\u200b\"}\r\n        </Text>\r\n      ),\r\n      ios: (\r\n        <Text key={getUniqueID()}>\r\n          <View\r\n            style={\r\n              icon === \"attack\"\r\n                ? styles.imageContainerStyleiOSAttack\r\n                : styles.imageContainerStyleiOS\r\n            }\r\n          >\r\n            <GameIcon\r\n              key={getUniqueID()}\r\n              style={\r\n                icon === \"attack\"\r\n                  ? styles.imageStyleiOSAttack\r\n                  : styles.imageStyleiOS\r\n              }\r\n              small={true}\r\n              resizeMode=\"contain\"\r\n              icon={icon}\r\n            />\r\n          </View>\r\n        </Text>\r\n      ),\r\n    });\r\n  },\r\n  \"regexp-1\": (\r\n    node: any,\r\n    children: any,\r\n    parent: any,\r\n    markdownStyles: any,\r\n    inheritedStyles: any,\r\n  ) => {\r\n    const base = node.sourceMeta.match[1];\r\n    const tooltip = node.sourceMeta.match[2];\r\n    if (tooltip == \"\") {\r\n      return (\r\n        <Text\r\n          key={node.key}\r\n          style={[inheritedStyles, markdownStyles.text, styles.text]}\r\n        >\r\n          {base}\r\n        </Text>\r\n      );\r\n    }\r\n    return (\r\n      <View key={getUniqueID()} style={styles.tooltipTextContainer}>\r\n        <Tooltip title={tooltip}>\r\n          <Text\r\n            style={[\r\n              inheritedStyles,\r\n              markdownStyles.text,\r\n              styles.text,\r\n              styles.underlined,\r\n            ]}\r\n          >\r\n            {base}\r\n          </Text>\r\n        </Tooltip>\r\n      </View>\r\n    );\r\n  },\r\n};\r\n\r\nfunction MarkdownImpl(props: any) {\r\n  const style = props?.style || {};\r\n  const containerStyle = props?.containerStyle || {};\r\n  const children = props.children?.replace?.(\r\n    /((\\d(K|M|B|T)?)|(Max)) :/g,\r\n    (_substring: string, args: string) => args + \":\",\r\n  );\r\n  const accessibilityLabel =\r\n    props.accessibilityLabel ??\r\n    (props.children as string)\r\n      ?.replaceAll?.(\"*\", \"\")\r\n      ?.replaceAll(/\\^(.+?)\\^<(.*?)>/g, (substring, ...matches) => matches[0]);\r\n  const accessibilityLiveRegion = props?.accessibilityLiveRegion ?? \"none\";\r\n  const theme = useTheme();\r\n  const fullStyle = useMemo(\r\n    () => ({\r\n      body: [\r\n        {\r\n          justifyContent: \"flex-end\",\r\n          minHeight: 21,\r\n          lineHeight: Platform.select({ ios: 19, default: undefined }),\r\n          color: theme.colors.onBackground,\r\n        },\r\n        style,\r\n      ],\r\n      bullet_list_icon: {\r\n        lineHeight: Platform.select({ ios: 20, default: 16 }),\r\n        marginTop: 4,\r\n      },\r\n      bullet_list: { width: \"100%\" },\r\n      list_item: { alignItems: \"center\", justifyContent: \"center\" },\r\n      heading2: {\r\n        lineHeight: 24,\r\n      },\r\n    }),\r\n    [theme, style],\r\n  );\r\n  return useMemo(\r\n    () => (\r\n      <View\r\n        accessibilityLabel={accessibilityLabel}\r\n        accessibilityLiveRegion={accessibilityLiveRegion}\r\n        accessible={true}\r\n        style={[styles.containerView, containerStyle]}\r\n      >\r\n        <LibraryMarkdown\r\n          {...props}\r\n          markdownit={markdownItInstance}\r\n          rules={markdownRules}\r\n          style={fullStyle}\r\n        >\r\n          {children}\r\n        </LibraryMarkdown>\r\n      </View>\r\n    ),\r\n    [\r\n      accessibilityLabel,\r\n      accessibilityLiveRegion,\r\n      markdownItInstance,\r\n      markdownRules,\r\n      fullStyle,\r\n      children,\r\n    ],\r\n  );\r\n}\r\n\r\nconst Markdown = React.memo(MarkdownImpl);\r\n\r\nexport { Markdown };\r\n\r\nconst styles = StyleSheet.create({\r\n  markdownParagraph: {\r\n    marginTop: Platform.select({ ios: 8, default: 4 }),\r\n  },\r\n  markdownTextgroup: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    alignItems: \"center\",\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  text: {\r\n    lineHeight: 16,\r\n  },\r\n  imageStyleAndroid: {\r\n    height: 16,\r\n    width: 16,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    top: 2,\r\n    marginLeft: 2,\r\n  },\r\n  imageStyleAndroidAttack: {\r\n    height: 16,\r\n    width: 16,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    top: 2,\r\n    marginLeft: 2,\r\n    marginRight: 2,\r\n  },\r\n  imageContainerStyleiOS: {\r\n    width: 18,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  imageContainerStyleiOSAttack: {\r\n    width: 20,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  imageStyleiOS: {\r\n    height: 16,\r\n    width: 16,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    alignSelf: \"center\",\r\n    top: 2,\r\n  },\r\n  imageStyleiOSAttack: {\r\n    height: 16,\r\n    width: 16,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    alignSelf: \"center\",\r\n    top: 2,\r\n    right: 2,\r\n  },\r\n  containerView: Platform.select({\r\n    default: {},\r\n    web: {\r\n      flex: 1,\r\n    },\r\n  }),\r\n  underlined: {\r\n    textDecorationLine: \"underline\",\r\n    top: 2,\r\n  },\r\n  tooltipTextContainer: {\r\n    height: 16,\r\n    // justifyContent: \"flex-end\",\r\n    // lineHeight: 16,\r\n  },\r\n});\r\n","import { StyleSheet } from \"react-native\";\r\n\r\nconst Styles = StyleSheet.create({\r\n  flex: {\r\n    flex: 1,\r\n  },\r\n  flexRow: {\r\n    flexDirection: \"row\",\r\n  },\r\n  flexEnd: {\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  flexRowSpaceBetween: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  flexRowAlignCenter: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  flexCenter: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  alignSelfStretch: {\r\n    alignSelf: \"stretch\",\r\n  },\r\n  alignSelfNormal: {\r\n    alignSelf: \"flex-start\",\r\n  },\r\n  ml4: {\r\n    marginLeft: 4,\r\n  },\r\n  ml8: {\r\n    marginLeft: 8,\r\n  },\r\n  ml16: {\r\n    marginLeft: 16,\r\n  },\r\n  mt2: {\r\n    marginTop: 2,\r\n  },\r\n  mt4: {\r\n    marginTop: 4,\r\n  },\r\n  mt8: {\r\n    marginTop: 8,\r\n  },\r\n  mt16: {\r\n    marginTop: 16,\r\n  },\r\n  mr4: {\r\n    marginRight: 4,\r\n  },\r\n  mr8: {\r\n    marginRight: 8,\r\n  },\r\n  mr16: {\r\n    marginRight: 16,\r\n  },\r\n  mb4: {\r\n    marginBottom: 4,\r\n  },\r\n  mb8: {\r\n    marginBottom: 8,\r\n  },\r\n  mb16: {\r\n    marginBottom: 16,\r\n  },\r\n  mv2: {\r\n    marginVertical: 2,\r\n  },\r\n  mv4: {\r\n    marginVertical: 4,\r\n  },\r\n  mv8: {\r\n    marginVertical: 8,\r\n  },\r\n  mv16: {\r\n    marginVertical: 16,\r\n  },\r\n  pb4: {\r\n    paddingBottom: 4,\r\n  },\r\n  pb8: {\r\n    paddingBottom: 8,\r\n  },\r\n  pb16: {\r\n    paddingBottom: 16,\r\n  },\r\n  ph4: {\r\n    paddingHorizontal: 4,\r\n  },\r\n  ph8: {\r\n    paddingHorizontal: 8,\r\n  },\r\n  ph16: {\r\n    paddingHorizontal: 16,\r\n  },\r\n  pv4: {\r\n    paddingVertical: 4,\r\n  },\r\n  pv8: {\r\n    paddingVertical: 8,\r\n  },\r\n  pv16: {\r\n    paddingVertical: 16,\r\n  },\r\n  p4: {\r\n    padding: 4,\r\n  },\r\n  p8: {\r\n    padding: 8,\r\n  },\r\n  p16: {\r\n    padding: 16,\r\n  },\r\n  bold: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  underlined: {\r\n    textDecorationLine: \"underline\",\r\n  },\r\n});\r\n\r\nexport default Styles;\r\n","import React from \"react\";\r\n\r\nexport const VisibilityContext = React.createContext<boolean>(true);\r\n","import { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  GameState,\r\n  INITIAL_STATE,\r\n  StateContextValue,\r\n  createTempState,\r\n} from \"../../backend/GameState\";\r\nimport { clone } from \"../../utils/CoreUtils\";\r\nimport { VisibilityContext } from \"./VisibilityContext\";\r\n\r\nlet subscribers: { fn: (state: GameState) => void; stack: string }[] = [];\r\n\r\nlet initialState: StateContextValue = {\r\n  ...clone(INITIAL_STATE),\r\n  apply: () => {},\r\n  overwrite: () => {},\r\n};\r\n\r\ninitialState.temp = createTempState();\r\n\r\nexport function updateGameState(newState: StateContextValue) {\r\n  initialState = newState;\r\n  subscribers.forEach((subscriber) => subscriber.fn(newState));\r\n}\r\n\r\nexport function useGameState() {\r\n  const [state, setState] = useState<StateContextValue>(initialState);\r\n  const stack = \"\"; //new Error().stack.split(\"\\n\")?.[2];\r\n  const callback = useCallback((newState) => setState(newState), [setState]);\r\n  const visible = useContext(VisibilityContext);\r\n\r\n  useEffect(() => {\r\n    if (visible) {\r\n      const subscriber = { fn: callback, stack };\r\n      subscribers.push(subscriber);\r\n      return () => {\r\n        subscribers = subscribers.filter(\r\n          (otherSubscriber) => otherSubscriber != subscriber,\r\n        );\r\n      };\r\n    }\r\n  }, [callback, visible]);\r\n\r\n  return state; //useContext(StateContext);\r\n}\r\n","import Constants from \"expo-constants\";\r\nimport React, { useRef } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { isDemo } from \"../backend/Demo\";\r\nimport { addUICommand } from \"../backend/UICommands\";\r\nimport {\r\n  getDemoAboutText,\r\n  getMR1AboutText,\r\n} from \"../backend/events/DemoEndEvent\";\r\nimport { t } from \"../utils/I18n\";\r\nimport {\r\n  getCurrentVersion,\r\n  getCurrentVersionTimestamp,\r\n} from \"../utils/Versioning\";\r\nimport { Button } from \"./utility/Button\";\r\nimport { Markdown } from \"./utility/Markdown\";\r\nimport Styles from \"./utility/Styles\";\r\nimport { Text } from \"./utility/Text\";\r\nimport { useGameState } from \"./utility/useGameState\";\r\n\r\nexport default function About() {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n  const versionText = isDemo() ? t(\"**Demo Version**\") : t(\"**Full Version**\");\r\n  const versionNumber = getCurrentVersionTimestamp() ?? t(\"Unknown\");\r\n  const versionString = getCurrentVersion() ?? t(\"Unknown\");\r\n  const versionNumberText = t(`Version {{versionString}} ({{versionNumber}})`, {\r\n    versionString,\r\n    versionNumber,\r\n  });\r\n  const demoText = isDemo() ? getDemoAboutText() : \"\";\r\n  const mr1text = getMR1AboutText();\r\n  const text = t(\r\n    `## Magic Research 2\r\n\r\n  \r\n{{versionText}}\r\n\r\n{{versionNumberText}}\r\n\r\n\r\nA game by **@Maticolotto**\r\n\r\n\r\n**Credits**\r\n\r\nAssets from:\r\n  * Raven Fantasy Icons, by Clockwork Raven [(https://clockworkraven.itch.io/raven-fantasy-icons)](https://clockworkraven.itch.io/raven-fantasy-icons)\r\n  * Aekashics Librarium, by Aekashics [(http://www.akashics.moe)](http://www.akashics.moe)\r\n  * 1000+ Fantasy RPG Icons, by finalbossblues [(https://finalbossblues.itch.io/icons)](https://finalbossblues.itch.io/icons)\r\n\r\nSpecial thanks to **@jpascua93** for pre-launch feedback. development, and marketing assets\r\n\r\nSpecial thanks to: **@Wiedmolol**, **@lunacent**, **@Fich**, **@Falk**, **@Aegys**, **@UVGamma**, **@AbsolFan1**, **@Kolt** for pre-launch feedback\r\n\r\nCheck out the **[Discord](https://discord.gg/bPhGsaqR9d)** to discuss the game!\r\n\r\n[Privacy Policy](https://mcolotto.github.io/magic-research-demo/privacy-policy)\r\n\r\n{{demoText}}\r\n\r\n{{mr1text}}`,\r\n    { versionText, versionNumberText, demoText, mr1text },\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text h1>{t(\"About\")}</Text>\r\n      <View style={styles.explanation}>\r\n        <Markdown style={styles.explanationText}>{text}</Markdown>\r\n        {Constants?.expoConfig?.extra?.showDebug && (\r\n          <Button\r\n            onPress={() => {\r\n              stateRef.current.apply((state) => {\r\n                state = addUICommand(state, \"goToDebug\");\r\n                return state;\r\n              });\r\n            }}\r\n            style={Styles.mt16}\r\n          >\r\n            Show debug\r\n          </Button>\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"flex-start\",\r\n    width: \"100%\",\r\n  },\r\n  explanation: {\r\n    marginTop: 16,\r\n    flex: 1,\r\n    alignItems: \"stretch\",\r\n    width: \"100%\",\r\n  },\r\n  explanationText: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n","import memoize from \"sonic-memoize\";\r\nimport { keysOf } from \"../../utils/CoreUtils\";\r\nimport { GameState } from \"../GameState\";\r\nimport {\r\n  Resource,\r\n  getResourceAmount,\r\n  getResourceCap,\r\n  grantResource,\r\n} from \"../Resources\";\r\nimport {\r\n  getTotalAmountOfItem,\r\n  removeFromInventoryWithAnyParams,\r\n} from \"../items/Inventory\";\r\nimport { Items } from \"../items/Items\";\r\nimport { hasTemporaryEffect } from \"../temporaryeffects/TemporaryEffects\";\r\nimport {\r\n  TransformationTag,\r\n  applyTransformations,\r\n  explainTransformationsText,\r\n} from \"../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../transformation/TransformationTags\";\r\nimport { ActionArea, ActionSubcategory } from \"./ActionAreas\";\r\n\r\nexport type DoActionArgs = { isAutomatic: boolean };\r\n\r\nexport type ActionEffect = {\r\n  value: number;\r\n  tags?: TransformationTag[];\r\n  unit?: string;\r\n  valueType?: TransformationValueType;\r\n  base?: number;\r\n};\r\n\r\nexport abstract class Action {\r\n  constructor() {}\r\n\r\n  abstract getId(): string;\r\n  abstract getDisplayName(state: GameState): string;\r\n  abstract getCost(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  };\r\n  abstract doAction(args: DoActionArgs, state: GameState): GameState;\r\n  abstract isVisible(state: GameState): boolean;\r\n  abstract getDisplayDescription(state: GameState): string;\r\n  abstract getDisplayEffect(state: GameState): string;\r\n\r\n  getAreas(): Partial<Record<ActionArea, ActionSubcategory[]>> {\r\n    return {};\r\n  }\r\n\r\n  canSpam(): boolean {\r\n    return true;\r\n  }\r\n\r\n  canAutoPurchaseMax(): boolean {\r\n    return false;\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {};\r\n  }\r\n\r\n  getCachedBaseActionEffects = memoize(() => this.getBaseActionEffects());\r\n\r\n  tagsByEffect: Record<string, string[]> = {};\r\n  getTagsByEffect(key: string, baseEffect: ActionEffect): string[] {\r\n    if (this.tagsByEffect?.[key] == null) {\r\n      this.tagsByEffect[key] = [\r\n        ...this.getTags(),\r\n        ...(baseEffect.tags ?? []),\r\n        TransformationTags.ActionEffect,\r\n        key,\r\n      ];\r\n    }\r\n    return this.tagsByEffect[key];\r\n  }\r\n\r\n  getActionEffect(state: GameState, effectId: string): number {\r\n    const baseEffects = this.getCachedBaseActionEffects();\r\n    return applyTransformations(\r\n      this.getTagsByEffect(effectId, baseEffects[effectId]),\r\n      state,\r\n      baseEffects[effectId].value,\r\n      {\r\n        action: this,\r\n      },\r\n    );\r\n  }\r\n\r\n  getActionEffects(state: GameState, onlyId?: string): Record<string, number> {\r\n    const baseEffects = this.getCachedBaseActionEffects();\r\n    const finalEffects: Record<string, number> = {};\r\n    if (onlyId != null) {\r\n      finalEffects[onlyId] = applyTransformations(\r\n        this.getTagsByEffect(onlyId, baseEffects[onlyId]),\r\n        state,\r\n        baseEffects[onlyId].value,\r\n        {\r\n          action: this,\r\n        },\r\n      );\r\n      return finalEffects;\r\n    }\r\n    for (let key in baseEffects) {\r\n      if (onlyId != null && key != onlyId) {\r\n        continue;\r\n      }\r\n      const baseEffect = baseEffects[key];\r\n      finalEffects[key] = applyTransformations(\r\n        this.getTagsByEffect(key, baseEffect),\r\n        state,\r\n        baseEffect.value,\r\n        this.memoizedActionEffectParam(),\r\n      );\r\n    }\r\n    return finalEffects;\r\n  }\r\n\r\n  memoizedActionEffectParam = memoize(() => ({ action: this }));\r\n\r\n  memoizedActionEffectExplanationParam = memoize(\r\n    (baseEffect: ActionEffect) => ({\r\n      action: this,\r\n      unit: baseEffect.unit,\r\n      valueType: baseEffect.valueType,\r\n      base: baseEffect.base,\r\n    }),\r\n  );\r\n\r\n  getActionEffectExplanations(\r\n    state: GameState,\r\n    onlyId?: string,\r\n  ): Record<string, string> {\r\n    const baseEffects = this.getCachedBaseActionEffects();\r\n    const finalEffects: Record<string, string> = {};\r\n    for (let key in baseEffects) {\r\n      if (onlyId != null && key != onlyId) {\r\n        continue;\r\n      }\r\n      const baseEffect = baseEffects[key];\r\n      finalEffects[key] = explainTransformationsText(\r\n        this.getTagsByEffect(key, baseEffect),\r\n        state,\r\n        baseEffect.value,\r\n        this.memoizedActionEffectExplanationParam(baseEffect),\r\n      );\r\n    }\r\n    return finalEffects;\r\n  }\r\n\r\n  getTags(): TransformationTag[] {\r\n    const tags = [TransformationTags.Action, this.getId()];\r\n    return tags;\r\n  }\r\n\r\n  canAfford(state: GameState): boolean {\r\n    const cost = this.getCost(state);\r\n    return (\r\n      keysOf(cost.resources).every(\r\n        (resource) =>\r\n          getResourceAmount(state, resource) >=\r\n            (cost.resources[resource] ?? 0) &&\r\n          getResourceCap(state, resource) >= (cost.resources[resource] ?? 0),\r\n      ) &&\r\n      keysOf(cost.items).every(\r\n        (itemId) =>\r\n          getTotalAmountOfItem(Items.getById(itemId), state) >=\r\n          cost.items[itemId],\r\n      )\r\n    );\r\n  }\r\n\r\n  isCapEnough(state: GameState): boolean {\r\n    const cost = this.getCost(state);\r\n    return (Object.keys(cost.resources) as Array<Resource>).every(\r\n      (resource: Resource) => {\r\n        return (\r\n          (cost.resources[resource] ?? 0) <= getResourceCap(state, resource)\r\n        );\r\n      },\r\n    );\r\n  }\r\n\r\n  payCost(state: GameState, n?: number): GameState {\r\n    const cost = this.getCost(state);\r\n    const times = n ?? 1;\r\n    (Object.keys(cost.resources) as Array<Resource>).forEach((resourceName) => {\r\n      state = grantResource(\r\n        resourceName,\r\n        -(cost?.resources?.[resourceName] ?? 0) * times,\r\n      )(state);\r\n    });\r\n    (Object.keys(cost.items) as Array<string>).forEach((itemId) => {\r\n      state = removeFromInventoryWithAnyParams(\r\n        Items.getById(itemId),\r\n        cost.items[itemId] * times,\r\n        state,\r\n      );\r\n    });\r\n\r\n    return state;\r\n  }\r\n\r\n  isEnabled(state: GameState, skipAffordabilityChecks?: boolean): boolean {\r\n    if (skipAffordabilityChecks) {\r\n      return true;\r\n    }\r\n    return this.canAfford(state);\r\n  }\r\n\r\n  // Returns true if the action is considered \"active\".\r\n  // Used mainly for spells that give buffs, to display a visual aid.\r\n  isActive(state: GameState): boolean {\r\n    return hasTemporaryEffect(state, this.getId());\r\n  }\r\n\r\n  requireConfirmation(state: GameState): boolean {\r\n    return false;\r\n  }\r\n}\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { Storyline } from \"../../../storylines/Storyline\";\r\n\r\nconst storyline = new Storyline(\r\n  \"boostingMachine\",\r\n  t(\"The Fancy Paperweight\"),\r\n  370,\r\n  30,\r\n  t(\"Explore and defeat the boss of The Sphinx\"),\r\n  t('Permanently unlock \"Boost\"'),\r\n  (state) => true,\r\n);\r\n\r\nexport { storyline as BoostingMachine };\r\n","import { Resource } from \"../../Resources\";\r\nimport { SpellElement } from \"../Elements\";\r\n\r\nexport const RESOURCE_FOR_ELEMENT: Record<SpellElement, Resource> = {\r\n  Fire: Resource.FireEssence,\r\n  Earth: Resource.EarthEssence,\r\n  Water: Resource.WaterEssence,\r\n  Air: Resource.AirEssence,\r\n  Poison: Resource.PoisonEssence,\r\n  Mind: Resource.MindEssence,\r\n  Life: Resource.LifeEssence,\r\n  Electric: Resource.ElectricEssence,\r\n  Death: Resource.DeathEssence,\r\n  Holy: Resource.HolyEssence,\r\n  Time: Resource.TimeEssence,\r\n  Space: Resource.SpaceEssence,\r\n};\r\n","import memoize from \"sonic-memoize\";\r\nimport { valuesOf } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { GameState } from \"../GameState\";\r\nimport { Resource, clearResourceCapCache, grantResource } from \"../Resources\";\r\nimport { Action, DoActionArgs } from \"../action/Action\";\r\nimport {\r\n  ActionArea,\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../action/ActionAreas\";\r\nimport { getVisibleActionsForAreaBySubcategory } from \"../action/Actions\";\r\nimport { BoostingMachine } from \"../events/storyline/desert/BoostingMachineStoryline\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport { clearCombatStatCache } from \"../exploration/CombatStats\";\r\nimport { SpellElement, getUnlockedElements } from \"../spells/Elements\";\r\nimport { RESOURCE_FOR_ELEMENT } from \"../spells/channeling/ChannelingResources\";\r\nimport { clearCalculatedIncomeCache } from \"../timetick/IncomeOverTime\";\r\nimport { applyTransformations } from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\n\r\nabstract class BoostActionBase extends Action {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return getUnlockedElements(state).includes(this.getElement());\r\n  }\r\n\r\n  getAreas(): Partial<Record<ActionArea, ActionSubcategory[]>> {\r\n    return { BOOST: [ActionSubcategories.BOOST] };\r\n  }\r\n\r\n  getTags(): string[] {\r\n    return super.getTags().concat([TransformationTags.Boost]);\r\n  }\r\n\r\n  abstract getName(): string;\r\n\r\n  getDisplayName(state: GameState): string {\r\n    const bought = getBoughtBoostsAmount(state, this.getElement());\r\n    return this.getName() + (bought > 0 ? ` (${bought})` : \"\");\r\n  }\r\n\r\n  abstract getElement(): SpellElement;\r\n\r\n  _costScaleMonstium = memoize(() => [\r\n    ...this.getTags(),\r\n    Resource.Monstium,\r\n    TransformationTags.CostScale,\r\n  ]);\r\n  _costScaleEssence = memoize((essence) => [\r\n    ...this.getTags(),\r\n    essence,\r\n    TransformationTags.CostScale,\r\n  ]);\r\n\r\n  getCost(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    const element = this.getElement();\r\n    const essence = RESOURCE_FOR_ELEMENT[element];\r\n    const fractionAddedPerUpgrade = applyTransformations(\r\n      this._costScaleMonstium(),\r\n      state,\r\n      0.2,\r\n    );\r\n    const essenceFractionAddedPerUpgrade = applyTransformations(\r\n      this._costScaleEssence(essence),\r\n      state,\r\n      0.4,\r\n    );\r\n    const resourcesObject = {\r\n      Monstium:\r\n        Math.pow(1.0 + fractionAddedPerUpgrade, getTotalBoughtBoosts(state)) *\r\n        100,\r\n    };\r\n    resourcesObject[essence] =\r\n      Math.pow(\r\n        1.0 + essenceFractionAddedPerUpgrade,\r\n        getBoughtBoostsAmount(state, element),\r\n      ) * 1000;\r\n    return {\r\n      resources: resourcesObject,\r\n      items: {},\r\n    };\r\n  }\r\n\r\n  abstract getTotalBoostDescription(state: GameState): string;\r\n\r\n  doAction(args: DoActionArgs, state: GameState): GameState {\r\n    if (!this.canAfford(state)) {\r\n      return state;\r\n    }\r\n    const cost = this.getCost(state).resources;\r\n    state.run.boostsBought[this.getElement()]++;\r\n    state = grantResource(Resource.Monstium, -(cost.Monstium ?? 0))(state);\r\n    state = grantResource(\r\n      RESOURCE_FOR_ELEMENT[this.getElement()],\r\n      -(cost[RESOURCE_FOR_ELEMENT[this.getElement()]] ?? 0),\r\n    )(state);\r\n    state = clearCombatStatCache(state, AttackTarget.Player);\r\n    state = clearCalculatedIncomeCache(state);\r\n    state = clearResourceCapCache(state);\r\n    return state;\r\n  }\r\n\r\n  canAutoPurchaseMax(): boolean {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function isBoostingUnlocked(state: GameState): boolean {\r\n  return BoostingMachine.isBonusActive(state);\r\n}\r\n\r\nexport function getBoughtBoostsAmount(\r\n  state: GameState,\r\n  element: SpellElement,\r\n): number {\r\n  return state.run.boostsBought[element];\r\n}\r\n\r\nexport function hasBoosts(state: GameState) {\r\n  return getTotalBoughtBoosts(state) > 0;\r\n}\r\n\r\nexport function getBoostsBonusText(state: GameState): string {\r\n  const visibleBoosts = (getVisibleActionsForAreaBySubcategory(\r\n    state,\r\n    ActionArea.BOOST,\r\n  )?.[ActionSubcategories.BOOST] ?? []) as BoostActionBase[];\r\n  return visibleBoosts\r\n    .map((visibleBoost) => {\r\n      if (getBoughtBoostsAmount(state, visibleBoost.getElement()) <= 0) {\r\n        return null;\r\n      }\r\n      return visibleBoost.getTotalBoostDescription(state);\r\n    })\r\n    .filter((value) => value != null)\r\n    .join(t(\", \"));\r\n}\r\n\r\nexport function getTotalBoughtBoosts(state: GameState): number {\r\n  return valuesOf(SpellElement)\r\n    .map((element) => getBoughtBoostsAmount(state, element))\r\n    .reduce((prev, current) => prev + current, 0);\r\n}\r\n\r\nexport default BoostActionBase;\r\n","export type NotificationData = {\r\n  id: string;\r\n  group: string;\r\n  item: string;\r\n  globalTimestampTriggered: number;\r\n  globalTimestampRead: number | undefined;\r\n};\r\n\r\nexport function isNotificationRead(data: NotificationData): boolean {\r\n  return (data?.globalTimestampRead ?? 0) > data.globalTimestampTriggered;\r\n}\r\n","import { GameState } from \"./GameState\";\r\nimport { NotificationData, isNotificationRead } from \"./Notification\";\r\nimport { getTotalSecondsPlayed } from \"./timetick/TotalTimePlayed\";\r\n\r\nexport function getNotificationById(\r\n  state: GameState,\r\n  id: string,\r\n): NotificationData | undefined {\r\n  return state.global.notifications.find(\r\n    (notification) => notification.id == id,\r\n  );\r\n}\r\n\r\nexport function getNotificationByGroupAndItem(\r\n  state: GameState,\r\n  group: string,\r\n  item: string,\r\n): NotificationData | undefined {\r\n  return state.global.notifications.find(\r\n    (notification) => notification.group == group && notification.item == item,\r\n  );\r\n}\r\n\r\nexport function getNotificationsByGroup(\r\n  state: GameState,\r\n  group: string,\r\n): NotificationData[] {\r\n  return state.global.notifications.filter(\r\n    (notification) => notification.group == group,\r\n  );\r\n}\r\n\r\nexport function getUnreadNotificationsByGroup(\r\n  state: GameState,\r\n  group: string,\r\n): NotificationData[] {\r\n  return getNotificationsByGroup(state, group).filter(\r\n    (notification) => !isNotificationRead(notification),\r\n  );\r\n}\r\n\r\nexport function triggerNotification(\r\n  state: GameState,\r\n  group: string,\r\n  item: string,\r\n): GameState {\r\n  const previousNotification = getNotificationByGroupAndItem(\r\n    state,\r\n    group,\r\n    item,\r\n  );\r\n  if (previousNotification) {\r\n    previousNotification.globalTimestampTriggered =\r\n      getTotalSecondsPlayed(state);\r\n    return state;\r\n  }\r\n\r\n  state.global.notifications.push({\r\n    id: Math.random().toString(),\r\n    group,\r\n    item,\r\n    globalTimestampTriggered: getTotalSecondsPlayed(state),\r\n    globalTimestampRead: undefined,\r\n  });\r\n  return state;\r\n}\r\n\r\nexport function markNotificationAsRead(\r\n  state: GameState,\r\n  group: string,\r\n  item: string,\r\n): GameState {\r\n  const previousNotification = getNotificationByGroupAndItem(\r\n    state,\r\n    group,\r\n    item,\r\n  );\r\n  if (previousNotification) {\r\n    if (!isNotificationRead(previousNotification)) {\r\n      previousNotification.globalTimestampRead = getTotalSecondsPlayed(state);\r\n    }\r\n  }\r\n  return state;\r\n}\r\n","import { GameState } from \"../GameState\";\r\nimport { DataStore } from \"../generic/DataStore\";\r\nimport { Identifiable } from \"../generic/Identifiable\";\r\nimport { Spell } from \"../spells/Spell\";\r\nimport { AutocastConditionParameterType } from \"./AutocastConditionParameterType\";\r\n\r\nexport type AutocastConditionParameter = {\r\n  parameterType: AutocastConditionParameterType;\r\n  name: string;\r\n};\r\n\r\nexport abstract class AutocastCondition implements Identifiable {\r\n  abstract getId(): string;\r\n\r\n  abstract getDisplayName(): string;\r\n\r\n  abstract getParameters(): AutocastConditionParameter[];\r\n\r\n  abstract getDisplayExplanation(state: GameState, values: string[]): string;\r\n\r\n  abstract isConditionMet(\r\n    state: GameState,\r\n    spell: Spell | undefined,\r\n    values: string[],\r\n  ): boolean;\r\n\r\n  validate(state: GameState, values: string[]): Record<number, string> {\r\n    const parameters = this.getParameters();\r\n    let validation = {};\r\n    for (let idx in parameters) {\r\n      const validationResponse = parameters[idx].parameterType.validate(\r\n        state,\r\n        values[idx] ?? \"\",\r\n      );\r\n      if (validationResponse != null) {\r\n        validation[idx] = validationResponse;\r\n      }\r\n    }\r\n    return validation;\r\n  }\r\n}\r\n\r\nexport const AutocastConditions = new DataStore<AutocastCondition>();\r\n","import { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Spell } from \"../../spells/Spell\";\r\nimport {\r\n  AutocastCondition,\r\n  AutocastConditionParameter,\r\n} from \"../AutocastCondition\";\r\n\r\nclass AlwaysAutocastCondition extends AutocastCondition {\r\n  getId(): string {\r\n    return \"Always\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Always\");\r\n  }\r\n  getParameters(): AutocastConditionParameter[] {\r\n    return [];\r\n  }\r\n  getDisplayExplanation(state: GameState, values: string[]): string {\r\n    return t(\"Always\");\r\n  }\r\n  isConditionMet(\r\n    state: GameState,\r\n    spell: Spell | undefined,\r\n    values: string[],\r\n  ): boolean {\r\n    return true;\r\n  }\r\n  validate(state: GameState, values: string[]): Record<number, string> {\r\n    return {};\r\n  }\r\n}\r\n\r\nexport default new AlwaysAutocastCondition();\r\n","import { GameState } from \"../GameState\";\r\n\r\nexport type AutocastConditionParameterOption = {\r\n  label: string;\r\n  value: string;\r\n};\r\n\r\nexport enum AutocastConditionParameterDisplay {\r\n  TEXT_FIELD = \"TEXT_FIELD\",\r\n  PICKER = \"PICKER\",\r\n}\r\n\r\nexport abstract class AutocastConditionParameterType {\r\n  abstract getDisplay(): AutocastConditionParameterDisplay;\r\n  abstract getOptions(state: GameState): AutocastConditionParameterOption[];\r\n  abstract validate(state: GameState, value: string): string | undefined;\r\n}\r\n","import { formatNumber } from \"../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport {\r\n  AutocastConditionParameterDisplay,\r\n  AutocastConditionParameterOption,\r\n  AutocastConditionParameterType,\r\n} from \"../../AutocastConditionParameterType\";\r\n\r\nexport class NumericAutocastConditionParameterType extends AutocastConditionParameterType {\r\n  constructor(\r\n    private min: number | undefined,\r\n    private max: number | undefined,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  getDisplay(): AutocastConditionParameterDisplay {\r\n    return AutocastConditionParameterDisplay.TEXT_FIELD;\r\n  }\r\n\r\n  getOptions(state: GameState): AutocastConditionParameterOption[] {\r\n    return [];\r\n  }\r\n\r\n  validate(state: GameState, value: string): string | undefined {\r\n    try {\r\n      const amount = Number.parseFloat(value);\r\n      if (Number.isNaN(amount)) {\r\n        return t(\"Value must be a number\");\r\n      }\r\n      if (this.min != undefined && amount < this.min) {\r\n        return t(\"Value must be {{min}} or higher\", {\r\n          min: formatNumber(this.min),\r\n        });\r\n      }\r\n      if (this.max != undefined && amount > this.max) {\r\n        return t(\"Value must be {{max}} or lower\", {\r\n          max: formatNumber(this.max),\r\n        });\r\n      }\r\n    } catch (e) {\r\n      return t(\"Value must be a number\");\r\n    }\r\n    return;\r\n  }\r\n}\r\n","import { valuesOf } from \"../../../../utils/CoreUtils\";\r\nimport { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport {\r\n  hasEverHadResource,\r\n  Resource,\r\n  translateResource,\r\n} from \"../../../Resources\";\r\nimport {\r\n  AutocastConditionParameterDisplay,\r\n  AutocastConditionParameterOption,\r\n  AutocastConditionParameterType,\r\n} from \"../../AutocastConditionParameterType\";\r\n\r\nexport class ResourceAutocastConditionParameterType extends AutocastConditionParameterType {\r\n  getDisplay(): AutocastConditionParameterDisplay {\r\n    return AutocastConditionParameterDisplay.PICKER;\r\n  }\r\n\r\n  getOptions(state: GameState): AutocastConditionParameterOption[] {\r\n    return valuesOf(Resource)\r\n      .filter((resource) => hasEverHadResource(state, resource))\r\n      .map((resource) => ({\r\n        label: translateResource(resource),\r\n        value: resource,\r\n      }));\r\n  }\r\n\r\n  validate(state: GameState, value: string): string | undefined {\r\n    if (!valuesOf(Resource).includes(value as Resource)) {\r\n      return t(\"You must select a resource\");\r\n    }\r\n    return;\r\n  }\r\n}\r\n","import { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { getResourceAmount, Resource } from \"../../Resources\";\r\nimport { Spell } from \"../../spells/Spell\";\r\nimport {\r\n  AutocastCondition,\r\n  AutocastConditionParameter,\r\n} from \"../AutocastCondition\";\r\nimport { NumericAutocastConditionParameterType } from \"./parameters/NumericAutocastConditionParameterType\";\r\nimport { ResourceAutocastConditionParameterType } from \"./parameters/ResourceAutocastConditionParameterType\";\r\n\r\nclass ResourceLessThanAutocastCondition extends AutocastCondition {\r\n  getId(): string {\r\n    return \"IfResourceAmountLessThan\";\r\n  }\r\n\r\n  getDisplayName(): string {\r\n    return t(\"If held resource is less than\");\r\n  }\r\n\r\n  getParameters(): AutocastConditionParameter[] {\r\n    return [\r\n      {\r\n        parameterType: new ResourceAutocastConditionParameterType(),\r\n        name: t(\"Resource\"),\r\n      },\r\n      {\r\n        parameterType: new NumericAutocastConditionParameterType(0, undefined),\r\n        name: t(\"Amount\"),\r\n      },\r\n    ];\r\n  }\r\n\r\n  getDisplayExplanation(state: GameState, values: string[]): string {\r\n    return t(\"If less than {{amount}}{{resourceIcon}} are held\", {\r\n      amount: formatNumber(Number.parseFloat(values[1])),\r\n      resourceIcon: `:${values[0].toLowerCase()}:`,\r\n    });\r\n  }\r\n\r\n  isConditionMet(\r\n    state: GameState,\r\n    spell: Spell | undefined,\r\n    values: string[],\r\n  ): boolean {\r\n    const resource = values[0] as Resource;\r\n    const amount = Number.parseFloat(values[1]);\r\n    return getResourceAmount(state, resource) < amount;\r\n  }\r\n}\r\n\r\nexport default new ResourceLessThanAutocastCondition();\r\n","import { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { getResourceAmount, getResourceCap, Resource } from \"../../Resources\";\r\nimport { Spell } from \"../../spells/Spell\";\r\nimport {\r\n  AutocastCondition,\r\n  AutocastConditionParameter,\r\n} from \"../AutocastCondition\";\r\nimport { NumericAutocastConditionParameterType } from \"./parameters/NumericAutocastConditionParameterType\";\r\nimport { ResourceAutocastConditionParameterType } from \"./parameters/ResourceAutocastConditionParameterType\";\r\n\r\nclass ResourceLessThanAutocastConditionRatio extends AutocastCondition {\r\n  getId(): string {\r\n    return \"IfResourceAmountLessThanRatio\";\r\n  }\r\n\r\n  getDisplayName(): string {\r\n    return t(\"If held resource is less than % of max\");\r\n  }\r\n\r\n  getParameters(): AutocastConditionParameter[] {\r\n    return [\r\n      {\r\n        parameterType: new ResourceAutocastConditionParameterType(),\r\n        name: t(\"Resource\"),\r\n      },\r\n      {\r\n        parameterType: new NumericAutocastConditionParameterType(0, 100),\r\n        name: t(\"Percent\"),\r\n      },\r\n    ];\r\n  }\r\n\r\n  getDisplayExplanation(state: GameState, values: string[]): string {\r\n    return t(\"If less than {{amount}}% of the max {{resourceIcon}} are held\", {\r\n      amount: formatNumber(Number.parseFloat(values[1])),\r\n      resourceIcon: `:${values[0].toLowerCase()}:`,\r\n    });\r\n  }\r\n\r\n  isConditionMet(\r\n    state: GameState,\r\n    spell: Spell | undefined,\r\n    values: string[],\r\n  ): boolean {\r\n    const resource = values[0] as Resource;\r\n    const percent = Number.parseFloat(values[1]);\r\n    return (\r\n      getResourceAmount(state, resource) / getResourceCap(state, resource) <\r\n      percent / 100.0\r\n    );\r\n  }\r\n}\r\n\r\nexport default new ResourceLessThanAutocastConditionRatio();\r\n","import { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { getResourceAmount, Resource } from \"../../Resources\";\r\nimport { Spell } from \"../../spells/Spell\";\r\nimport {\r\n  AutocastCondition,\r\n  AutocastConditionParameter,\r\n} from \"../AutocastCondition\";\r\nimport { NumericAutocastConditionParameterType } from \"./parameters/NumericAutocastConditionParameterType\";\r\nimport { ResourceAutocastConditionParameterType } from \"./parameters/ResourceAutocastConditionParameterType\";\r\n\r\nclass ResourceMoreThanAutocastCondition extends AutocastCondition {\r\n  getId(): string {\r\n    return \"IfResourceAmountMoreThan\";\r\n  }\r\n\r\n  getDisplayName(): string {\r\n    return t(\"If held resource is at least\");\r\n  }\r\n\r\n  getParameters(): AutocastConditionParameter[] {\r\n    return [\r\n      {\r\n        parameterType: new ResourceAutocastConditionParameterType(),\r\n        name: t(\"Resource\"),\r\n      },\r\n      {\r\n        parameterType: new NumericAutocastConditionParameterType(0, undefined),\r\n        name: t(\"Amount\"),\r\n      },\r\n    ];\r\n  }\r\n\r\n  getDisplayExplanation(state: GameState, values: string[]): string {\r\n    return t(\"If at least {{amount}}{{resourceIcon}} are held\", {\r\n      amount: formatNumber(Number.parseFloat(values[1])),\r\n      resourceIcon: `:${values[0].toLowerCase()}:`,\r\n    });\r\n  }\r\n\r\n  isConditionMet(\r\n    state: GameState,\r\n    spell: Spell | undefined,\r\n    values: string[],\r\n  ): boolean {\r\n    const resource = values[0] as Resource;\r\n    const amount = Number.parseFloat(values[1]);\r\n    return getResourceAmount(state, resource) >= amount;\r\n  }\r\n}\r\n\r\nexport default new ResourceMoreThanAutocastCondition();\r\n","import { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { getResourceAmount, getResourceCap, Resource } from \"../../Resources\";\r\nimport { Spell } from \"../../spells/Spell\";\r\nimport {\r\n  AutocastCondition,\r\n  AutocastConditionParameter,\r\n} from \"../AutocastCondition\";\r\nimport { NumericAutocastConditionParameterType } from \"./parameters/NumericAutocastConditionParameterType\";\r\nimport { ResourceAutocastConditionParameterType } from \"./parameters/ResourceAutocastConditionParameterType\";\r\n\r\nclass ResourceMoreThanAutocastConditionRatio extends AutocastCondition {\r\n  getId(): string {\r\n    return \"IfResourceAmountMoreThanRatio\";\r\n  }\r\n\r\n  getDisplayName(): string {\r\n    return t(\"If held resource is at least % of max\");\r\n  }\r\n\r\n  getParameters(): AutocastConditionParameter[] {\r\n    return [\r\n      {\r\n        parameterType: new ResourceAutocastConditionParameterType(),\r\n        name: t(\"Resource\"),\r\n      },\r\n      {\r\n        parameterType: new NumericAutocastConditionParameterType(0, 100),\r\n        name: t(\"Percent\"),\r\n      },\r\n    ];\r\n  }\r\n\r\n  getDisplayExplanation(state: GameState, values: string[]): string {\r\n    return t(\"If at least {{amount}}% of the max {{resourceIcon}} are held\", {\r\n      amount: formatNumber(Number.parseFloat(values[1])),\r\n      resourceIcon: `:${values[0].toLowerCase()}:`,\r\n    });\r\n  }\r\n\r\n  isConditionMet(\r\n    state: GameState,\r\n    spell: Spell | undefined,\r\n    values: string[],\r\n  ): boolean {\r\n    const resource = values[0] as Resource;\r\n    const percent = Number.parseFloat(values[1]);\r\n    return (\r\n      getResourceAmount(state, resource) / getResourceCap(state, resource) >=\r\n      percent / 100.0\r\n    );\r\n  }\r\n}\r\n\r\nexport default new ResourceMoreThanAutocastConditionRatio();\r\n","import { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Spell } from \"../../spells/Spell\";\r\nimport {\r\n  AutocastCondition,\r\n  AutocastConditionParameter,\r\n} from \"../AutocastCondition\";\r\n\r\nclass SmartlyAutocastCondition extends AutocastCondition {\r\n  getId(): string {\r\n    return \"Smartly\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Smartly\");\r\n  }\r\n  getParameters(): AutocastConditionParameter[] {\r\n    return [];\r\n  }\r\n  getDisplayExplanation(state: GameState, values: string[]): string {\r\n    return t(\"Smartly\");\r\n  }\r\n  isConditionMet(\r\n    state: GameState,\r\n    spell: Spell | undefined,\r\n    values: string[],\r\n  ): boolean {\r\n    if (spell == null) {\r\n      return true;\r\n    }\r\n    return spell.isCastingRecommended(state);\r\n  }\r\n  validate(state: GameState, values: string[]): Record<number, string> {\r\n    return {};\r\n  }\r\n}\r\n\r\nexport default new SmartlyAutocastCondition();\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport {\r\n  hasEverHadTemporaryEffect,\r\n  TemporaryEffects,\r\n} from \"../../../temporaryeffects/TemporaryEffects\";\r\nimport {\r\n  AutocastConditionParameterDisplay,\r\n  AutocastConditionParameterOption,\r\n  AutocastConditionParameterType,\r\n} from \"../../AutocastConditionParameterType\";\r\n\r\nexport class TemporaryEffectAutocastConditionParameterType extends AutocastConditionParameterType {\r\n  getDisplay(): AutocastConditionParameterDisplay {\r\n    return AutocastConditionParameterDisplay.PICKER;\r\n  }\r\n\r\n  getOptions(state: GameState): AutocastConditionParameterOption[] {\r\n    return TemporaryEffects.getAll()\r\n      .filter((effect) => hasEverHadTemporaryEffect(state, effect.getId()))\r\n      .map((effect) => ({\r\n        label: effect.getDisplayName(),\r\n        value: effect.getId(),\r\n      }));\r\n  }\r\n\r\n  validate(state: GameState, value: string): string | undefined {\r\n    if (TemporaryEffects.getByIdNullable(value) == null) {\r\n      return t(\"You must select a buff / debuff\");\r\n    }\r\n    return;\r\n  }\r\n}\r\n","import { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { AttackTarget } from \"../../exploration/AttackTarget\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Spell } from \"../../spells/Spell\";\r\nimport {\r\n  getTemporaryEffectEndTime,\r\n  TemporaryEffects,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport { getSecondsPlayed } from \"../../timetick/TotalTimePlayed\";\r\nimport {\r\n  AutocastCondition,\r\n  AutocastConditionParameter,\r\n} from \"../AutocastCondition\";\r\nimport { NumericAutocastConditionParameterType } from \"./parameters/NumericAutocastConditionParameterType\";\r\nimport { TemporaryEffectAutocastConditionParameterType } from \"./parameters/TemporaryEffectAutocastConditionParameterType\";\r\n\r\nclass TemporaryEffectLowTimeRemainingAutocastCondition extends AutocastCondition {\r\n  getId(): string {\r\n    return \"IfBuffNotPresentOrTimeRemainingLessThanPlayer\";\r\n  }\r\n\r\n  getDisplayName(): string {\r\n    return t(\r\n      \"If buff / debuff is not present on player or its time left is less than\",\r\n    );\r\n  }\r\n\r\n  getParameters(): AutocastConditionParameter[] {\r\n    return [\r\n      {\r\n        parameterType: new TemporaryEffectAutocastConditionParameterType(),\r\n        name: t(\"Buff / debuff\"),\r\n      },\r\n      {\r\n        parameterType: new NumericAutocastConditionParameterType(0, undefined),\r\n        name: t(\"Time remaining (sec)\"),\r\n      },\r\n    ];\r\n  }\r\n\r\n  getDisplayExplanation(state: GameState, values: string[]): string {\r\n    return t(\r\n      \"If player's buff / debuff *{{buff}}* is over or has less than {{amount}} sec left\",\r\n      {\r\n        buff: TemporaryEffects.getById(values[0]).getDisplayName(),\r\n        amount: formatNumber(Number.parseFloat(values[1])),\r\n      },\r\n    );\r\n  }\r\n\r\n  isConditionMet(\r\n    state: GameState,\r\n    spell: Spell | undefined,\r\n    values: string[],\r\n  ): boolean {\r\n    const temporaryEffectId = values[0];\r\n    const timeLeftSecs = Number.parseFloat(values[1]);\r\n    const actualTimeLeft =\r\n      getTemporaryEffectEndTime(state, temporaryEffectId, AttackTarget.Player) -\r\n      getSecondsPlayed(state);\r\n    return actualTimeLeft < timeLeftSecs;\r\n  }\r\n}\r\n\r\nexport default new TemporaryEffectLowTimeRemainingAutocastCondition();\r\n","import { t } from \"../../../utils/I18n\";\r\nimport { AttackTarget } from \"../../exploration/AttackTarget\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Spell } from \"../../spells/Spell\";\r\nimport {\r\n  hasTemporaryEffect,\r\n  TemporaryEffects,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport {\r\n  AutocastCondition,\r\n  AutocastConditionParameter,\r\n} from \"../AutocastCondition\";\r\nimport { TemporaryEffectAutocastConditionParameterType } from \"./parameters/TemporaryEffectAutocastConditionParameterType\";\r\n\r\nclass TemporaryEffectPresentAutocastCondition extends AutocastCondition {\r\n  getId(): string {\r\n    return \"IfBuffPresentPlayer\";\r\n  }\r\n\r\n  getDisplayName(): string {\r\n    return t(\"If player has buff / debuff\");\r\n  }\r\n\r\n  getParameters(): AutocastConditionParameter[] {\r\n    return [\r\n      {\r\n        parameterType: new TemporaryEffectAutocastConditionParameterType(),\r\n        name: t(\"Buff / debuff\"),\r\n      },\r\n    ];\r\n  }\r\n\r\n  getDisplayExplanation(state: GameState, values: string[]): string {\r\n    return t(\"If player has buff / debuff *{{buff}}*\", {\r\n      buff: TemporaryEffects.getById(values[0]).getDisplayName(),\r\n    });\r\n  }\r\n\r\n  isConditionMet(\r\n    state: GameState,\r\n    spell: Spell | undefined,\r\n    values: string[],\r\n  ): boolean {\r\n    return hasTemporaryEffect(state, values[0], AttackTarget.Player);\r\n  }\r\n}\r\n\r\nexport default new TemporaryEffectPresentAutocastCondition();\r\n","import memoize from \"sonic-memoize\";\r\nimport { addRecords, clone, fromEntries, keysOf } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { cacheIndefinitely, clearCacheKey } from \"../Caching\";\r\nimport { Flag } from \"../Flag\";\r\nimport { hasEverHadFlag, hasFlag, setFlag } from \"../Flags\";\r\nimport { GameState } from \"../GameState\";\r\nimport { addGameStateListener } from \"../GameStateListeners\";\r\nimport {\r\n  Resource,\r\n  getResourceAmount,\r\n  getResourceCap,\r\n  grantResource,\r\n} from \"../Resources\";\r\nimport { registerPostRetirementListener } from \"../Retire\";\r\nimport { SpellElement } from \"../spells/Elements\";\r\nimport { Spell } from \"../spells/Spell\";\r\nimport { Spells, registerSpellCacheClearedListener } from \"../spells/Spells\";\r\nimport { registerTimeTickListener } from \"../timetick/TimeTick\";\r\nimport {\r\n  applyTransformations,\r\n  explainTransformationsText,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { AutocastCondition, AutocastConditions } from \"./AutocastCondition\";\r\nimport { loadAutocastConditions } from \"./conditions/AutocastConditionLoader\";\r\nimport SmartlyAutocastCondition from \"./conditions/SmartlyAutocastCondition\";\r\n\r\nexport enum SpellAutocastCategory {\r\n  TRANSMUTATION = \"TRANSMUTATION\",\r\n  CHANNELING = \"CHANNELING\",\r\n  GENERAL_BUFF = \"GENERAL_BUFF\",\r\n  COMBAT_BUFF = \"COMBAT_BUFF\",\r\n  ATTACK = \"ATTACK\",\r\n  HEALING = \"HEALING\",\r\n  OTHER = \"OTHER\",\r\n}\r\n\r\nexport type AutocastRule = {\r\n  id: string;\r\n  spellId: string;\r\n  disabled: boolean;\r\n  wizardsAssigned: number;\r\n  conditions: AutocastConditionData[];\r\n};\r\n\r\nexport type AutocastRuleStatus = {\r\n  wizardsAssigned: number;\r\n  disabled: boolean;\r\n  currentPoints: number;\r\n  hidden: boolean;\r\n};\r\n\r\nexport type AutocastStrategy = {\r\n  rules: AutocastRule[];\r\n  permaCastRules: Record<string, AutocastRule>;\r\n  wizardsAssignedToPermaCast: number;\r\n  name: string;\r\n};\r\n\r\nexport type AutocastConditionData = {\r\n  condition: string;\r\n  values: string[];\r\n};\r\n\r\nexport function translateSpellAutocastCategory(\r\n  category: SpellAutocastCategory,\r\n): string {\r\n  switch (category) {\r\n    case SpellAutocastCategory.ATTACK:\r\n      return t(\"Attack Spell\");\r\n    case SpellAutocastCategory.CHANNELING:\r\n      return t(\"Channeling\");\r\n    case SpellAutocastCategory.COMBAT_BUFF:\r\n      return t(\"Combat Buff / Debuff\");\r\n    case SpellAutocastCategory.GENERAL_BUFF:\r\n      return t(\"General Buff / Debuff\");\r\n    case SpellAutocastCategory.HEALING:\r\n      return t(\"Healing\");\r\n    case SpellAutocastCategory.TRANSMUTATION:\r\n      return t(\"Transmutation\");\r\n    case SpellAutocastCategory.OTHER:\r\n      return t(\"Other\");\r\n    // Do not add a default\r\n  }\r\n}\r\n\r\nconst productionTags = [TransformationTags.AutocastPointsProduction];\r\nconst productionUnit = {\r\n  unit: \":wizardpower:\",\r\n};\r\nexport function getAutocastPointIncomePerSecPerWizard(state: GameState) {\r\n  return applyTransformations(productionTags, state, 1.0);\r\n}\r\nexport function explainAutocastPointIncomePerSecPerWizard(state: GameState) {\r\n  return explainTransformationsText(productionTags, state, 1.0, productionUnit);\r\n}\r\n\r\nconst wizardAmountTags = [TransformationTags.WizardAmount];\r\nexport function getWizardAmount(state: GameState) {\r\n  return Math.floor(applyTransformations(wizardAmountTags, state, 1.0));\r\n}\r\nconst wizardAmountUnit = memoize(() => ({\r\n  unit: t(\" wizard(s)\"),\r\n}));\r\nexport function explainWizardAmount(state: GameState) {\r\n  return explainTransformationsText(\r\n    wizardAmountTags,\r\n    state,\r\n    1.0,\r\n    wizardAmountUnit(),\r\n  );\r\n}\r\n\r\nfunction getUsedWizards(state: GameState) {\r\n  let usedWizards = 0;\r\n  const strategy = getCurrentAutocastStrategy(state);\r\n  for (let idx = 0; idx < strategy.rules.length; idx++) {\r\n    usedWizards += getAssignedWizardsByRuleIndex(state, idx) ?? 0;\r\n  }\r\n  usedWizards += strategy.wizardsAssignedToPermaCast;\r\n  return usedWizards;\r\n}\r\n\r\nexport function getFreeWizards(state: GameState) {\r\n  return Math.floor(getWizardAmount(state) - getUsedWizards(state));\r\n}\r\n\r\nexport function getAutocastPointCap(state: GameState, rule: AutocastRule) {\r\n  return (\r\n    Spells.getByIdNullable(rule.spellId)?.getAutocastPointsRequirement(state) ??\r\n    0\r\n  );\r\n}\r\n\r\nfunction grantAutocastPoints(\r\n  state: GameState,\r\n  ruleIdx: number,\r\n  amount: number,\r\n) {\r\n  if (amount == 0) {\r\n    return state;\r\n  }\r\n  const rule = getCurrentAutocastStrategy(state).rules[ruleIdx];\r\n  return grantAutocastPointsToRule(\r\n    state,\r\n    rule,\r\n    amount,\r\n    Spells.getByIdNullable(rule.spellId),\r\n  );\r\n}\r\n\r\nfunction grantAutocastPointsToRule(\r\n  state: GameState,\r\n  rule: AutocastRule,\r\n  amount: number,\r\n  spell: Spell,\r\n) {\r\n  const ruleStatus = getAutocastStatusByRule(state, rule);\r\n  ruleStatus.currentPoints = Math.min(\r\n    spell.getAutocastPointsRequirement(state),\r\n    Math.max(0, ruleStatus.currentPoints + amount),\r\n  );\r\n  state.run.autocast.rules[rule.id] = ruleStatus;\r\n  return state;\r\n}\r\n\r\nexport function assignWizardsToPermaCast(state: GameState, amount: number) {\r\n  const strategy = getCurrentAutocastStrategy(state);\r\n  const freeWizards = getFreeWizards(state);\r\n  const amountToAdd = Math.min(freeWizards, amount);\r\n  strategy.wizardsAssignedToPermaCast = Math.max(\r\n    0,\r\n    strategy.wizardsAssignedToPermaCast + amountToAdd,\r\n  );\r\n  return state;\r\n}\r\n\r\nexport function permaCastWizardsNeeded(state: GameState, spell: Spell): number {\r\n  const wizardPowerProductionPerWizard =\r\n    getAutocastPointIncomePerSecPerWizard(state);\r\n  const wizardPowerNeeded = permaCastWizardPowerNeeded(state, spell);\r\n  const wizardsNeeded = Math.ceil(\r\n    wizardPowerNeeded / wizardPowerProductionPerWizard,\r\n  );\r\n  return wizardsNeeded;\r\n}\r\n\r\nexport function permaCastWizardPowerNeeded(\r\n  state: GameState,\r\n  spell: Spell,\r\n): number {\r\n  const delay = spell.getPermaCastDelaySec(state);\r\n  const wizardPowerConsumption = spell.getAutocastPointsRequirement(state);\r\n  return wizardPowerConsumption / delay;\r\n}\r\n\r\nexport function addSpellToPermaCast(state: GameState, spell: Spell): GameState {\r\n  if (!spell.isPermaCastAllowed()) {\r\n    return state;\r\n  }\r\n  const strategy = getCurrentAutocastStrategy(state);\r\n  const rule = getAutocastRuleBySpell(state, spell);\r\n  if (rule != null) {\r\n    strategy.rules = strategy.rules.filter(\r\n      (strategyRule) => rule != strategyRule,\r\n    );\r\n  }\r\n  strategy.permaCastRules[spell.getId()] = {\r\n    conditions: DEFAULT_CONDITIONS,\r\n    disabled: false,\r\n    id: Math.random().toString(),\r\n    spellId: spell.getId(),\r\n    wizardsAssigned: 0,\r\n  };\r\n  state = clearAutocastCaches(state);\r\n  const totalWizardsNeeded = estimateWizardsNeededPermaCast(state, strategy);\r\n  const currentWizards = strategy.wizardsAssignedToPermaCast;\r\n  if (currentWizards < totalWizardsNeeded) {\r\n    state = assignWizardsToPermaCast(\r\n      state,\r\n      totalWizardsNeeded - currentWizards,\r\n    );\r\n  }\r\n  clearAutocastCaches(state);\r\n  return state;\r\n}\r\n\r\nexport function removeSpellFromPermaCast(\r\n  state: GameState,\r\n  spell: Spell,\r\n): GameState {\r\n  const strategy = getCurrentAutocastStrategy(state);\r\n  if (!strategy.permaCastRules[spell.getId()]) {\r\n    return state;\r\n  }\r\n  const totalWizardsNeededBefore = estimateWizardsNeededPermaCast(\r\n    state,\r\n    strategy,\r\n  );\r\n  const currentWizards = strategy.wizardsAssignedToPermaCast;\r\n  delete strategy.permaCastRules[spell.getId()];\r\n  state = clearAutocastCaches(state);\r\n  const totalWizardsNeededAfter = estimateWizardsNeededPermaCast(\r\n    state,\r\n    strategy,\r\n  );\r\n  // Only keep it \"synced\" if it was already synced in the first place\r\n  if (\r\n    currentWizards == totalWizardsNeededBefore &&\r\n    currentWizards > totalWizardsNeededAfter\r\n  ) {\r\n    state = assignWizardsToPermaCast(\r\n      state,\r\n      totalWizardsNeededAfter - currentWizards,\r\n    );\r\n  }\r\n  return state;\r\n}\r\n\r\nexport function isSpellInWizards(state: GameState, spell: Spell): boolean {\r\n  const rule = getAutocastRuleBySpell(state, spell);\r\n  if (rule == null) {\r\n    return false;\r\n  }\r\n  const status = getAutocastStatusByRule(state, rule);\r\n  return status.wizardsAssigned > 0;\r\n}\r\n\r\nexport function isSpellInPermaCast(state: GameState, spell: Spell): boolean {\r\n  const strategy = getCurrentAutocastStrategy(state);\r\n  return strategy.permaCastRules[spell.getId()] != null;\r\n}\r\n\r\nexport function assignWizardsToRuleIndex(\r\n  state: GameState,\r\n  ruleIdx: number,\r\n  amount: number,\r\n) {\r\n  const rule = getCurrentAutocastStrategy(state).rules[ruleIdx];\r\n  return assignWizardsToRule(state, rule, amount);\r\n}\r\n\r\nexport function assignWizardsToRule(\r\n  state: GameState,\r\n  rule: AutocastRule,\r\n  amount: number,\r\n) {\r\n  const ruleStatus = getAutocastStatusByRule(state, rule);\r\n  if (ruleStatus == null || rule == null) {\r\n    return state;\r\n  }\r\n  const freeWizards = getFreeWizards(state);\r\n  const amountToAdd = Math.min(freeWizards, amount);\r\n  ruleStatus.wizardsAssigned = Math.max(\r\n    0,\r\n    ruleStatus.wizardsAssigned + amountToAdd,\r\n  );\r\n  rule.wizardsAssigned = ruleStatus.wizardsAssigned;\r\n  state.run.autocast.rules[rule.id] = ruleStatus;\r\n  state = setFlag(Flag.AssignedWizard)(state);\r\n\r\n  return state;\r\n}\r\n\r\nexport function toggleAutocastRuleDisabledIndex(\r\n  state: GameState,\r\n  ruleIdx: number,\r\n) {\r\n  return toggleAutocastRuleDisabled(\r\n    state,\r\n    getCurrentAutocastStrategy(state).rules[ruleIdx],\r\n  );\r\n}\r\n\r\nexport function toggleAutocastRuleDisabled(\r\n  state: GameState,\r\n  rule: AutocastRule,\r\n) {\r\n  const ruleStatus = getAutocastStatusByRule(state, rule);\r\n  ruleStatus.disabled = !ruleStatus.disabled;\r\n  rule.disabled = ruleStatus.disabled;\r\n  state.run.autocast.rules[rule.id] = ruleStatus;\r\n  return state;\r\n}\r\n\r\nexport function toggleAutocastRuleHiddenIndex(\r\n  state: GameState,\r\n  ruleIdx: number,\r\n) {\r\n  const rule = getCurrentAutocastStrategy(state).rules[ruleIdx];\r\n  return toggleAutocastRuleHidden(state, rule);\r\n}\r\n\r\nexport function toggleAutocastRuleHidden(state: GameState, rule: AutocastRule) {\r\n  const ruleStatus = getAutocastStatusByRule(state, rule);\r\n  ruleStatus.hidden = !ruleStatus.hidden;\r\n  state.run.autocast.rules[rule.id] = ruleStatus;\r\n  return state;\r\n}\r\n\r\nexport function unhideAllRules(state: GameState) {\r\n  for (let id in state.run.autocast.rules) {\r\n    state.run.autocast.rules[id].hidden = false;\r\n  }\r\n  return state;\r\n}\r\n\r\nexport function getCurrentAutocastStrategy(state: GameState): AutocastStrategy {\r\n  return state.global.autocast.currentStrategy;\r\n}\r\n\r\nexport function getAutocastStatusByRuleIndex(\r\n  state: GameState,\r\n  index: number,\r\n): AutocastRuleStatus {\r\n  const rule = getCurrentAutocastStrategy(state).rules[index];\r\n  return getAutocastStatusByRule(state, rule);\r\n}\r\n\r\nexport function getAutocastRuleIndexByRule(\r\n  state: GameState,\r\n  rule: AutocastRule,\r\n): number {\r\n  return getCurrentAutocastStrategy(state).rules.findIndex(\r\n    (value) => value.id == rule.id,\r\n  );\r\n}\r\n\r\nexport function getAutocastStatusByRule(\r\n  state: GameState,\r\n  rule: AutocastRule,\r\n): AutocastRuleStatus {\r\n  return (\r\n    state.run.autocast.rules?.[rule?.id] ?? {\r\n      currentPoints: 0,\r\n      disabled: false,\r\n      wizardsAssigned: 0,\r\n      hidden: false,\r\n    }\r\n  );\r\n}\r\n\r\nexport function getAutocastRuleBySpell(\r\n  state: GameState,\r\n  spell: Spell,\r\n  strategy?: AutocastStrategy,\r\n): AutocastRule | null {\r\n  if (strategy == null) {\r\n    strategy = getCurrentAutocastStrategy(state);\r\n  }\r\n  for (let rule of strategy.rules) {\r\n    if (rule.spellId == spell.getId()) {\r\n      return rule;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function getAutocastRuleById(\r\n  state: GameState,\r\n  ruleId: string,\r\n): AutocastRule | null {\r\n  const strategy = getCurrentAutocastStrategy(state);\r\n  for (let rule of strategy.rules) {\r\n    if (rule.id == ruleId) {\r\n      return rule;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function getAssignedWizardsByRuleIndex(\r\n  state: GameState,\r\n  index: number,\r\n): number {\r\n  return getAutocastStatusByRuleIndex(state, index).wizardsAssigned;\r\n}\r\n\r\nexport function saveCurrentAutocastStrategy(\r\n  state: GameState,\r\n  name: string,\r\n  index: number,\r\n): GameState {\r\n  state.global.autocast.currentStrategy.name = name;\r\n  state.global.autocast.savedStrategies[index] = clone(\r\n    state.global.autocast.currentStrategy,\r\n  );\r\n  state.global.autocast.lastStrategyIndex = index;\r\n  return state;\r\n}\r\n\r\nexport function clearAutocastStrategy(\r\n  state: GameState,\r\n  index: number,\r\n): GameState {\r\n  delete state.global.autocast.savedStrategies[index];\r\n  return state;\r\n}\r\n\r\nexport function loadAutocastStrategy(\r\n  state: GameState,\r\n  index: number,\r\n): GameState {\r\n  const strategyToLoad = state.global.autocast.savedStrategies?.[index];\r\n  if (strategyToLoad == null) {\r\n    return state;\r\n  }\r\n\r\n  const oldStrategy = state.global.autocast.currentStrategy;\r\n  const oldRuleStatuses = state.run.autocast.rules;\r\n  state.global.autocast.currentStrategy = clone(strategyToLoad);\r\n  state.run.autocast.rules = {};\r\n\r\n  const permaCastWizards = strategyToLoad.wizardsAssignedToPermaCast;\r\n\r\n  // Go bit by bit assigning wizards and setting status\r\n  for (let idx in state.global.autocast.currentStrategy.rules) {\r\n    const rule = state.global.autocast.currentStrategy.rules[idx];\r\n\r\n    const spell = Spells.getById(rule.spellId);\r\n    const oldRule = getAutocastRuleBySpell(state, spell, oldStrategy);\r\n\r\n    let progress = 0;\r\n    if (oldRule != null) {\r\n      progress = oldRuleStatuses[oldRule.id]?.currentPoints ?? 0;\r\n    }\r\n\r\n    const ruleStatus = getAutocastStatusByRule(state, rule);\r\n    ruleStatus.disabled = rule.disabled;\r\n    ruleStatus.currentPoints = progress;\r\n    state.run.autocast.rules[rule.id] = ruleStatus;\r\n    state = assignWizardsToRule(state, rule, rule.wizardsAssigned);\r\n  }\r\n\r\n  state.global.autocast.currentStrategy.wizardsAssignedToPermaCast = 0;\r\n  state = assignWizardsToPermaCast(state, permaCastWizards);\r\n\r\n  // Transfer over the progress of all permacast rules\r\n  for (let spellId of keysOf(oldStrategy.permaCastRules)) {\r\n    const oldRule = oldStrategy.permaCastRules[spellId];\r\n    const oldRuleId = oldRule.id;\r\n    const newRule =\r\n      state.global.autocast.currentStrategy.permaCastRules[spellId];\r\n    if (newRule != null) {\r\n      const oldRuleProgress = oldRuleStatuses[oldRuleId]?.currentPoints ?? 0;\r\n      const newStatus = getAutocastStatusByRule(state, newRule);\r\n      newStatus.currentPoints = oldRuleProgress;\r\n      state.run.autocast.rules[newRule.id] = newStatus;\r\n    }\r\n  }\r\n\r\n  state.global.autocast.lastStrategyIndex = index;\r\n  state = clearAutocastCaches(state);\r\n\r\n  return state;\r\n}\r\n\r\nexport function getConditionFromData(\r\n  conditionData: AutocastConditionData,\r\n): AutocastCondition {\r\n  return AutocastConditions.getById(conditionData.condition);\r\n}\r\n\r\nfunction conditionIsMet(\r\n  state: GameState,\r\n  rule: AutocastRule,\r\n  conditionData: AutocastConditionData,\r\n): boolean {\r\n  const condition = getConditionFromData(conditionData);\r\n  const spell = Spells.getByIdNullable(rule.spellId);\r\n\r\n  return condition.isConditionMet(state, spell, conditionData.values);\r\n}\r\n\r\nexport function isAutocastUnlocked(state: GameState) {\r\n  return hasFlag(state, Flag.WizardsUnlocked);\r\n}\r\n\r\nexport function isAutocastEverUnlocked(state: GameState) {\r\n  return hasEverHadFlag(state, Flag.WizardsUnlocked);\r\n}\r\n\r\nexport function estimateIntervalBetweenCastsForRule(\r\n  state: GameState,\r\n  rule: AutocastRule,\r\n  ruleStatus: AutocastRuleStatus,\r\n): number {\r\n  const spell = Spells.getByIdNullable(rule?.spellId);\r\n  if (spell == null) {\r\n    return 0;\r\n  }\r\n\r\n  if (ruleStatus.wizardsAssigned <= 0) {\r\n    return 0;\r\n  }\r\n\r\n  const minimumFrequency = spell.getEstimatedMinAutocastDelay(state, rule);\r\n  const timeToFull =\r\n    spell.getAutocastPointsRequirement(state) /\r\n    (ruleStatus.wizardsAssigned * getAutocastPointIncomePerSecPerWizard(state));\r\n\r\n  return Math.max(minimumFrequency, timeToFull);\r\n}\r\n\r\nexport function estimateIntervalBetweenCastsForRuleIndex(\r\n  state: GameState,\r\n  rule: AutocastRule,\r\n  index: number,\r\n): number {\r\n  return estimateIntervalBetweenCastsForRule(\r\n    state,\r\n    rule,\r\n    getAutocastStatusByRuleIndex(state, index),\r\n  );\r\n}\r\n\r\nexport function estimateManaConsumptionPerSecPerRule(\r\n  state: GameState,\r\n  rule: AutocastRule,\r\n  ruleStatus: AutocastRuleStatus,\r\n): number {\r\n  const spell = Spells.getByIdNullable(rule?.spellId);\r\n  if (spell == null) {\r\n    return 0;\r\n  }\r\n\r\n  if (ruleStatus.wizardsAssigned <= 0 || rule.disabled) {\r\n    return 0;\r\n  }\r\n\r\n  const manaCost = spell.getCost(state).resources[Resource.Mana] ?? 0;\r\n  return (\r\n    manaCost / estimateIntervalBetweenCastsForRule(state, rule, ruleStatus)\r\n  );\r\n}\r\n\r\nexport function estimateManaConsumptionPerSecPerRuleIndex(\r\n  state: GameState,\r\n  rule: AutocastRule,\r\n  index: number,\r\n): number {\r\n  return estimateManaConsumptionPerSecPerRule(\r\n    state,\r\n    rule,\r\n    getAutocastStatusByRuleIndex(state, index),\r\n  );\r\n}\r\n\r\nexport function estimateExpGainPerSecPerRule(\r\n  state: GameState,\r\n  rule: AutocastRule,\r\n  index: number,\r\n): Partial<Record<SpellElement, number>> {\r\n  const spell = Spells.getByIdNullable(rule.spellId);\r\n  if (spell == null) {\r\n    return {};\r\n  }\r\n\r\n  if (getAssignedWizardsByRuleIndex(state, index) <= 0 || rule.disabled) {\r\n    return {};\r\n  }\r\n\r\n  const expGain = spell.getExpFromUsage(state);\r\n  const intervalBetweenCasts = estimateIntervalBetweenCastsForRuleIndex(\r\n    state,\r\n    rule,\r\n    index,\r\n  );\r\n  return fromEntries(\r\n    keysOf(expGain).map((element) => [\r\n      element,\r\n      expGain[element] / intervalBetweenCasts,\r\n    ]),\r\n  );\r\n}\r\n\r\nexport function estimateManaConsumptionPerSecPermaCast(\r\n  state: GameState,\r\n  strategy: AutocastStrategy,\r\n): number {\r\n  if (strategy == getCurrentAutocastStrategy(state)) {\r\n    return cacheIndefinitely(\r\n      state,\r\n      (_s) => \"currentAutocastPermaCastMana\",\r\n      (state) =>\r\n        estimateManaConsumptionPerSecPermaCastUncached(state, strategy),\r\n    );\r\n  }\r\n  return estimateManaConsumptionPerSecPermaCastUncached(state, strategy);\r\n}\r\n\r\nfunction estimateManaConsumptionPerSecPermaCastUncached(\r\n  state: GameState,\r\n  strategy: AutocastStrategy,\r\n): number {\r\n  return keysOf(strategy.permaCastRules)\r\n    .filter((spellId) => {\r\n      const spell = Spells.getById(spellId);\r\n      return (\r\n        spell.isVisible(state) &&\r\n        spell.getManaCost(state) <= getResourceCap(state, Resource.Mana)\r\n      );\r\n    })\r\n    .map((spellId) => Spells.getById(spellId).getPermaCastManaCostPerSec(state))\r\n    .reduce((prev, current) => prev + current, 0);\r\n}\r\n\r\nexport function estimateWizardPowerConsumptionPerSecPermaCast(\r\n  state: GameState,\r\n  strategy: AutocastStrategy,\r\n): number {\r\n  const uncached = (state) =>\r\n    keysOf(strategy.permaCastRules)\r\n      .filter((spellId) => {\r\n        const spell = Spells.getById(spellId);\r\n        return (\r\n          spell.isVisible(state) &&\r\n          spell.getManaCost(state) <= getResourceCap(state, Resource.Mana)\r\n        );\r\n      })\r\n      .map((spellId) =>\r\n        Spells.getById(spellId).getPermaCastAutocastPointsConsumptionPerSec(\r\n          state,\r\n        ),\r\n      )\r\n      .reduce((prev, current) => prev + current, 0);\r\n  if (getCurrentAutocastStrategy(state) != strategy) {\r\n    return uncached(strategy);\r\n  }\r\n  return cacheIndefinitely(\r\n    state,\r\n    (_s) => \"permacastWizardPowerEstimate\",\r\n    uncached,\r\n  );\r\n}\r\n\r\nexport function clearAutocastCaches(state: GameState): GameState {\r\n  state = clearCacheKey(state, (_state) => \"permacastWizardPowerEstimate\");\r\n  state = clearCacheKey(state, (_state) => \"currentAutocastPermaCastMana\");\r\n  state = clearPermacastCache(state);\r\n  return state;\r\n}\r\n\r\nexport function estimateWizardsNeededPermaCast(\r\n  state: GameState,\r\n  strategy: AutocastStrategy,\r\n): number {\r\n  return Math.ceil(\r\n    estimateWizardPowerConsumptionPerSecPermaCast(state, strategy) /\r\n      getAutocastPointIncomePerSecPerWizard(state),\r\n  );\r\n}\r\n\r\nexport function estimateManaConsumptionPerSecPerStrategy(\r\n  state: GameState,\r\n  strategy: AutocastStrategy,\r\n): number {\r\n  let cumulativeManaConsumption = 0;\r\n\r\n  for (let idx in strategy.rules) {\r\n    cumulativeManaConsumption += estimateManaConsumptionPerSecPerRuleIndex(\r\n      state,\r\n      strategy.rules[idx],\r\n      Number.parseInt(idx),\r\n    );\r\n  }\r\n\r\n  cumulativeManaConsumption += estimateManaConsumptionPerSecPermaCast(\r\n    state,\r\n    strategy,\r\n  );\r\n\r\n  return cumulativeManaConsumption;\r\n}\r\n\r\nexport function estimateExpGainPerSecPerStrategy(\r\n  state: GameState,\r\n  strategy: AutocastStrategy,\r\n): Partial<Record<SpellElement, number>> {\r\n  return strategy.rules.reduce(\r\n    (cumulative, currentRule, idx) =>\r\n      addRecords([\r\n        cumulative,\r\n        estimateExpGainPerSecPerRule(state, currentRule, idx),\r\n      ]),\r\n    {},\r\n  );\r\n}\r\n\r\nexport function getSortedPermaCastSpellList(\r\n  state: GameState,\r\n  strategy: AutocastStrategy,\r\n): Spell[] {\r\n  const permaCastSpells = keysOf(strategy.permaCastRules)\r\n    .map((spellId) => Spells.getById(spellId))\r\n    .filter((spell) => spell.isVisible(state));\r\n  const permaCastSpellRequiredWizardPower = {};\r\n  const permaCastSpellRequiredMana = {};\r\n  for (let spell of permaCastSpells) {\r\n    permaCastSpellRequiredWizardPower[spell.getId()] =\r\n      spell.getPermaCastAutocastPointsConsumptionPerSec(state);\r\n    permaCastSpellRequiredMana[spell.getId()] =\r\n      spell.getPermaCastManaCostPerSec(state);\r\n  }\r\n  // Sort by required wizard power * required Mana\r\n  const sortedPermaCastSpells = permaCastSpells.sort(\r\n    (a, b) =>\r\n      permaCastSpellRequiredWizardPower[a.getId()] *\r\n        permaCastSpellRequiredMana[a.getId()] -\r\n      permaCastSpellRequiredWizardPower[b.getId()] *\r\n        permaCastSpellRequiredMana[b.getId()],\r\n  );\r\n  return sortedPermaCastSpells;\r\n}\r\n\r\nconst DEFAULT_CONDITIONS = [\r\n  {\r\n    condition: SmartlyAutocastCondition.getId(),\r\n    values: [],\r\n  },\r\n];\r\n\r\nfunction clearPermacastCache(state: GameState): GameState {\r\n  return clearCacheKey(state, (_state) => \"permacast\");\r\n}\r\n\r\nfunction calculatePermacastInfo(state: GameState, strategy: AutocastStrategy) {\r\n  const permaCastSpells = keysOf(strategy.permaCastRules).map((spellId) =>\r\n    Spells.getById(spellId),\r\n  );\r\n  return cacheIndefinitely(\r\n    state,\r\n    (_state) => \"permacast\",\r\n    (state) => {\r\n      const permaCastSpellRequiredWizardPower = {};\r\n      const permaCastSpellRequiredMana = {};\r\n      for (let spell of permaCastSpells) {\r\n        permaCastSpellRequiredWizardPower[spell.getId()] =\r\n          spell.getPermaCastAutocastPointsConsumptionPerSec(state);\r\n        permaCastSpellRequiredMana[spell.getId()] =\r\n          spell.getPermaCastManaCostPerSec(state);\r\n      }\r\n      // Sort by required wizard power * required Mana\r\n      const sortedPermaCastSpells = permaCastSpells.sort(\r\n        (a, b) =>\r\n          permaCastSpellRequiredWizardPower[a.getId()] *\r\n            permaCastSpellRequiredMana[a.getId()] -\r\n          permaCastSpellRequiredWizardPower[b.getId()] *\r\n            permaCastSpellRequiredMana[b.getId()],\r\n      );\r\n      return {\r\n        permaCastSpellRequiredWizardPower,\r\n        permaCastSpellRequiredMana,\r\n        sortedPermaCastSpells,\r\n      };\r\n    },\r\n  );\r\n}\r\n\r\nexport function loadAutocast() {\r\n  loadAutocastConditions();\r\n  registerTimeTickListener(\r\n    \"Autocast\",\r\n    (state, timeElapsedSec, isWarp) => {\r\n      if (!isAutocastUnlocked(state)) {\r\n        return state;\r\n      }\r\n\r\n      if (state.run.autocast.autocastPaused) {\r\n        return state;\r\n      }\r\n\r\n      state.temp.isInAutocast = true;\r\n\r\n      // Grant autocast points\r\n      const strategy = getCurrentAutocastStrategy(state);\r\n      const income = getAutocastPointIncomePerSecPerWizard(state);\r\n      for (let idx = 0; idx < strategy.rules.length; idx++) {\r\n        state = grantAutocastPoints(\r\n          state,\r\n          idx,\r\n          income *\r\n            (getAssignedWizardsByRuleIndex(state, idx) ?? 0) *\r\n            timeElapsedSec,\r\n        );\r\n      }\r\n\r\n      // Do the actual autocasting\r\n      for (let index = 0; index < strategy.rules.length; index++) {\r\n        const rule = strategy.rules[index];\r\n        const ruleStatus = getAutocastStatusByRuleIndex(state, index);\r\n        if (ruleStatus.disabled || ruleStatus.wizardsAssigned == 0) {\r\n          continue;\r\n        }\r\n        if (rule.spellId == \"checkOnly\") {\r\n          if (\r\n            !rule.conditions.every((condition) =>\r\n              conditionIsMet(state, rule, condition),\r\n            )\r\n          ) {\r\n            break;\r\n          }\r\n          continue;\r\n        }\r\n\r\n        const spell = Spells.getById(rule.spellId);\r\n        const pointsRequired = spell.getAutocastPointsRequirement(state);\r\n        if (ruleStatus.currentPoints < pointsRequired) {\r\n          continue;\r\n        }\r\n        if (!spell.isVisible(state)) {\r\n          continue;\r\n        }\r\n        if (!spell.isEnabled(state)) {\r\n          continue;\r\n        }\r\n\r\n        const conditions =\r\n          rule.conditions.length > 0 ? rule.conditions : DEFAULT_CONDITIONS;\r\n        if (\r\n          conditions.every((condition) =>\r\n            conditionIsMet(state, rule, condition),\r\n          )\r\n        ) {\r\n          state = spell.doAction({ isAutomatic: true }, state);\r\n          state = grantAutocastPoints(state, index, -pointsRequired);\r\n        }\r\n      }\r\n\r\n      // Handle permacast\r\n      // First, calculate total required wizard power\r\n      const {\r\n        permaCastSpellRequiredWizardPower,\r\n        permaCastSpellRequiredMana,\r\n        sortedPermaCastSpells,\r\n      } = calculatePermacastInfo(state, strategy);\r\n\r\n      let availableWizardPower =\r\n        strategy.wizardsAssignedToPermaCast * timeElapsedSec * income;\r\n      const maxMana = getResourceCap(state, Resource.Mana);\r\n\r\n      state.temp.isInPermacast = true;\r\n      for (let spell of sortedPermaCastSpells) {\r\n        const spellId = spell.getId();\r\n        const rule = strategy.permaCastRules[spellId];\r\n        const ruleStatus = getAutocastStatusByRule(state, rule);\r\n\r\n        if (ruleStatus.disabled) {\r\n          continue;\r\n        }\r\n\r\n        const currentMana = getResourceAmount(state, Resource.Mana);\r\n        const manaCostToPay =\r\n          permaCastSpellRequiredMana[spellId] * timeElapsedSec;\r\n\r\n        // There was historically a subtle bug here.\r\n        // The bug happens because incomes were calculated after Autocast.\r\n        // It's a problem because if you have a heavy load and little remaining Mana,\r\n        // Autocast can become delayed due to there not being enough Mana left until\r\n        // the income is granted.\r\n        // We cannot make income be calculated before Autocast, because that will result\r\n        // on a Mana bar that never fully fills up.\r\n        // The solution is that Autocast should be split into two. We should process everything\r\n        // before incomes, until we find a case where we have not enough Mana. Then we should\r\n        // break and continue processing the rest of Permacast *after* the incomes. If we find this\r\n        // situation, the Mana bar will probably not be full anyway so it's not a problem.\r\n        if (currentMana < manaCostToPay) {\r\n          state.temp.lastProcessedAutocastSpellId = spellId;\r\n          break;\r\n        }\r\n\r\n        if (spell.getManaCost(state) > maxMana) {\r\n          // Skip\r\n          continue;\r\n        }\r\n        if (!spell.isVisible(state)) {\r\n          // Also skip\r\n          continue;\r\n        }\r\n\r\n        const wizardPowerToAssign = Math.min(\r\n          availableWizardPower,\r\n          permaCastSpellRequiredWizardPower[spellId] * timeElapsedSec,\r\n        );\r\n\r\n        // If we do not have enough wizards, do not drain Mana\r\n        if (availableWizardPower > 0) {\r\n          state = grantAutocastPointsToRule(\r\n            state,\r\n            rule,\r\n            wizardPowerToAssign,\r\n            spell,\r\n          );\r\n          state = grantResource(Resource.Mana, -manaCostToPay)(state);\r\n        }\r\n        availableWizardPower -= wizardPowerToAssign;\r\n\r\n        const pointsRequired = spell.getAutocastPointsRequirement(state);\r\n        if (ruleStatus.currentPoints < pointsRequired) {\r\n          continue;\r\n        }\r\n        if (!spell.isEnabled(state, true)) {\r\n          continue;\r\n        }\r\n\r\n        const conditions =\r\n          rule.conditions.length > 0 ? rule.conditions : DEFAULT_CONDITIONS;\r\n        if (\r\n          conditions.every((condition) =>\r\n            conditionIsMet(state, rule, condition),\r\n          )\r\n        ) {\r\n          state = spell.doActionPermaCast(state);\r\n          state = grantAutocastPointsToRule(\r\n            state,\r\n            rule,\r\n            -pointsRequired,\r\n            spell,\r\n          );\r\n        }\r\n      }\r\n      state.temp.isInPermacast = false;\r\n\r\n      state.temp.isInAutocast = false;\r\n\r\n      return state;\r\n    },\r\n    -10,\r\n  );\r\n\r\n  registerTimeTickListener(\r\n    \"autocastPart2\",\r\n    (state, timeElapsedSec, isWarp) => {\r\n      if (!isAutocastUnlocked(state)) {\r\n        return state;\r\n      }\r\n\r\n      if (state.temp.lastProcessedAutocastSpellId == null) {\r\n        return state;\r\n      }\r\n\r\n      state.temp.isInAutocast = true;\r\n\r\n      const strategy = getCurrentAutocastStrategy(state);\r\n      const income = getAutocastPointIncomePerSecPerWizard(state);\r\n\r\n      // Handle permacast\r\n      // First, calculate total required wizard power\r\n      const {\r\n        permaCastSpellRequiredWizardPower,\r\n        permaCastSpellRequiredMana,\r\n        sortedPermaCastSpells,\r\n      } = calculatePermacastInfo(state, strategy);\r\n\r\n      let availableWizardPower =\r\n        strategy.wizardsAssignedToPermaCast * timeElapsedSec * income;\r\n      const maxMana = getResourceCap(state, Resource.Mana);\r\n\r\n      let foundTheSpell = false;\r\n      state.temp.isInPermacast = true;\r\n      for (let spell of sortedPermaCastSpells) {\r\n        // Continue until we find the spell\r\n        const spellId = spell.getId();\r\n        const wizardPowerToAssign = Math.min(\r\n          availableWizardPower,\r\n          permaCastSpellRequiredWizardPower[spellId] * timeElapsedSec,\r\n        );\r\n        if (\r\n          !foundTheSpell &&\r\n          spellId != state.temp.lastProcessedAutocastSpellId\r\n        ) {\r\n          availableWizardPower -= wizardPowerToAssign;\r\n          continue;\r\n        } else {\r\n          foundTheSpell = true;\r\n        }\r\n\r\n        const rule = strategy.permaCastRules[spellId];\r\n        const ruleStatus = getAutocastStatusByRule(state, rule);\r\n\r\n        if (ruleStatus.disabled) {\r\n          continue;\r\n        }\r\n\r\n        const currentMana = getResourceAmount(state, Resource.Mana);\r\n        const manaCostToPay =\r\n          permaCastSpellRequiredMana[spellId] * timeElapsedSec;\r\n        if (currentMana < manaCostToPay) {\r\n          // Now we are safe to skip here\r\n          continue;\r\n        }\r\n\r\n        if (spell.getManaCost(state) > maxMana) {\r\n          // Skip\r\n          continue;\r\n        }\r\n        if (!spell.isVisible(state)) {\r\n          // Also skip\r\n          continue;\r\n        }\r\n\r\n        // If we do not have enough wizards, do not drain Mana\r\n        if (availableWizardPower > 0) {\r\n          state = grantAutocastPointsToRule(\r\n            state,\r\n            rule,\r\n            wizardPowerToAssign,\r\n            spell,\r\n          );\r\n          state = grantResource(Resource.Mana, -manaCostToPay)(state);\r\n        }\r\n        availableWizardPower -= wizardPowerToAssign;\r\n\r\n        const pointsRequired = spell.getAutocastPointsRequirement(state);\r\n        if (ruleStatus.currentPoints < pointsRequired) {\r\n          continue;\r\n        }\r\n        if (!spell.isEnabled(state, true)) {\r\n          continue;\r\n        }\r\n\r\n        const conditions =\r\n          rule.conditions.length > 0 ? rule.conditions : DEFAULT_CONDITIONS;\r\n        if (\r\n          conditions.every((condition) =>\r\n            conditionIsMet(state, rule, condition),\r\n          )\r\n        ) {\r\n          state = spell.doActionPermaCast(state);\r\n          state = grantAutocastPointsToRule(\r\n            state,\r\n            rule,\r\n            -pointsRequired,\r\n            spell,\r\n          );\r\n        }\r\n      }\r\n\r\n      state.temp.isInPermacast = false;\r\n      state.temp.isInAutocast = false;\r\n      state.temp.lastProcessedAutocastSpellId = undefined;\r\n\r\n      return state;\r\n    },\r\n    20,\r\n  );\r\n\r\n  registerPostRetirementListener(\"permaCastRetirement\", (state, isMock) => {\r\n    // After retirement, we will have no wizards for any Perma-Cast.\r\n    // So unassign all of them, and clear all spells from Perma-Cast.\r\n    // Avid players will make a strategy anyway and load it.\r\n    const strategy = getCurrentAutocastStrategy(state);\r\n    strategy.permaCastRules = {};\r\n    strategy.wizardsAssignedToPermaCast = 0;\r\n    return state;\r\n  });\r\n\r\n  addGameStateListener(\"wizardRemover\", (state) => {\r\n    const freeWizards = getFreeWizards(state);\r\n    if (freeWizards < 0) {\r\n      return (state) => {\r\n        let freeWizards = getFreeWizards(state);\r\n        const rules = getCurrentAutocastStrategy(state).rules;\r\n        const ruleLength = rules.length;\r\n        let currentRuleIdx = ruleLength - 1;\r\n        while (freeWizards < 0 && currentRuleIdx >= 0) {\r\n          const assignedWizards = getAssignedWizardsByRuleIndex(\r\n            state,\r\n            currentRuleIdx,\r\n          );\r\n          if (assignedWizards > 0) {\r\n            state = assignWizardsToRuleIndex(state, currentRuleIdx, -1);\r\n            freeWizards++;\r\n          } else {\r\n            currentRuleIdx--;\r\n          }\r\n        }\r\n        if (freeWizards < 0) {\r\n          state = assignWizardsToPermaCast(state, freeWizards);\r\n        }\r\n        return state;\r\n      };\r\n    }\r\n  });\r\n\r\n  registerSpellCacheClearedListener(clearAutocastCaches);\r\n}\r\n","import { AutocastConditions } from \"../AutocastCondition\";\r\nimport AlwaysAutocastCondition from \"./AlwaysAutocastCondition\";\r\nimport ResourceLessThanAutocastCondition from \"./ResourceLessThanAutocastCondition\";\r\nimport ResourceLessThanAutocastConditionRatio from \"./ResourceLessThanAutocastConditionRatio\";\r\nimport ResourceMoreThanAutocastCondition from \"./ResourceMoreThanAutocastCondition\";\r\nimport ResourceMoreThanAutocastConditionRatio from \"./ResourceMoreThanAutocastConditionRatio\";\r\nimport SmartlyAutocastCondition from \"./SmartlyAutocastCondition\";\r\nimport TemporaryEffectLowTimeRemainingAutocastCondition from \"./TemporaryEffectLowTimeRemainingAutocastCondition\";\r\nimport TemporaryEffectPresentAutocastCondition from \"./TemporaryEffectPresentAutocastCondition\";\r\n\r\nexport function loadAutocastConditions() {\r\n  AutocastConditions.register(AlwaysAutocastCondition);\r\n  AutocastConditions.register(SmartlyAutocastCondition);\r\n  AutocastConditions.register(ResourceLessThanAutocastCondition);\r\n  AutocastConditions.register(ResourceLessThanAutocastConditionRatio);\r\n  AutocastConditions.register(ResourceMoreThanAutocastCondition);\r\n  AutocastConditions.register(ResourceMoreThanAutocastConditionRatio);\r\n  AutocastConditions.register(TemporaryEffectPresentAutocastCondition);\r\n  AutocastConditions.register(TemporaryEffectLowTimeRemainingAutocastCondition);\r\n}\r\n","import { valuesOf } from \"../../utils/CoreUtils\";\r\nimport { ActionArea, ActionSubcategory } from \"../action/ActionAreas\";\r\nimport {\r\n  getVisibleActionsForAreaBySubcategory,\r\n  registerAction,\r\n} from \"../action/Actions\";\r\nimport { Flag } from \"../Flag\";\r\nimport { hasEverHadFlag, hasFlag } from \"../Flags\";\r\nimport { GameState } from \"../GameState\";\r\nimport { DataStore } from \"../generic/DataStore\";\r\nimport { registerTimeTickListener } from \"../timetick/TimeTick\";\r\nimport { getSecondsPlayed } from \"../timetick/TotalTimePlayed\";\r\nimport { Enhancement } from \"./Enhancement\";\r\n\r\nconst Enhancements = new DataStore<Enhancement>();\r\n\r\nexport function registerEnhancement(enhancement: Enhancement) {\r\n  Enhancements.register(enhancement);\r\n  registerAction(enhancement);\r\n}\r\n\r\nexport { Enhancements };\r\n\r\nexport function isEnhancementUnlocked(state: GameState): boolean {\r\n  return hasFlag(state, Flag.EnhancementsUnlocked);\r\n}\r\n\r\nexport function isEnhancementEverUnlocked(state: GameState): boolean {\r\n  return hasEverHadFlag(state, Flag.EnhancementsUnlocked);\r\n}\r\n\r\nexport function shouldAutoPurchaseEnhancements(state: GameState): boolean {\r\n  return (\r\n    hasFlag(state, Flag.AutoPurchaseUnlocked) &&\r\n    state.options.autoPurchaseEnhancements\r\n  );\r\n}\r\n\r\nexport function getAllPurchasedEnhancements(\r\n  state: GameState,\r\n): Partial<Record<ActionSubcategory, Enhancement[]>> {\r\n  const purchasedEnhancements = Enhancements.getAll().filter((enhancement) =>\r\n    enhancement.isPurchased(state),\r\n  );\r\n  const sortedEnhancements = {};\r\n  for (let enhancement of purchasedEnhancements) {\r\n    const subareas = enhancement.getAreas().ENHANCEMENT ?? [];\r\n    for (let subarea of subareas) {\r\n      if (sortedEnhancements[subarea] == null) {\r\n        sortedEnhancements[subarea] = [];\r\n      }\r\n      sortedEnhancements[subarea].push(enhancement);\r\n    }\r\n  }\r\n  return sortedEnhancements;\r\n}\r\n\r\nexport function loadEnhancementCommonLogic() {\r\n  registerTimeTickListener(\r\n    \"enhancementAutoPurchaseMax\",\r\n    (state, timeElapsedSec, isWarp) => {\r\n      if (!shouldAutoPurchaseEnhancements(state)) {\r\n        return state;\r\n      }\r\n      const secondsPlayed = getSecondsPlayed(state);\r\n      if (\r\n        Math.floor(state.temp.lastAutoPurchaseEnhancementRun / 2.0) !=\r\n        Math.floor(secondsPlayed / 2.0)\r\n      ) {\r\n        valuesOf(\r\n          getVisibleActionsForAreaBySubcategory(state, ActionArea.ENHANCEMENT),\r\n        )\r\n          .flat()\r\n          .forEach((action) => {\r\n            if (action.isEnabled(state)) {\r\n              state = action.doAction({ isAutomatic: true }, state);\r\n            }\r\n          });\r\n        state.temp.lastAutoPurchaseEnhancementRun = secondsPlayed;\r\n      }\r\n      return state;\r\n    },\r\n  );\r\n}\r\n","import { GameState } from \"../GameState\";\r\nimport { DataStore } from \"../generic/DataStore\";\r\nimport { Spell } from \"./Spell\";\r\n\r\nexport type SpellCastListener = (state: GameState, spell: Spell) => GameState;\r\n\r\nconst SpellCastListeners = new DataStore<SpellCastListener>();\r\n\r\nexport { SpellCastListeners };\r\n","import { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport { standardPlayerAttackEffect } from \"../exploration/Exploration\";\r\nimport { GameState } from \"../GameState\";\r\nimport {\r\n  getTemporaryEffectEndTime,\r\n  hasTemporaryEffect,\r\n} from \"../temporaryeffects/TemporaryEffects\";\r\nimport { getSecondsPlayed } from \"../timetick/TotalTimePlayed\";\r\nimport { Spell } from \"./Spell\";\r\n\r\nexport function getStandardRangeEffectText(\r\n  average: number,\r\n  variance: number,\r\n  explanation?: string,\r\n): string {\r\n  const min = average - variance,\r\n    max = average + variance;\r\n  if (variance == 0) {\r\n    if (!explanation) {\r\n      return formatNumber(min);\r\n    }\r\n    return t(\"^{{effect}}^<{{explanation}}>\", {\r\n      effect: formatNumber(min),\r\n      explanation,\r\n    });\r\n  }\r\n  if (!explanation) {\r\n    return t(\"{{min}}~{{max}}\", {\r\n      min: formatNumber(min),\r\n      max: formatNumber(max),\r\n    });\r\n  }\r\n  return t(\"^{{min}}~{{max}}^<{{explanation}}>\", {\r\n    min: formatNumber(min),\r\n    max: formatNumber(max),\r\n    explanation,\r\n  });\r\n}\r\n\r\nexport function getStandardAttackEffectText(\r\n  average: number,\r\n  variance: number,\r\n  explanation?: string,\r\n): string {\r\n  return t(\"{{effect}}:attack:\", {\r\n    effect: getStandardRangeEffectText(average, variance, explanation),\r\n  });\r\n}\r\n\r\nexport function getStandardSpellAttackEffect(\r\n  state: GameState,\r\n  spell: Spell,\r\n  extras?: object,\r\n): GameState {\r\n  const effects = spell.getActionEffects(state);\r\n  state = standardPlayerAttackEffect(\r\n    state,\r\n    effects.average + (Math.random() - 0.5) * effects.variance * 2,\r\n    {\r\n      cause: spell.getSpellName(),\r\n      tags: spell.getTags(),\r\n      ...(extras ?? {}),\r\n    },\r\n  );\r\n  return state;\r\n}\r\n\r\nexport function getStandardSpellAttackEffectText(\r\n  state: GameState,\r\n  spell: Spell,\r\n): string {\r\n  const effects = spell.getActionEffects(state);\r\n  const explanation = spell.getActionEffectExplanations(\r\n    state,\r\n    \"average\",\r\n  ).average;\r\n  return getStandardAttackEffectText(\r\n    effects.average,\r\n    effects.variance,\r\n    explanation,\r\n  );\r\n}\r\n\r\nexport function isCastingRecommendedTemporaryEffect(\r\n  state: GameState,\r\n  effectName: string,\r\n  target?: AttackTarget,\r\n): boolean {\r\n  if (hasTemporaryEffect(state, effectName, target)) {\r\n    return (\r\n      getTemporaryEffectEndTime(state, effectName, target) -\r\n        getSecondsPlayed(state) <\r\n      2.0\r\n    );\r\n  }\r\n  return true;\r\n}\r\n","import memoize from \"sonic-memoize\";\r\nimport { fromEntries, keysOf, valuesOf } from \"../../utils/CoreUtils\";\r\nimport { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { cacheBooleanTrueOnly, cacheIndefinitely } from \"../Caching\";\r\nimport { GameState } from \"../GameState\";\r\nimport { Resource } from \"../Resources\";\r\nimport { Action, DoActionArgs } from \"../action/Action\";\r\nimport { ActionArea, ActionSubcategory } from \"../action/ActionAreas\";\r\nimport {\r\n  AutocastRule,\r\n  SpellAutocastCategory,\r\n  isSpellInPermaCast,\r\n  isSpellInWizards,\r\n} from \"../autocast/Autocast\";\r\nimport SmartlyAutocastCondition from \"../autocast/conditions/SmartlyAutocastCondition\";\r\nimport { hasTemporaryEffect } from \"../temporaryeffects/TemporaryEffects\";\r\nimport { getSecondsPlayed } from \"../timetick/TotalTimePlayed\";\r\nimport {\r\n  applyTransformations,\r\n  applyTransformationsPermaCached,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport {\r\n  SpellElement,\r\n  getElementExpByUsage,\r\n  grantElementExp,\r\n  meetsRequirements,\r\n} from \"./Elements\";\r\nimport { SpellCastListeners } from \"./SpellCastListeners\";\r\nimport { addRecentSpellCast, setLastCastedTime } from \"./Spells\";\r\nimport { isCastingRecommendedTemporaryEffect } from \"./Utils\";\r\n\r\nexport abstract class Spell extends Action {\r\n  abstract getBaseManaCost(state: GameState): number;\r\n  abstract doSpellAction(state: GameState, args: DoActionArgs): GameState;\r\n  abstract getLevelRequirements(): Partial<Record<SpellElement, number>>;\r\n  abstract getElement(): SpellElement | undefined;\r\n\r\n  // Translated version of the spell name.\r\n  abstract getSpellName(): string;\r\n\r\n  abstract getAutocastCategory(): SpellAutocastCategory;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  _tagArray: string[] | null = null;\r\n\r\n  getTags(): string[] {\r\n    if (this._tagArray == null) {\r\n      const tags = [\r\n        ...super.getTags(),\r\n        TransformationTags.Spell,\r\n        ...Object.keys(this.getLevelRequirements()),\r\n        ...this.getExtraTags(),\r\n      ];\r\n      const element = this.getElement();\r\n      tags.push(element);\r\n      this._tagArray = tags;\r\n    }\r\n    return this._tagArray;\r\n  }\r\n\r\n  getExtraTags(): string[] {\r\n    return [];\r\n  }\r\n\r\n  _manaCostTags = memoize((parentSpell?: Spell) =>\r\n    [\r\n      ...this.getTags(),\r\n      TransformationTags.Cost,\r\n      Resource.Mana,\r\n      parentSpell?.getId?.(),\r\n    ].filter((tag) => tag != null),\r\n  );\r\n\r\n  getCost(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: this.getManaCost(state),\r\n      },\r\n      items: {},\r\n    };\r\n  }\r\n\r\n  getManaCost(state: GameState, parentSpell?: Spell) {\r\n    if (parentSpell != null) {\r\n      return this.getManaCostUncached(state, parentSpell);\r\n    }\r\n\r\n    let value = state.temp.spellManaCostCache[this.getId()];\r\n    if (value == null) {\r\n      value = this.getManaCostUncached(state, parentSpell);\r\n      state.temp.spellManaCostCache[this.getId()] = value;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  private getManaCostUncached(state: GameState, parentSpell?: Spell): number {\r\n    return applyTransformations(\r\n      this._manaCostTags(parentSpell),\r\n      state,\r\n      this.getBaseManaCost(state),\r\n      parentSpell == null\r\n        ? this._actionParams()\r\n        : { action: parentSpell ?? this },\r\n    );\r\n  }\r\n\r\n  // Override with false if you change getManaCost()\r\n  hasFixedManaCost(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getAreas(): Partial<Record<ActionArea, ActionSubcategory[]>> {\r\n    return {\r\n      SPELL_MENU: [this.getElement()],\r\n    };\r\n  }\r\n\r\n  getLastCastTime(state: GameState): number {\r\n    return state.run.lastSpellCastTimes?.[this.getId()] || 0;\r\n  }\r\n\r\n  /**\r\n   * Display name without cooldown or perma-cast\r\n   */\r\n  getBasicDisplayName(state: GameState): string {\r\n    let mainName = this.getSpellName();\r\n    if (this.hasActiveSpellcrafts(state)) {\r\n      mainName = mainName + \"*\";\r\n    }\r\n    if (this.isEmpowered(state)) {\r\n      mainName = mainName + \"+\";\r\n    }\r\n    return mainName;\r\n  }\r\n\r\n  getDisplayName(state: GameState): string {\r\n    const lastCastTime = this.getLastCastTime(state);\r\n    const isInPermaCast = isSpellInPermaCast(state, this);\r\n    let mainName = this.getBasicDisplayName(state);\r\n\r\n    if (lastCastTime > 0) {\r\n      const cooldown = lastCastTime + this.getCooldown(state);\r\n      const secTillOver = cooldown - getSecondsPlayed(state);\r\n      if (secTillOver > 0) {\r\n        mainName = t(\"{{spellName}} ({{secTillOver}} sec)\", {\r\n          spellName: mainName,\r\n          secTillOver: formatNumber(secTillOver, {\r\n            showDecimals: true,\r\n          }),\r\n        });\r\n      }\r\n    }\r\n    if (isInPermaCast) {\r\n      return t(\"{{mainName}} (P)\", { mainName });\r\n    } else if (isSpellInWizards(state, this)) {\r\n      return t(\"{{mainName}} (A)\", { mainName });\r\n    }\r\n    return t(\"{{mainName}}\", { mainName });\r\n  }\r\n\r\n  hasActiveSpellcrafts(state: GameState): boolean {\r\n    return valuesOf(state.run.spellcrafts).some(\r\n      (data) => data.spellId == this.getId() && data.spellcraftId != null,\r\n    );\r\n  }\r\n\r\n  getBaseCooldown(): number {\r\n    return 0.0;\r\n  }\r\n\r\n  _cooldownTagArray: string[] | null = null;\r\n  _actionParams = memoize(() => ({ action: this }));\r\n  getCooldown(state: GameState): number {\r\n    if (this._cooldownTagArray == null) {\r\n      this._cooldownTagArray = [\r\n        ...this.getTags(),\r\n        TransformationTags.SpellCooldown,\r\n      ];\r\n    }\r\n    if (this.getBaseCooldown() === 0.0) {\r\n      return 0.0;\r\n    }\r\n    return applyTransformationsPermaCached(\r\n      this._cooldownTagArray,\r\n      state,\r\n      this.getBaseCooldown(),\r\n      this._actionParams(),\r\n    );\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    const id = this.getId();\r\n    let value = state.temp.spellRequirementsCache[id];\r\n    if (value == null) {\r\n      const elementRequirements = this.getLevelRequirements();\r\n      value = meetsRequirements(state, elementRequirements);\r\n      state.temp.spellRequirementsCache[id] = value;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  isEnabled(state: GameState, skipAffordabilityChecks?: boolean): boolean {\r\n    if (\r\n      this._cacheEnabled == null ||\r\n      this._cacheEnabled.ticks != state.global.tickCount\r\n    ) {\r\n      const enabled = this._isEnabledNoCache(state, skipAffordabilityChecks);\r\n      this._cacheEnabled = { value: enabled, ticks: state.global.tickCount };\r\n    }\r\n    return this._cacheEnabled.value;\r\n  }\r\n\r\n  protected shouldIgnoreCanCastSpell() {\r\n    return false;\r\n  }\r\n\r\n  _isEnabledNoCache(state: GameState, skipAffordabilityChecks?: boolean) {\r\n    if (!this.isVisible(state)) {\r\n      return false;\r\n    }\r\n\r\n    const lastCastTime = this.getLastCastTime(state);\r\n    if (\r\n      lastCastTime > 0 &&\r\n      getSecondsPlayed(state) < lastCastTime + this.getCooldown(state)\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    if (!this.shouldIgnoreCanCastSpell()) {\r\n      if (\r\n        hasTemporaryEffect(state, \"silence\") ||\r\n        hasTemporaryEffect(state, \"stun\")\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      const transformationResult = applyTransformationsPermaCached(\r\n        this.canCastSpellTags(),\r\n        state,\r\n        1.0,\r\n      );\r\n      if (transformationResult <= 0) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return super.isEnabled(state, skipAffordabilityChecks);\r\n  }\r\n\r\n  _cacheEnabled: { value: boolean; ticks: number } | null = null;\r\n\r\n  isPermaCastAllowed(): boolean {\r\n    return (\r\n      this.getBaseCooldown() > 0 ||\r\n      (this.getCachedBaseActionEffects()?.duration?.value ?? 0) > 0\r\n    );\r\n  }\r\n\r\n  getPermaCastDelaySec(state: GameState): number {\r\n    return this.getEstimatedMinAutocastDelay(state);\r\n  }\r\n\r\n  getPermaCastManaCostPerSec(state: GameState): number {\r\n    return this.getManaCost(state) / this.getPermaCastDelaySec(state);\r\n  }\r\n\r\n  getPermaCastAutocastPointsConsumptionPerSec(state: GameState): number {\r\n    return (\r\n      this.getAutocastPointsRequirement(state) /\r\n      this.getPermaCastDelaySec(state)\r\n    );\r\n  }\r\n\r\n  canCastSpellTags = memoize(() => [\r\n    ...this.getTags(),\r\n    TransformationTags.CanCastSpell,\r\n  ]);\r\n\r\n  autocastPointsRequirementTags = memoize(() => [\r\n    ...this.getTags(),\r\n    TransformationTags.AutocastPointsConsumption,\r\n  ]);\r\n\r\n  getAutocastPointsRequirement(state: GameState): number {\r\n    let value = state.temp.autocastPointsRequirementCache[this.getId()];\r\n    if (value == null) {\r\n      value = applyTransformations(\r\n        this.autocastPointsRequirementTags(),\r\n        state,\r\n        this.getBaseAutocastPointsRequirement(),\r\n        this._actionParams(),\r\n      );\r\n      state.temp.autocastPointsRequirementCache[this.getId()] = value;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  getBaseAutocastPointsRequirement(): number {\r\n    return 60;\r\n  }\r\n\r\n  getExpFromUsage(state: GameState): Partial<Record<SpellElement, number>> {\r\n    const id = this.getId();\r\n    let value = state.temp.spellExpCache[id];\r\n    if (value == null) {\r\n      const elementRequirements = this.getLevelRequirements();\r\n      value = fromEntries(\r\n        keysOf(elementRequirements).map((element) => {\r\n          return [\r\n            element,\r\n            getElementExpByUsage(\r\n              state,\r\n              element,\r\n              elementRequirements[element],\r\n              this.getCost(state).resources?.[Resource.Mana] ?? 0,\r\n              true,\r\n              this.getTags(),\r\n            ),\r\n          ];\r\n        }),\r\n      );\r\n      state.temp.spellExpCache[id] = value;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  getMainExp(state: GameState): {\r\n    element: SpellElement | undefined;\r\n    expMin: number;\r\n    expMax: number;\r\n  } {\r\n    const exp = this.getExpFromUsage(state);\r\n    const element = this.getElement();\r\n    if (element != null) {\r\n      return {\r\n        element,\r\n        expMin: exp[element] ?? 0,\r\n        expMax: exp[element] ?? 0,\r\n      };\r\n    }\r\n\r\n    return {\r\n      element: undefined,\r\n      expMin: Math.min(...valuesOf(exp)),\r\n      expMax: Math.max(...valuesOf(exp)),\r\n    };\r\n  }\r\n\r\n  grantExpFromUsage(state: GameState): GameState {\r\n    const exp = this.getExpFromUsage(state);\r\n    const expElements = keysOf(exp);\r\n\r\n    expElements.forEach((element) => {\r\n      state = grantElementExp(element, exp[element])(state);\r\n    });\r\n    return state;\r\n  }\r\n\r\n  doActionPermaCast(state: GameState): GameState {\r\n    state = this.doSpellAction(state, { isAutomatic: true });\r\n    state = this.grantExpFromUsage(state);\r\n    state = setLastCastedTime(this, state);\r\n    for (let listener of SpellCastListeners.getAll()) {\r\n      state = listener(state, this);\r\n    }\r\n    return state;\r\n  }\r\n\r\n  doAction(args: DoActionArgs, state: GameState): GameState {\r\n    if (!this.canAfford(state)) {\r\n      return state;\r\n    }\r\n\r\n    state = this.doSpellAction(state, args);\r\n\r\n    state = this.payCost(state);\r\n\r\n    state = this.grantExpFromUsage(state);\r\n\r\n    if (!args.isAutomatic) {\r\n      state = addRecentSpellCast(this, state);\r\n    }\r\n\r\n    state = setLastCastedTime(this, state);\r\n\r\n    for (let listener of SpellCastListeners.getAll()) {\r\n      state = listener(state, this);\r\n    }\r\n\r\n    return state;\r\n  }\r\n\r\n  isCastingRecommended(state: GameState): boolean {\r\n    if (!isCastingRecommendedTemporaryEffect(state, this.getId())) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  getEstimatedMinAutocastDelay(state: GameState, rule?: AutocastRule): number {\r\n    if (\r\n      rule != null &&\r\n      rule.conditions.length > 0 &&\r\n      rule.conditions.every(\r\n        (condition) => condition.condition != SmartlyAutocastCondition.getId(),\r\n      )\r\n    ) {\r\n      // We cannot predict\r\n      return Math.max(0, this.getCooldown(state));\r\n    }\r\n\r\n    let duration = 0;\r\n    const baseEffects = this.getCachedBaseActionEffects();\r\n    if (baseEffects?.duration) {\r\n      duration = cacheIndefinitely(\r\n        state,\r\n        (_state) => \"minAutocastDelayDuration\" + this.getId(),\r\n        (state) => this.getActionEffect(state, \"duration\"),\r\n      );\r\n    }\r\n    return Math.max(\r\n      0,\r\n      duration > 0 ? Math.max(1, Math.floor(duration - 2)) : 0,\r\n      this.getCooldown(state),\r\n    );\r\n  }\r\n\r\n  protected isEmpowerable(): boolean {\r\n    return false;\r\n  }\r\n\r\n  getEmpoweringLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {};\r\n  }\r\n\r\n  isEmpoweringPossible(state: GameState): boolean {\r\n    if (!this.isEmpowerable()) {\r\n      return false;\r\n    }\r\n\r\n    return cacheBooleanTrueOnly(\r\n      state,\r\n      \"spellEmpoweringEnabled.\" + this.getId(),\r\n      (s) => {\r\n        const elementRequirements = this.getEmpoweringLevelRequirements();\r\n        const isVisible = meetsRequirements(s, elementRequirements);\r\n        return isVisible;\r\n      },\r\n    );\r\n  }\r\n\r\n  isEmpowered(state: GameState): boolean {\r\n    return state.run.empoweredSpells[this.getId()] ?? false;\r\n  }\r\n\r\n  allowRegisteringTemporaryEffectsAsPermacast(): boolean {\r\n    return true;\r\n  }\r\n\r\n  // // Is this spell dependent on the effects of others?\r\n  // // If yes, override and put the spells here.\r\n  // // Spellcraft uses this to delegate its effects.\r\n  // getDependentSpells(): Spell[] {\r\n  //   return [];\r\n  // }\r\n}\r\n","import memoize from \"sonic-memoize\";\r\nimport { fromEntries, keysOf } from \"../../../utils/CoreUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { cacheByTickCount } from \"../../Caching\";\r\nimport { Flag } from \"../../Flag\";\r\nimport { hasFlag, setFlag } from \"../../Flags\";\r\nimport { GameState, createHypotheticalState } from \"../../GameState\";\r\nimport { Resource, getResourceAmount } from \"../../Resources\";\r\nimport { DoActionArgs } from \"../../action/Action\";\r\nimport { ActionArea, ActionSubcategory } from \"../../action/ActionAreas\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport {\r\n  SpellElement,\r\n  getElementExpByUsage,\r\n  getTotalExpRequiredForLevel,\r\n  getUnlockedElements,\r\n  grantElementExp,\r\n} from \"../../spells/Elements\";\r\nimport { Spell } from \"../../spells/Spell\";\r\nimport { SpellCastListeners } from \"../../spells/SpellCastListeners\";\r\nimport { Spells, registerSpell } from \"../../spells/Spells\";\r\nimport { applyTransformations } from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { addToInventory, getTotalAmountOfItem } from \"../Inventory\";\r\nimport { Item, ItemParams } from \"../Item\";\r\nimport { Items, isCraftingUnlocked } from \"../Items\";\r\n\r\nexport abstract class TransmutationSpell extends Spell {\r\n  abstract getItem(): Item;\r\n\r\n  getId(): string {\r\n    return \"transmute-\" + this.getItem().getId();\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.TRANSMUTATION;\r\n  }\r\n\r\n  getAreas(): Partial<Record<ActionArea, ActionSubcategory[]>> {\r\n    // Must populate by subclasses\r\n    return { TRANSMUTE: this.getItem().getTags() };\r\n  }\r\n\r\n  getExtraTags(): string[] {\r\n    return [TransformationTags.TransmutationSpell];\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Transmute {{itemName}}\", {\r\n      itemName: this.getItem().getBaseName(this.getItem().getDefaultParams()),\r\n    });\r\n  }\r\n\r\n  getDisplayName(state: GameState): string {\r\n    return t(\"Transmute {{itemName}}\", {\r\n      itemName: this.getItem().getBaseName(this.getItem().getDefaultParams()),\r\n    });\r\n  }\r\n\r\n  getCost(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return this.getCraftingMaterials(state);\r\n  }\r\n\r\n  generateCraftedParams(state: GameState): ItemParams {\r\n    const itemQuality = applyTransformations(this.tagsForQuality(), state, 0, {\r\n      spell: this,\r\n    });\r\n    if (itemQuality == 0) {\r\n      return {};\r\n    }\r\n    return { itemQuality };\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return this.getCraftingElementLevelRequirements();\r\n  }\r\n\r\n  abstract getCraftingElementLevelRequirements(): Partial<\r\n    Record<SpellElement, number>\r\n  >;\r\n\r\n  // If crafting is NOT simplified, craft N times\r\n  // If crafting is simplified, craft once and then multiply that result by N times\r\n  // Because of item quality, simplified quality only really works for materials\r\n  simplifyCrafting(): boolean {\r\n    return true;\r\n  }\r\n\r\n  abstract getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  };\r\n\r\n  tagsForResource = memoize((resource) => [\r\n    ...this.getItem().getTags(),\r\n    ...Object.keys(this.getCraftingElementLevelRequirements()),\r\n    resource,\r\n    this.getId(),\r\n    TransformationTags.ItemCost,\r\n  ]);\r\n\r\n  tagsForItem = memoize((item) => [\r\n    ...this.getItem().getTags(),\r\n    ...Object.keys(this.getCraftingElementLevelRequirements()),\r\n    item,\r\n    this.getId(),\r\n    TransformationTags.ItemCostItem,\r\n  ]);\r\n\r\n  tagsForQuality = memoize(() => [\r\n    this.getId(),\r\n    TransformationTags.ItemQuality,\r\n    ...this.getItem().getTags(),\r\n    ...Object.keys(this.getCraftingElementLevelRequirements()),\r\n  ]);\r\n\r\n  tagsForCreation = memoize(() => [\r\n    this.getId(),\r\n    TransformationTags.ItemAmountTransmuted,\r\n    ...this.getItem().getTags(),\r\n    ...Object.keys(this.getCraftingElementLevelRequirements()),\r\n  ]);\r\n\r\n  getCraftingMaterials(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    const base = this.getCraftingMaterialsBase(state);\r\n    let resources: Partial<Record<Resource, number>> = {},\r\n      items: Record<string, number> = {};\r\n    for (let resource in base.resources) {\r\n      const baseAmount = base.resources[resource as Resource] ?? 0;\r\n      resources[resource as Resource] = Math.ceil(\r\n        applyTransformations(this.tagsForResource(resource), state, baseAmount),\r\n      );\r\n    }\r\n    for (let item in base.items) {\r\n      const baseAmount = base.items[item] ?? 0;\r\n      items[item] = Math.ceil(\r\n        applyTransformations(this.tagsForItem(item), state, baseAmount),\r\n      );\r\n    }\r\n    return {\r\n      resources,\r\n      items,\r\n    };\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return (\r\n      this.getItem().getDescription(state, this.generateCraftedParams(state)) ??\r\n      \"\"\r\n    );\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    return (\r\n      this.getItem().getEffect(state, this.generateCraftedParams(state)) ?? \"\"\r\n    );\r\n  }\r\n\r\n  doSpellAction(state: GameState, args: DoActionArgs): GameState {\r\n    throw new Error(\"Not used in transmutation spells\");\r\n  }\r\n\r\n  canAfford(state: GameState): boolean {\r\n    return super.canAfford(state);\r\n  }\r\n\r\n  hasCraftingMaterials(state: GameState): boolean {\r\n    const materials = this.getCraftingMaterials(state);\r\n    for (let resource in materials.resources) {\r\n      const amount = materials.resources?.[resource as Resource] || 0;\r\n      if (getResourceAmount(state, resource as Resource) < amount) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    for (let itemId in materials.items) {\r\n      const amount = materials.items[itemId];\r\n      if (getTotalAmountOfItem(Items.getById(itemId), state) < amount) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  canCraft(state: GameState): boolean {\r\n    if (!this.isEnabled(state)) {\r\n      return false;\r\n    }\r\n\r\n    if (!this.hasCraftingMaterials(state)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    // Unused\r\n    return 0;\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return isTransmutationUnlocked(state) && super.isVisible(state);\r\n  }\r\n\r\n  getExpFromUsage(state: GameState): Partial<Record<SpellElement, number>> {\r\n    const elementRequirements = this.getCraftingElementLevelRequirements();\r\n    const params = this.generateCraftedParams(state);\r\n\r\n    return fromEntries(\r\n      keysOf(elementRequirements).map((element) => {\r\n        return [\r\n          element,\r\n          getElementExpByUsage(\r\n            state,\r\n            element,\r\n            elementRequirements[element],\r\n            this.getItem().getBaseSalePrice(state, params),\r\n            true,\r\n            this.getTags(),\r\n          ),\r\n        ];\r\n      }),\r\n    );\r\n  }\r\n\r\n  doAction(args: DoActionArgs, state: GameState): GameState {\r\n    return this.craftN(state, args, 1);\r\n  }\r\n\r\n  calculateAmountPerCraft(state: GameState, args: DoActionArgs): number {\r\n    return applyTransformations(this.tagsForCreation(), state, 1, {\r\n      spell: this,\r\n      automated: args.isAutomatic,\r\n    });\r\n  }\r\n\r\n  craftN(state: GameState, args: DoActionArgs, n: number): GameState {\r\n    if (!this.canAfford(state)) {\r\n      return state;\r\n    }\r\n\r\n    if (!this.canCraft(state)) {\r\n      return state;\r\n    }\r\n\r\n    let amountToCraft = this.calculateAmountPerCraft(state, args);\r\n\r\n    amountToCraft *= n;\r\n\r\n    if (this.simplifyCrafting()) {\r\n      const params = this.generateCraftedParams(state);\r\n\r\n      state = addToInventory(\r\n        { itemId: this.getItem().getId(), params },\r\n        amountToCraft,\r\n        state,\r\n      );\r\n    } else {\r\n      while (amountToCraft >= 1) {\r\n        const params = this.generateCraftedParams(state);\r\n\r\n        state = addToInventory(\r\n          { itemId: this.getItem().getId(), params },\r\n          1,\r\n          state,\r\n        );\r\n        amountToCraft -= 1;\r\n      }\r\n    }\r\n\r\n    state = this.payCost(state, n);\r\n\r\n    const expGranted = this.getExpFromUsage(state);\r\n\r\n    keysOf(expGranted).forEach((element) => {\r\n      state = grantElementExp(element, expGranted[element] * n)(state);\r\n    });\r\n\r\n    for (let listener of SpellCastListeners.getAll()) {\r\n      state = listener(state, this);\r\n    }\r\n\r\n    return state;\r\n  }\r\n\r\n  craftMax(state: GameState): GameState {\r\n    const timesCraftable = this.timesCraftable(state);\r\n    return this.craftN(state, { isAutomatic: false }, timesCraftable);\r\n  }\r\n\r\n  craftIntermediate(state: GameState): GameState {\r\n    // First of all, check the materials\r\n    const cost = this.getCost(state).items;\r\n    for (let itemId in cost) {\r\n      const item = Items.getById(itemId);\r\n      const amountNeeded = cost[itemId];\r\n      const amountInInventory = getTotalAmountOfItem(item, state);\r\n      if (amountInInventory >= amountNeeded) {\r\n        continue;\r\n      }\r\n      const spell = getTransmutationSpellForItem(item);\r\n      if (spell == null) {\r\n        continue;\r\n      }\r\n      if (!spell.isEnabled(state)) {\r\n        continue;\r\n      }\r\n      // There is a spell that we can use, and we need the item\r\n      const amountRequired = amountNeeded - amountInInventory;\r\n      const amountPerCraft = spell.calculateAmountPerCraft(state, {\r\n        isAutomatic: false,\r\n      });\r\n      const timesCraftable = spell.timesCraftable(state);\r\n      const timesToCraft = Math.min(\r\n        Math.ceil(amountRequired / amountPerCraft),\r\n        timesCraftable,\r\n      );\r\n      state = spell.craftN(state, { isAutomatic: false }, timesToCraft);\r\n    }\r\n    return state;\r\n  }\r\n\r\n  // Are there any materials that are intermediate materials and transmutable,\r\n  // and at least the materials for crafting 1 of them are held in hand?\r\n  isCraftIntermediatePossible(state: GameState): boolean {\r\n    const cost = this.getCost(state).items;\r\n    for (let itemId in cost) {\r\n      const item = Items.getById(itemId);\r\n      const amountNeeded = cost[itemId];\r\n      const amountInInventory = getTotalAmountOfItem(item, state);\r\n      if (amountInInventory >= amountNeeded) {\r\n        continue;\r\n      }\r\n      const spell = getTransmutationSpellForItem(item);\r\n      if (spell == null || !spell.isVisible(state)) {\r\n        continue;\r\n      }\r\n      if (!spell.isEnabled(state)) {\r\n        continue;\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // Are there any materials that are intermediate materials and transmutable,\r\n  // even if the materials for them are not in hand?\r\n  isCraftIntermediatePotentiallyPossible(state: GameState): boolean {\r\n    const cost = this.getCost(state).items;\r\n    for (let itemId in cost) {\r\n      const item = Items.getById(itemId);\r\n      const spell = getTransmutationSpellForItem(item);\r\n      if (spell == null || !spell.isVisible(state)) {\r\n        continue;\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  timesCraftable(state: GameState): number {\r\n    const cost = this.getCost(state);\r\n    const resourceThresholds = (\r\n      Object.keys(cost.resources) as Array<Resource>\r\n    ).map((resourceName) => {\r\n      const amount = getResourceAmount(state, resourceName);\r\n      return Math.floor(amount / cost.resources[resourceName]);\r\n    });\r\n    const itemThresholds = (Object.keys(cost.items) as Array<string>).map(\r\n      (itemId) => {\r\n        const amount = getTotalAmountOfItem(Items.getById(itemId), state);\r\n        return Math.floor(amount / cost.items[itemId]);\r\n      },\r\n    );\r\n\r\n    return Math.min(\r\n      Math.min(...resourceThresholds),\r\n      Math.min(...itemThresholds),\r\n    );\r\n  }\r\n\r\n  protected shouldIgnoreCanCastSpell(): boolean {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function isTransmutationUnlocked(state: GameState) {\r\n  return hasFlag(state, Flag.TransmutationUnlocked);\r\n}\r\n\r\nconst transmutationSpellsByItem: Record<string, TransmutationSpell> = {};\r\n\r\nexport function registerTransmutationSpellAndItem(spell: TransmutationSpell) {\r\n  Items.register(spell.getItem());\r\n  registerSpell(spell);\r\n  transmutationSpellsByItem[spell.getItem().getId()] = spell;\r\n}\r\n\r\nexport function getTransmutationSpellForItem(\r\n  item: Item,\r\n): TransmutationSpell | undefined {\r\n  return transmutationSpellsByItem[item.getId()];\r\n}\r\n\r\nexport function getVisibleTransmutationSpells(\r\n  state: GameState,\r\n): TransmutationSpell[] {\r\n  if (!isCraftingUnlocked(state)) {\r\n    return [];\r\n  }\r\n\r\n  return Spells.getAll().filter(\r\n    (spell) => spell instanceof TransmutationSpell && spell.isVisible(state),\r\n  ) as TransmutationSpell[];\r\n}\r\n\r\nexport function getAllTransmutationSpellsEverCastable(\r\n  state: GameState,\r\n): TransmutationSpell[] {\r\n  return cacheByTickCount(\r\n    state,\r\n    \"allTransmutationSpellsEverCastable\",\r\n    (state) => {\r\n      let hypotheticalState = createHypotheticalState(state);\r\n      getUnlockedElements(hypotheticalState).forEach((element) => {\r\n        hypotheticalState.run.elementExperience[element] =\r\n          getTotalExpRequiredForLevel(\r\n            hypotheticalState,\r\n            state.world.maxElementLevels?.[element] ?? 1,\r\n            element,\r\n          );\r\n      });\r\n      hypotheticalState = setFlag(Flag.TransmutationUnlocked)(\r\n        hypotheticalState,\r\n      );\r\n      return getVisibleTransmutationSpells(hypotheticalState);\r\n    },\r\n  );\r\n}\r\n","import { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport { CombatStat } from \"../exploration/CombatStats\";\r\nimport { GameState } from \"../GameState\";\r\nimport { Identifiable } from \"../generic/Identifiable\";\r\nimport { getSecondsPlayed } from \"../timetick/TotalTimePlayed\";\r\nimport { TransformationType } from \"../transformation/Transformation\";\r\nimport {\r\n  getTemporaryEffectEndTime,\r\n  TemporaryEffectData,\r\n} from \"./TemporaryEffects\";\r\n\r\nexport abstract class TemporaryEffect implements Identifiable {\r\n  abstract getId(): string;\r\n\r\n  abstract getDisplayName(): string;\r\n\r\n  abstract getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string;\r\n\r\n  getParameterlessDisplayDescription(state: GameState): string {\r\n    return this.getDisplayDescription(state, {\r\n      id: \"null\",\r\n      fromPouch: false,\r\n      fromPermacast: false,\r\n      fromAutocast: false,\r\n      endTime: getSecondsPlayed(state),\r\n      setTime: getSecondsPlayed(state),\r\n      params: {},\r\n      registeredClear: false,\r\n      target: AttackTarget.Player,\r\n    });\r\n  }\r\n\r\n  isCommonBuffEnabled(): { stat: CombatStat; type: TransformationType }[] {\r\n    return [];\r\n  }\r\n\r\n  getIcon() {\r\n    if (this.isBeneficial()) {\r\n      return require(\"./buff.png\");\r\n    } else {\r\n      return require(\"./debuff.png\");\r\n    }\r\n  }\r\n\r\n  isBeneficial(): boolean {\r\n    return true;\r\n  }\r\n\r\n  isCombatOnly(): boolean {\r\n    return false;\r\n  }\r\n\r\n  isDispellable(): boolean {\r\n    return true;\r\n  }\r\n\r\n  isHidden(): boolean {\r\n    return false;\r\n  }\r\n\r\n  // When a temporary effect is applied with the same ID, the data must be merged\r\n  mergeData(\r\n    state: GameState,\r\n    oldData: TemporaryEffectData,\r\n    newData: TemporaryEffectData,\r\n    mode: \"add\" | \"replace\",\r\n  ): TemporaryEffectData {\r\n    if (mode == \"add\") {\r\n      const currentEndTime = getTemporaryEffectEndTime(\r\n        state,\r\n        this.getId(),\r\n        oldData.target,\r\n      );\r\n      const extraDuration = Math.max(\r\n        0,\r\n        currentEndTime - getSecondsPlayed(state),\r\n      );\r\n      newData.endTime += extraDuration;\r\n    }\r\n    return newData;\r\n  }\r\n}\r\n","import { t } from \"../../utils/I18n\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport { clearCombatStatCache, CombatStat } from \"../exploration/CombatStats\";\r\nimport { GameState } from \"../GameState\";\r\nimport { TemporaryEffect } from \"../temporaryeffects/TemporaryEffect\";\r\nimport {\r\n  hasTemporaryEffect,\r\n  registerTemporaryEffectListener,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"../temporaryeffects/TemporaryEffects\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\n\r\nclass RitualWeakness extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"ritualWeakness\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Ritual Weakness\");\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\r\n      \"Your body is temporarily weak from starting a Ritual! -50%:attack:, :defense:, :dodge: and :critChance:\",\r\n    );\r\n  }\r\n  getIcon() {\r\n    return require(\"./ritualWeakness.png\");\r\n  }\r\n\r\n  isDispellable(): boolean {\r\n    return false;\r\n  }\r\n  isCombatOnly(): boolean {\r\n    return false;\r\n  }\r\n  isBeneficial(): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const ritualWeakness = new RitualWeakness();\r\n\r\nexport function loadRitualWeakness() {\r\n  TemporaryEffects.register(ritualWeakness);\r\n\r\n  registerTransformation(\r\n    [\r\n      CombatStat.Attack,\r\n      CombatStat.Defense,\r\n      CombatStat.Dodge,\r\n      CombatStat.Crit,\r\n    ].map((stat) => [AttackTarget.Player, stat]),\r\n    ritualWeakness.getId(),\r\n    ritualWeakness.getDisplayName(),\r\n    TransformationType.Multiplier,\r\n    (state) =>\r\n      hasTemporaryEffect(state, ritualWeakness.getId(), AttackTarget.Player)\r\n        ? 0.5\r\n        : 1.0,\r\n  );\r\n  registerTemporaryEffectListener(ritualWeakness.getId(), (state, effect) => {\r\n    if (effect.id == ritualWeakness.getId()) {\r\n      state = clearCombatStatCache(\r\n        state,\r\n        AttackTarget.Player,\r\n        CombatStat.Attack,\r\n      );\r\n      state = clearCombatStatCache(\r\n        state,\r\n        AttackTarget.Player,\r\n        CombatStat.Defense,\r\n      );\r\n      state = clearCombatStatCache(\r\n        state,\r\n        AttackTarget.Player,\r\n        CombatStat.Dodge,\r\n      );\r\n      state = clearCombatStatCache(state, AttackTarget.Player, CombatStat.Crit);\r\n    }\r\n    return effect;\r\n  });\r\n}\r\n","import { keysOf } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport { CombatStat } from \"../exploration/CombatStats\";\r\nimport { Flag } from \"../Flag\";\r\nimport { hasEverHadFlag, hasFlag } from \"../Flags\";\r\nimport { GameState } from \"../GameState\";\r\nimport { DataStore } from \"../generic/DataStore\";\r\nimport { getUnlockedElements, SpellElement } from \"../spells/Elements\";\r\nimport {\r\n  applyTransformationsCached,\r\n  applyTransformationsPermaCached,\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { Ritual } from \"./Ritual\";\r\nimport { loadRitualWeakness } from \"./RitualWeakness\";\r\n\r\nexport const Rituals = new DataStore<Ritual>();\r\n\r\nexport function getActiveRituals(state: GameState): Ritual[] {\r\n  return keysOf(state.run.activeRituals)\r\n    .filter((ritualId) => state.run.activeRituals[ritualId])\r\n    .map((id) => Rituals.getById(id));\r\n}\r\n\r\nconst CORRUPTION_CAP_TAGS = [TransformationTags.CorruptionCap];\r\nexport function getCorruptionCap(state: GameState): number {\r\n  return applyTransformationsCached(CORRUPTION_CAP_TAGS, state, 1);\r\n}\r\n\r\nconst CORRUPTION_TAGS = [\r\n  TransformationTags.Corruption,\r\n  TransformationTags.Accumulation,\r\n];\r\nexport function getCorruption(state: GameState): number {\r\n  return applyTransformationsPermaCached(CORRUPTION_TAGS, state, 0);\r\n}\r\n\r\nconst CORRUPTION_HP_PENALTY_BASE = 0.9;\r\nconst CORRUPTION_HP_PENALTY_PER_CORRUPTION = 1.0;\r\nconst CORRUPTION_HP_PENALTY_OVER_CAP = 0.00001;\r\nexport function isCorruptionHPPenaltyActive(state: GameState) {\r\n  return (\r\n    getCorruption(state) >=\r\n    getCorruptionCap(state) + CORRUPTION_HP_PENALTY_OVER_CAP\r\n  );\r\n}\r\n\r\nexport function getCorruptionHPPenaltyMultiplier(state: GameState): number {\r\n  if (!isCorruptionHPPenaltyActive(state)) {\r\n    return 1.0;\r\n  }\r\n  return Math.pow(\r\n    CORRUPTION_HP_PENALTY_BASE,\r\n    Math.max(getCorruption(state) - getCorruptionCap(state), 0) /\r\n      CORRUPTION_HP_PENALTY_PER_CORRUPTION,\r\n  );\r\n}\r\n\r\nconst CORRUPTION_EXP_PENALTY_BASE = 0.7;\r\nconst CORRUPTION_EXP_PENALTY_PER_CORRUPTION = 3.0;\r\nconst CORRUPTION_EXP_PENALTY_OVER_CAP = 3.0;\r\nexport function isCorruptionExpPenaltyActive(state: GameState) {\r\n  return (\r\n    getCorruption(state) >=\r\n    getCorruptionCap(state) + CORRUPTION_EXP_PENALTY_OVER_CAP\r\n  );\r\n}\r\n\r\nexport function getCorruptionExpPenaltyMultiplier(state: GameState): number {\r\n  if (!isCorruptionExpPenaltyActive(state)) {\r\n    return 1.0;\r\n  }\r\n  return Math.pow(\r\n    CORRUPTION_EXP_PENALTY_BASE,\r\n    Math.max(getCorruption(state) - getCorruptionCap(state), 0) /\r\n      CORRUPTION_EXP_PENALTY_PER_CORRUPTION,\r\n  );\r\n}\r\n\r\nconst CORRUPTION_TRANSMUTE_PENALTY_BASE = 2.0;\r\nconst CORRUPTION_TRANSMUTE_PENALTY_PER_CORRUPTION = 5.0;\r\nconst CORRUPTION_TRANSMUTE_PENALTY_OVER_CAP = 5.0;\r\nexport function isCorruptionTransmutePenaltyActive(state: GameState) {\r\n  return (\r\n    getCorruption(state) >=\r\n    getCorruptionCap(state) + CORRUPTION_TRANSMUTE_PENALTY_OVER_CAP\r\n  );\r\n}\r\n\r\nexport function getCorruptionTransmutePenaltyMultiplier(\r\n  state: GameState,\r\n): number {\r\n  if (!isCorruptionTransmutePenaltyActive(state)) {\r\n    return 1.0;\r\n  }\r\n  return Math.pow(\r\n    CORRUPTION_TRANSMUTE_PENALTY_BASE,\r\n    Math.max(getCorruption(state) - getCorruptionCap(state), 0) /\r\n      CORRUPTION_TRANSMUTE_PENALTY_PER_CORRUPTION,\r\n  );\r\n}\r\n\r\nexport function areRitualsUnlocked(state: GameState): boolean {\r\n  return (\r\n    getUnlockedElements(state).includes(SpellElement.Death) &&\r\n    hasFlag(state, Flag.RitualsUnlocked)\r\n  );\r\n}\r\n\r\nexport function areRitualsEverUnlocked(state: GameState): boolean {\r\n  return hasEverHadFlag(state, Flag.RitualsUnlocked);\r\n}\r\n\r\nexport function getVisibleRituals(state: GameState): Ritual[] {\r\n  return hasFlag(state, Flag.RitualsUnlocked)\r\n    ? Rituals.getAll().filter((ritual) => ritual.isVisible(state))\r\n    : [];\r\n}\r\n\r\nexport function loadRitualCommonEffects() {\r\n  loadRitualWeakness();\r\n\r\n  // Corruption implementation\r\n  registerTransformation(\r\n    [[TransformationTags.Corruption, TransformationTags.Accumulation]],\r\n    \"ritualsCorruption\",\r\n    t(\"Active Rituals\"),\r\n    TransformationType.Addition,\r\n    (state) => {\r\n      const activeRituals = getActiveRituals(state);\r\n      return activeRituals\r\n        .map((ritual) => ritual.getCorruptionCost(state))\r\n        .reduce((prev, current) => prev + current, 0);\r\n    },\r\n  );\r\n\r\n  // Corruption negative effects\r\n  registerTransformation(\r\n    [[AttackTarget.Player, CombatStat.MaxHP]],\r\n    \"corruptionHP\",\r\n    t(\"Corruption\"),\r\n    TransformationType.Multiplier,\r\n    (state) => getCorruptionHPPenaltyMultiplier(state),\r\n  );\r\n  registerTransformation(\r\n    [[TransformationTags.ExpGain]],\r\n    \"corruptionExp\",\r\n    t(\"Corruption\"),\r\n    TransformationType.Multiplier,\r\n    (state) => getCorruptionExpPenaltyMultiplier(state),\r\n  );\r\n  registerTransformation(\r\n    [[TransformationTags.ItemCost], [TransformationTags.ItemCostItem]],\r\n    \"corruptionTransmute\",\r\n    t(\"Corruption\"),\r\n    TransformationType.Multiplier,\r\n    (state) => getCorruptionTransmutePenaltyMultiplier(state),\r\n  );\r\n}\r\n","import { valuesOf } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { RESOURCE_FOR_ELEMENT } from \"./channeling/ChannelingResources\";\r\nimport {\r\n  getElementLevel,\r\n  getPrimaryElements,\r\n  isPartiallyUnlocked,\r\n  SpellElement,\r\n  translateElement,\r\n} from \"./Elements\";\r\nimport { Spell } from \"./Spell\";\r\n\r\nexport const PARTIALLY_UNLOCKED_STORAGE_MULTIPLIER = 0.25;\r\nexport const PARTIALLY_UNLOCKED_CHANNELING_MULTIPLIER = 1.0 / 3.0;\r\nexport const LEVELS_PER_RANK = 10.0;\r\nconst EXPONENTIAL_BONUS_PER_RANK = 1.33353;\r\n\r\nexport function getRankMultiplier(\r\n  baseLevel: number,\r\n  currentLevel: number,\r\n): number {\r\n  const rankDifference = getRankDifference(baseLevel, currentLevel);\r\n  if (rankDifference <= 0) {\r\n    return 1.0;\r\n  }\r\n  const powValue = Math.pow(EXPONENTIAL_BONUS_PER_RANK, rankDifference);\r\n  return powValue;\r\n}\r\n\r\nexport function getRankDifference(\r\n  baseLevel: number,\r\n  currentLevel: number,\r\n): number {\r\n  const rank = Math.floor(currentLevel / LEVELS_PER_RANK);\r\n  const spellRank = Math.floor(baseLevel / LEVELS_PER_RANK);\r\n  const rankDifference = rank - spellRank;\r\n  return rankDifference;\r\n}\r\n\r\nexport function loadElementMultipliers() {\r\n  for (let element of valuesOf(SpellElement)) {\r\n    registerTransformation(\r\n      [\r\n        [\r\n          TransformationTags.Spell,\r\n          TransformationTags.ActionEffect,\r\n          TransformationTags.ActionMagnitude,\r\n          element,\r\n        ],\r\n        [\r\n          TransformationTags.Spell,\r\n          TransformationTags.ActionEffect,\r\n          TransformationTags.TemporaryEffectMagnitude,\r\n          element,\r\n        ],\r\n        [\r\n          TransformationTags.Spell,\r\n          TransformationTags.ActionEffect,\r\n          TransformationTags.TemporaryEffectExtraCostDivisor,\r\n          element,\r\n        ],\r\n      ],\r\n      \"elementLevel\" + element,\r\n      t(\"{{element}} Rank\", { element: translateElement(element) }),\r\n      TransformationType.Multiplier,\r\n      (state, params) => {\r\n        const spell = params.action as Spell;\r\n        const baseLevel = spell.getLevelRequirements()[element];\r\n        if (baseLevel == null) {\r\n          return 1.0;\r\n        }\r\n        const currentLevel = getElementLevel(state, element);\r\n        return getRankMultiplier(baseLevel, currentLevel);\r\n      },\r\n    );\r\n\r\n    registerTransformation(\r\n      [\r\n        [\r\n          TransformationTags.Spell,\r\n          TransformationTags.ActionEffect,\r\n          TransformationTags.TemporaryEffectExtraCost,\r\n          element,\r\n        ],\r\n      ],\r\n      \"elementLevelCost\" + element,\r\n      t(\"{{element}} Rank\", { element: translateElement(element) }),\r\n      TransformationType.Multiplier,\r\n      (state, params) => {\r\n        const spell = params.action as Spell;\r\n        const baseLevel = spell.getLevelRequirements()[element];\r\n        if (baseLevel == null) {\r\n          return 1.0;\r\n        }\r\n        const currentLevel = getElementLevel(state, element);\r\n        const multiplier = getRankMultiplier(baseLevel, currentLevel);\r\n        return 1.0 / ((multiplier + 1.0) / 2);\r\n      },\r\n    );\r\n\r\n    registerTransformation(\r\n      [[element, TransformationTags.ExpGain]],\r\n      element + \"PrimaryElementMultiplier\",\r\n      t(\"Primary Element\"),\r\n      TransformationType.Multiplier,\r\n      (state) => (getPrimaryElements(state).includes(element) ? 2.0 : 1.0),\r\n    );\r\n\r\n    registerTransformation(\r\n      [[element, TransformationTags.ChannelingEfficiency]],\r\n      element + \"ChannelingMultiplier\",\r\n      t(\"{{element}} Element Rank\", { element: translateElement(element) }),\r\n      TransformationType.Multiplier,\r\n      (state) => {\r\n        const currentLevel = getElementLevel(state, element);\r\n        return getRankMultiplier(1, currentLevel);\r\n      },\r\n    );\r\n\r\n    registerTransformation(\r\n      [[RESOURCE_FOR_ELEMENT[element], TransformationTags.PerBuildingCap]],\r\n      element + \"PartiallyUnlockedCapMultiplier\",\r\n      t(\"Partially Unlocked\"),\r\n      TransformationType.Multiplier,\r\n      (state) =>\r\n        isPartiallyUnlocked(state, element)\r\n          ? PARTIALLY_UNLOCKED_STORAGE_MULTIPLIER\r\n          : 1.0,\r\n    );\r\n\r\n    registerTransformation(\r\n      [\r\n        [element, TransformationTags.ChannelingEfficiency],\r\n        [element, TransformationTags.ExpGain],\r\n      ],\r\n      element + \"PartiallyUnlockedChannelingMultiplier\",\r\n      t(\"Partially Unlocked\"),\r\n      TransformationType.Multiplier,\r\n      (state) =>\r\n        isPartiallyUnlocked(state, element)\r\n          ? PARTIALLY_UNLOCKED_CHANNELING_MULTIPLIER\r\n          : 1.0,\r\n    );\r\n  }\r\n}\r\n","import { keysOf, valuesOf } from \"../../../utils/CoreUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { ActionArea } from \"../../action/ActionAreas\";\r\nimport { createHypotheticalState, GameState } from \"../../GameState\";\r\nimport { addGameStateListener } from \"../../GameStateListeners\";\r\nimport { DataStore } from \"../../generic/DataStore\";\r\nimport {\r\n  getVisibleTransmutationSpells,\r\n  isTransmutationUnlocked,\r\n  TransmutationSpell,\r\n} from \"../../items/transmute/TransmutationSpell\";\r\nimport { Ritual } from \"../../rituals/Ritual\";\r\nimport { getVisibleRituals } from \"../../rituals/Rituals\";\r\nimport { LEVELS_PER_RANK } from \"../../spells/ElementMultipliers\";\r\nimport {\r\n  getElementExp,\r\n  getElementLevel,\r\n  getRankForLevel,\r\n  grantElementExp,\r\n  SpellElement,\r\n  translateElement,\r\n} from \"../../spells/Elements\";\r\nimport { Spell } from \"../../spells/Spell\";\r\nimport { getVisibleSpellsForElement } from \"../../spells/Spells\";\r\nimport { clearVisibleSpellsCache } from \"../../spells/VisibleSpellsCache\";\r\nimport { buildEvent } from \"../EventMessageBuilder\";\r\nimport { triggerEvent } from \"../Events\";\r\nimport { EventTag } from \"../GameEvent\";\r\n\r\nexport function getConcatenatedRequirements(spell: Spell): string {\r\n  return formatRequirements(spell.getLevelRequirements());\r\n}\r\n\r\nfunction formatRequirements(\r\n  elementRequirements: Partial<Record<SpellElement, number>>,\r\n): string {\r\n  let requirements = [];\r\n  for (let element of keysOf(elementRequirements)) {\r\n    requirements.push(\r\n      t(\"{{elementName}} Lv{{level}}\", {\r\n        elementName: translateElement(element),\r\n        level: elementRequirements[element],\r\n      }),\r\n    );\r\n  }\r\n  return requirements.join(t(\", \"));\r\n}\r\n\r\nexport function getMarkdownTextForSpell(spell: Spell): string {\r\n  return `*${spell.getSpellName()}* (${getConcatenatedRequirements(spell)})`;\r\n}\r\n\r\nexport function getMarkdownTextForSpellEmpowerment(spell: Spell): string {\r\n  return `*${spell.getSpellName()}+* (${formatRequirements(\r\n    spell.getEmpoweringLevelRequirements(),\r\n  )})`;\r\n}\r\n\r\nexport function getMarkdownTextForTransmutationSpell(\r\n  state: GameState,\r\n  spell: TransmutationSpell,\r\n): string {\r\n  return t(\"{{itemIcon}} *{{itemName}}* ({{requirements}})\", {\r\n    itemIcon: `:${spell.getItem().getId()}:`,\r\n    itemName: spell.getItem().getName(spell.getItem().getDefaultParams()),\r\n    requirements: getConcatenatedRequirements(spell),\r\n  });\r\n}\r\n\r\nfunction getLevelUpLearnedSpellsText(\r\n  oldSpells: Spell[],\r\n  newSpells: Spell[],\r\n): string {\r\n  let diffSpells = newSpells.filter((spell) => !oldSpells.includes(spell));\r\n  let newSpellText = \"\";\r\n  let extraSpellText = \"\";\r\n  if (diffSpells.length > 3) {\r\n    const extraSpells = diffSpells.length - 3;\r\n    extraSpellText = t(\"and {{extraSpells}} more!\", { extraSpells });\r\n    diffSpells = diffSpells.slice(0, 3);\r\n  }\r\n  if (diffSpells.length > 0) {\r\n    let newSpellsLearnedText = diffSpells\r\n      .map(getMarkdownTextForSpell)\r\n      .join(t(\", \"));\r\n    if (extraSpellText !== \"\") {\r\n      newSpellsLearnedText = [newSpellsLearnedText, extraSpellText].join(\r\n        t(\". \"),\r\n      );\r\n    }\r\n    newSpellText = t(`**New spells learned:** {{newSpellsLearnedText}}`, {\r\n      newSpellsLearnedText,\r\n    });\r\n  }\r\n  return newSpellText;\r\n}\r\n\r\nfunction getLevelUpLearnedTransmutationsForElement(\r\n  state: GameState,\r\n  element: SpellElement,\r\n  oldSpells: TransmutationSpell[],\r\n  newSpells: TransmutationSpell[],\r\n): string {\r\n  let diffSpells = newSpells.filter(\r\n    (spell) =>\r\n      !oldSpells.includes(spell) &&\r\n      (spell.getLevelRequirements()?.[element] ?? 0) > 0,\r\n  );\r\n  let newSpellsText = \"\";\r\n  if (isTransmutationUnlocked(state) && diffSpells.length > 0) {\r\n    let extraSpellsText = \"\";\r\n    if (diffSpells.length > 3) {\r\n      const extraSpells = diffSpells.length - 3;\r\n      extraSpellsText = t(\"and {{extraSpells}} more!\", { extraSpells });\r\n      diffSpells = diffSpells.slice(0, 3);\r\n    }\r\n    let newSpellsLearnedText = diffSpells\r\n      .map(getMarkdownTextForTransmutationSpell.bind(null, state))\r\n      .join(\", \");\r\n    if (extraSpellsText !== \"\") {\r\n      newSpellsLearnedText = [newSpellsLearnedText, extraSpellsText].join(\r\n        t(\", \"),\r\n      );\r\n    }\r\n    newSpellsText = t(\r\n      `**New Transmutations available:**\r\n{{newSpellsLearnedText}}`,\r\n      { newSpellsLearnedText },\r\n    );\r\n  }\r\n  return newSpellsText;\r\n}\r\n\r\nfunction getLevelUpLearnedEmpoweredSpellsText(\r\n  oldSpells: Spell[],\r\n  newSpells: Spell[],\r\n): string {\r\n  let diffSpells = newSpells.filter((spell) => !oldSpells.includes(spell));\r\n  let newSpellText = \"\";\r\n  let extraSpellText = \"\";\r\n  if (diffSpells.length > 3) {\r\n    const extraSpells = diffSpells.length - 3;\r\n    extraSpellText = t(\"and {{extraSpells}} more!\", { extraSpells });\r\n    diffSpells = diffSpells.slice(0, 3);\r\n  }\r\n  if (diffSpells.length > 0) {\r\n    let newSpellsLearnedText = diffSpells\r\n      .map(getMarkdownTextForSpellEmpowerment)\r\n      .join(t(\", \"));\r\n    if (extraSpellText !== \"\") {\r\n      newSpellsLearnedText = [newSpellsLearnedText, extraSpellText].join(\r\n        t(\". \"),\r\n      );\r\n    }\r\n    newSpellText = t(`**New Empowerable spells:** {{newSpellsLearnedText}}`, {\r\n      newSpellsLearnedText,\r\n    });\r\n  }\r\n  return newSpellText;\r\n}\r\n\r\nfunction getLevelUpLearnedRitualsText(\r\n  oldRituals: Ritual[],\r\n  newRituals: Ritual[],\r\n): string {\r\n  let diffRituals = newRituals.filter((ritual) => !oldRituals.includes(ritual));\r\n  let newRitualText = \"\";\r\n  let extraRitualText = \"\";\r\n  if (diffRituals.length > 3) {\r\n    const extraRituals = diffRituals.length - 3;\r\n    extraRitualText = t(\"and {{extraRituals}} more!\", {\r\n      extraRituals: extraRituals,\r\n    });\r\n    diffRituals = diffRituals.slice(0, 3);\r\n  }\r\n  if (diffRituals.length > 0) {\r\n    let newRitualsLearnedText = diffRituals\r\n      .map(\r\n        (ritual) =>\r\n          `*${ritual.getBaseName()}* (${formatRequirements(\r\n            ritual.getLevelRequirements(),\r\n          )})`,\r\n      )\r\n      .join(t(\", \"));\r\n    if (extraRitualText !== \"\") {\r\n      newRitualsLearnedText = [newRitualsLearnedText, extraRitualText].join(\r\n        t(\". \"),\r\n      );\r\n    }\r\n    newRitualText = t(`**New Rituals:** {{newRitualsLearnedText}}`, {\r\n      newRitualsLearnedText: newRitualsLearnedText,\r\n    });\r\n  }\r\n  return newRitualText;\r\n}\r\n\r\nexport const LevelUpListeners = new DataStore<\r\n  (state: GameState, element: SpellElement, oldExp: number) => GameState\r\n>();\r\n\r\nexport function loadLevelUpEvents() {\r\n  for (let element of valuesOf(SpellElement)) {\r\n    const eventBuilder = buildEvent(\r\n      \"Level_Up_\" + element,\r\n      t(\"{{element}} Level Up!\", { element: translateElement(element) }),\r\n      [EventTag.LEVEL_UP],\r\n    );\r\n\r\n    eventBuilder.message(\r\n      t(\r\n        `Congratulations!\r\n      \r\nYour {{element}} level is now /level/!\r\n\r\n/rankText/\r\n\r\n/levelUpLearnedSpells/\r\n\r\n/levelUpLearnedCrafts/\r\n\r\n/levelUpLearnedEmpowers/\r\n\r\n/levelUpLearnedRituals/`,\r\n        { element: translateElement(element) },\r\n      ),\r\n    );\r\n\r\n    const event = eventBuilder.build();\r\n\r\n    addGameStateListener(\r\n      \"Level_Up_\" + element,\r\n      (state) => {\r\n        // Need to clear this cache to get an accurate level up message\r\n        state.temp.spellRequirementsCache = {};\r\n        let lessExpState = createHypotheticalState(state);\r\n        const level = getElementLevel(state, element);\r\n        lessExpState = grantElementExp(\r\n          element,\r\n          -(\r\n            getElementExp(state, element) -\r\n            (state.run.lastComputedLevelUpElementExperience[element] ?? 0)\r\n          ),\r\n        )(lessExpState);\r\n        const oldLevel = getElementLevel(lessExpState, element);\r\n        if (oldLevel == level) {\r\n          // Do nothing\r\n          return;\r\n        }\r\n        // We leveled up!\r\n        lessExpState = clearVisibleSpellsCache(lessExpState);\r\n        state = clearVisibleSpellsCache(state);\r\n        const oldSpells = getVisibleSpellsForElement(\r\n          lessExpState,\r\n          element,\r\n          ActionArea.SPELL_MENU,\r\n        );\r\n        const newSpells = getVisibleSpellsForElement(\r\n          state,\r\n          element,\r\n          ActionArea.SPELL_MENU,\r\n        );\r\n        const levelUpLearnedSpells = getLevelUpLearnedSpellsText(\r\n          oldSpells,\r\n          newSpells,\r\n        );\r\n        const oldTransmutations = getVisibleTransmutationSpells(lessExpState);\r\n        const newTransmutations = getVisibleTransmutationSpells(state);\r\n        const levelUpLearnedTransmutations =\r\n          getLevelUpLearnedTransmutationsForElement(\r\n            state,\r\n            element,\r\n            oldTransmutations,\r\n            newTransmutations,\r\n          );\r\n        const oldEmpoweredSpells = oldSpells.filter((spell) =>\r\n          spell.isEmpoweringPossible(lessExpState),\r\n        );\r\n        const newEmpoweredSpells = newSpells.filter((spell) =>\r\n          spell.isEmpoweringPossible(state),\r\n        );\r\n        const levelUpLearnedEmpowers = getLevelUpLearnedEmpoweredSpellsText(\r\n          oldEmpoweredSpells,\r\n          newEmpoweredSpells,\r\n        );\r\n        const oldRituals = getVisibleRituals(lessExpState);\r\n        const newRituals = getVisibleRituals(state);\r\n        const levelUpLearnedRituals = getLevelUpLearnedRitualsText(\r\n          oldRituals,\r\n          newRituals,\r\n        );\r\n        const rankText =\r\n          level % LEVELS_PER_RANK == 0\r\n            ? t(\r\n                \"You have reached a new Rank: *{{rank}}*. Any {{element}} spells you have learned on a previous rank will become 33% stronger!\",\r\n                {\r\n                  rank: getRankForLevel(level),\r\n                  element: translateElement(element),\r\n                },\r\n              )\r\n            : \"\";\r\n        const tags: EventTag[] = [];\r\n        if (\r\n          !levelUpLearnedSpells &&\r\n          !levelUpLearnedTransmutations &&\r\n          !levelUpLearnedEmpowers &&\r\n          !levelUpLearnedRituals &&\r\n          !rankText\r\n        ) {\r\n          tags.push(EventTag.LEVEL_UP_EMPTY);\r\n        }\r\n        if (\r\n          lessExpState.run.maxElementLevelsOnPrevRetirement[element] >= level\r\n        ) {\r\n          tags.push(EventTag.LEVEL_UP_ALREADY_REACHED);\r\n        }\r\n        return (state) => {\r\n          state = triggerEvent(\r\n            event,\r\n            {\r\n              level,\r\n              rankText,\r\n              levelUpLearnedSpells: levelUpLearnedSpells,\r\n              levelUpLearnedCrafts: levelUpLearnedTransmutations,\r\n              levelUpLearnedEmpowers: levelUpLearnedEmpowers,\r\n              levelUpLearnedRituals,\r\n            },\r\n            tags,\r\n          )(state);\r\n          LevelUpListeners.getAll().forEach((listener) => {\r\n            state = listener(\r\n              state,\r\n              element,\r\n              state.run.lastComputedLevelUpElementExperience[element] ?? 0,\r\n            );\r\n          });\r\n          state.run.lastComputedLevelUpElementExperience[element] =\r\n            getElementExp(state, element);\r\n          state.temp.spellRequirementsCache = {};\r\n          return state;\r\n        };\r\n      },\r\n      (state) => getElementLevel(state, element),\r\n    );\r\n  }\r\n}\r\n","import { valuesOf } from \"../../utils/CoreUtils\";\r\nimport { cacheIndefinitely, clearCacheKey } from \"../Caching\";\r\nimport { GameState } from \"../GameState\";\r\nimport { LevelUpListeners } from \"../events/progression/LevelUp\";\r\nimport { addEnemyDeathListener } from \"../exploration/Exploration\";\r\nimport { Enemies } from \"../exploration/enemies/Enemies\";\r\nimport {\r\n  BestiaryState,\r\n  Enemy,\r\n  KILLS_FOR_BESTIARY_LOOT,\r\n  getCumulativeEnemyKills,\r\n} from \"../exploration/enemies/Enemy\";\r\nimport { AddToInventoryForFirstTimeListeners } from \"./Inventory\";\r\nimport { Item } from \"./Item\";\r\nimport { Items } from \"./Items\";\r\nimport {\r\n  TransmutationSpell,\r\n  getAllTransmutationSpellsEverCastable,\r\n  getTransmutationSpellForItem,\r\n} from \"./transmute/TransmutationSpell\";\r\n\r\nexport type ItemCompendiumLootInfo = {\r\n  enemy: Enemy;\r\n  lootChance: number | undefined;\r\n  amount: number | undefined;\r\n};\r\n\r\nexport type ItemCompendiumInfo = {\r\n  item: Item;\r\n  transmuteSpell: TransmutationSpell | undefined;\r\n  knownLootFromEnemies: ItemCompendiumLootInfo[];\r\n};\r\n\r\nexport function getItemCompendiumInfoForItem(\r\n  state: GameState,\r\n  itemId: string,\r\n): ItemCompendiumInfo {\r\n  const item = Items.getById(itemId);\r\n  const info: ItemCompendiumInfo = {\r\n    item,\r\n    transmuteSpell: undefined,\r\n    knownLootFromEnemies: [],\r\n  };\r\n  const transmutationSpell = getTransmutationSpellForItem(item);\r\n  const transmutationSpellsEverCastable =\r\n    getAllTransmutationSpellsEverCastable(state);\r\n  if (\r\n    transmutationSpell != null &&\r\n    transmutationSpellsEverCastable.includes(transmutationSpell)\r\n  ) {\r\n    info.transmuteSpell = transmutationSpell;\r\n  }\r\n\r\n  // Now, check all the enemies that can drop it\r\n  const enemyInfo = {};\r\n  Enemies.getAll().forEach((enemy) => {\r\n    const loot = enemy.getItemsAwardedBase(state);\r\n    const foundLoot = loot.find((enemyLoot) => enemyLoot.itemId == itemId);\r\n    if (foundLoot != null) {\r\n      if (enemy.getBestiaryState(state) == BestiaryState.Loot) {\r\n        enemyInfo[enemy.getId()] = {\r\n          enemy: enemy,\r\n          lootChance: foundLoot.chance,\r\n          amount: foundLoot.amount,\r\n        };\r\n      } else {\r\n        // We only return it if we have seen a drop\r\n        if (state.world.knownEnemiesThatDrop[itemId]?.[enemy.getId()]) {\r\n          enemyInfo[enemy.getId()] = {\r\n            enemy: enemy,\r\n            lootChance: undefined,\r\n            amount: foundLoot.amount,\r\n          };\r\n        }\r\n      }\r\n    }\r\n  });\r\n  info.knownLootFromEnemies = valuesOf(enemyInfo);\r\n  return info;\r\n}\r\n\r\nexport function getAllKnownItemCompendiumInfos(\r\n  state: GameState,\r\n): ItemCompendiumInfo[] {\r\n  return cacheIndefinitely(\r\n    state,\r\n    (_state) => \"allKnownItemCompendiumInfos\",\r\n    (state) =>\r\n      Items.getAll()\r\n        .map((item) => getItemCompendiumInfoForItem(state, item.getId()))\r\n        .filter(\r\n          (info) =>\r\n            info.transmuteSpell ||\r\n            info.knownLootFromEnemies.length > 0 ||\r\n            state.world.itemsEverAddedToInventory[info.item.getId()],\r\n        ),\r\n  );\r\n}\r\n\r\nfunction clearItemCompendiumInfoCache(state: GameState): GameState {\r\n  return clearCacheKey(state, (_state) => \"allKnownItemCompendiumInfos\");\r\n}\r\n\r\nexport function loadCompendium() {\r\n  LevelUpListeners.register(\r\n    clearItemCompendiumInfoCache,\r\n    \"compendiumCacheClearerLevelUp\",\r\n  );\r\n  addEnemyDeathListener(\"compendiumCacheClearerEnemyDeath\", (state, enemy) => {\r\n    if (enemy != null) {\r\n      const totalCounter = getCumulativeEnemyKills(state, enemy.getId());\r\n      if (\r\n        (totalCounter == 1 && enemy.isBoss()) ||\r\n        (totalCounter == KILLS_FOR_BESTIARY_LOOT && !enemy.isBoss())\r\n      ) {\r\n        return clearItemCompendiumInfoCache(state);\r\n      }\r\n    }\r\n    return state;\r\n  });\r\n  AddToInventoryForFirstTimeListeners.register(\r\n    clearItemCompendiumInfoCache,\r\n    \"compendiumCacheClearerAddToInventoryFirstTime\",\r\n  );\r\n}\r\n","import memoize from \"sonic-memoize\";\r\nimport { valuesOf } from \"../../utils/CoreUtils\";\r\nimport { formatMultiplier } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { GameState } from \"../GameState\";\r\nimport { ActionEffect } from \"../action/Action\";\r\nimport { getTotalAmountOfItem } from \"../items/Inventory\";\r\nimport { Item } from \"../items/Item\";\r\nimport { Items } from \"../items/Items\";\r\nimport { SpellElement } from \"../spells/Elements\";\r\nimport { Spell } from \"../spells/Spell\";\r\nimport {\r\n  applyTransformationsCached,\r\n  explainTransformationsText,\r\n} from \"../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../transformation/TransformationTags\";\r\n\r\nfunction generateEffect(value: number) {\r\n  if (value > 0) {\r\n    return {\r\n      value,\r\n      valueType: TransformationValueType.Percent,\r\n    };\r\n  } else {\r\n    return {\r\n      value: 1.0 / (1.0 + value) - 1.0,\r\n      valueType: TransformationValueType.Divisor,\r\n    };\r\n  }\r\n}\r\n\r\nexport function generateSpellcraftMultiplier(\r\n  baseValue: number,\r\n  transformedValue: number,\r\n) {\r\n  if (transformedValue == null) {\r\n    return 1.0;\r\n  }\r\n\r\n  if (baseValue > 0) {\r\n    return 1.0 + transformedValue;\r\n  } else {\r\n    return 1.0 / (transformedValue + 1.0);\r\n  }\r\n}\r\n\r\nexport abstract class Spellcraft {\r\n  getId(): string {\r\n    return \"spellcraft-\" + this.getBaseItem().getId();\r\n  }\r\n\r\n  abstract getBaseItem(): Item;\r\n\r\n  getName(): string {\r\n    return this.getBaseItem().getDefaultName();\r\n  }\r\n\r\n  getPicture() {\r\n    return this.getBaseItem().getPicture();\r\n  }\r\n\r\n  getTags(): string[] {\r\n    return [TransformationTags.Spellcraft];\r\n  }\r\n\r\n  tagsByEffect: Record<string, string[]> = {};\r\n  getTagsByEffect(key: string, baseEffect: ActionEffect): string[] {\r\n    if (this.tagsByEffect?.[key] == null) {\r\n      this.tagsByEffect[key] = [\r\n        ...this.getTags(),\r\n        this.getId(),\r\n        ...(baseEffect.tags ?? []),\r\n        TransformationTags.SpellcraftEffect,\r\n      ];\r\n    }\r\n    return this.tagsByEffect[key];\r\n  }\r\n\r\n  protected getBaseWizardPowerMultiplier(): number {\r\n    return 0;\r\n  }\r\n\r\n  protected getBasePowerMultiplier(): number {\r\n    return 0;\r\n  }\r\n\r\n  protected getBaseCooldownMultiplier(): number {\r\n    return 0;\r\n  }\r\n\r\n  protected getBaseTemporaryEffectDurationMultiplier(): number {\r\n    return 0;\r\n  }\r\n\r\n  protected getBaseManaCostMultiplier(): number {\r\n    return 0;\r\n  }\r\n\r\n  getBaseMultipliers(): Record<string, number> {\r\n    return {\r\n      wizardPower: this.getBaseWizardPowerMultiplier(),\r\n      power: this.getBasePowerMultiplier(),\r\n      cooldown: this.getBaseCooldownMultiplier(),\r\n      temporaryEffectDuration: this.getBaseTemporaryEffectDurationMultiplier(),\r\n      manaCost: this.getBaseManaCostMultiplier(),\r\n    };\r\n  }\r\n\r\n  requiresSpellsWithParameterizedEffects(): boolean {\r\n    return this.getBasePowerMultiplier() != 0;\r\n  }\r\n\r\n  requiresSpellsWithCooldown(): boolean {\r\n    return this.getBaseCooldownMultiplier() != 0;\r\n  }\r\n\r\n  requiresSpellsWithTemporaryEffect(): boolean {\r\n    return this.getBaseTemporaryEffectDurationMultiplier() != 0;\r\n  }\r\n\r\n  requiresSpellsWithFixedManaCost(): boolean {\r\n    return this.getBaseManaCostMultiplier() != 0;\r\n  }\r\n\r\n  isSpellCompatible(spell: Spell): boolean {\r\n    if (this.requiresSpellsWithFixedManaCost() && !spell.hasFixedManaCost()) {\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      this.requiresSpellsWithParameterizedEffects() &&\r\n      !valuesOf(spell.getCachedBaseActionEffects()).some((effect) =>\r\n        effect.tags?.includes?.(TransformationTags.ActionMagnitude),\r\n      ) &&\r\n      !valuesOf(spell.getCachedBaseActionEffects()).some((effect) =>\r\n        effect.tags?.includes?.(TransformationTags.TemporaryEffectMagnitude),\r\n      ) &&\r\n      !valuesOf(spell.getCachedBaseActionEffects()).some((effect) =>\r\n        effect.tags?.includes?.(TransformationTags.ChannelingEfficiency),\r\n      )\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    if (this.requiresSpellsWithCooldown() && spell.getBaseCooldown() <= 0) {\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      this.requiresSpellsWithTemporaryEffect() &&\r\n      !valuesOf(spell.getCachedBaseActionEffects()).some((effect) =>\r\n        effect.tags?.includes?.(TransformationTags.TemporaryEffectDuration),\r\n      )\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  canAfford(state: GameState): boolean {\r\n    return getTotalAmountOfItem(this.getBaseItem(), state) >= 1000;\r\n  }\r\n\r\n  getCachedBaseBonusEffects = memoize(() => {\r\n    const effects: Record<string, ActionEffect> = {};\r\n    if (this.getBaseWizardPowerMultiplier() != 0) {\r\n      effects.wizardPower = generateEffect(this.getBaseWizardPowerMultiplier());\r\n    }\r\n    if (this.getBasePowerMultiplier() != 0) {\r\n      effects.power = generateEffect(this.getBasePowerMultiplier());\r\n    }\r\n    if (this.getBaseCooldownMultiplier() != 0) {\r\n      effects.cooldown = generateEffect(this.getBaseCooldownMultiplier());\r\n    }\r\n    if (this.getBaseTemporaryEffectDurationMultiplier() != 0) {\r\n      effects.temporaryEffectDuration = generateEffect(\r\n        this.getBaseTemporaryEffectDurationMultiplier(),\r\n      );\r\n    }\r\n    if (this.getBaseManaCostMultiplier() != 0) {\r\n      effects.manaCost = generateEffect(this.getBaseManaCostMultiplier());\r\n    }\r\n\r\n    return effects;\r\n  });\r\n\r\n  getEffect(state: GameState): string {\r\n    const effects = this.getBonusEffects(state);\r\n    const effectExplanations = this.getBonusEffectExplanations(state);\r\n\r\n    const multipliers: Record<string, number> = {\r\n      wizardPower: generateSpellcraftMultiplier(\r\n        this.getBaseWizardPowerMultiplier(),\r\n        effects.wizardPower,\r\n      ),\r\n      power: generateSpellcraftMultiplier(\r\n        this.getBasePowerMultiplier(),\r\n        effects.power,\r\n      ),\r\n      cooldown: generateSpellcraftMultiplier(\r\n        this.getBaseCooldownMultiplier(),\r\n        effects.cooldown,\r\n      ),\r\n      temporaryEffectDuration: generateSpellcraftMultiplier(\r\n        this.getBaseTemporaryEffectDurationMultiplier(),\r\n        effects.temporaryEffectDuration,\r\n      ),\r\n      manaCost: generateSpellcraftMultiplier(\r\n        this.getBaseManaCostMultiplier(),\r\n        effects.manaCost,\r\n      ),\r\n    };\r\n\r\n    const bonusStrings = Object.keys(multipliers).map((stat) => {\r\n      let value = multipliers?.[stat];\r\n      if (value == 1.0) {\r\n        return null;\r\n      }\r\n      const explanation = effectExplanations?.[stat];\r\n      switch (stat) {\r\n        case \"wizardPower\":\r\n          return t(\"^{{value}}^<{{explanation}}> :wizardpower: cost\", {\r\n            value: formatMultiplier(value),\r\n            explanation,\r\n          });\r\n        case \"power\":\r\n          return t(\"^{{value}}^<{{explanation}}> spell power\", {\r\n            value: formatMultiplier(value),\r\n            explanation,\r\n          });\r\n        case \"cooldown\":\r\n          return t(\"^{{value}}^<{{explanation}}> spell cooldown\", {\r\n            value: formatMultiplier(value),\r\n            explanation,\r\n          });\r\n        case \"temporaryEffectDuration\":\r\n          return t(\"^{{value}}^<{{explanation}}> duration of spell effects\", {\r\n            value: formatMultiplier(value),\r\n            explanation,\r\n          });\r\n        case \"manaCost\":\r\n          return t(\"^{{value}}^<{{explanation}}> :mana: cost\", {\r\n            value: formatMultiplier(value),\r\n            explanation,\r\n          });\r\n      }\r\n    });\r\n\r\n    return bonusStrings\r\n      .filter((bonusString) => bonusString != null)\r\n      .join(t(\", \"));\r\n  }\r\n\r\n  getBonusEffect(state: GameState, effectId: string): number {\r\n    const baseEffects = this.getCachedBaseBonusEffects();\r\n    const baseEffect = baseEffects[effectId];\r\n    if (baseEffect == null) {\r\n      return 0.0;\r\n    }\r\n    return applyTransformationsCached(\r\n      this.getTagsByEffect(effectId, baseEffect),\r\n      state,\r\n      baseEffect.value,\r\n    );\r\n  }\r\n\r\n  getBonusEffects(state: GameState, amount?: number): Record<string, number> {\r\n    const baseEffects = this.getCachedBaseBonusEffects();\r\n    const finalEffects: Record<string, number> = {};\r\n    for (let key in baseEffects) {\r\n      finalEffects[key] = this.getBonusEffect(state, key);\r\n    }\r\n    return finalEffects;\r\n  }\r\n\r\n  bonusEffectExplanationParams = memoize((baseEffect: ActionEffect) => ({\r\n    valueType: baseEffect.valueType,\r\n    unit: baseEffect.unit,\r\n  }));\r\n\r\n  getBonusEffectExplanations(\r\n    state: GameState,\r\n    onlyId?: string,\r\n  ): Record<string, string> {\r\n    const baseEffects = this.getCachedBaseBonusEffects();\r\n    const finalEffects: Record<string, string> = {};\r\n    for (let key in baseEffects) {\r\n      if (onlyId != null && key != onlyId) {\r\n        continue;\r\n      }\r\n      const baseEffect = baseEffects[key];\r\n      finalEffects[key] = explainTransformationsText(\r\n        this.getTagsByEffect(key, baseEffect),\r\n        state,\r\n        baseEffect.value,\r\n        this.bonusEffectExplanationParams(baseEffect),\r\n      );\r\n    }\r\n    return finalEffects;\r\n  }\r\n}\r\n\r\nexport abstract class PrismBasedSpellcraft extends Spellcraft {\r\n  protected abstract getElement(): SpellElement;\r\n\r\n  getBaseItem(): Item {\r\n    return Items.getById(\"elementalPrism\" + this.getElement());\r\n  }\r\n\r\n  protected getBaseWizardPowerMultiplier(): number {\r\n    return 1.0;\r\n  }\r\n}\r\n\r\nexport abstract class JewelBasedSpellcraft extends Spellcraft {\r\n  protected abstract getElement(): SpellElement;\r\n\r\n  getBaseItem(): Item {\r\n    return Items.getById(\"elementalJewel\" + this.getElement());\r\n  }\r\n\r\n  protected getBaseWizardPowerMultiplier(): number {\r\n    return 2.0;\r\n  }\r\n}\r\n","import { DataStore } from \"../generic/DataStore\";\r\nimport { Spellcraft } from \"./Spellcraft\";\r\n\r\nexport const Spellcrafts = new DataStore<Spellcraft>();\r\n","import { t } from \"i18next\";\r\nimport { valuesOf } from \"../../utils/CoreUtils\";\r\nimport { Flag } from \"../Flag\";\r\nimport { hasEverHadFlag, hasFlag } from \"../Flags\";\r\nimport { GameState } from \"../GameState\";\r\nimport { Resource } from \"../Resources\";\r\nimport { clearAutocastCaches } from \"../autocast/Autocast\";\r\nimport {\r\n  addToInventory,\r\n  removeFromInventoryWithAnyParams,\r\n} from \"../items/Inventory\";\r\nimport { getAllKnownItemCompendiumInfos } from \"../items/ItemCompendium\";\r\nimport { getTransmutationSpellForItem } from \"../items/transmute/TransmutationSpell\";\r\nimport { getPrimaryElements } from \"../spells/Elements\";\r\nimport type { Spell } from \"../spells/Spell\";\r\nimport { Spells, clearAllSpellCaches } from \"../spells/Spells\";\r\nimport {\r\n  TransformationType,\r\n  registerTransformation,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { Spellcraft, generateSpellcraftMultiplier } from \"./Spellcraft\";\r\nimport { SpellcraftData } from \"./SpellcraftData\";\r\nimport { Spellcrafts } from \"./Spellcrafts\";\r\n\r\nexport const MAX_VATS_PER_SPELL = 2;\r\n\r\nexport function getSpellcraftVatsForSpell(\r\n  state: GameState,\r\n  spellId: string,\r\n): SpellcraftData[] {\r\n  return valuesOf(state.run.spellcrafts).filter(\r\n    (data) => data.spellId == spellId,\r\n  );\r\n}\r\n\r\nexport function canLoadMultipleVats(\r\n  state: GameState,\r\n  spellcraft: Spellcraft,\r\n): boolean {\r\n  const item = spellcraft.getBaseItem();\r\n  const transmutation = getTransmutationSpellForItem(item);\r\n  if (transmutation == null) {\r\n    return false;\r\n  }\r\n\r\n  const element = transmutation.getElement();\r\n  return getPrimaryElements(state).includes(element);\r\n}\r\n\r\nexport function getVisibleSpellcrafts(state: GameState): Spellcraft[] {\r\n  return Spellcrafts.getAll().filter((spellcraft) => {\r\n    const item = spellcraft.getBaseItem();\r\n    return getAllKnownItemCompendiumInfos(state).some(\r\n      (info) => info.item == item,\r\n    );\r\n  });\r\n}\r\n\r\nexport function getVisibleSpellcraftsForSpell(\r\n  state: GameState,\r\n  spell: Spell,\r\n): Spellcraft[] {\r\n  const spellcrafts = getVisibleSpellcrafts(state);\r\n  return spellcrafts.filter((spellcraft) =>\r\n    spellcraft.isSpellCompatible(spell),\r\n  );\r\n}\r\n\r\nexport function canApplySpellcraftToSpell(\r\n  state: GameState,\r\n  spellId: string,\r\n  spellcraft: Spellcraft,\r\n): boolean {\r\n  const allVats = valuesOf(state.run.spellcrafts);\r\n  const vats = getSpellcraftVatsForSpell(state, spellId).filter(\r\n    (vat) => vat.spellcraftId != null,\r\n  );\r\n\r\n  if (vats.length >= MAX_VATS_PER_SPELL) {\r\n    return false;\r\n  }\r\n\r\n  if (!canLoadMultipleVats(state, spellcraft)) {\r\n    // Check if any other vat is loaded with this spellcraft\r\n    for (let vat of allVats) {\r\n      if (vat.spellcraftId == spellcraft.getId()) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Check if the spell's vats already have this spellcraft\r\n  for (let vat of vats) {\r\n    if (vat.spellcraftId == spellcraft.getId()) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function assignSpellcraftToVat(\r\n  state: GameState,\r\n  vatId: string,\r\n  spellcraftId: string,\r\n): GameState {\r\n  const spellcraft = Spellcrafts.getById(spellcraftId);\r\n  const vat = state.run.spellcrafts[vatId];\r\n  if (vat.spellcraftId == spellcraftId) {\r\n    return state;\r\n  }\r\n\r\n  if (vat.spellId == null) {\r\n    // Do not assign\r\n    return state;\r\n  }\r\n  const spell = Spells.getById(vat.spellId);\r\n  if (!spellcraft.isSpellCompatible(spell)) {\r\n    // Do not assign\r\n    return state;\r\n  }\r\n\r\n  // Check if it can be applied\r\n  if (!canApplySpellcraftToSpell(state, vat.spellId, spellcraft)) {\r\n    return state;\r\n  }\r\n\r\n  // Check the cost\r\n  if (!spellcraft.canAfford(state)) {\r\n    return state;\r\n  }\r\n\r\n  if (vat.spellcraftId != null) {\r\n    // First, unassign the current one to recover the mats\r\n    state = removeSpellcraftFromVat(state, vatId);\r\n  }\r\n\r\n  // Pay the cost\r\n  state = removeFromInventoryWithAnyParams(\r\n    spellcraft.getBaseItem(),\r\n    1000,\r\n    state,\r\n  );\r\n\r\n  // Assign\r\n  vat.spellcraftId = spellcraftId;\r\n  state = clearAllSpellCaches(state);\r\n  state = clearAutocastCaches(state);\r\n  return state;\r\n}\r\n\r\nexport function removeSpellcraftFromVat(\r\n  state: GameState,\r\n  vatId: string,\r\n): GameState {\r\n  const vat = state.run.spellcrafts[vatId];\r\n  if (vat.spellId == null) {\r\n    // Do not do anything\r\n    return state;\r\n  }\r\n\r\n  // Refund the cost\r\n  const spellcraft = Spellcrafts.getByIdNullable(vat.spellcraftId);\r\n  if (spellcraft != null) {\r\n    state = addToInventory(\r\n      {\r\n        itemId: spellcraft.getBaseItem().getId(),\r\n        params: spellcraft.getBaseItem().getDefaultParams(),\r\n      },\r\n      1000,\r\n      state,\r\n    );\r\n  }\r\n\r\n  // Remove\r\n  vat.spellcraftId = undefined;\r\n  state = clearAllSpellCaches(state);\r\n  state = clearAutocastCaches(state);\r\n  return state;\r\n}\r\n\r\nexport function assignSpellToVat(\r\n  state: GameState,\r\n  vatId: string,\r\n  spellId: string,\r\n): GameState {\r\n  if (state.run.spellcrafts[vatId].spellcraftId != null) {\r\n    const spellcraft = Spellcrafts.getById(\r\n      state.run.spellcrafts[vatId].spellcraftId,\r\n    );\r\n    if (\r\n      !spellcraft.isSpellCompatible(Spells.getById(spellId)) ||\r\n      !canApplySpellcraftToSpell(state, spellId, spellcraft)\r\n    ) {\r\n      state = removeSpellcraftFromVat(state, vatId);\r\n    }\r\n  }\r\n  state.run.spellcrafts[vatId].spellId = spellId;\r\n  state = clearAllSpellCaches(state);\r\n  state = clearAutocastCaches(state);\r\n  return state;\r\n}\r\n\r\nexport function createNewVat(state: GameState): GameState {\r\n  const newId = Math.random().toString();\r\n  state.run.spellcrafts[newId] = {\r\n    spellcraftId: undefined,\r\n    spellId: undefined,\r\n    vatId: newId,\r\n  };\r\n  return state;\r\n}\r\n\r\nexport function destroyVat(state: GameState, vatId: string): GameState {\r\n  if (state.run.spellcrafts[vatId] == null) {\r\n    return state;\r\n  }\r\n\r\n  if (state.run.spellcrafts[vatId].spellcraftId != null) {\r\n    state = removeSpellcraftFromVat(state, vatId);\r\n  }\r\n\r\n  delete state.run.spellcrafts[vatId];\r\n  return state;\r\n}\r\n\r\nexport function getSpellcraftVats(state: GameState): SpellcraftData[] {\r\n  return valuesOf(state.run.spellcrafts);\r\n}\r\n\r\nexport function isSpellcraftUnlocked(state: GameState): boolean {\r\n  return hasFlag(state, Flag.SpellcraftUnlocked);\r\n}\r\n\r\nexport function isSpellcraftEverUnlocked(state: GameState): boolean {\r\n  return hasEverHadFlag(state, Flag.SpellcraftUnlocked);\r\n}\r\n\r\nfunction spellcraftTransform(\r\n  effectId: string,\r\n  state: GameState,\r\n  params: Record<string, any>,\r\n) {\r\n  const spellId = params?.action?.getId?.();\r\n  if (spellId == null) {\r\n    return 1.0;\r\n  }\r\n\r\n  const spellcrafts = getSpellcraftVatsForSpell(state, spellId);\r\n  return spellcrafts.reduce((prev, current) => {\r\n    const spellcraft = Spellcrafts.getByIdNullable(current.spellcraftId);\r\n    return (\r\n      prev *\r\n      generateSpellcraftMultiplier(\r\n        spellcraft?.getBaseMultipliers?.()?.[effectId] ?? 0,\r\n        spellcraft?.getBonusEffect?.(state, effectId) ?? 0,\r\n      )\r\n    );\r\n  }, 1.0);\r\n}\r\n\r\nexport function loadGenericSpellcraftTransformations() {\r\n  registerTransformation(\r\n    [[TransformationTags.Spell, TransformationTags.AutocastPointsConsumption]],\r\n    \"spellcraftWizardPower\",\r\n    t(\"Spellcraft\"),\r\n    TransformationType.Multiplier,\r\n    spellcraftTransform.bind(null, \"wizardPower\"),\r\n  );\r\n\r\n  registerTransformation(\r\n    [\r\n      [\r\n        TransformationTags.Spell,\r\n        TransformationTags.ActionEffect,\r\n        TransformationTags.ActionMagnitude,\r\n      ],\r\n      [\r\n        TransformationTags.Spell,\r\n        TransformationTags.ActionEffect,\r\n        TransformationTags.TemporaryEffectMagnitude,\r\n      ],\r\n      [\r\n        TransformationTags.Spell,\r\n        TransformationTags.ActionEffect,\r\n        TransformationTags.ChannelingEfficiency,\r\n      ],\r\n    ],\r\n    \"spellcraftPower\",\r\n    t(\"Spellcraft\"),\r\n    TransformationType.Multiplier,\r\n    spellcraftTransform.bind(null, \"power\"),\r\n  );\r\n\r\n  registerTransformation(\r\n    [[TransformationTags.Spell, TransformationTags.SpellCooldown]],\r\n    \"spellcraftCooldown\",\r\n    t(\"Spellcraft\"),\r\n    TransformationType.Multiplier,\r\n    spellcraftTransform.bind(null, \"cooldown\"),\r\n  );\r\n\r\n  registerTransformation(\r\n    [\r\n      [\r\n        TransformationTags.Spell,\r\n        TransformationTags.ActionEffect,\r\n        TransformationTags.TemporaryEffectDuration,\r\n      ],\r\n    ],\r\n    \"spellcraftTemporaryEffectDuration\",\r\n    t(\"Spellcraft\"),\r\n    TransformationType.Multiplier,\r\n    spellcraftTransform.bind(null, \"temporaryEffectDuration\"),\r\n  );\r\n\r\n  registerTransformation(\r\n    [[TransformationTags.Spell, TransformationTags.Cost, Resource.Mana]],\r\n    \"spellcraftManaCost\",\r\n    t(\"Spellcraft\"),\r\n    TransformationType.Multiplier,\r\n    spellcraftTransform.bind(null, \"manaCost\"),\r\n  );\r\n}\r\n","import { DataStore } from \"../generic/DataStore\";\r\nimport { SynchroBonus } from \"./SynchroBonus\";\r\n\r\nexport const SynchroBonuses = new DataStore<SynchroBonus>();\r\n","import memoize from \"sonic-memoize\";\r\nimport { clone, valuesOfCached } from \"../../utils/CoreUtils\";\r\nimport { Flag } from \"../Flag\";\r\nimport { hasFlag, setWorldFlag } from \"../Flags\";\r\nimport {\r\n  GameState,\r\n  GameStateTransform,\r\n  SYNCHRO_INITIAL_STATE,\r\n  SynchroStrategyState,\r\n} from \"../GameState\";\r\nimport { DataStore } from \"../generic/DataStore\";\r\nimport { SpellElement, getFullyUnlockedElements } from \"../spells/Elements\";\r\nimport { applyTransformations } from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { SynchroBonus } from \"./SynchroBonus\";\r\nimport { SynchroBonuses } from \"./SynchroBonuses\";\r\n\r\nexport const SYNCHRO_ROWS = 3;\r\nexport const SYNCHRO_COLS = 3;\r\n\r\nexport const SYNCHRO_GRID_AMOUNT = 8;\r\n\r\nexport function isSynchroUnlocked(state: GameState) {\r\n  return hasFlag(state, Flag.SynchroUnlocked);\r\n}\r\n\r\nexport function getCurrentSynchroStrategy(\r\n  state: GameState,\r\n): SynchroStrategyState {\r\n  const position = state.world.synchro.currentGrid;\r\n  let grid = state.world.synchro.grids[position];\r\n  if (grid == null) {\r\n    grid = clone(SYNCHRO_INITIAL_STATE);\r\n    state.world.synchro.grids[position] = grid;\r\n  }\r\n  return grid;\r\n}\r\n\r\nexport function setCurrentSynchroGrid(\r\n  state: GameState,\r\n  gridIndex: number,\r\n): GameState {\r\n  if (gridIndex < 0 || gridIndex >= SYNCHRO_GRID_AMOUNT) {\r\n    return state;\r\n  }\r\n  state.world.synchro.currentGrid = gridIndex;\r\n  for (let listener of SynchroChangeListeners.getAll()) {\r\n    state = listener(state);\r\n  }\r\n  return state;\r\n}\r\n\r\nexport function getSynchroPosition(\r\n  state: GameState,\r\n  x: number,\r\n  y: number,\r\n  strategy?: SynchroStrategyState,\r\n): SpellElement | undefined {\r\n  if (x < 0 || y < 0 || x >= SYNCHRO_COLS || y >= SYNCHRO_ROWS) {\r\n    return undefined;\r\n  }\r\n  strategy = strategy ?? getCurrentSynchroStrategy(state);\r\n  return strategy.grid[y]?.[x];\r\n}\r\n\r\nexport const SynchroChangeListeners = new DataStore<GameStateTransform>();\r\n\r\nexport function setCurrentSynchroPosition(\r\n  state: GameState,\r\n  x: number,\r\n  y: number,\r\n  element: SpellElement | undefined,\r\n): GameState {\r\n  if (x < 0 || y < 0 || x >= SYNCHRO_COLS || y >= SYNCHRO_ROWS) {\r\n    return state;\r\n  }\r\n  if (element != null) {\r\n    const used = getTotalOccurrencesInSynchroGrid(state, element);\r\n    const max = calculateMaxOccurrencesInSynchroGrid(state, element);\r\n    if (used >= max) {\r\n      return state;\r\n    }\r\n  }\r\n  const strategy = getCurrentSynchroStrategy(state);\r\n  if (strategy.grid[y] == null) {\r\n    strategy.grid[y] = {};\r\n  }\r\n  strategy.grid[y][x] = element;\r\n  state = setWorldFlag(Flag.EverUsedSynchro)(state);\r\n  for (let listener of SynchroChangeListeners.getAll()) {\r\n    state = listener(state);\r\n  }\r\n  return state;\r\n}\r\n\r\nexport function getCurrentSynchroBonuses(\r\n  state: GameState,\r\n  element1: SpellElement,\r\n  element2: SpellElement,\r\n): number {\r\n  // If the elements are the same, then only check right and down\r\n  // to avoid double counting\r\n  const offsetsToCheck =\r\n    element1 == element2\r\n      ? [\r\n          [1, 0],\r\n          [0, 1],\r\n        ]\r\n      : [\r\n          [-1, 0],\r\n          [0, -1],\r\n          [1, 0],\r\n          [0, 1],\r\n        ];\r\n  let bonusCount = 0;\r\n  for (let x = 0; x < 3; x++) {\r\n    for (let y = 0; y < 3; y++) {\r\n      if (getSynchroPosition(state, x, y) == element1) {\r\n        for (let offsets of offsetsToCheck) {\r\n          if (\r\n            getSynchroPosition(state, x + offsets[0], y + offsets[1]) ==\r\n            element2\r\n          ) {\r\n            bonusCount++;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return bonusCount;\r\n}\r\n\r\nexport function getSortedSynchroBonuses(\r\n  state: GameState,\r\n): { bonus: SynchroBonus; amount: number }[] {\r\n  const allBonuses = SynchroBonuses.getAll();\r\n  let bonusesToConsider = [];\r\n  const fullyUnlockedElements = getFullyUnlockedElements(state);\r\n  for (let bonus of allBonuses) {\r\n    const amount = bonus.getCurrentBonusAmount(state);\r\n    if (\r\n      fullyUnlockedElements.includes(bonus.getElement1()) &&\r\n      fullyUnlockedElements.includes(bonus.getElement2())\r\n    )\r\n      bonusesToConsider.push({ bonus, amount });\r\n  }\r\n  bonusesToConsider.sort((a, b) => {\r\n    if (a.amount != b.amount) {\r\n      return b.amount - a.amount;\r\n    }\r\n    if (a.bonus.getElement1() != b.bonus.getElement1()) {\r\n      return (\r\n        valuesOfCached(SpellElement).indexOf(a.bonus.getElement1()) -\r\n        valuesOfCached(SpellElement).indexOf(b.bonus.getElement1())\r\n      );\r\n    }\r\n    return (\r\n      valuesOfCached(SpellElement).indexOf(a.bonus.getElement2()) -\r\n      valuesOfCached(SpellElement).indexOf(b.bonus.getElement2())\r\n    );\r\n  });\r\n  return bonusesToConsider;\r\n}\r\n\r\nexport function getTotalOccurrencesInSynchroGrid(\r\n  state: GameState,\r\n  element: SpellElement,\r\n): number {\r\n  let count = 0;\r\n  const current = getCurrentSynchroStrategy(state);\r\n  for (let x in current.grid) {\r\n    for (let y in current.grid?.[x] ?? []) {\r\n      count += current.grid?.[x]?.[y] == element ? 1 : 0;\r\n    }\r\n  }\r\n  return count;\r\n}\r\n\r\nexport function calculateMaxOccurrencesInSynchroGrid(\r\n  state: GameState,\r\n  element: SpellElement,\r\n): number {\r\n  return applyTransformations(\r\n    [element, TransformationTags.SynchroGridMax],\r\n    state,\r\n    2,\r\n  );\r\n}\r\n\r\nfunction findSynchroBonusForElementsUncached(\r\n  element1: SpellElement,\r\n  element2: SpellElement,\r\n): SynchroBonus | undefined {\r\n  return SynchroBonuses.getAll().find(\r\n    (bonus) =>\r\n      (bonus.getElement1() == element1 && bonus.getElement2() == element2) ||\r\n      (bonus.getElement1() == element2 && bonus.getElement2() == element1),\r\n  );\r\n}\r\n\r\nexport const findSynchroBonusForElements = memoize(\r\n  findSynchroBonusForElementsUncached,\r\n);\r\n\r\nexport function hasNegativeSynchroBonusOnTile(\r\n  state: GameState,\r\n  x: number,\r\n  y: number,\r\n): boolean {\r\n  const offsetsToCheck = [\r\n    [-1, 0],\r\n    [0, -1],\r\n    [1, 0],\r\n    [0, 1],\r\n  ];\r\n\r\n  const currentElement = getSynchroPosition(state, x, y);\r\n  if (currentElement == null) {\r\n    return false;\r\n  }\r\n\r\n  for (let offsets of offsetsToCheck) {\r\n    const otherElement = getSynchroPosition(\r\n      state,\r\n      x + offsets[0],\r\n      y + offsets[1],\r\n    );\r\n    if (otherElement != null) {\r\n      const bonus = findSynchroBonusForElements(currentElement, otherElement);\r\n      if (bonus != null && !bonus.isBeneficial()) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n","import color from \"color\";\r\nimport React, { useEffect, useMemo, useRef } from \"react\";\r\nimport { Platform, StyleSheet, useWindowDimensions } from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { MD3Theme } from \"react-native-paper/lib/typescript/src/types\";\r\nimport memoize from \"sonic-memoize\";\r\nimport { getThemeByElementAndDarkMode } from \"../../Themes\";\r\nimport { cacheBySecondsPlayed } from \"../../backend/Caching\";\r\nimport { GameState } from \"../../backend/GameState\";\r\nimport { getUnreadNotificationsByGroup } from \"../../backend/Notifications\";\r\nimport { isRetirementUnlocked } from \"../../backend/Retire\";\r\nimport {\r\n  estimateManaConsumptionPerSecPermaCast,\r\n  estimateWizardPowerConsumptionPerSecPermaCast,\r\n  getAutocastPointIncomePerSecPerWizard,\r\n  getCurrentAutocastStrategy,\r\n  isAutocastUnlocked,\r\n} from \"../../backend/autocast/Autocast\";\r\nimport { isBoostingUnlocked } from \"../../backend/boost/BoostActionBase\";\r\nimport { getEndingData } from \"../../backend/ending/Endings\";\r\nimport { isEnhancementUnlocked } from \"../../backend/enhancement/Enhancements\";\r\nimport { isExplorationUnlocked } from \"../../backend/exploration/Exploration\";\r\nimport { isBestiaryUnlocked } from \"../../backend/exploration/enemies/Enemy\";\r\nimport { areFamiliarsUnlocked } from \"../../backend/familiars/Familiar\";\r\nimport { isTransmutationUnlocked } from \"../../backend/items/transmute/TransmutationSpell\";\r\nimport { areRitualsUnlocked } from \"../../backend/rituals/Rituals\";\r\nimport { isSpellcraftUnlocked } from \"../../backend/spellcraft/SpellcraftUtils\";\r\nimport { SpellElement } from \"../../backend/spells/Elements\";\r\nimport { isStudyUnlocked } from \"../../backend/study/Study\";\r\nimport { isSynchroUnlocked } from \"../../backend/synchro/Synchro\";\r\nimport { calculateIncomePerSecond } from \"../../backend/timetick/IncomeOverTime\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { Markdown } from \"./Markdown\";\r\nimport { useGameState } from \"./useGameState\";\r\n\r\nconst disabledColorByThemeMemoized = memoize(\r\n  (themeMode: string, disabledColor?: string) => {\r\n    return themeMode === \"dark\"\r\n      ? color(disabledColor)?.lighten(1.2).string()\r\n      : color(disabledColor)?.darken(0.3).string();\r\n  },\r\n);\r\n\r\nexport function disabledColorByTheme(theme: MD3Theme) {\r\n  return disabledColorByThemeMemoized(\r\n    theme.dark ? \"dark\" : \"light\",\r\n    theme.colors.onSurfaceDisabled,\r\n  );\r\n}\r\n\r\nexport function showImportFromFile(): boolean {\r\n  return Platform.select({\r\n    ios: true,\r\n    android: true,\r\n    default: false,\r\n  });\r\n}\r\n\r\nexport function showExportToFile(): boolean {\r\n  return Platform.select({\r\n    ios: true,\r\n    android: true,\r\n    web: true,\r\n    default: false,\r\n  });\r\n}\r\n\r\nexport function elementColorByTheme(isDark: boolean, element: SpellElement) {\r\n  const theme = getThemeByElementAndDarkMode(element, isDark);\r\n  return isDark ? theme.colors.primaryContainer : theme.colors.primary;\r\n}\r\n\r\nexport function getPrimaryButtonTextColor(\r\n  theme: MD3Theme,\r\n  disabled: boolean,\r\n): string {\r\n  if (disabled) {\r\n    return theme.colors.onSurfaceDisabled;\r\n  }\r\n  return theme.colors.onPrimary;\r\n}\r\n\r\nexport function DescriptionViewer(props: any) {\r\n  const theme = useTheme();\r\n  const style = useMemo(\r\n    () => [{ color: theme.colors.onBackground }, props.style || {}],\r\n    [theme, props.style],\r\n  );\r\n  return <Markdown style={style}>{props.children}</Markdown>;\r\n}\r\n\r\nexport function EffectViewer(props: any) {\r\n  const theme = useTheme();\r\n  const style = useMemo(\r\n    () => [\r\n      styles.effectText,\r\n      { color: theme.colors.onBackground },\r\n      props.style || {},\r\n    ],\r\n    [theme, props.style],\r\n  );\r\n  return <Markdown style={style}>{props.children}</Markdown>;\r\n}\r\n\r\nexport type SectionData = {\r\n  id: string;\r\n  name: string;\r\n  scrollable: boolean;\r\n  hideBottomResourceBar: boolean;\r\n  scrollView: boolean;\r\n  keepInMemory: boolean;\r\n  hotkey?: string;\r\n  isVisible?: (state: GameState) => boolean;\r\n  isBadged?: (state: GameState) => boolean;\r\n  fullScreen?: boolean;\r\n};\r\n\r\nexport const getAllSections = memoize(() => {\r\n  return [\r\n    {\r\n      id: \"Home\",\r\n      name: t(\"Home\"),\r\n      scrollable: true,\r\n      hideBottomResourceBar: false,\r\n      scrollView: false,\r\n      keepInMemory: true,\r\n      hotkey: \"H\",\r\n    },\r\n    {\r\n      id: \"Study\",\r\n      name: t(\"Study\"),\r\n      scrollable: true,\r\n      hideBottomResourceBar: false,\r\n      scrollView: true,\r\n      keepInMemory: true,\r\n      hotkey: \"S\",\r\n      isVisible: (state) => isStudyUnlocked(state),\r\n    },\r\n    {\r\n      id: \"Inventory\",\r\n      name: t(\"Inventory\"),\r\n      scrollable: true,\r\n      hideBottomResourceBar: false,\r\n      scrollView: true,\r\n      keepInMemory: true,\r\n      hotkey: \"I\",\r\n      isVisible: (state) =>\r\n        isTransmutationUnlocked(state) || state.run.inventory.length > 0,\r\n    },\r\n    {\r\n      id: \"Transmute\",\r\n      name: t(\"Transmute\"),\r\n      scrollable: true,\r\n      hideBottomResourceBar: false,\r\n      scrollView: true,\r\n      keepInMemory: true,\r\n      hotkey: \"T\",\r\n      isVisible: (state) => isTransmutationUnlocked(state),\r\n    },\r\n    {\r\n      id: \"Wizards\",\r\n      name: t(\"Wizards\"),\r\n      scrollable: true,\r\n      hideBottomResourceBar: true,\r\n      scrollView: false,\r\n      keepInMemory: true,\r\n      hotkey: \"W\",\r\n      isVisible: (state) => isAutocastUnlocked(state),\r\n      isBadged: (state) => {\r\n        return cacheBySecondsPlayed(state, \"isWizardsBadged\", (state) => {\r\n          if (state.run.autocast.autocastPaused) {\r\n            return true;\r\n          }\r\n          const strategy = getCurrentAutocastStrategy(state);\r\n          if (\r\n            estimateWizardPowerConsumptionPerSecPermaCast(state, strategy) >\r\n            getAutocastPointIncomePerSecPerWizard(state) *\r\n              strategy.wizardsAssignedToPermaCast\r\n          ) {\r\n            return true;\r\n          }\r\n          if (\r\n            estimateManaConsumptionPerSecPermaCast(state, strategy) >\r\n            (calculateIncomePerSecond(state)?.Mana ?? 0)\r\n          ) {\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n      },\r\n    },\r\n    {\r\n      id: \"Exploration\",\r\n      name: t(\"Exploration\"),\r\n      scrollable: false,\r\n      hideBottomResourceBar: true,\r\n      scrollView: false,\r\n      keepInMemory: true,\r\n      hotkey: \"E\",\r\n      isVisible: (state) => isExplorationUnlocked(state),\r\n    },\r\n    {\r\n      id: \"Enhance\",\r\n      name: t(\"Enhance\"),\r\n      scrollable: true,\r\n      hideBottomResourceBar: false,\r\n      scrollView: true,\r\n      keepInMemory: true,\r\n      hotkey: \"N\",\r\n      isVisible: (state) => isEnhancementUnlocked(state),\r\n    },\r\n    {\r\n      id: \"Synchro\",\r\n      name: t(\"Synchro\"),\r\n      scrollable: false,\r\n      hideBottomResourceBar: true,\r\n      scrollView: false,\r\n      keepInMemory: true,\r\n      hotkey: \"Y\",\r\n      isVisible: (state) => isSynchroUnlocked(state),\r\n    },\r\n    {\r\n      id: \"Boosts\",\r\n      name: t(\"Boost\"),\r\n      scrollable: true,\r\n      hideBottomResourceBar: false,\r\n      scrollView: true,\r\n      keepInMemory: true,\r\n      hotkey: \"B\",\r\n      isVisible: (state) => isBoostingUnlocked(state),\r\n    },\r\n    {\r\n      id: \"Familiars\",\r\n      name: t(\"Familiars\"),\r\n      scrollable: true,\r\n      hideBottomResourceBar: false,\r\n      scrollView: true,\r\n      keepInMemory: true,\r\n      hotkey: \"F\",\r\n      isVisible: (state) => areFamiliarsUnlocked(state),\r\n    },\r\n    {\r\n      id: \"Spellcraft\",\r\n      name: t(\"Spellcraft\"),\r\n      scrollable: true,\r\n      hideBottomResourceBar: false,\r\n      scrollView: true,\r\n      keepInMemory: true,\r\n      hotkey: \"P\",\r\n      isVisible: (state) => isSpellcraftUnlocked(state),\r\n    },\r\n    {\r\n      id: \"Rituals\",\r\n      name: t(\"Rituals\"),\r\n      scrollable: true,\r\n      hideBottomResourceBar: false,\r\n      scrollView: true,\r\n      keepInMemory: true,\r\n      hotkey: \"R\",\r\n      isVisible: (state) => areRitualsUnlocked(state),\r\n    },\r\n    {\r\n      id: \"Ending\",\r\n      name: t(\"Ending\"),\r\n      scrollable: true,\r\n      hideBottomResourceBar: false,\r\n      scrollView: true,\r\n      keepInMemory: true,\r\n      isVisible: (state) => getEndingData(state) != null,\r\n      fullScreen: true,\r\n    },\r\n    {\r\n      id: \"Retirement\",\r\n      name: t(\"Retirement\"),\r\n      scrollable: true,\r\n      hideBottomResourceBar: false,\r\n      scrollView: true,\r\n      keepInMemory: true,\r\n      isVisible: (state) => isRetirementUnlocked(state),\r\n    },\r\n    {\r\n      id: \"Worlds\",\r\n      name: t(\"Worlds\"),\r\n      scrollable: true,\r\n      hideBottomResourceBar: false,\r\n      scrollView: true,\r\n      keepInMemory: true,\r\n      isVisible: (state) => state.global.newGamePlusUnlocked,\r\n    },\r\n    {\r\n      id: \"Compendium\",\r\n      name: t(\"Compendium\"),\r\n      scrollable: true,\r\n      hideBottomResourceBar: true,\r\n      scrollView: true,\r\n      keepInMemory: true,\r\n      isVisible: (state) => isBestiaryUnlocked(state),\r\n    },\r\n    {\r\n      id: \"Stats\",\r\n      name: t(\"Stats\"),\r\n      scrollable: true,\r\n      hideBottomResourceBar: true,\r\n      scrollView: true,\r\n      keepInMemory: true,\r\n    },\r\n    {\r\n      id: \"Options\",\r\n      name: t(\"Options\"),\r\n      scrollable: true,\r\n      hideBottomResourceBar: true,\r\n      scrollView: true,\r\n      keepInMemory: false,\r\n    },\r\n    {\r\n      id: \"Help\",\r\n      name: t(\"Help\"),\r\n      scrollable: true,\r\n      hideBottomResourceBar: true,\r\n      scrollView: true,\r\n      keepInMemory: false,\r\n      isBadged: (state) =>\r\n        getUnreadNotificationsByGroup(state, \"Help\").length > 0,\r\n    },\r\n    {\r\n      id: \"About\",\r\n      name: t(\"About\"),\r\n      scrollable: true,\r\n      hideBottomResourceBar: true,\r\n      keepInMemory: false,\r\n      scrollView: true,\r\n    },\r\n    {\r\n      id: \"Debug\",\r\n      name: \"Debug\",\r\n      scrollable: true,\r\n      hideBottomResourceBar: true,\r\n      scrollView: true,\r\n      keepInMemory: false,\r\n      isVisible: (state) => false, //Constants?.expoConfig?.extra?.showDebug,\r\n    },\r\n  ];\r\n});\r\n\r\nexport const DEFAULT_SECTION_ORDER = getAllSections().map(\r\n  (sectionData) => sectionData.id,\r\n);\r\n\r\nexport function getAllMenuItems(state: GameState): string[] {\r\n  return getAllSections()\r\n    .filter((section) => section.isVisible == null || section.isVisible(state))\r\n    .map((section) => section.id) as string[];\r\n}\r\n\r\nexport function getSectionInfo(section: string): SectionData {\r\n  return getAllSections().find((sectionInfo) => sectionInfo.id == section);\r\n}\r\n\r\nexport function useHorizontalScrollRef() {\r\n  const elRef = useRef<any>();\r\n  useEffect(() => {\r\n    if (Platform.OS !== \"web\") {\r\n      return;\r\n    }\r\n    const el = elRef.current;\r\n    if (el) {\r\n      const onWheel = (e: any) => {\r\n        if (e.deltaY === 0) return;\r\n        const scrollableElement = el.getScrollableNode();\r\n        if (\r\n          !(scrollableElement.scrollLeft === 0 && e.deltaY < 0) &&\r\n          !(\r\n            scrollableElement.scrollWidth -\r\n              scrollableElement.clientWidth -\r\n              Math.round(scrollableElement.scrollLeft) ===\r\n              0 && e.deltaY > 0\r\n          )\r\n        ) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n        }\r\n        scrollableElement.scrollBy({ left: e.deltaY, behavior: \"smooth\" });\r\n      };\r\n      el.getScrollableNode().addEventListener(\"wheel\", onWheel);\r\n      return () =>\r\n        el.getScrollableNode()?.removeEventListener?.(\"wheel\", onWheel);\r\n    }\r\n  }, []);\r\n  return elRef;\r\n}\r\n\r\nexport const MAX_OPEN_TABS = 5;\r\n\r\nexport function useLayoutType() {\r\n  const { width, height } = useWindowDimensions();\r\n  const state = useGameState();\r\n  return getLayoutType(state, height, width);\r\n}\r\n\r\nexport function getLayoutType(state: GameState, height: number, width: number) {\r\n  if (width < 700) {\r\n    return {\r\n      wideLayout: false,\r\n      showMenu: false,\r\n      showSpellMenu: false,\r\n      showEventsMenu: false,\r\n      activeContentTabs: 1,\r\n    };\r\n  }\r\n  if (width < 1000) {\r\n    return {\r\n      wideLayout: true,\r\n      showMenu: true,\r\n      showSpellMenu: false,\r\n      showEventsMenu: false,\r\n      activeContentTabs: 1,\r\n    };\r\n  }\r\n  if (width < 1350) {\r\n    return {\r\n      wideLayout: true,\r\n      showMenu: true,\r\n      showSpellMenu: true,\r\n      showEventsMenu: false,\r\n      activeContentTabs: 1,\r\n    };\r\n  }\r\n  return {\r\n    wideLayout: true,\r\n    showMenu: true,\r\n    showSpellMenu: true,\r\n    showEventsMenu: !state?.options?.doNotShowEventsOnWideScreens,\r\n    activeContentTabs: Math.min(\r\n      MAX_OPEN_TABS,\r\n      Math.max(\r\n        1,\r\n        Math.floor(\r\n          (width -\r\n            300 *\r\n              (2 + (state?.options?.doNotShowEventsOnWideScreens ? 0 : 1))) /\r\n            480,\r\n        ),\r\n      ),\r\n    ),\r\n  };\r\n}\r\n\r\nexport function getInitialActiveSectionObjects(\r\n  state: GameState,\r\n): { section: string; key: number }[] {\r\n  const tabCount = MAX_OPEN_TABS;\r\n  const menuItems = getAllMenuItems(state);\r\n  return menuItems\r\n    .slice(0, tabCount)\r\n    .map((menuItem, idx) => ({ section: menuItem, key: idx }));\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  effectText: {\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n","import React from \"react\";\r\n\r\nexport type TooltipPosition = {\r\n  top?: number;\r\n  bottom?: number;\r\n  left?: number;\r\n  right?: number;\r\n  containerWidth: number;\r\n};\r\n\r\nexport type TooltipContent = React.ReactNode | undefined;\r\n\r\nexport type TooltipContextValue = {\r\n  tooltip: TooltipContent;\r\n  position: TooltipPosition;\r\n};\r\n\r\nexport type TooltipControlContextValue = {\r\n  setTooltip: (\r\n    id: string,\r\n    tooltip: TooltipContent,\r\n    position: TooltipPosition,\r\n    measurementId?: number,\r\n  ) => void;\r\n  clearTooltip: (id: string) => void;\r\n  onMouseLeave: (id: string) => void;\r\n  onMouseEnter: (id: string, measurementId: number) => void;\r\n  onUnmountTooltip: (id: string) => void;\r\n};\r\n\r\nexport const TooltipContext = React.createContext<TooltipContextValue>({\r\n  tooltip: undefined,\r\n  position: { containerWidth: 1 },\r\n});\r\n\r\nexport const EMPTY_TOOLTIP_CONTEXT = {\r\n  tooltip: undefined,\r\n  position: { containerWidth: 1 },\r\n};\r\n\r\nexport const TooltipControlContext =\r\n  React.createContext<TooltipControlContextValue>({\r\n    setTooltip: (\r\n      id: string,\r\n      tooltip: TooltipContent,\r\n      position: TooltipPosition,\r\n    ) => {},\r\n    clearTooltip: (id: string) => {},\r\n    onMouseLeave: (id: string) => {},\r\n    onMouseEnter: (id: string, measurementId: number) => {},\r\n    onUnmountTooltip: (id: string) => {},\r\n  });\r\n","import React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n} from \"react\";\r\nimport { StyleSheet, useWindowDimensions, View } from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { useLayoutType } from \"./Miscellaneous\";\r\nimport {\r\n  TooltipContent,\r\n  TooltipContext,\r\n  TooltipControlContext,\r\n} from \"./TooltipContext\";\r\nimport { VisibilityContext } from \"./VisibilityContext\";\r\n\r\nexport const TooltipDisplay = () => {\r\n  const tooltipContext = useContext(TooltipContext);\r\n  const theme = useTheme();\r\n  const windowDimensions = useWindowDimensions();\r\n  const layout = useLayoutType();\r\n  return useMemo(() => {\r\n    return (\r\n      <View\r\n        style={{\r\n          zIndex: 800,\r\n          display:\r\n            tooltipContext.tooltip != null && layout.showSpellMenu\r\n              ? undefined\r\n              : \"none\",\r\n          position: \"absolute\",\r\n          left: tooltipContext.position?.left,\r\n          top: tooltipContext.position?.top,\r\n          bottom: tooltipContext.position?.bottom,\r\n          right: tooltipContext.position?.right,\r\n          minWidth: tooltipContext.position.containerWidth,\r\n          alignItems: \"center\",\r\n        }}\r\n        pointerEvents=\"none\"\r\n      >\r\n        <View\r\n          style={{\r\n            padding: 8,\r\n            alignSelf: \"center\",\r\n            backgroundColor: theme.colors.background,\r\n            borderRadius: 4,\r\n            borderWidth: 1,\r\n            borderColor: theme.colors.outlineVariant,\r\n            maxWidth: Math.min(\r\n              windowDimensions.width - (tooltipContext.position?.left ?? 0),\r\n              tooltipContext.position?.right ?? windowDimensions.width,\r\n              windowDimensions.width / 3,\r\n              480,\r\n            ),\r\n          }}\r\n          pointerEvents=\"none\"\r\n        >\r\n          {tooltipContext.tooltip}\r\n        </View>\r\n      </View>\r\n    );\r\n  }, [\r\n    tooltipContext.tooltip,\r\n    JSON.stringify(tooltipContext.position),\r\n    theme,\r\n    windowDimensions.width,\r\n    layout.showSpellMenu,\r\n  ]);\r\n};\r\n\r\nexport enum TooltipPositionType {\r\n  DEFAULT = \"DEFAULT\",\r\n  LEFT_OF_ELEMENT = \"LEFT_OF_ELEMENT\",\r\n  RIGHT_OF_ELEMENT = \"RIGHT_OF_ELEMENT\",\r\n}\r\n\r\nexport const TooltipWrapper = (props: {\r\n  children: any;\r\n  tooltip: TooltipContent;\r\n  tooltipId: string;\r\n  tooltipPosition?: TooltipPositionType;\r\n  containerStyle?: any;\r\n}) => {\r\n  const tooltipPositionType =\r\n    props.tooltipPosition ?? TooltipPositionType.DEFAULT;\r\n  const tooltipContext = useContext(TooltipControlContext);\r\n  const visible = useContext(VisibilityContext);\r\n\r\n  const screenDimensions = useWindowDimensions();\r\n\r\n  const wrapperRef = useRef<View | null>(null);\r\n\r\n  const measureAndSetTooltip = useCallback(\r\n    (measurementId?: number) => {\r\n      wrapperRef.current?.measure((x, y, width, height, pageX, pageY) => {\r\n        switch (tooltipPositionType) {\r\n          case TooltipPositionType.DEFAULT:\r\n            if (pageY > screenDimensions.height / 2) {\r\n              tooltipContext.setTooltip(\r\n                props.tooltipId,\r\n                props.tooltip,\r\n                {\r\n                  left: pageX,\r\n                  containerWidth: width,\r\n                  bottom: screenDimensions.height - pageY + 4,\r\n                },\r\n                measurementId,\r\n              );\r\n            } else {\r\n              tooltipContext.setTooltip(\r\n                props.tooltipId,\r\n                props.tooltip,\r\n                {\r\n                  top: pageY + height + 4,\r\n                  left: pageX,\r\n                  containerWidth: width,\r\n                },\r\n                measurementId,\r\n              );\r\n            }\r\n            break;\r\n          case TooltipPositionType.RIGHT_OF_ELEMENT:\r\n            if (pageY > screenDimensions.height / 2) {\r\n              tooltipContext.setTooltip(\r\n                props.tooltipId,\r\n                props.tooltip,\r\n                {\r\n                  left: Math.min(\r\n                    pageX + width + 4,\r\n                    screenDimensions.width - 480,\r\n                  ),\r\n                  containerWidth: 30,\r\n                  bottom: Math.max(0, screenDimensions.height - pageY - height),\r\n                },\r\n                measurementId,\r\n              );\r\n            } else {\r\n              tooltipContext.setTooltip(\r\n                props.tooltipId,\r\n                props.tooltip,\r\n                {\r\n                  top: pageY,\r\n                  left: Math.min(\r\n                    pageX + width + 4,\r\n                    screenDimensions.width - 480,\r\n                  ),\r\n                  containerWidth: 30,\r\n                },\r\n                measurementId,\r\n              );\r\n            }\r\n            break;\r\n          case TooltipPositionType.LEFT_OF_ELEMENT:\r\n            if (pageY > screenDimensions.height / 2) {\r\n              tooltipContext.setTooltip(\r\n                props.tooltipId,\r\n                props.tooltip,\r\n                {\r\n                  right: screenDimensions.width - pageX + 4,\r\n                  containerWidth: 30,\r\n                  bottom: Math.max(0, screenDimensions.height - pageY - height),\r\n                },\r\n                measurementId,\r\n              );\r\n            } else {\r\n              tooltipContext.setTooltip(\r\n                props.tooltipId,\r\n                props.tooltip,\r\n                {\r\n                  top: pageY,\r\n                  right: screenDimensions.width - pageX + 4,\r\n                  containerWidth: 30,\r\n                },\r\n                measurementId,\r\n              );\r\n            }\r\n            break;\r\n        }\r\n      });\r\n    },\r\n    [\r\n      tooltipContext.setTooltip,\r\n      props.tooltip,\r\n      props.tooltipId,\r\n      wrapperRef,\r\n      screenDimensions.height,\r\n      tooltipPositionType,\r\n    ],\r\n  );\r\n\r\n  const onMouseOver = useCallback(() => {\r\n    const measurementId = Math.random();\r\n    tooltipContext.onMouseEnter(props.tooltipId, measurementId);\r\n    measureAndSetTooltip(measurementId);\r\n  }, [props.tooltipId, measureAndSetTooltip]);\r\n  const onMouseOut = useCallback(() => {\r\n    tooltipContext.onMouseLeave(props.tooltipId);\r\n  }, [props.tooltipId]);\r\n\r\n  useEffect(() => {\r\n    measureAndSetTooltip();\r\n  }, [measureAndSetTooltip]);\r\n\r\n  useEffect(() => {\r\n    if (!visible) {\r\n      tooltipContext.onUnmountTooltip(props.tooltipId);\r\n    }\r\n  }, [visible, tooltipContext.clearTooltip, props.tooltipId]);\r\n\r\n  useEffect(() => {\r\n    if (props.tooltip == null) {\r\n      tooltipContext.clearTooltip(props.tooltipId);\r\n    }\r\n  }, [props.tooltip, props.tooltipId, tooltipContext.clearTooltip]);\r\n\r\n  useEffect(() => {\r\n    measureAndSetTooltip();\r\n    return () => tooltipContext.onUnmountTooltip(props.tooltipId);\r\n  }, [props.tooltipId]);\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View\r\n        ref={wrapperRef}\r\n        style={[styles.tooltipWrapper, props.containerStyle]}\r\n        // @ts-expect-error React Native Web supports this\r\n        onMouseEnter={onMouseOver}\r\n        onMouseLeave={onMouseOut}\r\n      >\r\n        {props.children}\r\n      </View>\r\n    ),\r\n    [wrapperRef, props.children, props.containerStyle, onMouseOver, onMouseOut],\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  tooltipWrapper: {\r\n    alignSelf: \"stretch\",\r\n    flex: 1,\r\n  },\r\n});\r\n","import React, { useMemo, useState } from \"react\";\r\nimport { StyleSheet, TouchableOpacity, View } from \"react-native\";\r\nimport { Badge, useTheme } from \"react-native-paper\";\r\nimport { getThemeWithOverriddenOnError } from \"../../Themes\";\r\nimport { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { useAuxOptions } from \"../utility/AuxOptionsContext\";\r\nimport { TooltipWrapper } from \"../utility/Tooltip\";\r\nimport { GameIcon } from \"../utility/icons/GameIcon\";\r\n\r\nconst DOUBLE_TAP_THRESHOLD_MS = 500;\r\n\r\nfunction ItemTileNonMemoized(props: {\r\n  onPress?: () => void;\r\n  onDoublePress?: () => void;\r\n  title: string;\r\n  icon?: string;\r\n  amount?: number;\r\n  quality?: number;\r\n  disabled?: boolean;\r\n  tooltipIdSuffix?: string;\r\n  tooltip?: React.ReactNode;\r\n  borderColor?: string;\r\n}) {\r\n  const theme = useTheme();\r\n  const auxOptions = useAuxOptions();\r\n  const [lastTapTime, setLastTapTime] = useState(0);\r\n  const overriddenThemePrimary = getThemeWithOverriddenOnError(\r\n    theme,\r\n    theme.colors.onPrimary,\r\n  );\r\n  const overriddenThemeSecondary = getThemeWithOverriddenOnError(\r\n    theme,\r\n    theme.colors.onSecondary,\r\n  );\r\n  const inner = useMemo(\r\n    () => (\r\n      <View\r\n        style={[\r\n          styles.tile,\r\n          auxOptions.compactLayout && { height: 40, width: 40 },\r\n          { borderColor: props.borderColor ?? theme.colors.outlineVariant },\r\n        ]}\r\n      >\r\n        {props.icon && (\r\n          <GameIcon\r\n            style={props.disabled && { opacity: 0.2 }}\r\n            icon={props.icon}\r\n          />\r\n        )}\r\n        {props.quality != null && props.quality >= 1 && (\r\n          <Badge\r\n            style={{\r\n              position: \"absolute\",\r\n              opacity: props.disabled ? 0.2 : 1.0,\r\n              bottom: -8,\r\n              left: -8,\r\n              borderColor: theme.colors.background,\r\n              backgroundColor: theme.colors.secondary,\r\n            }}\r\n            theme={overriddenThemeSecondary}\r\n          >\r\n            {\"+\" + formatNumber(props.quality)}\r\n          </Badge>\r\n        )}\r\n        {props.amount != null && props.amount > 1 && (\r\n          <Badge\r\n            style={{\r\n              position: \"absolute\",\r\n              top: -8,\r\n              right: -8,\r\n              borderColor: theme.colors.background,\r\n              backgroundColor: theme.colors.primary,\r\n            }}\r\n            theme={overriddenThemePrimary}\r\n          >\r\n            {formatNumber(props.amount)}\r\n          </Badge>\r\n        )}\r\n      </View>\r\n    ),\r\n    [\r\n      theme,\r\n      overriddenThemePrimary,\r\n      overriddenThemeSecondary,\r\n      props.icon,\r\n      props.amount,\r\n      props.disabled,\r\n      props.quality,\r\n      props.borderColor,\r\n      auxOptions.compactLayout,\r\n    ],\r\n  );\r\n  return useMemo(() => {\r\n    if (!props.onPress) {\r\n      return (\r\n        <TooltipWrapper\r\n          containerStyle={[\r\n            styles.tile,\r\n            auxOptions.compactLayout && { height: 40, width: 40 },\r\n            { flex: null, borderColor: theme.colors.outlineVariant },\r\n          ]}\r\n          tooltip={props.tooltip}\r\n          tooltipId={props.title + props.tooltipIdSuffix}\r\n        >\r\n          {inner}\r\n        </TooltipWrapper>\r\n      );\r\n    }\r\n    return (\r\n      <TooltipWrapper\r\n        containerStyle={[\r\n          styles.tile,\r\n          auxOptions.compactLayout && { height: 40, width: 40 },\r\n          { flex: null, borderColor: theme.colors.outlineVariant },\r\n        ]}\r\n        tooltip={props.tooltip}\r\n        tooltipId={props.title + props.tooltipIdSuffix}\r\n      >\r\n        <TouchableOpacity\r\n          accessibilityLabel={\r\n            props.title +\r\n            (props.amount && props.amount > 1 ? ` (${props.amount})` : \"\")\r\n          }\r\n          accessibilityRole=\"button\"\r\n          onPress={() => {\r\n            const currentTapTime = Date.now();\r\n            if (currentTapTime - lastTapTime < DOUBLE_TAP_THRESHOLD_MS) {\r\n              setLastTapTime(0);\r\n              props.onDoublePress && props.onDoublePress();\r\n            } else {\r\n              setLastTapTime(currentTapTime);\r\n              props.onPress && props.onPress();\r\n            }\r\n          }}\r\n        >\r\n          {inner}\r\n        </TouchableOpacity>\r\n      </TooltipWrapper>\r\n    );\r\n  }, [\r\n    props.title,\r\n    props.tooltip,\r\n    props.onPress,\r\n    props.onDoublePress,\r\n    lastTapTime,\r\n    setLastTapTime,\r\n    inner,\r\n    props.tooltipIdSuffix,\r\n    auxOptions.compactLayout,\r\n  ]);\r\n}\r\n\r\nexport const ItemTile = React.memo(\r\n  ItemTileNonMemoized,\r\n  (prevProps, nextProps) =>\r\n    prevProps.title == nextProps.title &&\r\n    prevProps.icon == nextProps.icon &&\r\n    prevProps.amount == nextProps.amount &&\r\n    prevProps.quality == nextProps.quality &&\r\n    prevProps.disabled == nextProps.disabled &&\r\n    prevProps.tooltipIdSuffix == nextProps.tooltipIdSuffix &&\r\n    prevProps.onPress == nextProps.onPress &&\r\n    prevProps.onDoublePress == nextProps.onDoublePress &&\r\n    prevProps.tooltip == nextProps.tooltip &&\r\n    prevProps.borderColor == nextProps.borderColor,\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  tile: {\r\n    borderWidth: 0.5,\r\n    height: 48,\r\n    width: 48,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    margin: 8,\r\n  },\r\n});\r\n","import { cacheByTickCount } from \"../Caching\";\r\nimport { GameState } from \"../GameState\";\r\nimport { DataStore } from \"../generic/DataStore\";\r\nimport {\r\n  applyTransformationsPermaCached,\r\n  clearTransformationCache,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { Building } from \"./Building\";\r\n\r\nexport type BuildingData = {\r\n  current: number;\r\n  turnedOn: number;\r\n};\r\n\r\nconst Buildings = new DataStore<Building>();\r\n\r\nexport { Buildings };\r\n\r\nconst STARTING_LAND = 150;\r\n\r\nconst landCapTags = [TransformationTags.Land, TransformationTags.Cap];\r\nexport function getTotalLand(state: GameState): number {\r\n  return Math.floor(\r\n    applyTransformationsPermaCached(landCapTags, state, STARTING_LAND),\r\n  );\r\n}\r\n\r\nexport function clearLandCache(state: GameState): GameState {\r\n  return clearTransformationCache(new Set(landCapTags), state);\r\n}\r\n\r\nexport function getUsedLand(state: GameState): number {\r\n  return cacheByTickCount(state, \"usedLand\", (state) => {\r\n    let totalLand = 0;\r\n    Buildings.getAll().forEach(\r\n      (building) =>\r\n        (totalLand +=\r\n          building.getLandRequired(state) * getBuildingAmount(state, building)),\r\n    );\r\n    return totalLand;\r\n  });\r\n}\r\n\r\nexport function getFreeLand(state: GameState): number {\r\n  let totalLand = getTotalLand(state);\r\n  totalLand -= getUsedLand(state);\r\n  return Math.max(totalLand, 0);\r\n}\r\n\r\nexport function getBuildingAmount(\r\n  state: GameState,\r\n  building: Building,\r\n): number {\r\n  return state.run.buildings?.[building.getId()]?.current || 0;\r\n}\r\n\r\nexport function getBuildingAmountTurnedOn(\r\n  state: GameState,\r\n  building: Building,\r\n): number {\r\n  return state.run.buildings?.[building.getId()]?.turnedOn || 0;\r\n}\r\n\r\nexport function changeBuildingsTurnedOn(\r\n  building: Building,\r\n  amount: number,\r\n  state: GameState,\r\n): GameState {\r\n  const id = building.getId();\r\n\r\n  if (state.run.buildings?.[id] == null) {\r\n    state.run.buildings[id] = {\r\n      current: 0,\r\n      turnedOn: 0,\r\n    };\r\n  }\r\n\r\n  const newAmount = getBuildingAmountTurnedOn(state, building) + amount;\r\n  if (newAmount < 0 || newAmount > getBuildingAmount(state, building)) {\r\n    return state;\r\n  }\r\n  state.run.buildings[id].turnedOn = newAmount;\r\n\r\n  BuildingAmountListeners.getAll().forEach(\r\n    (transform) => (state = transform(state, building)),\r\n  );\r\n\r\n  return state;\r\n}\r\n\r\nexport const BuildingAmountListeners: DataStore<\r\n  (state: GameState, building: Building) => GameState\r\n> = new DataStore();\r\n","import memoize from \"sonic-memoize\";\r\nimport { keysOf, valuesOf } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { cacheByArbitraryVersion, cacheByTickCount } from \"../Caching\";\r\nimport { hasWorldFlag } from \"../Flags\";\r\nimport { GameState, createHypotheticalState } from \"../GameState\";\r\nimport { Resource, getResourceCap } from \"../Resources\";\r\nimport { DoActionArgs } from \"../action/Action\";\r\nimport { ActionArea, ActionSubcategory } from \"../action/ActionAreas\";\r\nimport { SpellAutocastCategory } from \"../autocast/Autocast\";\r\nimport { Identifiable } from \"../generic/Identifiable\";\r\nimport { Spell } from \"../spells/Spell\";\r\nimport { Spells } from \"../spells/Spells\";\r\nimport {\r\n  applyTransformationsCached,\r\n  applyTransformationsPermaCached,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport {\r\n  BuildingAmountListeners,\r\n  BuildingData,\r\n  getBuildingAmount,\r\n  getBuildingAmountTurnedOn,\r\n  getFreeLand,\r\n} from \"./Buildings\";\r\n\r\nexport abstract class Building implements Identifiable {\r\n  abstract getId(): string;\r\n  abstract getName(): string;\r\n  abstract getDisplayDescription(state: GameState): string;\r\n  abstract getDisplayEffect(state: GameState): string;\r\n  abstract canTurnOff(): boolean;\r\n  abstract getBaseLandRequired(): number;\r\n  landTags = [this.getId(), TransformationTags.LandCost];\r\n  getLandRequired(state: GameState): number {\r\n    const baseLandRequired = this.getBaseLandRequired();\r\n    const postTransform = applyTransformationsPermaCached(\r\n      this.landTags,\r\n      state,\r\n      baseLandRequired,\r\n    );\r\n    return postTransform;\r\n  }\r\n}\r\n\r\nexport abstract class BuildingSpell extends Spell {\r\n  abstract getBaseResourceCost(): Partial<Record<Resource, number>>;\r\n  abstract getBaseResourceScale(): Partial<Record<Resource, number>>;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  abstract getBuilding(): Building;\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.OTHER;\r\n  }\r\n\r\n  canAutoPurchaseMax(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getAreas(): Partial<Record<ActionArea, ActionSubcategory[]>> {\r\n    // Must populate by subclasses\r\n    return {};\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Build {{buildingName}}\", {\r\n      buildingName: this.getBuilding().getName(),\r\n    });\r\n  }\r\n\r\n  getDisplayName(state: GameState): string {\r\n    const amount = getBuildingAmount(state, this.getBuilding());\r\n    const buildingName = this.getBuilding().getName();\r\n    if (amount == 0) {\r\n      return buildingName;\r\n    }\r\n\r\n    if (this.canTurnOff()) {\r\n      const buildingAmountTurnedOn = getBuildingAmountTurnedOn(\r\n        state,\r\n        this.getBuilding(),\r\n      );\r\n      return t(\r\n        \"{{buildingName}} ({{buildingAmountTurnedOn}}/{{buildingAmount}})\",\r\n        {\r\n          buildingName,\r\n          buildingAmount: amount,\r\n          buildingAmountTurnedOn,\r\n        },\r\n      );\r\n    }\r\n    return t(\"{{buildingName}} ({{buildingAmount}})\", {\r\n      buildingName,\r\n      buildingAmount: getBuildingAmount(state, this.getBuilding()),\r\n    });\r\n  }\r\n\r\n  getCost(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return cacheByTickCount(state, this.getId() + \"cost\", (state) => ({\r\n      resources: this.getResourceCost(state),\r\n      items: {},\r\n    }));\r\n  }\r\n\r\n  getTags(): string[] {\r\n    return ([TransformationTags.Building] as string[]).concat(super.getTags());\r\n  }\r\n\r\n  costTags = memoize((key) => [\r\n    ...this.getTags(),\r\n    TransformationTags.Cost,\r\n    key,\r\n  ]);\r\n  costScaleTags = memoize((key) => [\r\n    ...this.getTags(),\r\n    TransformationTags.CostScale,\r\n    key,\r\n  ]);\r\n\r\n  getResourceCost(state: GameState): Record<Resource, number> {\r\n    const currentAmount = getBuildingAmount(state, this.getBuilding());\r\n    const baseCost = this.getBaseResourceCost();\r\n    const scale = this.getBaseResourceScale();\r\n    const finalCost: Record<string, number> = {};\r\n    Object.keys(baseCost).forEach((key) => {\r\n      const baseCostForKey = applyTransformationsCached(\r\n        this.costTags(key),\r\n        state,\r\n        baseCost[key],\r\n      );\r\n      const costScaleForKey = applyTransformationsCached(\r\n        this.costScaleTags(key),\r\n        state,\r\n        scale[key] - 1,\r\n      );\r\n\r\n      finalCost[key] = Math.ceil(\r\n        baseCostForKey * Math.pow(1 + costScaleForKey, currentAmount),\r\n      );\r\n    });\r\n    return finalCost;\r\n  }\r\n\r\n  canTurnOff(): boolean {\r\n    return this.getBuilding().canTurnOff();\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return this.getBuilding().getDisplayDescription(state);\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    return this.getBuilding().getDisplayEffect(state);\r\n  }\r\n\r\n  getId(): string {\r\n    return \"build-\" + this.getBuilding().getId();\r\n  }\r\n\r\n  doSpellAction(state: GameState, args: DoActionArgs): GameState {\r\n    throw new Error(\"Not used in building spells\");\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    throw new Error(\"Not used in building spells\");\r\n  }\r\n\r\n  canAfford(state: GameState): boolean {\r\n    const canAffordLand =\r\n      getFreeLand(state) >= this.getBuilding().getLandRequired(state);\r\n    if (!canAffordLand) {\r\n      return false;\r\n    }\r\n    return super.canAfford(state);\r\n  }\r\n\r\n  isCapEnough(state: GameState): boolean {\r\n    const landRequirement = this.getBuilding().getLandRequired(state);\r\n    const freeLand = getFreeLand(state);\r\n\r\n    return super.isCapEnough(state) && landRequirement <= freeLand;\r\n  }\r\n\r\n  doAction(args: DoActionArgs, state: GameState): GameState {\r\n    if (!this.canAfford(state)) {\r\n      return state;\r\n    }\r\n\r\n    const id = this.getBuilding().getId();\r\n    state = this.payCost(state);\r\n    if (state.run.buildings?.[id] == null) {\r\n      state.run.buildings[id] = {\r\n        current: 0,\r\n        turnedOn: 0,\r\n      };\r\n    }\r\n    const buildingData = state.run.buildings[id] as BuildingData;\r\n    buildingData.current += 1;\r\n    buildingData.turnedOn =\r\n      getBuildingAmountTurnedOn(state, this.getBuilding()) + 1;\r\n    //((args.isAutomatic && this.canTurnOff()) ? 0 : 1);\r\n    if (buildingData.current > (state.world.maxFurnitureNumbers?.[id] ?? 0)) {\r\n      state.world.maxFurnitureNumbers[id] = buildingData.current;\r\n    }\r\n    BuildingAmountListeners.getAll().forEach(\r\n      (transform) => (state = transform(state, this.getBuilding())),\r\n    );\r\n    return state;\r\n  }\r\n\r\n  shouldNeverHaveDemolishBlockers(): boolean {\r\n    return true;\r\n  }\r\n\r\n  // If true, this building will never cause demolish blockers.\r\n  // Good for buildings like the Storage Expanders, which when demolished,\r\n  // can lower\r\n  shouldNotCountForDemolishBlockers(): boolean {\r\n    return false;\r\n  }\r\n\r\n  getDemolishBlockers(state: GameState, amount: number): Building[] {\r\n    if (this.shouldNeverHaveDemolishBlockers()) {\r\n      return [];\r\n    }\r\n    return cacheByArbitraryVersion(\r\n      state,\r\n      this.getId() + \"demolishBlockers\",\r\n      (s) => {\r\n        let hypotheticalState = createHypotheticalState(s);\r\n\r\n        let blockerBuildings = [];\r\n        hypotheticalState = this._demolishUnsafe(hypotheticalState, amount);\r\n        // Remove 1 of every other building\r\n        for (let building of Spells.getAll().filter(\r\n          (spell) => spell instanceof BuildingSpell && spell != this,\r\n        ) as BuildingSpell[]) {\r\n          if (\r\n            getBuildingAmount(hypotheticalState, building.getBuilding()) > 0 &&\r\n            !building.shouldNotCountForDemolishBlockers()\r\n          ) {\r\n            hypotheticalState = building._demolishUnsafe(hypotheticalState, 1);\r\n            const resourceCost = building.getCost(hypotheticalState).resources;\r\n            for (let resource of keysOf(resourceCost)) {\r\n              if (\r\n                resourceCost[resource] >\r\n                  getResourceCap(hypotheticalState, resource) &&\r\n                resourceCost[resource] <= getResourceCap(state, resource)\r\n              ) {\r\n                blockerBuildings.push(building.getBuilding());\r\n                break;\r\n              }\r\n            }\r\n            hypotheticalState.run.buildings[\r\n              building.getBuilding().getId()\r\n            ].current += 1;\r\n          }\r\n        }\r\n\r\n        return blockerBuildings;\r\n      },\r\n      // This versioning function is not 100% correct, but it'll do in most cases\r\n      (s) =>\r\n        valuesOf(state.run.buildings)\r\n          .map((buildingData) => buildingData.current)\r\n          .reduce((prev, current, index) => prev + current * (index + 1), 0),\r\n    );\r\n  }\r\n\r\n  shouldHideDemolish(state: GameState): boolean {\r\n    return hasWorldFlag(state, \"storyline_blessedLand_bonus_active\");\r\n  }\r\n\r\n  canDemolish(state: GameState, amount: number): boolean {\r\n    return this.getDemolishBlockers(state, amount).length == 0;\r\n  }\r\n\r\n  _demolishUnsafe(state: GameState, amount: number): GameState {\r\n    const amountToDemolish = Math.min(\r\n      getBuildingAmount(state, this.getBuilding()),\r\n      amount,\r\n    );\r\n    const id = this.getBuilding().getId();\r\n    if (state.run.buildings?.[id] == null) {\r\n      state.run.buildings[id] = {\r\n        current: 0,\r\n        turnedOn: 0,\r\n      };\r\n    }\r\n    const buildingData = state.run.buildings[id] as BuildingData;\r\n    buildingData.current -= amountToDemolish;\r\n    buildingData.turnedOn -= Math.min(buildingData.turnedOn, amountToDemolish);\r\n    state.run.autoPurchaseActions[this.getId()] = false;\r\n    BuildingAmountListeners.getAll().forEach(\r\n      (transform) => (state = transform(state, this.getBuilding())),\r\n    );\r\n    return state;\r\n  }\r\n\r\n  demolish(state: GameState, amount: number): GameState {\r\n    if (!this.canDemolish(state, amount)) {\r\n      return state;\r\n    }\r\n    return this._demolishUnsafe(state, amount);\r\n  }\r\n\r\n  protected shouldIgnoreCanCastSpell(): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { StyleProp, View, ViewStyle } from \"react-native\";\r\nimport { Switch } from \"react-native-paper\";\r\nimport Styles from \"./Styles\";\r\nimport { Text } from \"./Text\";\r\n\r\nexport function CheckBox(props: {\r\n  title: string | React.ReactNode;\r\n  checked: boolean;\r\n  onPress: () => void;\r\n  containerStyle?: StyleProp<ViewStyle>;\r\n}) {\r\n  return useMemo(\r\n    () => (\r\n      <View style={[Styles.flexRowAlignCenter, props.containerStyle]}>\r\n        {typeof props.title == \"string\" ? (\r\n          <View style={Styles.flex}>\r\n            <Text>{props.title}</Text>\r\n          </View>\r\n        ) : (\r\n          props.title\r\n        )}\r\n        <Switch\r\n          style={Styles.ml8}\r\n          value={props.checked}\r\n          onValueChange={props.onPress}\r\n        />\r\n      </View>\r\n    ),\r\n    [props.title, props.checked, props.onPress, props.containerStyle],\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport {\r\n  Resource,\r\n  getResourceAmount,\r\n  getResourceCap,\r\n  getResourceInfo,\r\n  translateResource,\r\n} from \"../../backend/Resources\";\r\nimport { getTotalAmountOfItem } from \"../../backend/items/Inventory\";\r\nimport { Items } from \"../../backend/items/Items\";\r\nimport { RoundingMethod, formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { Text } from \"./Text\";\r\nimport { GameIcon } from \"./icons/GameIcon\";\r\nimport { useGameState } from \"./useGameState\";\r\n\r\ntype Props = {\r\n  resources: Partial<Record<Resource, number>>;\r\n  items?: Record<string, number>;\r\n};\r\n\r\nfunction ResourceRow(props: {\r\n  name: string;\r\n  icon: string;\r\n  current: number;\r\n  cost: number;\r\n  cap: number;\r\n  switch?: boolean;\r\n}) {\r\n  const theme = useTheme();\r\n  return (\r\n    <View style={styles.row} accessible={true}>\r\n      <View style={styles.inlineRow}>\r\n        <GameIcon\r\n          icon={props.icon}\r\n          style={styles.icon}\r\n          small\r\n          accessibilityLabel=\"\"\r\n        />\r\n        <Text>{t(\"{{itemOrResource}}: \", { itemOrResource: props.name })}</Text>\r\n      </View>\r\n      {!props.switch ? (\r\n        <View style={styles.costValue}>\r\n          <Text\r\n            style={props.current < props.cost && { color: theme.colors.error }}\r\n          >\r\n            {formatNumber(props.current, {\r\n              showDecimals: true,\r\n              roundingMethod:\r\n                props.current >= props.cost\r\n                  ? RoundingMethod.UP\r\n                  : RoundingMethod.DEFAULT,\r\n            })}\r\n          </Text>\r\n          <Text>/</Text>\r\n          <Text style={props.cap < props.cost && { color: theme.colors.error }}>\r\n            {formatNumber(props.cost, {\r\n              showDecimals: false,\r\n              roundingMethod: RoundingMethod.UP,\r\n            })}\r\n          </Text>\r\n        </View>\r\n      ) : (\r\n        <View style={styles.costValue}>\r\n          <Text style={props.cap < props.cost && { color: theme.colors.error }}>\r\n            {formatNumber(props.cost, {\r\n              showDecimals: false,\r\n              roundingMethod: RoundingMethod.UP,\r\n            })}\r\n          </Text>\r\n          <Text>/</Text>\r\n          <Text\r\n            style={props.current < props.cost && { color: theme.colors.error }}\r\n          >\r\n            {formatNumber(props.current, {\r\n              showDecimals: true,\r\n              roundingMethod:\r\n                props.current >= props.cost\r\n                  ? RoundingMethod.UP\r\n                  : RoundingMethod.DEFAULT,\r\n            })}\r\n          </Text>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst ResourceRowMemo = React.memo(ResourceRow);\r\n\r\nexport { ResourceRowMemo as CostRow };\r\n\r\nexport function CostViewer(props: Props) {\r\n  const state = useGameState();\r\n  const resourceKeys = Object.keys(props.resources) as Array<Resource>;\r\n  const rows = resourceKeys.map((resourceName) => {\r\n    const resourceCost = props.resources[resourceName] as number;\r\n    const resourceCap = getResourceCap(state, resourceName);\r\n    const currentAmount = getResourceAmount(state, resourceName);\r\n    const resourceInfo = getResourceInfo(resourceName);\r\n    return (\r\n      <ResourceRowMemo\r\n        name={translateResource(resourceName)}\r\n        icon={resourceInfo.icon}\r\n        current={currentAmount}\r\n        cost={resourceCost}\r\n        cap={resourceCap}\r\n        key={resourceName}\r\n      />\r\n    );\r\n  });\r\n  const itemRows = props.items\r\n    ? Object.keys(props.items).map((itemId) => {\r\n        const itemCost = props?.items?.[itemId] as number;\r\n        const item = Items.getById(itemId);\r\n        const itemAmount = getTotalAmountOfItem(item, state);\r\n        return (\r\n          <ResourceRowMemo\r\n            name={item.getName(item.getDefaultParams())}\r\n            icon={item.getId()}\r\n            current={itemAmount}\r\n            cost={itemCost}\r\n            cap={1e10}\r\n            key={itemId}\r\n          />\r\n        );\r\n      })\r\n    : [];\r\n  return (\r\n    <View style={styles.container}>\r\n      {rows}\r\n      {itemRows}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"stretch\",\r\n  },\r\n  inlineRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  icon: {\r\n    marginRight: 2,\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-end\",\r\n  },\r\n  costValue: {\r\n    minWidth: 80,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  notMet: {\r\n    color: \"red\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport {\r\n  IconButton as PaperIconButton,\r\n  IconButtonProps,\r\n  useTheme,\r\n} from \"react-native-paper\";\r\n\r\nexport function IconButton(props: IconButtonProps) {\r\n  const theme = useTheme();\r\n  const disabled = props.disabled ?? false;\r\n  return (\r\n    <PaperIconButton\r\n      iconColor={\r\n        disabled ? theme.colors.onSurfaceDisabled : theme.colors.onPrimary\r\n      }\r\n      containerColor={\r\n        disabled ? theme.colors.surfaceDisabled : theme.colors.primary\r\n      }\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { Button } from \"./Button\";\r\nimport { IconButton } from \"./IconButton\";\r\n\r\ntype PlusMinusAllocatorProps = {\r\n  disableMinus: boolean;\r\n  disablePlus: boolean;\r\n  onPressMinus: () => void;\r\n  onPressPlus: () => void;\r\n};\r\n\r\nexport function PlusMinusAllocator(\r\n  props: PlusMinusAllocatorProps = {\r\n    disableMinus: false,\r\n    disablePlus: false,\r\n    onPressMinus: () => {},\r\n    onPressPlus: () => {},\r\n  },\r\n) {\r\n  const theme = useTheme();\r\n  const minusButton = useMemo(\r\n    () => (\r\n      <Button\r\n        enableAutoRepress={true}\r\n        passthroughStyle={styles.plusMinusAllocatorButton}\r\n        onPress={props.onPressMinus}\r\n        disabled={props.disableMinus}\r\n        compact={true}\r\n        autoRepressConfig={{\r\n          dropoffMultiplier: 0.8,\r\n          startingThreshold: 300,\r\n          startingRepressTime: 200,\r\n          minTimeMs: 50,\r\n        }}\r\n        mode=\"contained\"\r\n        size={20}\r\n        ButtonComponent={IconButton}\r\n        icon=\"minus\"\r\n      ></Button>\r\n    ),\r\n    [props.onPressMinus, props.disableMinus],\r\n  );\r\n  const plusButton = useMemo(\r\n    () => (\r\n      <Button\r\n        enableAutoRepress={true}\r\n        passthroughStyle={styles.plusMinusAllocatorButton}\r\n        onPress={props.onPressPlus}\r\n        disabled={props.disablePlus}\r\n        compact={true}\r\n        autoRepressConfig={{\r\n          dropoffMultiplier: 0.7,\r\n          startingThreshold: 300,\r\n          startingRepressTime: 150,\r\n          minTimeMs: 50,\r\n        }}\r\n        mode=\"contained\"\r\n        size={20}\r\n        ButtonComponent={IconButton}\r\n        icon=\"plus\"\r\n      ></Button>\r\n    ),\r\n    [props.onPressPlus, props.disablePlus],\r\n  );\r\n  return useMemo(\r\n    () => (\r\n      <View style={styles.row}>\r\n        {minusButton}\r\n        {plusButton}\r\n      </View>\r\n    ),\r\n    [minusButton, plusButton],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  plusMinusAllocatorButton: {\r\n    height: 32,\r\n    width: 32,\r\n    // borderRadius: 16,\r\n    marginHorizontal: 4,\r\n    marginVertical: 0,\r\n    padding: 0,\r\n  },\r\n  plusMinusAllocatorButtonInner: {\r\n    paddingVertical: 0,\r\n    paddingHorizontal: 0,\r\n    marginVertical: 0,\r\n    marginHorizontal: 0,\r\n    height: 32,\r\n    width: 32,\r\n  },\r\n  plusMinusAllocatorIcon: {\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n","import { useCallback, useMemo, useRef } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport {\r\n  assignWizardsToRule,\r\n  estimateIntervalBetweenCastsForRule,\r\n  estimateManaConsumptionPerSecPerRule,\r\n  getAutocastRuleBySpell,\r\n  getAutocastStatusByRule,\r\n  getCurrentAutocastStrategy,\r\n  getFreeWizards,\r\n  toggleAutocastRuleDisabled,\r\n} from \"../../backend/autocast/Autocast\";\r\nimport { Spells } from \"../../backend/spells/Spells\";\r\nimport { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { Markdown } from \"./Markdown\";\r\nimport { PlusMinusAllocator } from \"./PlusMinusAllocator\";\r\nimport Styles from \"./Styles\";\r\nimport { Text } from \"./Text\";\r\nimport { useGameState } from \"./useGameState\";\r\n\r\nexport function SpellWizardsInfo(props: { spellId: string }) {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const spell = Spells.getById(props.spellId);\r\n  const rule = getAutocastRuleBySpell(state, spell);\r\n\r\n  const ruleStatus = getAutocastStatusByRule(state, rule);\r\n  const intervalBetweenCasts = estimateIntervalBetweenCastsForRule(\r\n    state,\r\n    rule,\r\n    ruleStatus,\r\n  );\r\n  const manaCostPerSec = estimateManaConsumptionPerSecPerRule(\r\n    state,\r\n    rule,\r\n    ruleStatus,\r\n  );\r\n\r\n  const helperText = useMemo(\r\n    () =>\r\n      ruleStatus.wizardsAssigned > 0 && !ruleStatus.disabled\r\n        ? t(`*({{secs}}s/cast; {{mana}}:mana:/s)*`, {\r\n            secs: formatNumber(intervalBetweenCasts, { showDecimals: true }),\r\n            mana: formatNumber(manaCostPerSec, { showDecimals: true }),\r\n          })\r\n        : ruleStatus.disabled\r\n        ? t(\"(Disabled)\")\r\n        : \"\",\r\n    [\r\n      intervalBetweenCasts,\r\n      ruleStatus.wizardsAssigned,\r\n      ruleStatus.disabled,\r\n      manaCostPerSec,\r\n    ],\r\n  );\r\n\r\n  const wizardsAssignedComponent = useMemo(\r\n    () => (\r\n      <Markdown>\r\n        {t(\"Assign wizards {{helperText}}\", {\r\n          helperText,\r\n        })}\r\n      </Markdown>\r\n    ),\r\n    [helperText],\r\n  );\r\n\r\n  const onPressPlus = useCallback(\r\n    () =>\r\n      stateRef.current.apply((state) => {\r\n        const rule = getAutocastRuleBySpell(state, spell);\r\n        if (rule == null) {\r\n          // We must create a rule\r\n          const currentStrategy = getCurrentAutocastStrategy(state);\r\n          const newRule = {\r\n            id: Math.random().toString(),\r\n            disabled: false,\r\n            wizardsAssigned: 0,\r\n            spellId: props.spellId,\r\n            conditions: [],\r\n          };\r\n          currentStrategy.rules.push(newRule);\r\n          state.global.autocast.currentStrategy = currentStrategy;\r\n          state = assignWizardsToRule(state, newRule, 1);\r\n        } else {\r\n          state = assignWizardsToRule(state, rule, 1);\r\n          if (rule.disabled) {\r\n            state = toggleAutocastRuleDisabled(state, rule);\r\n          }\r\n        }\r\n        return state;\r\n      }),\r\n    [props.spellId],\r\n  );\r\n  const onPressMinus = useCallback(() => {\r\n    stateRef.current.apply((state) => {\r\n      const rule = getAutocastRuleBySpell(state, spell);\r\n      if (rule == null) {\r\n        return state;\r\n      }\r\n      state = assignWizardsToRule(state, rule, -1);\r\n      if (rule.disabled) {\r\n        state = toggleAutocastRuleDisabled(state, rule);\r\n      }\r\n      if (getAutocastStatusByRule(state, rule).wizardsAssigned <= 0) {\r\n        const currentStrategy = getCurrentAutocastStrategy(state);\r\n        currentStrategy.rules = currentStrategy.rules.filter(\r\n          (strategyRule) => rule != strategyRule,\r\n        );\r\n      }\r\n      return state;\r\n    });\r\n  }, [props.spellId]);\r\n\r\n  const allocator = useMemo(\r\n    () => (\r\n      <View style={[Styles.flexRowAlignCenter, Styles.ml8]}>\r\n        <View style={Styles.mr4}>\r\n          <Text>{ruleStatus.wizardsAssigned}</Text>\r\n        </View>\r\n        <PlusMinusAllocator\r\n          disableMinus={ruleStatus.wizardsAssigned <= 0}\r\n          disablePlus={getFreeWizards(state) <= 0}\r\n          onPressPlus={onPressPlus}\r\n          onPressMinus={onPressMinus}\r\n        />\r\n      </View>\r\n    ),\r\n    [\r\n      ruleStatus.wizardsAssigned,\r\n      getFreeWizards(state),\r\n      onPressPlus,\r\n      onPressMinus,\r\n    ],\r\n  );\r\n\r\n  return (\r\n    <View style={Styles.flexRowSpaceBetween}>\r\n      <View style={Styles.flex}>{wizardsAssignedComponent}</View>\r\n      {allocator}\r\n    </View>\r\n  );\r\n}\r\n","import { GameState, GameStateTransform } from \"../GameState\";\r\nimport { DataStore } from \"../generic/DataStore\";\r\n\r\nexport const GameStartupListeners = new DataStore<GameStateTransform>();\r\n\r\nexport function runGameStartupListeners(state: GameState): GameState {\r\n  GameStartupListeners.getAll().forEach((listener) => {\r\n    state = listener(state);\r\n  });\r\n  return state;\r\n}\r\n","import { useCallback, useRef, useState } from \"react\";\r\nimport { StateContextValue } from \"../../backend/GameState\";\r\nimport { Actions } from \"../../backend/action/Actions\";\r\nimport {\r\n  SpellElement,\r\n  getUnlockedElements,\r\n} from \"../../backend/spells/Elements\";\r\nimport { GameStartupListeners } from \"../../backend/spells/GameStartup\";\r\nimport { keysOf } from \"../../utils/CoreUtils\";\r\n\r\nexport function useExpandedUIFromContext(\r\n  state: StateContextValue,\r\n  key: string,\r\n  defaultValue: boolean,\r\n): [boolean, (value: boolean) => void] {\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const currentValue = state.options.saveExpandedUI\r\n    ? state.options.expandedUI[key] ?? defaultValue\r\n    : defaultValue;\r\n  const [stateValue, setStateValue] = useState(currentValue);\r\n  const setCurrentValue = useCallback(\r\n    (value: boolean) => {\r\n      setStateValue(value);\r\n      stateRef.current.apply((s) => {\r\n        s.options.expandedUI[key] = value;\r\n        return s;\r\n      });\r\n    },\r\n    [key, setStateValue],\r\n  );\r\n\r\n  return [stateValue, setCurrentValue];\r\n}\r\n\r\nGameStartupListeners.register((state) => {\r\n  for (let key of keysOf(state.options.expandedUI)) {\r\n    const action = Actions.getByIdNullable(key);\r\n    if (action && !action.isVisible) {\r\n      state.options.expandedUI[key] = false;\r\n    }\r\n    if (key.startsWith(\"study:\")) {\r\n      const element = key.split(\":\")[1];\r\n      if (!getUnlockedElements(state).includes(element as SpellElement)) {\r\n        state.options.expandedUI[key] = false;\r\n      }\r\n    }\r\n  }\r\n  return state;\r\n}, \"expandedUI\");\r\n","import { Entypo } from \"@expo/vector-icons\";\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport {\r\n  Platform,\r\n  StyleSheet,\r\n  TouchableWithoutFeedback,\r\n  View,\r\n} from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { Action } from \"../../backend/action/Action\";\r\nimport { isAutoPurchaseUnlocked } from \"../../backend/action/Actions\";\r\nimport { isAutocastUnlocked } from \"../../backend/autocast/Autocast\";\r\nimport { BuildingSpell } from \"../../backend/buildings/Building\";\r\nimport {\r\n  changeBuildingsTurnedOn,\r\n  getBuildingAmount,\r\n  getBuildingAmountTurnedOn,\r\n  getFreeLand,\r\n} from \"../../backend/buildings/Buildings\";\r\nimport { Spell } from \"../../backend/spells/Spell\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { useAuxOptions } from \"./AuxOptionsContext\";\r\nimport { Button } from \"./Button\";\r\nimport { CheckBox } from \"./CheckBox\";\r\nimport { CostRow, CostViewer } from \"./CostViewer\";\r\nimport { Markdown } from \"./Markdown\";\r\nimport { DescriptionViewer } from \"./Miscellaneous\";\r\nimport { PlusMinusAllocator } from \"./PlusMinusAllocator\";\r\nimport { SpellWizardsInfo } from \"./SpellWizardsInfo\";\r\nimport { useExpandedUIFromContext } from \"./StatePersistedExpandedUI\";\r\nimport Styles from \"./Styles\";\r\nimport { Text } from \"./Text\";\r\nimport { TooltipPositionType, TooltipWrapper } from \"./Tooltip\";\r\nimport { VisibilityContext } from \"./VisibilityContext\";\r\nimport { useGameState } from \"./useGameState\";\r\n\r\nexport function ActionContainer(props: { action: Action }) {\r\n  const theme = useTheme();\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n  const action = props.action;\r\n  const cost = action.getCost(state);\r\n  const isFree =\r\n    Object.keys(cost.resources).length === 0 &&\r\n    Object.keys(cost.items).length === 0;\r\n  const canTurnOff = action instanceof BuildingSpell && action.canTurnOff();\r\n  const buildingAmount =\r\n    action instanceof BuildingSpell &&\r\n    getBuildingAmount(state, action.getBuilding());\r\n  const buildingAmountOn =\r\n    action instanceof BuildingSpell &&\r\n    getBuildingAmountTurnedOn(state, action.getBuilding());\r\n  const landRequirement =\r\n    action instanceof BuildingSpell\r\n      ? action.getBuilding().getLandRequired(state)\r\n      : null;\r\n  const freeLand = getFreeLand(state);\r\n  const capIsEnough = action.isCapEnough(state);\r\n\r\n  const [expanded, setExpanded] = useExpandedUIFromContext(\r\n    state,\r\n    action.getId(),\r\n    false,\r\n  );\r\n\r\n  const descriptionContainer = useMemo(() => {\r\n    const descriptionContents = `${action.getDisplayDescription(\r\n      state,\r\n    )} **${action.getDisplayEffect(state)}**`;\r\n    return (\r\n      <View style={styles.descriptionTextContainer}>\r\n        <DescriptionViewer style={Styles.flex}>\r\n          {descriptionContents}\r\n        </DescriptionViewer>\r\n      </View>\r\n    );\r\n  }, [\r\n    (expanded || Platform.OS === \"web\") && action.getDisplayDescription(state),\r\n    (expanded || Platform.OS === \"web\") && action.getDisplayEffect(state),\r\n  ]);\r\n\r\n  const landContainer = useMemo(() => {\r\n    if (!landRequirement) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <View style={styles.costContainer}>\r\n        <Markdown>{t(\"Land required:\")}</Markdown>\r\n        <View style={Styles.mt4}>\r\n          <CostRow\r\n            cap={freeLand}\r\n            current={freeLand}\r\n            cost={landRequirement}\r\n            icon=\"land\"\r\n            name={t(\"Land\")}\r\n            switch={true}\r\n          />\r\n        </View>\r\n      </View>\r\n    );\r\n  }, [landRequirement, freeLand]);\r\n\r\n  const costContainer = useMemo(() => {\r\n    return (\r\n      <View style={styles.costContainer}>\r\n        <Markdown>{t(\"Cost:\")}</Markdown>\r\n        <View style={Styles.mt4}>\r\n          <CostViewer\r\n            resources={action.getCost(state).resources}\r\n            items={action.getCost(state).items}\r\n          />\r\n        </View>\r\n      </View>\r\n    );\r\n  }, [(expanded || Platform.OS === \"web\") && JSON.stringify(cost)]);\r\n\r\n  const onPressMinus = useCallback(\r\n    () =>\r\n      stateRef.current.apply((s) =>\r\n        changeBuildingsTurnedOn((action as BuildingSpell).getBuilding(), -1, s),\r\n      ),\r\n    [action],\r\n  );\r\n  const onPressPlus = useCallback(\r\n    () =>\r\n      stateRef.current.apply((s) =>\r\n        changeBuildingsTurnedOn((action as BuildingSpell).getBuilding(), 1, s),\r\n      ),\r\n    [action],\r\n  );\r\n\r\n  const turnOffContainer = useMemo(() => {\r\n    if (!canTurnOff) {\r\n      return null;\r\n    }\r\n    const amountActiveText = `${buildingAmountOn}/${buildingAmount}`;\r\n    return (\r\n      <View style={styles.turnOnRow}>\r\n        <Markdown>{t(\"Amount active:\")}</Markdown>\r\n        <View style={styles.turnOnQuantityContainer}>\r\n          <Markdown>{amountActiveText}</Markdown>\r\n          <View style={styles.plusMinusContainer}>\r\n            <PlusMinusAllocator\r\n              disableMinus={buildingAmountOn === 0}\r\n              disablePlus={buildingAmountOn === buildingAmount}\r\n              onPressMinus={onPressMinus}\r\n              onPressPlus={onPressPlus}\r\n            />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    );\r\n  }, [canTurnOff, buildingAmount, buildingAmountOn, onPressMinus, onPressPlus]);\r\n\r\n  const demolish = useCallback(\r\n    () =>\r\n      stateRef.current.apply((s) => (action as BuildingSpell).demolish(s, 1)),\r\n    [action],\r\n  );\r\n\r\n  const demolishBlockers = useMemo(\r\n    () =>\r\n      action instanceof BuildingSpell\r\n        ? action.getDemolishBlockers(state, 1)\r\n        : [],\r\n    [expanded && state, action],\r\n  );\r\n\r\n  const canDemolish = useMemo(\r\n    () =>\r\n      action instanceof BuildingSpell ? action.canDemolish(state, 1) : true,\r\n    [expanded && state, action],\r\n  );\r\n\r\n  const demolishContainer = useMemo(() => {\r\n    if (\r\n      buildingAmount &&\r\n      buildingAmount > 0 &&\r\n      landRequirement != null &&\r\n      landRequirement > 0 &&\r\n      !action.shouldHideDemolish(state)\r\n    ) {\r\n      return (\r\n        <View style={Styles.mt8}>\r\n          <Button\r\n            mode=\"outlined\"\r\n            compact={true}\r\n            onPress={demolish}\r\n            enableAutoRepress={action.canSpam()}\r\n            disabled={!canDemolish}\r\n            style={[Styles.alignSelfNormal, Styles.mt4]}\r\n          >\r\n            {t(\"Dispose of 1 (+{{land}} Land)\", { land: landRequirement })}\r\n          </Button>\r\n          {demolishBlockers.length > 0 && (\r\n            <View style={Styles.mt4}>\r\n              <Text style={{ color: theme.colors.error }}>\r\n                {t(\r\n                  \"You may not dispose of this furniture because without it you wouldn't have been able to build the following furniture: {{furnitureList}}. To dispose of it, dispose of those other furniture first.\",\r\n                  {\r\n                    furnitureList: demolishBlockers\r\n                      .map((blocker) => blocker.getName())\r\n                      .join(t(\", \")),\r\n                  },\r\n                )}\r\n              </Text>\r\n            </View>\r\n          )}\r\n        </View>\r\n      );\r\n    }\r\n    return null;\r\n  }, [\r\n    buildingAmount,\r\n    landRequirement,\r\n    theme,\r\n    demolish,\r\n    demolishBlockers.map((building) => building.getId()).join(),\r\n    action instanceof BuildingSpell && action.shouldHideDemolish(state),\r\n    action.canSpam(),\r\n  ]);\r\n\r\n  const id = action.getId();\r\n  const canAutoPurchase =\r\n    isAutoPurchaseUnlocked(state) && action.canAutoPurchaseMax();\r\n  const isAutoPurchaseEnabled = state.run.autoPurchaseActions?.[id];\r\n  const autoPurchaseEnabledToggle = useCallback(\r\n    () =>\r\n      stateRef.current.apply((state) => {\r\n        state.run.autoPurchaseActions[id] = !(\r\n          state.run.autoPurchaseActions[id] ?? false\r\n        );\r\n        return state;\r\n      }),\r\n    [id],\r\n  );\r\n\r\n  const autoPurchaseContainer = useMemo(\r\n    () =>\r\n      canAutoPurchase ? (\r\n        <CheckBox\r\n          title={t(\"Auto purchase max\")}\r\n          checked={isAutoPurchaseEnabled}\r\n          onPress={autoPurchaseEnabledToggle}\r\n          containerStyle={Styles.mt4}\r\n        />\r\n      ) : null,\r\n    [canAutoPurchase, isAutoPurchaseEnabled, autoPurchaseEnabledToggle],\r\n  );\r\n\r\n  const disabled = !action.isEnabled(state);\r\n\r\n  const [preConfirmation, setPreConfirmation] = useState(false);\r\n\r\n  const visible = useContext(VisibilityContext);\r\n\r\n  useEffect(() => {\r\n    if (!visible) {\r\n      setPreConfirmation(false);\r\n    }\r\n  }, [visible]);\r\n\r\n  const onPressCallback = useCallback(() => {\r\n    if (action.requireConfirmation(state) && !preConfirmation) {\r\n      setPreConfirmation(true);\r\n    } else {\r\n      stateRef.current.apply(\r\n        action.doAction.bind(action, { isAutomatic: false }),\r\n      );\r\n      setPreConfirmation(false);\r\n    }\r\n  }, [preConfirmation]);\r\n\r\n  const isAutoPurchasing = state.run.autoPurchaseActions[action.getId()];\r\n\r\n  const onPressExpand = useCallback(\r\n    () => setExpanded(!expanded),\r\n    [setExpanded, expanded],\r\n  );\r\n\r\n  const auxOptions = useAuxOptions();\r\n\r\n  const button = useMemo(\r\n    () => (\r\n      <TooltipWrapper\r\n        tooltip={\r\n          !expanded ? (\r\n            <View>\r\n              {descriptionContainer}\r\n              {landContainer}\r\n              {!isFree && costContainer}\r\n            </View>\r\n          ) : undefined\r\n        }\r\n        tooltipId={action.getId() + \"actioncontainer\"}\r\n        tooltipPosition={TooltipPositionType.RIGHT_OF_ELEMENT}\r\n      >\r\n        <Button\r\n          key={action.getId()}\r\n          onPress={onPressCallback}\r\n          enableAutoRepress={true}\r\n          style={styles.buttonContainer}\r\n          labelStyle={!capIsEnough && { textDecorationLine: \"line-through\" }}\r\n          disabled={disabled}\r\n        >\r\n          {preConfirmation\r\n            ? t(\"Press again to confirm\")\r\n            : t(\"{{actionName}}{{autoPurchase}}\", {\r\n                actionName: action.getDisplayName(state),\r\n                autoPurchase: isAutoPurchasing ? t(\" (A)\") : \"\",\r\n              })}\r\n        </Button>\r\n      </TooltipWrapper>\r\n    ),\r\n    [\r\n      id,\r\n      action.getDisplayName(state),\r\n      capIsEnough,\r\n      disabled,\r\n      onPressCallback,\r\n      descriptionContainer,\r\n      isFree,\r\n      landContainer,\r\n      costContainer,\r\n      expanded,\r\n      preConfirmation,\r\n      isAutoPurchasing,\r\n    ],\r\n  );\r\n\r\n  // Hack *only* for channeling spells\r\n  const showWizards =\r\n    action instanceof Spell && !(action instanceof BuildingSpell);\r\n\r\n  return useMemo(() => {\r\n    return (\r\n      <View\r\n        style={[\r\n          styles.actionContainer,\r\n          auxOptions.compactLayout && { marginVertical: 4 },\r\n        ]}\r\n        key={action.getId()}\r\n      >\r\n        <View style={styles.buttonRowContainer}>\r\n          <View style={styles.buttonContainerView}>{button}</View>\r\n          <TouchableWithoutFeedback\r\n            onPress={onPressExpand}\r\n            accessibilityLabel={!expanded ? \"Expand\" : \"Collapse\"}\r\n          >\r\n            <View style={styles.expandContainer}>\r\n              <Entypo\r\n                name={!expanded ? \"chevron-right\" : \"chevron-down\"}\r\n                size={24}\r\n                color={theme.colors.onBackground}\r\n              />\r\n            </View>\r\n          </TouchableWithoutFeedback>\r\n        </View>\r\n        {expanded && (\r\n          <View style={[Styles.mt8, Styles.mb8]}>\r\n            <View style={Styles.mt8}>{descriptionContainer}</View>\r\n            {landContainer}\r\n            {!isFree && costContainer}\r\n            {canTurnOff && turnOffContainer}\r\n            {autoPurchaseContainer}\r\n            {demolishContainer}\r\n            {showWizards && isAutocastUnlocked(state) ? (\r\n              <View style={Styles.mt4}>\r\n                <SpellWizardsInfo spellId={action.getId()} />\r\n              </View>\r\n            ) : null}\r\n          </View>\r\n        )}\r\n      </View>\r\n    );\r\n  }, [\r\n    button,\r\n    id,\r\n    disabled,\r\n    canTurnOff,\r\n    turnOffContainer,\r\n    auxOptions.compactLayout,\r\n    expanded && costContainer,\r\n    expanded && descriptionContainer,\r\n    expanded && demolishContainer,\r\n    expanded && autoPurchaseContainer,\r\n    expanded,\r\n    onPressExpand,\r\n    theme,\r\n    isAutocastUnlocked(state),\r\n    showWizards,\r\n  ]);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  actionContainer: { marginVertical: 8 },\r\n  buttonRowContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  quickbarButtonContainer: {\r\n    marginLeft: 8,\r\n  },\r\n  expandContainer: {\r\n    width: 64,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignSelf: \"stretch\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n  },\r\n  costContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-start\",\r\n    marginTop: 4,\r\n  },\r\n  descriptionTextContainer: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  buttonTitle: {\r\n    fontSize: 16,\r\n    textAlign: \"center\",\r\n    paddingVertical: 1,\r\n    ...Platform.select({\r\n      android: {\r\n        fontFamily: \"sans-serif-medium\",\r\n      },\r\n      default: {\r\n        fontSize: 18,\r\n      },\r\n    }),\r\n  },\r\n  smallButtonTitle: {\r\n    fontSize: 12,\r\n  },\r\n  buttonContainerView: {\r\n    flexDirection: \"row\",\r\n    flex: 1,\r\n  },\r\n  buttonContainer: {\r\n    flex: 1,\r\n  },\r\n  buttonContainerSmall: {\r\n    marginRight: 0,\r\n  },\r\n  capTooLowText: {\r\n    color: \"#d99\",\r\n  },\r\n  turnOnRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginTop: 8,\r\n  },\r\n  turnOnQuantityContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  plusMinusContainer: {\r\n    marginLeft: 8,\r\n  },\r\n  spellButtonTitleContainer: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n  },\r\n  spellButtonTitleOnlyContainer: {\r\n    flex: 1,\r\n  },\r\n  spellButtonCostContainer: {\r\n    flexDirection: \"row\",\r\n    width: 40,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  spellManaIcon: {\r\n    height: 16,\r\n    width: 16,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    top: 1,\r\n    marginLeft: 2,\r\n  },\r\n  marginTop: {\r\n    marginTop: 8,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { Divider as PaperDivider } from \"react-native-paper\";\r\n\r\nexport default function Divider(props: any) {\r\n  return <PaperDivider {...props} />;\r\n}\r\n","import React, { useContext, useMemo } from \"react\";\r\nimport { ThemeProvider, useTheme } from \"react-native-paper\";\r\nimport { VisibilityContext } from \"./VisibilityContext\";\r\n\r\nexport function GameStateFreezer(props: { isVisible: boolean; children: any }) {\r\n  // const state = useGameState();\r\n  const theme = useTheme();\r\n  const visible = useContext(VisibilityContext);\r\n  return useMemo(() => {\r\n    return (\r\n      <VisibilityContext.Provider value={props.isVisible && visible}>\r\n        {/* <StateContext.Provider value={state}> */}\r\n        {\r\n          // @ts-ignore Seems to work\r\n          <ThemeProvider theme={theme}>{props.children}</ThemeProvider>\r\n        }\r\n        {/* </StateContext.Provider> */}\r\n      </VisibilityContext.Provider>\r\n    );\r\n  }, [\r\n    // props.isVisible ? state.global.tickCount : false,\r\n    props.isVisible && visible ? props.children : false,\r\n    props.isVisible && visible ? theme : false,\r\n  ]);\r\n}\r\n","import { Entypo } from \"@expo/vector-icons\";\r\nimport React, { useCallback, useContext, useMemo, useState } from \"react\";\r\nimport { StyleSheet, TouchableWithoutFeedback, View } from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport Divider from \"./Divider\";\r\nimport { GameStateFreezer } from \"./GameStateFreezer\";\r\nimport { Text } from \"./Text\";\r\nimport { VisibilityContext } from \"./VisibilityContext\";\r\n\r\ntype CategoryContainerProps = {\r\n  title: string;\r\n  titleStyle?: any;\r\n  containerStyle?: any;\r\n  contentContainerStyle?: any;\r\n  children: any;\r\n  initiallyExpanded?: boolean;\r\n  dividerColor?: string;\r\n};\r\n\r\nexport function CategoryHeader(\r\n  props: Omit<CategoryContainerProps, \"children\">,\r\n) {\r\n  return (\r\n    <View style={[styles.category, props.containerStyle]}>\r\n      <Text style={[styles.categoryTitle, props.titleStyle]} h4>\r\n        {props.title}\r\n      </Text>\r\n      <Divider\r\n        style={[\r\n          styles.categoryDivider,\r\n          props.dividerColor && { backgroundColor: props.dividerColor },\r\n        ]}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default function CategoryContainer(props: CategoryContainerProps) {\r\n  const [isExpanded, setExpanded] = useState(props.initiallyExpanded ?? true);\r\n  const theme = useTheme();\r\n\r\n  const visible = useContext(VisibilityContext);\r\n\r\n  const setExpandedCallback = useCallback(() => {\r\n    setExpanded(!isExpanded);\r\n  }, [setExpanded, isExpanded]);\r\n\r\n  const accessibilityLabel = isExpanded\r\n    ? t(\"{{title}}, Expanded - Press to Collapse\", { title: props.title })\r\n    : t(\"{{title}}, Collapsed - Press to Expand\", { title: props.title });\r\n\r\n  const containerStyle = useMemo(\r\n    () => [styles.category, props.containerStyle],\r\n    [props.containerStyle],\r\n  );\r\n  const titleStyle = useMemo(\r\n    () => [styles.categoryTitle, props.titleStyle],\r\n    [props.titleStyle],\r\n  );\r\n  const contentContainerStyle = useMemo(\r\n    () => [\r\n      { display: isExpanded ? \"flex\" : \"none\" },\r\n      props.contentContainerStyle,\r\n    ],\r\n    [isExpanded, props.contentContainerStyle],\r\n  );\r\n  const dividerStyle = useMemo(\r\n    () => [\r\n      styles.categoryDivider,\r\n      props.dividerColor && { backgroundColor: props.dividerColor },\r\n    ],\r\n    [props.dividerColor],\r\n  );\r\n\r\n  const header = useMemo(\r\n    () => (\r\n      <View>\r\n        <TouchableWithoutFeedback\r\n          onPress={setExpandedCallback}\r\n          accessibilityRole=\"header\"\r\n          accessibilityLabel={accessibilityLabel}\r\n        >\r\n          <View style={styles.categoryHeaderExpand}>\r\n            <Text style={titleStyle} h4>\r\n              {props.title}\r\n            </Text>\r\n            <Entypo\r\n              name={isExpanded ? \"chevron-down\" : \"chevron-right\"}\r\n              size={24}\r\n              color={theme.colors.onBackground}\r\n            />\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n        <Divider style={dividerStyle} />\r\n      </View>\r\n    ),\r\n    [\r\n      accessibilityLabel,\r\n      setExpandedCallback,\r\n      titleStyle,\r\n      props.title,\r\n      isExpanded,\r\n      theme,\r\n      dividerStyle,\r\n    ],\r\n  );\r\n\r\n  return (\r\n    <View style={containerStyle}>\r\n      {header}\r\n      <GameStateFreezer isVisible={isExpanded && visible}>\r\n        <View style={contentContainerStyle}>{props.children}</View>\r\n      </GameStateFreezer>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  category: { paddingTop: 16 },\r\n  categoryTitle: { fontWeight: \"bold\" },\r\n  categoryDivider: { height: StyleSheet.hairlineWidth * 2 },\r\n  categoryHeader: {\r\n    height: 26,\r\n  },\r\n  categoryHeaderExpand: {\r\n    height: 26,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n  },\r\n});\r\n","import React, { useMemo } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport {\r\n  ActionArea,\r\n  ActionSubcategories,\r\n  getSubcategoriesByArea,\r\n  translateActionSubcategory,\r\n} from \"../../backend/action/ActionAreas\";\r\nimport { getVisibleActionsForAreaBySubcategory } from \"../../backend/action/Actions\";\r\nimport { isExplorationUnlocked } from \"../../backend/exploration/Exploration\";\r\nimport { idOf } from \"../../backend/generic/Identifiable\";\r\nimport { ActionContainer } from \"./ActionContainer\";\r\nimport CategoryContainer from \"./CategoryContainer\";\r\nimport { useGameState } from \"./useGameState\";\r\n\r\ntype ActionsContainerProps = {\r\n  area: ActionArea;\r\n};\r\n\r\nfunction ActionSubcategoryContainer(\r\n  props: ActionsContainerProps & {\r\n    subcategory: ActionSubcategories;\r\n  },\r\n) {\r\n  const state = useGameState();\r\n  const actionsBySubcategory = getVisibleActionsForAreaBySubcategory(\r\n    state,\r\n    props.area,\r\n  );\r\n  const subcategory = props.subcategory;\r\n  const actions = actionsBySubcategory[subcategory] ?? [];\r\n  const actionNamesStr = actions.map(idOf).join(\",\");\r\n\r\n  const actionContainers = useMemo(() => {\r\n    return actions.map((action) => {\r\n      return <ActionContainer key={action.getId()} action={action} />;\r\n    });\r\n  }, [actionNamesStr]);\r\n\r\n  return useMemo(() => {\r\n    if (actions.length === 0) {\r\n      return null;\r\n    }\r\n    return (\r\n      <CategoryContainer\r\n        title={translateActionSubcategory(subcategory)}\r\n        key={subcategory}\r\n        initiallyExpanded={\r\n          subcategory != ActionSubcategories.CHANNELING ||\r\n          !isExplorationUnlocked(state)\r\n        }\r\n      >\r\n        <View style={styles.underCategoryPadding} />\r\n        <View key={actions[0].getId()}>{actionContainers[0]}</View>\r\n        {actionContainers.slice(1).map((actionContainer, idx) => {\r\n          return <View key={actions[idx + 1].getId()}>{actionContainer}</View>;\r\n        })}\r\n      </CategoryContainer>\r\n    );\r\n  }, [actionContainers, subcategory]);\r\n}\r\n\r\nexport default function ActionsContainer(props: ActionsContainerProps) {\r\n  const actionCategories = getSubcategoriesByArea(props.area).map(\r\n    (subcategory) => (\r\n      <ActionSubcategoryContainer\r\n        {...props}\r\n        subcategory={subcategory}\r\n        key={subcategory}\r\n      />\r\n    ),\r\n  );\r\n\r\n  return <View>{actionCategories}</View>;\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  underCategoryPadding: {\r\n    height: 8,\r\n  },\r\n});\r\n","import React, { useMemo } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { ActionArea } from \"../backend/action/ActionAreas\";\r\nimport {\r\n  getBoostsBonusText,\r\n  hasBoosts,\r\n} from \"../backend/boost/BoostActionBase\";\r\nimport { t } from \"../utils/I18n\";\r\nimport { ItemTile } from \"./inventory/ItemTile\";\r\nimport ActionsContainer from \"./utility/ActionsContainer\";\r\nimport { Markdown } from \"./utility/Markdown\";\r\nimport Styles from \"./utility/Styles\";\r\nimport { useGameState } from \"./utility/useGameState\";\r\n\r\nexport default function Boosts() {\r\n  const state = useGameState();\r\n  const bonusText = getBoostsBonusText(state);\r\n  const playerHasBoosts = hasBoosts(state);\r\n  return useMemo(\r\n    () => (\r\n      <View style={styles.campusContainer}>\r\n        <View style={Styles.flexRowAlignCenter}>\r\n          <ItemTile icon=\"boosts\" title={t(\"Boosts\")} />\r\n          <View style={Styles.flex}>\r\n            <Markdown>\r\n              {playerHasBoosts\r\n                ? t(\r\n                    \"You are attuned to the Boosting Lamp. It is giving you the following bonuses: **{{bonusText}}**\",\r\n                    { bonusText },\r\n                  )\r\n                : t(\"You are attuned to the Boosting Lamp.\")}\r\n            </Markdown>\r\n          </View>\r\n        </View>\r\n        <ActionsContainer area={ActionArea.BOOST} />\r\n      </View>\r\n    ),\r\n    [playerHasBoosts, bonusText],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  campusContainer: {\r\n    height: \"100%\",\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"flex-start\",\r\n    width: \"100%\",\r\n  },\r\n});\r\n","import { ImageSourcePropType } from \"react-native\";\r\n\r\nexport function sanitizeImageSourceForElectron(\r\n  imageSource?: ImageSourcePropType,\r\n): ImageSourcePropType {\r\n  // @ts-ignore This is done on purpose as it is not really a RN source\r\n  if (imageSource?.default != null) {\r\n    // @ts-ignore This is done on purpose as it is not really a RN source\r\n    return imageSource.default;\r\n  }\r\n  // @ts-ignore Also done on purpose as it can be undefined, but we swallow it\r\n  return imageSource;\r\n}\r\n","import { LinearGradient } from \"expo-linear-gradient\";\r\nimport React from \"react\";\r\nimport { Image, ImageSourcePropType, StyleSheet, View } from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { sanitizeImageSourceForElectron } from \"../utility/icons/IconUtils\";\r\n\r\nexport function EnemySpriteTile(props: {\r\n  sprite?: ImageSourcePropType;\r\n  backdropColor?: string | false;\r\n}) {\r\n  const LinearGradientComponent = LinearGradient;\r\n  const theme = useTheme();\r\n  let sprite = sanitizeImageSourceForElectron(props.sprite);\r\n  return (\r\n    <View style={[styles.tile, { borderColor: theme.colors.outlineVariant }]}>\r\n      {props.backdropColor && (\r\n        <LinearGradientComponent\r\n          colors={[`${props.backdropColor}`, `${props.backdropColor}0`]}\r\n          style={styles.gradient}\r\n        />\r\n      )}\r\n      {sprite && (\r\n        <Image resizeMode=\"contain\" source={sprite} style={styles.image} />\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  tile: {\r\n    borderWidth: StyleSheet.hairlineWidth,\r\n    height: 144,\r\n    width: 144,\r\n    justifyContent: \"center\",\r\n    alignItems: \"stretch\",\r\n  },\r\n  image: {\r\n    height: 142,\r\n    width: 142,\r\n  },\r\n  gradient: {\r\n    height: 142,\r\n    width: 142,\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    opacity: 0.2,\r\n  },\r\n});\r\n","import { Dimensions, LayoutRectangle } from 'react-native';\r\n\r\ntype ChildrenMeasurement = {\r\n  width: number;\r\n  height: number;\r\n  pageX: number;\r\n  pageY: number;\r\n};\r\n\r\ntype TooltipLayout = LayoutRectangle;\r\n\r\nexport type Measurement = {\r\n  children: ChildrenMeasurement;\r\n  tooltip: TooltipLayout;\r\n  measured: boolean;\r\n};\r\n\r\n/**\r\n * Return true when the tooltip center x-coordinate relative to the wrapped element is negative.\r\n * The tooltip will be placed at the starting x-coordinate from the wrapped element.\r\n */\r\nconst overflowLeft = (center: number): boolean => {\r\n  return center < 0;\r\n};\r\n\r\n/**\r\n * Return true when the tooltip center x-coordinate + tooltip width is greater than the layout width\r\n * The tooltip width will grow from right to left relative to the wrapped element.\r\n */\r\nconst overflowRight = (center: number, tooltipWidth: number): boolean => {\r\n  const { width: layoutWidth } = Dimensions.get('window');\r\n\r\n  return center + tooltipWidth > layoutWidth;\r\n};\r\n\r\n/**\r\n * Return true when the children y-coordinate + its height + tooltip height is greater than the layout height.\r\n * The tooltip will be placed at the top of the wrapped element.\r\n */\r\nconst overflowBottom = (\r\n  childrenY: number,\r\n  childrenHeight: number,\r\n  tooltipHeight: number\r\n): boolean => {\r\n  const { height: layoutHeight } = Dimensions.get('window');\r\n\r\n  return childrenY + childrenHeight + tooltipHeight > layoutHeight;\r\n};\r\n\r\nconst getTooltipXPosition = (\r\n  { pageX: childrenX, width: childrenWidth }: ChildrenMeasurement,\r\n  { width: tooltipWidth }: TooltipLayout\r\n): number => {\r\n  const center = childrenX + (childrenWidth - tooltipWidth) / 2;\r\n\r\n  if (overflowLeft(center)) return childrenX;\r\n\r\n  if (overflowRight(center, tooltipWidth))\r\n    return childrenX + childrenWidth - tooltipWidth;\r\n\r\n  return center;\r\n};\r\n\r\nconst getTooltipYPosition = (\r\n  { pageY: childrenY, height: childrenHeight }: ChildrenMeasurement,\r\n  { height: tooltipHeight }: TooltipLayout\r\n): number => {\r\n  if (overflowBottom(childrenY, childrenHeight, tooltipHeight))\r\n    return childrenY - tooltipHeight;\r\n\r\n  return childrenY + childrenHeight;\r\n};\r\n\r\nexport const getTooltipPosition = ({\r\n  children,\r\n  tooltip,\r\n  measured,\r\n}: Measurement): {} | { left: number; top: number } => {\r\n  if (!measured) return {};\r\n\r\n  return {\r\n    left: getTooltipXPosition(children, tooltip),\r\n    top: getTooltipYPosition(children, tooltip),\r\n  };\r\n};\r\n","import * as React from \"react\";\r\nimport {\r\n  Dimensions,\r\n  LayoutChangeEvent,\r\n  Platform,\r\n  Pressable,\r\n  StyleSheet,\r\n  View,\r\n  ViewStyle,\r\n  useWindowDimensions,\r\n} from \"react-native\";\r\n\r\nimport type { ThemeProp } from \"react-native-paper/lib/typescript/src/types\";\r\n\r\nimport { Portal, Surface, useTheme } from \"react-native-paper\";\r\nimport { Markdown } from \"../Markdown\";\r\nimport Styles from \"../Styles\";\r\nimport { VisibilityContext } from \"../VisibilityContext\";\r\nimport { addEventListener } from \"./addEventListener\";\r\nimport { Measurement, getTooltipPosition } from \"./utils\";\r\n\r\nexport type Props = {\r\n  /**\r\n   * Tooltip reference element. Needs to be able to hold a ref.\r\n   */\r\n  children: React.ReactElement;\r\n  /**\r\n   * The number of milliseconds a user must touch the element before showing the tooltip.\r\n   */\r\n  enterTouchDelay?: number;\r\n  /**\r\n   * The number of milliseconds after the user stops touching an element before hiding the tooltip.\r\n   */\r\n  leaveTouchDelay?: number;\r\n  /**\r\n   * Tooltip title\r\n   */\r\n  title: string;\r\n  /**\r\n   * @optional\r\n   */\r\n  theme?: ThemeProp;\r\n  hitSlop?: any;\r\n};\r\n\r\n/**\r\n * Tooltips display informative text when users hover over, focus on, or tap an element.\r\n *\r\n * Plain tooltips, when activated, display a text label identifying an element, such as a description of its function. Tooltips should include only short, descriptive text and avoid restating visible UI text.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <figure>\r\n *     <img class=\"small\" src=\"screenshots/tooltip.png\" />\r\n *   </figure>\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { IconButton, Tooltip } from 'react-native-paper';\r\n *\r\n * const MyComponent = () => (\r\n *   <Tooltip title=\"Selected Camera\">\r\n *     <IconButton icon=\"camera\" selected size={24} onPress={() => {}} />\r\n *   </Tooltip>\r\n * );\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nconst Tooltip = ({ children, title, hitSlop, ...rest }: Props) => {\r\n  const enterTouchDelay = 0;\r\n  const theme = useTheme();\r\n  const [visible, setVisible] = React.useState(false);\r\n\r\n  const [measurement, setMeasurement] = React.useState({\r\n    children: {},\r\n    tooltip: {},\r\n    measured: false,\r\n  });\r\n  const showTooltipTimer = React.useRef<NodeJS.Timeout>();\r\n  const hideTooltipTimer = React.useRef<NodeJS.Timeout>();\r\n  const childrenWrapperRef = React.useRef() as React.MutableRefObject<View>;\r\n  const touched = React.useRef(false);\r\n\r\n  const isWeb = Platform.OS === \"web\";\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      if (showTooltipTimer.current) {\r\n        clearTimeout(showTooltipTimer.current);\r\n      }\r\n\r\n      if (hideTooltipTimer.current) {\r\n        clearTimeout(hideTooltipTimer.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const subscription = addEventListener(Dimensions, \"change\", () =>\r\n      setVisible(false),\r\n    );\r\n\r\n    return () => subscription.remove();\r\n  }, []);\r\n\r\n  const handleOnLayout = ({ nativeEvent: { layout } }: LayoutChangeEvent) => {\r\n    childrenWrapperRef.current.measure(\r\n      (_x, _y, width, height, pageX, pageY) => {\r\n        setMeasurement({\r\n          children: { pageX, pageY, height, width },\r\n          tooltip: { ...layout },\r\n          measured: true,\r\n        });\r\n      },\r\n    );\r\n  };\r\n\r\n  const handleTouchStart = () => {\r\n    if (hideTooltipTimer.current) {\r\n      clearTimeout(hideTooltipTimer.current);\r\n    }\r\n\r\n    showTooltipTimer.current = setTimeout(() => {\r\n      touched.current = true;\r\n      setVisible(true);\r\n    }, enterTouchDelay) as unknown as NodeJS.Timeout;\r\n  };\r\n\r\n  const handleTouchEnd = () => {\r\n    touched.current = false;\r\n    if (showTooltipTimer.current) {\r\n      clearTimeout(showTooltipTimer.current);\r\n    }\r\n\r\n    // hideTooltipTimer.current = setTimeout(() => {\r\n    //   setVisible(false);\r\n    //   setMeasurement({ children: {}, tooltip: {}, measured: false });\r\n    // }, leaveTouchDelay) as unknown as NodeJS.Timeout;\r\n  };\r\n\r\n  const hide = React.useCallback(() => {\r\n    setVisible(false);\r\n    setMeasurement({ children: {}, tooltip: {}, measured: false });\r\n  }, []);\r\n\r\n  const mobilePressProps = {\r\n    onPress: React.useCallback(() => {\r\n      if (touched.current) {\r\n        return null;\r\n      } else {\r\n        return children.props.onPress?.();\r\n      }\r\n    }, [children.props]),\r\n    onPressIn: () => handleTouchStart(),\r\n    onPressOut: () => handleTouchEnd(),\r\n  };\r\n\r\n  const webPressProps = {\r\n    onHoverIn: () => {\r\n      handleTouchStart();\r\n      children.props.onHoverIn?.();\r\n    },\r\n    onHoverOut: () => {\r\n      handleTouchEnd();\r\n      hide();\r\n      children.props.onHoverOut?.();\r\n    },\r\n  };\r\n\r\n  const isTextVisible = React.useContext(VisibilityContext);\r\n\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  const innerSurface = (\r\n    <Surface\r\n      onLayout={handleOnLayout}\r\n      style={[\r\n        styles.tooltip,\r\n        {\r\n          ...getTooltipPosition(measurement as Measurement),\r\n          borderRadius: theme.roundness,\r\n          ...(measurement.measured ? styles.visible : styles.hidden),\r\n        },\r\n      ]}\r\n      testID=\"tooltip-container\"\r\n    >\r\n      <View style={Styles.flexCenter}>\r\n        <Markdown\r\n          accessibilityLiveRegion=\"polite\"\r\n          selectable={false}\r\n          style={{\r\n            color: theme.colors.onSurface,\r\n          }}\r\n        >\r\n          {title}\r\n        </Markdown>\r\n      </View>\r\n    </Surface>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {visible && (\r\n        <Portal>\r\n          {Platform.OS != \"web\" && (\r\n            <Pressable onPressIn={hide}>\r\n              <View style={[styles.fullView, { height, width }]} />\r\n            </Pressable>\r\n          )}\r\n          {Platform.OS != \"web\" ? (\r\n            <Pressable onPressIn={hide}>{innerSurface}</Pressable>\r\n          ) : (\r\n            innerSurface\r\n          )}\r\n        </Portal>\r\n      )}\r\n      {/* Need the xxPressProps in both places */}\r\n      <Pressable\r\n        ref={childrenWrapperRef}\r\n        style={[styles.pressContainer]}\r\n        hitSlop={hitSlop}\r\n        {...(isWeb ? webPressProps : mobilePressProps)}\r\n      >\r\n        <View style={!isTextVisible && styles.textInvisible}>\r\n          {React.cloneElement(children, {\r\n            ...rest,\r\n            ...(isWeb ? webPressProps : mobilePressProps),\r\n          })}\r\n        </View>\r\n      </Pressable>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  tooltip: {\r\n    alignSelf: \"flex-start\",\r\n    justifyContent: \"center\",\r\n    paddingHorizontal: 16,\r\n    maxWidth: 300,\r\n    paddingVertical: 8,\r\n  },\r\n  visible: {\r\n    opacity: 1,\r\n  },\r\n  hidden: {\r\n    opacity: 0,\r\n  },\r\n  fullView: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    backgroundColor: \"rgba(0, 0, 0, 0)\",\r\n  },\r\n  pressContainer: {\r\n    cursor: \"default\",\r\n    alignSelf: \"flex-start\",\r\n  } as ViewStyle,\r\n  textInvisible: {\r\n    display: \"none\",\r\n  },\r\n});\r\n\r\nexport default Tooltip;\r\n","import type {\r\n  NativeEventSubscription,\r\n  EmitterSubscription,\r\n} from 'react-native';\r\n\r\nexport function addEventListener<\r\n  T extends {\r\n    addEventListener: (\r\n      ...args: any\r\n    ) => NativeEventSubscription | EmitterSubscription;\r\n  } & { removeEventListener?: (...args: any) => void } & {\r\n    remove?: (...args: any) => void;\r\n  }\r\n>(Module: T, ...rest: Parameters<typeof Module.addEventListener>) {\r\n  const [eventName, handler] = rest;\r\n\r\n  let removed = false;\r\n\r\n  const subscription = Module.addEventListener(eventName, handler) ?? {\r\n    remove: () => {\r\n      if (removed) {\r\n        return;\r\n      }\r\n\r\n      Module.removeEventListener?.(eventName, handler);\r\n      Module.remove?.(eventName, handler);\r\n      removed = true;\r\n    },\r\n  };\r\n\r\n  return subscription;\r\n}\r\n\r\nexport function addListener<\r\n  T extends {\r\n    addListener: (...args: any) => EmitterSubscription;\r\n    removeEventListener: (...args: any) => void;\r\n  }\r\n>(Module: T, ...rest: Parameters<typeof Module.addListener>) {\r\n  const [eventName, handler] = rest;\r\n\r\n  let removed = false;\r\n\r\n  const subscription = Module.addListener(eventName, handler) ?? {\r\n    remove: () => {\r\n      if (removed) {\r\n        return;\r\n      }\r\n\r\n      Module.removeEventListener(eventName, handler);\r\n      removed = true;\r\n    },\r\n  };\r\n\r\n  return subscription;\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport {\r\n  CombatStat,\r\n  calculatePlayerAccuracyPoints,\r\n  calculatePlayerAttack,\r\n  calculatePlayerAttackDelaySec,\r\n  calculatePlayerCritPoints,\r\n  calculatePlayerDefense,\r\n  calculatePlayerDodgePoints,\r\n  calculatePlayerMaxHP,\r\n  explainPlayerCombatStat,\r\n} from \"../../backend/exploration/CombatStats\";\r\nimport { getCurrentPlayerHP } from \"../../backend/exploration/Exploration\";\r\nimport { Enemy } from \"../../backend/exploration/enemies/Enemy\";\r\nimport { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport Styles from \"./Styles\";\r\nimport { Text } from \"./Text\";\r\nimport { GameIcon } from \"./icons/GameIcon\";\r\nimport Tooltip from \"./tooltip/PaperTooltip\";\r\nimport { useGameState } from \"./useGameState\";\r\n\r\nfunction CombatStatsRow(props: {\r\n  stat: string;\r\n  icon: string;\r\n  value: string;\r\n  valueMax?: string;\r\n  explanation?: string;\r\n  hideText?: boolean;\r\n}) {\r\n  if (props.explanation != null && props.explanation != \"\") {\r\n    return (\r\n      <View style={styles.inlineRow}>\r\n        <View style={styles.inlineRow}>\r\n          <GameIcon icon={props.icon} style={styles.icon} small />\r\n          {!props.hideText && (\r\n            <Text doNotScaleFonts={true}>\r\n              {t(\"{{stat}}: \", { stat: props.stat })}\r\n            </Text>\r\n          )}\r\n        </View>\r\n        <Tooltip title={props.explanation}>\r\n          {props.valueMax != null ? (\r\n            <Text doNotScaleFonts={true}>\r\n              <Text doNotScaleFonts={true}>\r\n                {t(\"{{value}}/\", { value: props.value })}\r\n              </Text>\r\n              <Text doNotScaleFonts={true} style={Styles.underlined}>\r\n                {t(\"{{value}}\", { value: props.valueMax })}\r\n              </Text>\r\n            </Text>\r\n          ) : (\r\n            <Text doNotScaleFonts={true} style={Styles.underlined}>\r\n              {t(\"{{value}}\", { value: props.value })}\r\n            </Text>\r\n          )}\r\n        </Tooltip>\r\n      </View>\r\n    );\r\n  }\r\n  return (\r\n    <View style={styles.inlineRow}>\r\n      <View style={styles.inlineRow}>\r\n        <GameIcon icon={props.icon} style={styles.icon} small />\r\n        {!props.hideText && (\r\n          <Text doNotScaleFonts={true}>\r\n            {t(\"{{stat}}: \", { stat: props.stat })}\r\n          </Text>\r\n        )}\r\n      </View>\r\n      <Text doNotScaleFonts={true}>\r\n        {props.valueMax != null\r\n          ? t(\"{{value}}/{{valueMax}}\", {\r\n              value: props.value,\r\n              valueMax: props.valueMax,\r\n            })\r\n          : t(\"{{value}}\", {\r\n              value: props.value,\r\n            })}\r\n      </Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst CombatStatsRowMemo = React.memo(CombatStatsRow);\r\n\r\nexport type CombatStatsDisplay = {\r\n  currentHP: number;\r\n  maxHP: number;\r\n  maxHPExplanation?: string;\r\n  attack: number;\r\n  attackExplanation?: string;\r\n  attackDelay: number;\r\n  attackDelayExplanation?: string;\r\n  defense: number;\r\n  defenseExplanation?: string;\r\n  accuracy: number;\r\n  accuracyExplanation?: string;\r\n  dodge: number;\r\n  dodgeExplanation?: string;\r\n  crit: number;\r\n  critExplanation?: string;\r\n};\r\n\r\nexport function PlayerCombatStatsViewer(props: {\r\n  hideText?: boolean;\r\n  isVisible?: boolean;\r\n}) {\r\n  const state = useGameState();\r\n  const maxHPUnit = useMemo(\r\n    () => ({\r\n      unit: t(\" Max:hp:\"),\r\n    }),\r\n    [],\r\n  );\r\n  const attackUnit = useMemo(\r\n    () => ({\r\n      unit: \":attack:\",\r\n    }),\r\n    [],\r\n  );\r\n  const attackDelayUnit = useMemo(() => ({ unit: t(\"s\") }), []);\r\n  const defenseUnit = useMemo(\r\n    () => ({\r\n      unit: \":defense:\",\r\n    }),\r\n    [],\r\n  );\r\n  const accuracyUnit = useMemo(\r\n    () => ({\r\n      unit: \":accuracy:\",\r\n    }),\r\n    [],\r\n  );\r\n  const dodgeUnit = useMemo(\r\n    () => ({\r\n      unit: \":dodge:\",\r\n    }),\r\n    [],\r\n  );\r\n  const critChanceUnit = useMemo(\r\n    () => ({\r\n      unit: \":critChance:\",\r\n    }),\r\n    [],\r\n  );\r\n  const combatStatsDisplayObject = {\r\n    currentHP: getCurrentPlayerHP(state),\r\n    maxHP: calculatePlayerMaxHP(state),\r\n    maxHPExplanation: explainPlayerCombatStat(\r\n      state,\r\n      CombatStat.MaxHP,\r\n      maxHPUnit,\r\n    ),\r\n    attack: calculatePlayerAttack(state),\r\n    attackExplanation: explainPlayerCombatStat(\r\n      state,\r\n      CombatStat.Attack,\r\n      attackUnit,\r\n    ),\r\n    attackDelay: calculatePlayerAttackDelaySec(state),\r\n    attackDelayExplanation: explainPlayerCombatStat(\r\n      state,\r\n      CombatStat.AttackDelay,\r\n      attackDelayUnit,\r\n    ),\r\n    defense: calculatePlayerDefense(state),\r\n    defenseExplanation: explainPlayerCombatStat(\r\n      state,\r\n      CombatStat.Defense,\r\n      defenseUnit,\r\n    ),\r\n    accuracy: calculatePlayerAccuracyPoints(state),\r\n    accuracyExplanation: explainPlayerCombatStat(\r\n      state,\r\n      CombatStat.Accuracy,\r\n      accuracyUnit,\r\n    ),\r\n    dodge: calculatePlayerDodgePoints(state),\r\n    dodgeExplanation: explainPlayerCombatStat(\r\n      state,\r\n      CombatStat.Dodge,\r\n      dodgeUnit,\r\n    ),\r\n    crit: calculatePlayerCritPoints(state),\r\n    critExplanation: explainPlayerCombatStat(\r\n      state,\r\n      CombatStat.Crit,\r\n      critChanceUnit,\r\n    ),\r\n  };\r\n  return useMemo(\r\n    () => (\r\n      <CombatStatsViewer\r\n        {...props}\r\n        showCurrentHP={true}\r\n        combatStats={combatStatsDisplayObject}\r\n      />\r\n    ),\r\n    [props.hideText, props.isVisible, JSON.stringify(combatStatsDisplayObject)],\r\n  );\r\n}\r\n\r\nexport function EnemyCombatStatsViewer(props: {\r\n  enemy: Enemy;\r\n  obfuscateValues?: boolean;\r\n  hideText?: boolean;\r\n  isVisible?: boolean;\r\n}) {\r\n  const enemy = props.enemy;\r\n  const combatStatsDisplayObject = {\r\n    currentHP: 0,\r\n    maxHP: enemy.getBaseStats().maxHP,\r\n    attack: enemy.getBaseStats().attack,\r\n    attackDelay: enemy.getBaseStats().attackDelay,\r\n    defense: enemy.getBaseStats().defense,\r\n    hpRegen: 0,\r\n    accuracy: enemy.getBaseStats().accuracy,\r\n    dodge: enemy.getBaseStats().dodge,\r\n    crit: enemy.getBaseStats().crit,\r\n  };\r\n  return useMemo(\r\n    () => (\r\n      <CombatStatsViewer\r\n        {...props}\r\n        showCurrentHP={false}\r\n        combatStats={combatStatsDisplayObject}\r\n      />\r\n    ),\r\n    [\r\n      props.hideText,\r\n      props.isVisible,\r\n      props.obfuscateValues,\r\n      JSON.stringify(combatStatsDisplayObject),\r\n    ],\r\n  );\r\n}\r\n\r\nexport function CombatStatsViewer(props: {\r\n  obfuscateValues?: boolean;\r\n  hideText?: boolean;\r\n  isVisible?: boolean;\r\n  showCurrentHP?: boolean;\r\n  combatStats: CombatStatsDisplay;\r\n}) {\r\n  const combatStats = props.combatStats;\r\n  return useMemo(\r\n    () => (\r\n      <View style={styles.container}>\r\n        <CombatStatsRowMemo\r\n          stat=\"HP\"\r\n          icon=\"hp\"\r\n          hideText={props.hideText}\r\n          value={\r\n            props.obfuscateValues\r\n              ? t(\"???\")\r\n              : props.showCurrentHP\r\n              ? formatNumber(Math.ceil(combatStats.currentHP))\r\n              : formatNumber(Math.ceil(combatStats.maxHP))\r\n          }\r\n          valueMax={\r\n            props.showCurrentHP\r\n              ? formatNumber(Math.ceil(combatStats.maxHP))\r\n              : props.obfuscateValues\r\n              ? t(\"???\")\r\n              : undefined\r\n          }\r\n          explanation={\r\n            !props.obfuscateValues ? combatStats.maxHPExplanation : null\r\n          }\r\n        />\r\n        <CombatStatsRowMemo\r\n          stat=\"Attack\"\r\n          icon=\"attack\"\r\n          hideText={props.hideText}\r\n          value={\r\n            props.obfuscateValues ? t(\"???\") : formatNumber(combatStats.attack)\r\n          }\r\n          explanation={\r\n            !props.obfuscateValues ? combatStats.attackExplanation : null\r\n          }\r\n        />\r\n        <CombatStatsRowMemo\r\n          stat=\"Attack Delay\"\r\n          icon=\"attackDelay\"\r\n          hideText={props.hideText}\r\n          value={\r\n            props.obfuscateValues\r\n              ? t(\"???\")\r\n              : t(\"{{value}}s\", {\r\n                  value: formatNumber(combatStats.attackDelay, {\r\n                    showDecimals: true,\r\n                  }),\r\n                })\r\n          }\r\n          explanation={\r\n            !props.obfuscateValues ? combatStats.attackDelayExplanation : null\r\n          }\r\n        />\r\n        <CombatStatsRowMemo\r\n          stat=\"Defense\"\r\n          icon=\"defense\"\r\n          hideText={props.hideText}\r\n          value={\r\n            props.obfuscateValues ? t(\"???\") : formatNumber(combatStats.defense)\r\n          }\r\n          explanation={\r\n            !props.obfuscateValues ? combatStats.defenseExplanation : null\r\n          }\r\n        />\r\n        {combatStats.accuracy != 100 && (\r\n          <CombatStatsRowMemo\r\n            stat=\"Accuracy\"\r\n            icon=\"accuracy\"\r\n            hideText={props.hideText}\r\n            value={\r\n              props.obfuscateValues\r\n                ? t(\"???\")\r\n                : formatNumber(combatStats.accuracy, {\r\n                    showDecimals: false,\r\n                  })\r\n            }\r\n            explanation={\r\n              !props.obfuscateValues ? combatStats.accuracyExplanation : null\r\n            }\r\n          />\r\n        )}\r\n        {combatStats.dodge != 100 && (\r\n          <CombatStatsRowMemo\r\n            stat=\"Dodge\"\r\n            icon=\"dodge\"\r\n            hideText={props.hideText}\r\n            value={\r\n              props.obfuscateValues\r\n                ? t(\"???\")\r\n                : formatNumber(combatStats.dodge, {\r\n                    showDecimals: false,\r\n                  })\r\n            }\r\n            explanation={\r\n              !props.obfuscateValues ? combatStats.dodgeExplanation : null\r\n            }\r\n          />\r\n        )}\r\n        {combatStats.crit > 0 && (\r\n          <CombatStatsRowMemo\r\n            stat=\"Critical\"\r\n            icon=\"critChance\"\r\n            hideText={props.hideText}\r\n            value={\r\n              props.obfuscateValues\r\n                ? t(\"???\")\r\n                : formatNumber(combatStats.crit, {\r\n                    showDecimals: false,\r\n                  })\r\n            }\r\n            explanation={\r\n              !props.obfuscateValues ? combatStats.critExplanation : null\r\n            }\r\n          />\r\n        )}\r\n      </View>\r\n    ),\r\n    [\r\n      props.isVisible !== false ? JSON.stringify(combatStats) : false,\r\n      props.hideText,\r\n      props.showCurrentHP,\r\n    ],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"stretch\",\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-end\",\r\n  },\r\n  inlineRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  icon: {\r\n    marginRight: 2,\r\n  },\r\n});\r\n","import { Entypo } from \"@expo/vector-icons\";\r\nimport React, { useMemo } from \"react\";\r\nimport { StyleSheet, TouchableWithoutFeedback, View } from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { getCumulativeLosses } from \"../../backend/exploration/Exploration\";\r\nimport { getUnlockedDungeons } from \"../../backend/exploration/dungeons/Dungeons\";\r\nimport {\r\n  BestiaryState,\r\n  Enemy,\r\n  getCumulativeEnemyKills,\r\n  getCumulativeEnemyKillsFromCreatures,\r\n} from \"../../backend/exploration/enemies/Enemy\";\r\nimport { Items } from \"../../backend/items/Items\";\r\nimport { RoundingMethod, formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { EnemySpriteTile } from \"../exploration/EnemySpriteTile\";\r\nimport CategoryContainer from \"./CategoryContainer\";\r\nimport { EnemyCombatStatsViewer } from \"./CombatStatsViewer\";\r\nimport { Markdown } from \"./Markdown\";\r\nimport { Text } from \"./Text\";\r\nimport { useGameState } from \"./useGameState\";\r\n\r\nfunction BestiaryEnemyContents(props: { enemy: Enemy }) {\r\n  const enemy = props.enemy;\r\n  const id = enemy.getId();\r\n  const name = enemy.getName();\r\n  const state = useGameState();\r\n\r\n  const unlockedFloors = getUnlockedDungeons(state)\r\n    .map((dungeon) =>\r\n      dungeon.getDungeonFloors().filter((floor) => floor.isUnlocked(state)),\r\n    )\r\n    .flat();\r\n\r\n  const bestiaryState = enemy.getBestiaryState(state);\r\n\r\n  const foundInDungeons = unlockedFloors\r\n    .filter((floor) =>\r\n      floor\r\n        .getExplorationPossibilities(state, false)\r\n        .find((possibility) => possibility.transforms?.enemy == enemy),\r\n    )\r\n    .map((floor) => {\r\n      const possibilities = floor.getBaseExplorationPossibilities(state);\r\n      const weight =\r\n        possibilities.find(\r\n          (possibility) => possibility.transforms?.enemy == enemy,\r\n        )?.weight ?? 0;\r\n      const totalWeight = possibilities.reduce(\r\n        (prev, current) => prev + current.weight,\r\n        0,\r\n      );\r\n      return `*${floor.getFloorName()}*: ${formatNumber(\r\n        (weight * 100) / totalWeight,\r\n        { showDecimals: true },\r\n      )}%`;\r\n    })\r\n    .concat(\r\n      unlockedFloors\r\n        .filter((floor) => floor.getBoss(state) == enemy)\r\n        .map((floor) =>\r\n          t(\"*{{dungeonFloorName}}* (Boss)\", {\r\n            dungeonFloorName: floor.getFloorName(),\r\n          }),\r\n        ),\r\n    )\r\n    .join(t(\", \"));\r\n\r\n  const showDrops = bestiaryState == BestiaryState.Loot;\r\n\r\n  const dropsText = [\r\n    enemy.getCoinsAwardedBase(state) > 0\r\n      ? t(\"{{coinsAwarded}}:coins:\", {\r\n          coinsAwarded: formatNumber(enemy.getCoinsAwardedBase(state)),\r\n        })\r\n      : null,\r\n    enemy.getMonstiumAwardedBase(state) > 0\r\n      ? t(\"{{monstiumAwarded}}:monstium:\", {\r\n          monstiumAwarded: formatNumber(enemy.getMonstiumAwardedBase(state)),\r\n        })\r\n      : null,\r\n  ]\r\n    .concat(\r\n      enemy.getItemsAwardedBase(state).map((loot) => {\r\n        if (loot.chance == 0) {\r\n          return null;\r\n        }\r\n        const item = Items.getById(loot.itemId);\r\n        return t(\"{{amount}}x{{itemIcon}}*{{itemName}}* ({{lootChancePct}}%)\", {\r\n          amount: loot.amount,\r\n          itemIcon: `:${loot.itemId}:`,\r\n          itemName: item.getName(loot.params ?? item.getDefaultParams()),\r\n          lootChancePct: formatNumber(loot.chance * 100, {\r\n            showDecimals: true,\r\n            roundingMethod: RoundingMethod.UP,\r\n          }),\r\n        });\r\n      }),\r\n    )\r\n    .filter((v) => v != null)\r\n    .join(t(\", \"));\r\n\r\n  const cumulativeKills = getCumulativeEnemyKills(state, enemy.getId());\r\n  const cumulativeLosses = getCumulativeLosses(state, enemy.getId());\r\n  const cumulativeCreatureKills = getCumulativeEnemyKillsFromCreatures(\r\n    state,\r\n    enemy.getId(),\r\n  );\r\n\r\n  const generalText1 = t(\"Times defeated: {{cumulativeKills}}\", {\r\n    cumulativeKills: formatNumber(cumulativeKills),\r\n  });\r\n  const generalText2 = t(\"Times you ran away: {{cumulativeLosses}}\", {\r\n    cumulativeLosses: formatNumber(cumulativeLosses),\r\n  });\r\n\r\n  const showEnemyStats = bestiaryState != BestiaryState.SpriteOnly;\r\n  const showTip =\r\n    bestiaryState != BestiaryState.SpriteOnly && enemy.getTips() != null;\r\n  const tips = enemy.getTips();\r\n\r\n  const enemyContentContainer = useMemo(() => {\r\n    return (\r\n      <View style={styles.contentContainer}>\r\n        <View style={styles.row}>\r\n          <View style={styles.column}>\r\n            <EnemySpriteTile sprite={enemy.getPicture(state)} />\r\n          </View>\r\n          <View style={styles.column}>\r\n            <CategoryContainer title={t(\"Base stats\")}>\r\n              <View style={styles.categoryContents}>\r\n                <EnemyCombatStatsViewer\r\n                  enemy={enemy}\r\n                  obfuscateValues={!showEnemyStats}\r\n                />\r\n              </View>\r\n            </CategoryContainer>\r\n            <CategoryContainer title={t(\"General\")}>\r\n              <View style={styles.categoryContents}>\r\n                <Markdown>{generalText1}</Markdown>\r\n                <Markdown>{generalText2}</Markdown>\r\n              </View>\r\n            </CategoryContainer>\r\n          </View>\r\n        </View>\r\n        <View style={styles.row}>\r\n          <View style={styles.column}>\r\n            <CategoryContainer title={t(\"Found in\")}>\r\n              <View style={styles.categoryContents}>\r\n                <Markdown>\r\n                  {foundInDungeons != \"\" ? foundInDungeons : t(\"???\")}\r\n                </Markdown>\r\n              </View>\r\n            </CategoryContainer>\r\n          </View>\r\n          <View style={styles.column}>\r\n            <CategoryContainer title={t(\"Base loot\")}>\r\n              <View style={styles.categoryContents}>\r\n                <Markdown>\r\n                  {!showDrops\r\n                    ? t(\r\n                        \"You must defeat this enemy more times to see loot information!\",\r\n                      )\r\n                    : dropsText != \"\"\r\n                    ? dropsText\r\n                    : t(\"No loot\")}\r\n                </Markdown>\r\n              </View>\r\n            </CategoryContainer>\r\n          </View>\r\n        </View>\r\n        {showTip && (\r\n          <View>\r\n            <CategoryContainer title={t(\"Combat tips (from hired wizard)\")}>\r\n              <View style={styles.categoryContents}>\r\n                <Markdown>{tips}</Markdown>\r\n              </View>\r\n            </CategoryContainer>\r\n          </View>\r\n        )}\r\n      </View>\r\n    );\r\n  }, [\r\n    enemy,\r\n    foundInDungeons,\r\n    dropsText,\r\n    generalText1,\r\n    generalText2,\r\n    showTip,\r\n    tips,\r\n    showEnemyStats,\r\n  ]);\r\n\r\n  return enemyContentContainer;\r\n}\r\n\r\nexport function BestiaryEnemyContainer(props: {\r\n  enemy: Enemy;\r\n  collapsed?: boolean;\r\n  onPressExpand?: () => void;\r\n}) {\r\n  const enemy = props.enemy;\r\n  const id = enemy.getId();\r\n  const name = enemy.getName();\r\n\r\n  const theme = useTheme();\r\n\r\n  return useMemo(() => {\r\n    return (\r\n      <View style={styles.helpContainer} key={id}>\r\n        <TouchableWithoutFeedback\r\n          accessibilityRole=\"button\"\r\n          accessibilityHint=\"Expand\"\r\n          onPress={props.onPressExpand}\r\n        >\r\n          <View style={styles.topRowContainer}>\r\n            <Text h3 key={id} style={[styles.topContainer]}>\r\n              {t(\"{{enemyName}}{{bossText}}\", {\r\n                enemyName: name,\r\n                bossText: enemy.isBoss() ? t(\" (Boss)\") : \"\",\r\n              })}\r\n            </Text>\r\n            <View style={styles.expandContainer}>\r\n              <Entypo\r\n                name={props.collapsed ? \"chevron-right\" : \"chevron-down\"}\r\n                size={24}\r\n                color={theme.colors.onBackground}\r\n              />\r\n            </View>\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n        {!props.collapsed && (\r\n          <View>\r\n            <BestiaryEnemyContents enemy={enemy} />\r\n          </View>\r\n        )}\r\n      </View>\r\n    );\r\n  }, [theme, name, id, props.collapsed, props.onPressExpand]);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  helpContainer: { marginVertical: 8 },\r\n  topRowContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n  },\r\n  expandContainer: {\r\n    width: 40,\r\n  },\r\n  descriptionTextContainer: {\r\n    marginBottom: 8,\r\n    marginTop: 8,\r\n    marginHorizontal: 8,\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  descriptionViewer: { flex: 1, justifyContent: \"center\" },\r\n  topContainer: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n  disabledStorylineText: {\r\n    color: \"#aaa\",\r\n  },\r\n  contentContainer: {\r\n    paddingVertical: 8,\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n  },\r\n  categoryContents: {\r\n    marginTop: 8,\r\n  },\r\n  column: {\r\n    flex: 1,\r\n    marginHorizontal: 4,\r\n  },\r\n});\r\n","import React, { useCallback, useMemo, useState } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { getBestiaryVisibleEnemies } from \"../../backend/exploration/enemies/Enemy\";\r\nimport { BestiaryEnemyContainer } from \"../utility/BestiaryEnemyContainer\";\r\nimport Divider from \"../utility/Divider\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\n\r\nfunction BestiaryContainer() {\r\n  const [expandedEnemyId, setExpandedEnemyId] = useState(\"\");\r\n  const setEnemyCallback = useCallback(\r\n    (enemyId: string) => {\r\n      if (expandedEnemyId == enemyId) {\r\n        setExpandedEnemyId(\"\");\r\n      } else {\r\n        setExpandedEnemyId(enemyId);\r\n      }\r\n    },\r\n    [expandedEnemyId],\r\n  );\r\n\r\n  const state = useGameState();\r\n  const allEnemies = getBestiaryVisibleEnemies(state);\r\n\r\n  const enemyString = allEnemies.map((enemy) => enemy.getId()).join(\",\");\r\n\r\n  const enemyContainers = useMemo(\r\n    () =>\r\n      allEnemies.map((enemy) => {\r\n        return (\r\n          <BestiaryEnemyContainer\r\n            key={enemy.getId()}\r\n            enemy={enemy}\r\n            collapsed={expandedEnemyId != enemy.getId()}\r\n            onPressExpand={setEnemyCallback.bind(null, enemy.getId())}\r\n          />\r\n        );\r\n      }),\r\n    [enemyString, expandedEnemyId, setExpandedEnemyId],\r\n  );\r\n\r\n  return useMemo(() => {\r\n    if (allEnemies.length === 0) {\r\n      return null;\r\n    }\r\n    return (\r\n      <View>\r\n        {enemyContainers.map((enemyContainer, idx) => {\r\n          return (\r\n            <View key={allEnemies[idx].getId()}>\r\n              <Divider />\r\n              {enemyContainer}\r\n            </View>\r\n          );\r\n        })}\r\n        <Divider />\r\n      </View>\r\n    );\r\n  }, [enemyString, enemyContainers]);\r\n}\r\n\r\nexport default function Bestiary() {\r\n  return (\r\n    <View style={styles.bestiaryContainer}>\r\n      <BestiaryContainer />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"flex-start\",\r\n    width: \"100%\",\r\n  },\r\n  headerContainer: {\r\n    marginBottom: 16,\r\n  },\r\n  valueText: {\r\n    minWidth: 60,\r\n    textAlign: \"right\",\r\n    marginLeft: 8,\r\n  },\r\n  valueTextLong: {\r\n    minWidth: 112,\r\n  },\r\n  bestiaryContainer: {\r\n    marginTop: 16,\r\n  },\r\n  captionText: {\r\n    flex: 1,\r\n  },\r\n});\r\n","export enum ItemTagEnum {\r\n  Consumable = \"Consumable\",\r\n  Familiar = \"Familiar\",\r\n  Material = \"Material\",\r\n  Equipment = \"Equipment\",\r\n  Hand = \"Hand\",\r\n  Body = \"Body\",\r\n  Accessory = \"Accessory\",\r\n  Pouch = \"Pouch\",\r\n  QuestItem = \"QuestItem\",\r\n}\r\n","import mem from \"mem\";\r\nimport { formatNumber } from \"../utils/FormattingUtils\";\r\nimport { t } from \"../utils/I18n\";\r\nimport { GameState, GameStateTransform } from \"./GameState\";\r\nimport { Action } from \"./action/Action\";\r\nimport { getActionById } from \"./action/Actions\";\r\nimport { getAmountOfItem, isItemOccurrenceEqual } from \"./items/Inventory\";\r\nimport type { Item } from \"./items/Item\";\r\nimport { ItemOccurrence } from \"./items/Item\";\r\nimport { ItemTagEnum } from \"./items/ItemTagEnum\";\r\nimport { Items } from \"./items/Items\";\r\nimport { ConsumableItem } from \"./items/consumable/ConsumableItem\";\r\n\r\nexport interface QuickbarItemData {\r\n  type: \"item\";\r\n  occurrence: ItemOccurrence;\r\n}\r\n\r\nexport interface QuickbarActionData {\r\n  type: \"action\";\r\n  id: string;\r\n}\r\n\r\nexport type QuickbarData = QuickbarItemData | QuickbarActionData;\r\n\r\nexport interface QuickbarAction {\r\n  getDisplayName(state: GameState): string;\r\n  isEnabled(state: GameState): boolean;\r\n  isActive(state: GameState): boolean;\r\n  getTransform(state: GameState): GameStateTransform;\r\n  toQuickbarData(): QuickbarData;\r\n}\r\n\r\nclass QuickbarItem {\r\n  data: QuickbarItemData;\r\n\r\n  constructor(data: QuickbarItemData) {\r\n    this.data = data;\r\n  }\r\n\r\n  getItem(): Item {\r\n    const itemOccurrence = this.data.occurrence;\r\n    const item = Items.getById(itemOccurrence.itemId);\r\n    return item;\r\n  }\r\n\r\n  isActive(state: GameState): boolean {\r\n    const item = this.getItem();\r\n    return item.isActive(state);\r\n  }\r\n\r\n  getDisplayName(state: GameState): string {\r\n    const item = this.getItem();\r\n    const name = item.getName(this.data.occurrence.params);\r\n    const amount = getAmountOfItem(this.data.occurrence, state);\r\n    let cooldown = 0;\r\n    if (item.getTags().includes(ItemTagEnum.Consumable)) {\r\n      cooldown = (item as ConsumableItem).getCooldownLeftSec(state);\r\n    }\r\n    return t(\"{{name}}{{amountText}}{{cooldownText}}\", {\r\n      name,\r\n      amountText: amount != 1 ? t(\" ({{amount}})\", { amount }) : \"\",\r\n      cooldownText:\r\n        cooldown > 0\r\n          ? t(\" ({{cooldown}} sec)\", {\r\n              cooldown: formatNumber(cooldown, {\r\n                showDecimals: false,\r\n              }),\r\n            })\r\n          : \"\",\r\n    });\r\n  }\r\n\r\n  isEnabled(state: GameState): boolean {\r\n    return (\r\n      this.getItem().getPrimaryAction(state, this.data.occurrence.params)\r\n        ?.isEnabled || false\r\n    );\r\n  }\r\n\r\n  getTransform(state: GameState): GameStateTransform {\r\n    return (\r\n      this.getItem().getPrimaryAction(state, this.data.occurrence.params)\r\n        ?.transform || ((state) => state)\r\n    );\r\n  }\r\n\r\n  toQuickbarData(): QuickbarData {\r\n    return this.data;\r\n  }\r\n}\r\n\r\nconst doActionMemoized = mem((action: Action) => {\r\n  return action.doAction.bind(action, {\r\n    isAutomatic: false,\r\n  });\r\n});\r\n\r\nexport class QuickbarActionImpl {\r\n  data: QuickbarActionData;\r\n\r\n  constructor(data: QuickbarActionData) {\r\n    this.data = data;\r\n  }\r\n\r\n  getAction(): Action {\r\n    return getActionById(this.data.id);\r\n  }\r\n\r\n  isActive(state: GameState): boolean {\r\n    return this.getAction().isActive(state);\r\n  }\r\n\r\n  getDisplayName(state: GameState): string {\r\n    return this.getAction().getDisplayName(state);\r\n  }\r\n\r\n  isEnabled(state: GameState): boolean {\r\n    return this.getAction().isEnabled(state);\r\n  }\r\n\r\n  getTransform(state: GameState): GameStateTransform {\r\n    return doActionMemoized(this.getAction());\r\n  }\r\n\r\n  toQuickbarData(): QuickbarData {\r\n    return this.data;\r\n  }\r\n}\r\n\r\nfunction getCurrentQuickbar(state: GameState): QuickbarData[] {\r\n  let currentQuickbar = state.world.quickbars?.[state.world.currentQuickbar];\r\n  if (currentQuickbar == null) {\r\n    currentQuickbar = [];\r\n    state.world.quickbars[state.world.currentQuickbar] = currentQuickbar;\r\n  }\r\n  return currentQuickbar;\r\n}\r\n\r\nexport function getQuickbarActions(state: GameState): QuickbarAction[] {\r\n  return getCurrentQuickbar(state).map((quickbarData) => {\r\n    if (quickbarData.type == \"item\") {\r\n      return new QuickbarItem(quickbarData);\r\n    } else {\r\n      return new QuickbarActionImpl(quickbarData);\r\n    }\r\n  });\r\n}\r\n\r\nexport function addActionToQuickbar(\r\n  state: GameState,\r\n  action: Action,\r\n): GameState {\r\n  return addToQuickbar(state, {\r\n    type: \"action\",\r\n    id: action.getId(),\r\n  });\r\n}\r\n\r\nexport function addItemToQuickbar(\r\n  state: GameState,\r\n  itemOccurrence: ItemOccurrence,\r\n): GameState {\r\n  return addToQuickbar(state, {\r\n    type: \"item\",\r\n    occurrence: itemOccurrence,\r\n  });\r\n}\r\n\r\nexport function addToQuickbar(state: GameState, data: QuickbarData): GameState {\r\n  if (isInQuickbar(state, data)) {\r\n    return state;\r\n  }\r\n  if (isQuickbarFull(state)) {\r\n    return state;\r\n  }\r\n  const newQuickbar = getCurrentQuickbar(state);\r\n  newQuickbar.push(data);\r\n  return state;\r\n}\r\n\r\nexport function removeFromQuickbar(\r\n  state: GameState,\r\n  data: QuickbarData,\r\n): GameState {\r\n  const stringifiedData = JSON.stringify(data);\r\n  const index = getCurrentQuickbar(state).findIndex(\r\n    (element) => JSON.stringify(element) == stringifiedData,\r\n  );\r\n  if (index < 0) {\r\n    return state;\r\n  }\r\n  getCurrentQuickbar(state).splice(index, 1);\r\n  return state;\r\n}\r\n\r\nexport function isQuickbarFull(state: GameState): boolean {\r\n  return getCurrentQuickbar(state).length >= 10;\r\n}\r\n\r\nexport function isInQuickbar(state: GameState, data: QuickbarData): boolean {\r\n  return (\r\n    getCurrentQuickbar(state).findIndex(\r\n      (element) =>\r\n        (element.type == data.type &&\r\n          data.type == \"action\" &&\r\n          element.type == \"action\" &&\r\n          data.id == element.id) ||\r\n        (data.type == \"item\" &&\r\n          element.type == \"item\" &&\r\n          isItemOccurrenceEqual(data.occurrence, element.occurrence)),\r\n    ) >= 0\r\n  );\r\n}\r\n","import mem from \"mem\";\r\nimport memoize from \"sonic-memoize\";\r\nimport { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { incrementAccumulatorVariable } from \"../AccumulatorVariables\";\r\nimport { GameState, GameStateTransform } from \"../GameState\";\r\nimport { addItemToQuickbar, isInQuickbar, isQuickbarFull } from \"../Quickbar\";\r\nimport {\r\n  Resource,\r\n  getResourceAmount,\r\n  getResourceCap,\r\n  grantResource,\r\n} from \"../Resources\";\r\nimport { ActionEffect } from \"../action/Action\";\r\nimport {\r\n  TransformationType,\r\n  applyTransformations,\r\n  applyTransformationsCached,\r\n  applyTransformationsPermaCached,\r\n  explainTransformationsText,\r\n  registerTransformation,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport {\r\n  addToInventory,\r\n  getAmountOfItem,\r\n  removeFromInventory,\r\n} from \"./Inventory\";\r\nimport { ItemTagEnum } from \"./ItemTagEnum\";\r\nimport { isItemQualityUnlocked } from \"./Items\";\r\n\r\nexport type ItemTag = ItemTagEnum;\r\n\r\nexport function translateItemTag(tag: ItemTagEnum): string {\r\n  switch (tag) {\r\n    case ItemTagEnum.Consumable:\r\n      return t(\"Consumable\");\r\n    case ItemTagEnum.Material:\r\n      return t(\"Material\");\r\n    case ItemTagEnum.Familiar:\r\n      return t(\"Familiar\");\r\n    case ItemTagEnum.Equipment:\r\n      return t(\"Equipment\");\r\n    case ItemTagEnum.Hand:\r\n      return t(\"Hand\");\r\n    case ItemTagEnum.Body:\r\n      return t(\"Body\");\r\n    case ItemTagEnum.Accessory:\r\n      return t(\"Accessory\");\r\n    case ItemTagEnum.Pouch:\r\n      return t(\"Pouch\");\r\n    case ItemTagEnum.QuestItem:\r\n      return t(\"Quest Item\");\r\n  }\r\n}\r\n\r\nexport interface ItemStack {\r\n  itemOccurrence: ItemOccurrence;\r\n  amount: number;\r\n}\r\n\r\nexport type ItemParams = Record<string, any>;\r\n\r\nexport interface ItemOccurrence {\r\n  itemId: string;\r\n  params: ItemParams;\r\n}\r\n\r\nexport interface ItemAction {\r\n  id: string;\r\n  description: string;\r\n  isEnabled: boolean;\r\n  requireConfirm?: boolean;\r\n  isActive?: boolean;\r\n  transform?: GameStateTransform;\r\n}\r\n\r\nconst saleActionOne = mem(\r\n  (id: string, params: ItemParams, salePrice: number) => {\r\n    return {\r\n      id: \"sell1\" + salePrice,\r\n      description: t(`Sell 1 ({{coins}}:coins:)`, {\r\n        coins: formatNumber(salePrice),\r\n      }),\r\n      isEnabled: true,\r\n      isActive: false,\r\n      transform: (state: GameState) => {\r\n        state = incrementAccumulatorVariable(state, \"itemsSold\", 1);\r\n        state = removeFromInventory({ itemId: id, params }, 1, state);\r\n        return grantResource(Resource.Coins, salePrice)(state);\r\n      },\r\n    };\r\n  },\r\n  { cacheKey: JSON.stringify },\r\n);\r\n\r\nconst saleActionMany = mem(\r\n  (\r\n    id: string,\r\n    params: ItemParams,\r\n    salePrice: number,\r\n    amount: number,\r\n    isAll: boolean,\r\n  ) => {\r\n    let totalAmount = salePrice * amount;\r\n    return {\r\n      id: \"sellMany\" + (!isAll ? amount : \"\") + salePrice,\r\n      description: isAll\r\n        ? t(`Sell all ({{coins}}:coins:)`, {\r\n            coins: formatNumber(totalAmount),\r\n          })\r\n        : t(`Sell {{amount}} ({{coins}}:coins:)`, {\r\n            coins: formatNumber(totalAmount),\r\n            amount: formatNumber(amount),\r\n          }),\r\n      isEnabled: true,\r\n      requireConfirm: isAll,\r\n      isActive: false,\r\n      transform: (state: GameState) => {\r\n        if (isAll) {\r\n          amount = getAmountOfItem({ itemId: id, params }, state);\r\n          totalAmount = salePrice * amount;\r\n        }\r\n        state = incrementAccumulatorVariable(state, \"itemsSold\", amount);\r\n        state = removeFromInventory({ itemId: id, params }, amount, state);\r\n        return grantResource(Resource.Coins, totalAmount)(state);\r\n      },\r\n    };\r\n  },\r\n  { cacheKey: JSON.stringify },\r\n);\r\n\r\nconst quickbarAction = mem(\r\n  (id: string, params: ItemParams, enabled: boolean) => {\r\n    return {\r\n      id: \"quickbar\" + enabled,\r\n      description: t(\"Add to Quickbar\"),\r\n      isActive: false,\r\n      isEnabled: enabled,\r\n      transform: (state: GameState) => {\r\n        return addItemToQuickbar(state, { itemId: id, params });\r\n      },\r\n    };\r\n  },\r\n  { cacheKey: JSON.stringify },\r\n);\r\n\r\nfunction getAmountNeededForCombining(state: GameState): number {\r\n  return applyTransformationsPermaCached(\r\n    [TransformationTags.ItemsNeededForCombining],\r\n    state,\r\n    3,\r\n  );\r\n}\r\n\r\nconst combineActionOne = mem(\r\n  (id: string, params: ItemParams) => {\r\n    return {\r\n      id: \"combineActionOne\",\r\n      description: t(`Combine 1 to +{{quality}}`, {\r\n        quality: formatNumber((params?.itemQuality ?? 0) + 1),\r\n      }),\r\n      isEnabled: (state) =>\r\n        getAmountOfItem({ itemId: id, params: params }, state) >=\r\n        getAmountNeededForCombining(state),\r\n      isActive: false,\r\n      transform: (state: GameState) => {\r\n        state = removeFromInventory(\r\n          { itemId: id, params },\r\n          getAmountNeededForCombining(state),\r\n          state,\r\n        );\r\n        state = addToInventory(\r\n          {\r\n            itemId: id,\r\n            params: { ...params, itemQuality: (params?.itemQuality ?? 0) + 1 },\r\n          },\r\n          1,\r\n          state,\r\n        );\r\n        return state;\r\n      },\r\n    };\r\n  },\r\n  { cacheKey: JSON.stringify },\r\n);\r\n\r\nconst combineActionMany = mem(\r\n  (id: string, params: ItemParams, amount: number) => {\r\n    return {\r\n      id: \"combineActionMany\",\r\n      description: t(`Combine all ({{amount}}) to +{{quality}}`, {\r\n        quality: formatNumber((params?.itemQuality ?? 0) + 1),\r\n        amount: formatNumber(amount),\r\n      }),\r\n      isEnabled: (state) => true,\r\n      isActive: false,\r\n      transform: (state: GameState) => {\r\n        state = removeFromInventory(\r\n          { itemId: id, params },\r\n          amount * getAmountNeededForCombining(state),\r\n          state,\r\n        );\r\n        state = addToInventory(\r\n          {\r\n            itemId: id,\r\n            params: { ...params, itemQuality: (params?.itemQuality ?? 0) + 1 },\r\n          },\r\n          amount,\r\n          state,\r\n        );\r\n        return state;\r\n      },\r\n    };\r\n  },\r\n  { cacheKey: JSON.stringify },\r\n);\r\n\r\nexport const INITIAL_MAX_ITEM_QUALITY = 15;\r\n\r\nconst MAX_ITEM_QUALITY_TAGS = [TransformationTags.ItemQualityMax];\r\n\r\nexport function getMaxItemQuality(state: GameState): number {\r\n  return applyTransformationsPermaCached(\r\n    MAX_ITEM_QUALITY_TAGS,\r\n    state,\r\n    INITIAL_MAX_ITEM_QUALITY,\r\n  );\r\n}\r\n\r\nexport abstract class Item {\r\n  constructor() {}\r\n\r\n  abstract getId(): string;\r\n  abstract getPicture(): any;\r\n  abstract getBaseName(params: ItemParams): string;\r\n  abstract getDescription(\r\n    state: GameState,\r\n    params: ItemParams,\r\n  ): string | undefined;\r\n  abstract getEffect(state: GameState, params: ItemParams): string | undefined;\r\n  abstract getBaseSalePrice(state: GameState, params: ItemParams): number;\r\n\r\n  getTags(): ItemTag[] {\r\n    return [];\r\n  }\r\n\r\n  getName(params: ItemParams): string {\r\n    const base = this.getBaseName(params);\r\n    if (params?.itemQuality != null && params?.itemQuality > 0) {\r\n      return `${base} +${formatNumber(params?.itemQuality)}`;\r\n    }\r\n    return `${base}`;\r\n  }\r\n\r\n  getDefaultName(): string {\r\n    return this.getName(this.getDefaultParams());\r\n  }\r\n\r\n  protected getBaseItemEffects(\r\n    params: ItemParams,\r\n  ): Record<string, ActionEffect> {\r\n    return {};\r\n  }\r\n\r\n  getCachedBaseItemEffects = memoize((params: ItemParams) =>\r\n    this.getBaseItemEffects(params),\r\n  );\r\n\r\n  isActive(state: GameState): boolean {\r\n    return false;\r\n  }\r\n\r\n  _tags: string[] | undefined;\r\n\r\n  getTransformationTags() {\r\n    if (this._tags == null) {\r\n      this._tags = [this.getId(), ...this.getTags().map((itemTag) => itemTag)];\r\n    }\r\n    return this._tags;\r\n  }\r\n\r\n  tagsByEffect: Record<string, string[]> = {};\r\n  getTagsByEffect(key: string, baseEffect: ActionEffect): string[] {\r\n    if (this.tagsByEffect?.[key] == null) {\r\n      this.tagsByEffect[key] = [\r\n        ...this.getTags(),\r\n        this.getId(),\r\n        ...(baseEffect.tags ?? []),\r\n        TransformationTags.ItemEffect,\r\n      ];\r\n    }\r\n    return this.tagsByEffect[key];\r\n  }\r\n\r\n  _itemOccurrenceCache: Record<string, ItemOccurrence> = {};\r\n\r\n  getMemoizedItemOccurrence = (params) => {\r\n    const key = JSON.stringify(params);\r\n    let cached = this._itemOccurrenceCache[key];\r\n    if (cached == null) {\r\n      cached = { itemId: this.getId(), params };\r\n      this._itemOccurrenceCache[key] = cached;\r\n    }\r\n    // @ts-expect-error The transformations may add a \"tags\"\r\n    if (cached.tags != null) {\r\n      delete cached[\"tags\"];\r\n    }\r\n    return cached;\r\n  };\r\n\r\n  getItemEffect(\r\n    state: GameState,\r\n    params: ItemParams,\r\n    effectId: string,\r\n    neutralValue?: number,\r\n  ): number {\r\n    const baseEffects = this.getCachedBaseItemEffects(params);\r\n    const baseEffect = baseEffects[effectId];\r\n    if (baseEffect == null || baseEffect?.value == neutralValue) {\r\n      return neutralValue;\r\n    }\r\n    return applyTransformationsCached(\r\n      this.getTagsByEffect(effectId, baseEffect),\r\n      state,\r\n      baseEffect.value,\r\n      this.getMemoizedItemOccurrence(params),\r\n    );\r\n  }\r\n\r\n  getItemEffects(\r\n    state: GameState,\r\n    params: ItemParams,\r\n    onlyId?: string,\r\n  ): Record<string, number> {\r\n    const baseEffects = this.getCachedBaseItemEffects(params);\r\n    const finalEffects: Record<string, number> = {};\r\n    for (let key in baseEffects) {\r\n      if (onlyId != null && key != onlyId) {\r\n        continue;\r\n      }\r\n      const baseEffect = baseEffects[key];\r\n      finalEffects[key] = applyTransformationsCached(\r\n        this.getTagsByEffect(key, baseEffect),\r\n        state,\r\n        baseEffect.value,\r\n        this.getMemoizedItemOccurrence(params),\r\n      );\r\n    }\r\n    return finalEffects;\r\n  }\r\n\r\n  explanationParams = memoize((params, baseEffect) => ({\r\n    itemId: this.getId(),\r\n    params: params,\r\n    valueType: baseEffect.valueType,\r\n    unit: baseEffect.unit,\r\n  }));\r\n\r\n  getItemEffectExplanations(\r\n    state: GameState,\r\n    params: ItemParams,\r\n    onlyId?: string,\r\n  ): Record<string, string> {\r\n    const baseEffects = this.getCachedBaseItemEffects(params);\r\n    const finalEffects: Record<string, string> = {};\r\n    for (let key in baseEffects) {\r\n      if (onlyId != null && key != onlyId) {\r\n        continue;\r\n      }\r\n      const baseEffect = baseEffects[key];\r\n      finalEffects[key] = explainTransformationsText(\r\n        this.getTagsByEffect(key, baseEffect),\r\n        state,\r\n        baseEffect.value,\r\n        this.explanationParams(params, baseEffect),\r\n      );\r\n    }\r\n    return finalEffects;\r\n  }\r\n\r\n  getSalePrice(\r\n    state: GameState,\r\n    params: ItemParams,\r\n    extraTags?: string[],\r\n  ): number {\r\n    const basePrice = this.getBaseSalePrice(state, params);\r\n    return applyTransformations(\r\n      [\r\n        TransformationTags.ItemSalePrice,\r\n        ...this.getTransformationTags(),\r\n        ...(extraTags ?? []),\r\n      ],\r\n      state,\r\n      basePrice,\r\n      this.getMemoizedItemOccurrence(params),\r\n    );\r\n  }\r\n\r\n  getPrimaryAction(\r\n    _state: GameState,\r\n    _params: ItemParams,\r\n  ): ItemAction | undefined {\r\n    return undefined;\r\n  }\r\n\r\n  getSellOneAction(\r\n    state: GameState,\r\n    params: ItemParams,\r\n    extraTags?: string[],\r\n  ): ItemAction | undefined {\r\n    const salePrice = this.getSalePrice(state, params, extraTags);\r\n    const amount = getAmountOfItem(\r\n      this.getMemoizedItemOccurrence(params),\r\n      state,\r\n    );\r\n\r\n    return amount >= 1\r\n      ? saleActionOne(this.getId(), params, salePrice)\r\n      : undefined;\r\n  }\r\n\r\n  getSaleActions(state: GameState, params: ItemParams): ItemAction[] {\r\n    const salePrice = this.getSalePrice(state, params);\r\n    const amount = getAmountOfItem(\r\n      this.getMemoizedItemOccurrence(params),\r\n      state,\r\n    );\r\n    const remainingCoinCap =\r\n      getResourceCap(state, Resource.Coins) -\r\n      getResourceAmount(state, Resource.Coins);\r\n    const canSellLess =\r\n      remainingCoinCap < salePrice * amount &&\r\n      salePrice > 0 &&\r\n      remainingCoinCap > 0;\r\n    const saleActions = [\r\n      amount > 1 ? saleActionOne(this.getId(), params, salePrice) : null,\r\n      canSellLess\r\n        ? saleActionMany(\r\n            this.getId(),\r\n            params,\r\n            salePrice,\r\n            Math.ceil(remainingCoinCap / salePrice),\r\n            false,\r\n          )\r\n        : null,\r\n      saleActionMany(this.getId(), params, salePrice, amount, true),\r\n    ];\r\n    return saleActions.filter(\r\n      (saleAction) => saleAction != null,\r\n    ) as ItemAction[];\r\n  }\r\n\r\n  getQuickbarAction(\r\n    state: GameState,\r\n    params: ItemParams,\r\n  ): ItemAction | undefined {\r\n    if (!this.getPrimaryAction(state, params)) {\r\n      return undefined;\r\n    }\r\n    return quickbarAction(\r\n      this.getId(),\r\n      params,\r\n      !isInQuickbar(state, {\r\n        type: \"item\",\r\n        occurrence: this.getMemoizedItemOccurrence(params),\r\n      }) && !isQuickbarFull(state),\r\n    );\r\n  }\r\n\r\n  getCombineActions(state: GameState, params: ItemParams): ItemAction[] {\r\n    const extraActions = [];\r\n    if (\r\n      this.isItemQualityValid() &&\r\n      isItemQualityUnlocked(state) &&\r\n      (params?.itemQuality ?? 0) < getMaxItemQuality(state)\r\n    ) {\r\n      const amountOfItem = getAmountOfItem(\r\n        { itemId: this.getId(), params: params },\r\n        state,\r\n      );\r\n      const neededItemsToCombine = getAmountNeededForCombining(state);\r\n      if (amountOfItem >= neededItemsToCombine) {\r\n        extraActions.push(combineActionOne(this.getId(), params));\r\n      }\r\n      if (amountOfItem >= neededItemsToCombine * 2) {\r\n        extraActions.push(\r\n          combineActionMany(\r\n            this.getId(),\r\n            params,\r\n            Math.floor(amountOfItem / neededItemsToCombine),\r\n          ),\r\n        );\r\n      }\r\n    }\r\n    return extraActions;\r\n  }\r\n\r\n  isItemQualityValid(): boolean {\r\n    return false;\r\n  }\r\n\r\n  getExtraActions(state: GameState, params: ItemParams): ItemAction[] {\r\n    return [];\r\n  }\r\n\r\n  getDefaultParams(): ItemParams {\r\n    return {};\r\n  }\r\n}\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.ItemEffect]],\r\n  \"itemQualityBonus\",\r\n  t(\"Item Quality\"),\r\n  TransformationType.Multiplier,\r\n  (state, params, previousValue) => {\r\n    if (previousValue <= 0) {\r\n      return 1.0;\r\n    }\r\n    return Math.pow(1.1, params?.params?.itemQuality ?? 0);\r\n  },\r\n);\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.ItemSalePrice]],\r\n  \"itemQualitySalePrice\",\r\n  t(\"Item Quality\"),\r\n  TransformationType.Multiplier,\r\n  (state, params, previousValue) => {\r\n    if (previousValue <= 0) {\r\n      return 1.0;\r\n    }\r\n    return Math.pow(1.5, params?.params?.itemQuality ?? 0);\r\n  },\r\n);\r\n","import mem from \"mem\";\r\nimport { formatMultiplier, formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport { ActionEffect } from \"../../action/Action\";\r\nimport { AttackTarget } from \"../../exploration/AttackTarget\";\r\nimport { CombatStat } from \"../../exploration/CombatStats\";\r\nimport {\r\n  IncomeOverTimeProducer,\r\n  IncomeOverTimeProducers,\r\n} from \"../../timetick/IncomeOverTime\";\r\nimport {\r\n  TransformationType,\r\n  registerTransformation,\r\n} from \"../../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../transformation/TransformationTags\";\r\nimport {\r\n  EquipmentSlot,\r\n  canEquipItem,\r\n  equipToSlot,\r\n  getEquippedItem,\r\n  getEquippedItems,\r\n} from \"../Equipment\";\r\nimport { Item, ItemAction, ItemOccurrence, ItemParams, ItemTag } from \"../Item\";\r\nimport { ItemTagEnum } from \"../ItemTagEnum\";\r\nimport { Items } from \"../Items\";\r\n\r\nconst memoizedEquip = mem(\r\n  (\r\n    canEquipItem: boolean,\r\n    slot: EquipmentSlot,\r\n    id: string,\r\n    params: ItemParams,\r\n  ) => {\r\n    return {\r\n      id: \"equip\",\r\n      description: t(\"Equip\"),\r\n      isEnabled: canEquipItem,\r\n      transform: (state: GameState) => {\r\n        state = equipToSlot(state, slot, {\r\n          itemId: id,\r\n          params,\r\n        });\r\n        return state;\r\n      },\r\n    };\r\n  },\r\n  { cacheKey: JSON.stringify },\r\n);\r\n\r\nexport abstract class EquippableItem extends Item {\r\n  abstract getSlot(): EquipmentSlot;\r\n\r\n  getTags(): ItemTag[] {\r\n    return [ItemTagEnum.Equipment, this.getSlot() as unknown as ItemTagEnum];\r\n  }\r\n\r\n  getExtraSlots(): EquipmentSlot[] {\r\n    return [];\r\n  }\r\n\r\n  getEquippedParams(state: GameState): ItemParams | undefined {\r\n    const equippedItem = getEquippedItem(state, this.getSlot());\r\n    if (equippedItem.itemId != this.getId()) {\r\n      return;\r\n    }\r\n    return equippedItem.params;\r\n  }\r\n\r\n  getEquippedItemEffect(\r\n    state: GameState,\r\n    onlyId?: string,\r\n  ): Record<string, number> {\r\n    const equippedItem = getEquippedItems(state, this.getSlot()).find(\r\n      (item) => item?.itemId == this.getId(),\r\n    );\r\n    if (equippedItem == null) {\r\n      return;\r\n    }\r\n    return this.getItemEffects(state, equippedItem.params, onlyId);\r\n  }\r\n\r\n  getPrimaryAction(\r\n    state: GameState,\r\n    params: ItemParams,\r\n  ): ItemAction | undefined {\r\n    return memoizedEquip(\r\n      canEquipItem(state, this.getSlot(), { itemId: this.getId(), params }),\r\n      this.getSlot(),\r\n      this.getId(),\r\n      params,\r\n    );\r\n  }\r\n\r\n  getAttackBonusBase(params: ItemParams): number {\r\n    return 0;\r\n  }\r\n\r\n  attackTags = [CombatStat.Attack];\r\n\r\n  getDefenseBonusBase(params: ItemParams): number {\r\n    return 0;\r\n  }\r\n\r\n  defenseTags = [CombatStat.Defense];\r\n\r\n  getMaxHPBonusBase(params: ItemParams): number {\r\n    return 0;\r\n  }\r\n\r\n  maxHPTags = [CombatStat.MaxHP];\r\n\r\n  getManaRegenBonusBase(params: ItemParams): number {\r\n    return 0;\r\n  }\r\n\r\n  manaRegenTags = [Resource.Mana, TransformationTags.Production];\r\n\r\n  getMaxManaBonusBase(params: ItemParams): number {\r\n    return 0;\r\n  }\r\n\r\n  maxManaTags = [Resource.Mana, TransformationTags.PerItemCap];\r\n\r\n  getAttackDelayBonusRatioBase(params: ItemParams): number {\r\n    return 0;\r\n  }\r\n\r\n  attackDelayTags = [CombatStat.AttackDelay];\r\n\r\n  getPlayerAccuracyBonusBase(params: ItemParams): number {\r\n    return 0;\r\n  }\r\n\r\n  accuracyTags = [CombatStat.Accuracy];\r\n\r\n  getPlayerDodgeBonusBase(params: ItemParams): number {\r\n    return 0;\r\n  }\r\n\r\n  dodgeTags = [CombatStat.Dodge];\r\n\r\n  getPlayerCritChanceBonusBase(params: ItemParams): number {\r\n    return 0;\r\n  }\r\n\r\n  critTags = [CombatStat.Crit];\r\n\r\n  protected getBaseExtraItemEffects(\r\n    params: ItemParams,\r\n  ): Record<string, ActionEffect> {\r\n    return {};\r\n  }\r\n\r\n  protected getBaseItemEffects(\r\n    params: ItemParams,\r\n  ): Record<string, ActionEffect> {\r\n    const bonuses: Record<string, ActionEffect> = {\r\n      attack: {\r\n        value: this.getAttackBonusBase(params),\r\n        tags: this.attackTags,\r\n        unit: t(\":attack:\"),\r\n        valueType: TransformationValueType.Basic,\r\n      },\r\n      defense: {\r\n        value: this.getDefenseBonusBase(params),\r\n        tags: this.defenseTags,\r\n        unit: t(\":defense:\"),\r\n        valueType: TransformationValueType.Basic,\r\n      },\r\n      maxHP: {\r\n        value: this.getMaxHPBonusBase(params),\r\n        tags: this.maxHPTags,\r\n        unit: t(\" Max:hp:\"),\r\n        valueType: TransformationValueType.Basic,\r\n      },\r\n      manaRegen: {\r\n        value: this.getManaRegenBonusBase(params),\r\n        tags: this.manaRegenTags,\r\n        unit: t(\":mana:/sec\"),\r\n        valueType: TransformationValueType.Basic,\r\n      },\r\n      maxMana: {\r\n        value: this.getMaxManaBonusBase(params),\r\n        tags: this.maxManaTags,\r\n        unit: t(\" Max:mana:\"),\r\n        valueType: TransformationValueType.Basic,\r\n      },\r\n      attackDelay: {\r\n        value: 1.0 / (1.0 + this.getAttackDelayBonusRatioBase(params)) - 1.0,\r\n        tags: this.attackDelayTags,\r\n        unit: t(\":attackDelay:\"),\r\n        valueType: TransformationValueType.Divisor,\r\n      },\r\n      accuracy: {\r\n        value: this.getPlayerAccuracyBonusBase(params),\r\n        tags: this.accuracyTags,\r\n        unit: t(\":accuracy:\"),\r\n        valueType: TransformationValueType.Basic,\r\n      },\r\n      dodge: {\r\n        value: this.getPlayerDodgeBonusBase(params),\r\n        tags: this.dodgeTags,\r\n        unit: t(\":dodge:\"),\r\n        valueType: TransformationValueType.Basic,\r\n      },\r\n      crit: {\r\n        value: this.getPlayerCritChanceBonusBase(params),\r\n        tags: this.critTags,\r\n        unit: t(\":critChance:\"),\r\n        valueType: TransformationValueType.Basic,\r\n      },\r\n    };\r\n\r\n    for (let key in bonuses) {\r\n      if (bonuses[key].value == 0) {\r\n        delete bonuses[key];\r\n      }\r\n    }\r\n\r\n    const extra = this.getBaseExtraItemEffects(params);\r\n    return {\r\n      ...bonuses,\r\n      ...extra,\r\n    };\r\n  }\r\n\r\n  getEffect(state: GameState, params: ItemParams): string | undefined {\r\n    return this.getEffectBase(state, params);\r\n  }\r\n\r\n  getEffectExtra(state: GameState, params: ItemParams): string | undefined {\r\n    return undefined;\r\n  }\r\n\r\n  getEffectBase(state: GameState, params: ItemParams): string | undefined {\r\n    const effects = this.getItemEffects(state, params);\r\n    const effectExplanations = this.getItemEffectExplanations(state, params);\r\n\r\n    const bonuses: Record<string, number> = {\r\n      attack: effects.attack ?? 0,\r\n      defense: effects.defense ?? 0,\r\n      maxHP: effects.maxHP ?? 0,\r\n      manaRegen: effects.manaRegen ?? 0,\r\n      maxMana: effects.maxMana ?? 0,\r\n      attackDelay: 1.0 / ((effects.attackDelay ?? 0) + 1.0),\r\n      accuracy: effects.accuracy ?? 0,\r\n      dodge: effects.dodge ?? 0,\r\n      crit: effects.crit ?? 0,\r\n    };\r\n\r\n    const bonusStrings = Object.keys(bonuses).map((stat) => {\r\n      let value = bonuses?.[stat];\r\n      if (value == 0 || (value == 1.0 && stat == \"attackDelay\")) {\r\n        return null;\r\n      }\r\n      const explanation = effectExplanations?.[stat];\r\n      let prefix = \"+\";\r\n      if (value < 0) {\r\n        prefix = \"-\";\r\n        value = Math.abs(value);\r\n      }\r\n      switch (stat) {\r\n        case \"attack\":\r\n        case \"defense\":\r\n        case \"accuracy\":\r\n        case \"dodge\":\r\n          return t(\"^{{value}}^<{{explanation}}>{{statIcon}}\", {\r\n            value: prefix + formatNumber(value),\r\n            explanation,\r\n            statIcon: `:${stat}:`,\r\n          });\r\n        case \"crit\":\r\n          return t(\"^{{value}}^<{{explanation}}>{{statIcon}}\", {\r\n            value: prefix + formatNumber(value),\r\n            explanation,\r\n            statIcon: `:critChance:`,\r\n          });\r\n        case \"manaRegen\":\r\n          return t(\"^{{value}}^<{{explanation}}>:mana:/sec\", {\r\n            value: prefix + formatNumber(value),\r\n            explanation,\r\n          });\r\n        case \"maxHP\":\r\n          return t(\"^{{value}}^<{{explanation}}> Max:hp:\", {\r\n            value: prefix + formatNumber(value),\r\n            explanation,\r\n          });\r\n        case \"maxMana\":\r\n          return t(\"^{{value}}^<{{explanation}}> Max:mana:\", {\r\n            value: prefix + formatNumber(value),\r\n            explanation,\r\n          });\r\n        case \"attackDelay\":\r\n          return t(\"^{{value}}^<{{explanation}}>:attackDelay:\", {\r\n            value: formatMultiplier(value),\r\n            explanation,\r\n          });\r\n      }\r\n    });\r\n\r\n    const bonusEffect = this.getEffectExtra(state, params);\r\n    bonusStrings.push(bonusEffect);\r\n\r\n    return bonusStrings\r\n      .filter((bonusString) => bonusString != null)\r\n      .join(t(\", \"));\r\n  }\r\n\r\n  isEquippedWithAnyParams(state: GameState): boolean {\r\n    return getEquippedItems(state, this.getSlot()).some(\r\n      (item) => item?.itemId == this.getId(),\r\n    );\r\n  }\r\n\r\n  isItemQualityValid(): boolean {\r\n    return true;\r\n  }\r\n}\r\n\r\ntype EquippedItemFunction = (itemOccurrence: ItemOccurrence) => void;\r\n\r\nconst forEachEquippedItem = function (\r\n  state: GameState,\r\n  each: EquippedItemFunction,\r\n): void {\r\n  const equippedItemHand = getEquippedItem(state, EquipmentSlot.Hand);\r\n  const equippedItemBody = getEquippedItem(state, EquipmentSlot.Body);\r\n  const equippedItemAccessory = getEquippedItems(\r\n    state,\r\n    EquipmentSlot.Accessory,\r\n  );\r\n\r\n  [equippedItemHand, equippedItemBody, ...equippedItemAccessory.flat()].forEach(\r\n    (itemOccurrence) => {\r\n      if (itemOccurrence == null) {\r\n        return;\r\n      }\r\n      each(itemOccurrence);\r\n    },\r\n  );\r\n};\r\n\r\ntype EquippedItemBonus = (\r\n  state: GameState,\r\n  item: EquippableItem,\r\n  params: ItemParams,\r\n) => number;\r\n\r\nconst additiveTransform = (bonusFn: EquippedItemBonus) => {\r\n  return (state: GameState) => {\r\n    let total = 0;\r\n    forEachEquippedItem(state, (itemOccurrence) => {\r\n      const item = Items.getById(itemOccurrence.itemId) as EquippableItem;\r\n\r\n      const bonus = bonusFn(state, item, itemOccurrence.params);\r\n      if (bonus != 0) {\r\n        total += bonus;\r\n      }\r\n    });\r\n\r\n    return total;\r\n  };\r\n};\r\n\r\nconst multiplicativeTransform = (bonusFn: EquippedItemBonus) => {\r\n  return (state: GameState) => {\r\n    let totalMultiplier = 1.0;\r\n    forEachEquippedItem(state, (itemOccurrence) => {\r\n      const item = Items.getById(itemOccurrence.itemId) as EquippableItem;\r\n\r\n      const bonus = bonusFn(state, item, itemOccurrence.params);\r\n      if (bonus != 1.0) {\r\n        totalMultiplier *= bonus;\r\n      }\r\n    });\r\n\r\n    return totalMultiplier;\r\n  };\r\n};\r\n\r\nIncomeOverTimeProducers.register(\r\n  new IncomeOverTimeProducer(\"EquippableItem\", t(\"Equipped Items\"), (state) => {\r\n    const totalIncome: Partial<Record<Resource, number>> = {};\r\n    forEachEquippedItem(state, (itemOccurrence) => {\r\n      const item = Items.getById(itemOccurrence.itemId) as EquippableItem;\r\n\r\n      const manaRegen = item.getItemEffect(\r\n        state,\r\n        itemOccurrence.params,\r\n        \"manaRegen\",\r\n        0,\r\n      );\r\n      if (manaRegen != 0) {\r\n        totalIncome[Resource.Mana] =\r\n          (totalIncome?.[Resource.Mana] ?? 0) + manaRegen;\r\n      }\r\n    });\r\n    return totalIncome;\r\n  }),\r\n);\r\n\r\nregisterTransformation(\r\n  [[AttackTarget.Player, CombatStat.Attack]],\r\n  \"EquippableItemAttack\",\r\n  t(\"Equipped Items\"),\r\n  TransformationType.Addition,\r\n  additiveTransform((state, item, params) =>\r\n    item.getItemEffect(state, params, \"attack\", 0),\r\n  ),\r\n);\r\n\r\nregisterTransformation(\r\n  [[AttackTarget.Player, CombatStat.Defense]],\r\n  \"EquippableItemDefense\",\r\n  t(\"Equipped Items\"),\r\n  TransformationType.Addition,\r\n  additiveTransform((state, item, params) =>\r\n    item.getItemEffect(state, params, \"defense\", 0),\r\n  ),\r\n);\r\n\r\nregisterTransformation(\r\n  [[AttackTarget.Player, CombatStat.MaxHP]],\r\n  \"EquippableItemMaxHP\",\r\n  t(\"Equipped Items\"),\r\n  TransformationType.Addition,\r\n  additiveTransform((state, item, params) =>\r\n    item.getItemEffect(state, params, \"maxHP\", 0),\r\n  ),\r\n);\r\n\r\nregisterTransformation(\r\n  [[AttackTarget.Player, CombatStat.AttackDelay]],\r\n  \"EquippableItemAttackDelay\",\r\n  t(\"Equipped Items\"),\r\n  TransformationType.Multiplier,\r\n  multiplicativeTransform(\r\n    (state, item, params) =>\r\n      1.0 / (item.getItemEffect(state, params, \"attackDelay\", 0) + 1.0),\r\n  ),\r\n);\r\n\r\nregisterTransformation(\r\n  [[AttackTarget.Player, CombatStat.Accuracy]],\r\n  \"EquippableItemAccuracy\",\r\n  t(\"Equipped Items\"),\r\n  TransformationType.Addition,\r\n  additiveTransform((state, item, params) =>\r\n    item.getItemEffect(state, params, \"accuracy\", 0),\r\n  ),\r\n);\r\n\r\nregisterTransformation(\r\n  [[AttackTarget.Player, CombatStat.Dodge]],\r\n  \"EquippableItemDodge\",\r\n  t(\"Equipped Items\"),\r\n  TransformationType.Addition,\r\n  additiveTransform((state, item, params) =>\r\n    item.getItemEffect(state, params, \"dodge\", 0),\r\n  ),\r\n);\r\n\r\nregisterTransformation(\r\n  [[AttackTarget.Player, CombatStat.Crit]],\r\n  \"EquippableItemCritChance\",\r\n  t(\"Equipped Items\"),\r\n  TransformationType.Addition,\r\n  additiveTransform((state, item, params) =>\r\n    item.getItemEffect(state, params, \"crit\", 0),\r\n  ),\r\n);\r\n\r\nregisterTransformation(\r\n  [[Resource.Mana, TransformationTags.Cap]],\r\n  \"EquippableItemManaCap\",\r\n  t(\"Equipped Items\"),\r\n  TransformationType.Addition,\r\n  (state) => {\r\n    let capBonus = 0;\r\n    forEachEquippedItem(state, (itemOccurrence) => {\r\n      const item = Items.getById(itemOccurrence.itemId) as EquippableItem;\r\n\r\n      const maxManaBonus = item.getItemEffect(\r\n        state,\r\n        itemOccurrence.params,\r\n        \"maxMana\",\r\n        0,\r\n      );\r\n      if (maxManaBonus != 0) {\r\n        capBonus += maxManaBonus;\r\n      }\r\n    });\r\n\r\n    return capBonus;\r\n  },\r\n);\r\n","import mem from \"mem\";\r\nimport memoize from \"sonic-memoize\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { addGameStateListener } from \"../../GameStateListeners\";\r\nimport { ExplorationStatus } from \"../../exploration/ExplorationStatus\";\r\nimport { getExplorationStatus } from \"../../exploration/ExplorationUtils\";\r\nimport { hasTemporaryEffect } from \"../../temporaryeffects/TemporaryEffects\";\r\nimport {\r\n  applyTransformations,\r\n  explainTransformationsText,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { EquipmentSlot, getEquippedItems } from \"../Equipment\";\r\nimport { ItemAction, ItemParams } from \"../Item\";\r\nimport { Items } from \"../Items\";\r\nimport { EquippableItem } from \"./EquippableItem\";\r\n\r\nconst memoizedPrimary = mem(\r\n  (\r\n    enabled: boolean,\r\n    active: boolean,\r\n    id: string,\r\n    index: number,\r\n    params: ItemParams,\r\n  ) => {\r\n    return {\r\n      id: \"primaryPouch\",\r\n      description: t(\"Use\"),\r\n      isEnabled: enabled,\r\n      isActive: active,\r\n      transform: (state: GameState) => {\r\n        // Re-check enabled\r\n        const item = Items.getById(id) as PouchItem;\r\n        const refreshedAction = item.getPouchItemAction(state, index, params);\r\n        if (refreshedAction?.isEnabled) {\r\n          state.run.exploration.pouchItemsUsesLeft[index] =\r\n            (state.run.exploration.pouchItemsUsesLeft[index] ??\r\n              item.getUsesPerCombat(state, params)) - 1;\r\n          state = (Items.getById(id) as PouchItem).doPouchItemEffect(\r\n            state,\r\n            params,\r\n          );\r\n        }\r\n        return state;\r\n      },\r\n    };\r\n  },\r\n  { cacheKey: JSON.stringify },\r\n);\r\n\r\nexport abstract class PouchItem extends EquippableItem {\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Pouch;\r\n  }\r\n\r\n  abstract doPouchItemEffect(state: GameState, params: ItemParams): GameState;\r\n\r\n  getPouchItemAction(\r\n    state: GameState,\r\n    index: number,\r\n    params: ItemParams,\r\n  ): ItemAction | undefined {\r\n    const isStunned = hasTemporaryEffect(state, \"stun\");\r\n    const active = this.isActive(state);\r\n    const enabled =\r\n      !isStunned &&\r\n      getExplorationStatus(state) == ExplorationStatus.Combat &&\r\n      !hasUsedUpPouchItemThisCombat(state, index);\r\n    return memoizedPrimary(enabled, active, this.getId(), index, params);\r\n  }\r\n\r\n  // This function is called when a combat finishes\r\n  doCleanup(state: GameState, params: ItemParams): GameState {\r\n    return state;\r\n  }\r\n\r\n  shouldAutoUse(state: GameState, params: ItemParams): boolean {\r\n    return true;\r\n  }\r\n\r\n  getUsesPerCombatBase(params: ItemParams): number {\r\n    return 1;\r\n  }\r\n\r\n  getUsesPerCombatTags = memoize(() => [\r\n    ...this.getTransformationTags(),\r\n    TransformationTags.PouchItemUses,\r\n  ]);\r\n\r\n  getUsesPerCombat(state: GameState, params: ItemParams): number {\r\n    return Math.floor(\r\n      applyTransformations(\r\n        this.getUsesPerCombatTags(),\r\n        state,\r\n        this.getUsesPerCombatBase(params),\r\n        {\r\n          itemId: this.getId(),\r\n          params,\r\n        },\r\n      ),\r\n    );\r\n  }\r\n\r\n  getUsesPerCombatExplanation(state: GameState, params: ItemParams): string {\r\n    return explainTransformationsText(\r\n      this.getUsesPerCombatTags(),\r\n      state,\r\n      this.getUsesPerCombatBase(params),\r\n      { itemId: this.getId(), params },\r\n    );\r\n  }\r\n}\r\n\r\nexport function hasUsedUpPouchItemThisCombat(\r\n  state: GameState,\r\n  index: number,\r\n): boolean {\r\n  const usesLeft = state.run.exploration.pouchItemsUsesLeft?.[index];\r\n  return usesLeft <= 0;\r\n}\r\n\r\nexport function getUsesLeftForPouchItem(\r\n  state: GameState,\r\n  index: number,\r\n): number {\r\n  const usesLeft = state.run.exploration.pouchItemsUsesLeft?.[index];\r\n  if (usesLeft != null) {\r\n    return usesLeft;\r\n  }\r\n  const occurrence = getEquippedItems(state, EquipmentSlot.Pouch)[index];\r\n  if (occurrence == null) {\r\n    return 0;\r\n  }\r\n  const id = occurrence.itemId;\r\n  const params = occurrence.params;\r\n  const item = Items.getById(id) as PouchItem;\r\n  const uses = item.getUsesPerCombat(state, params);\r\n  state.run.exploration.pouchItemsUsesLeft[index] = uses;\r\n  return uses;\r\n}\r\n\r\nexport function loadPouch() {\r\n  addGameStateListener(\"pouchUser\", (state) => {\r\n    if (!state.global.autoUsePouch) {\r\n      return;\r\n    }\r\n    state.temp.isInPouch = true;\r\n    const pouchItems = getEquippedItems(state, EquipmentSlot.Pouch);\r\n    let used = false;\r\n    do {\r\n      used = false;\r\n      for (let index in pouchItems) {\r\n        // Shortcut for perf\r\n        if (\r\n          getExplorationStatus(state) != ExplorationStatus.Combat ||\r\n          hasUsedUpPouchItemThisCombat(state, Number.parseInt(index))\r\n        ) {\r\n          continue;\r\n        }\r\n        const itemOccurrence = pouchItems[index];\r\n        const item = Items.getByIdNullable(itemOccurrence?.itemId) as PouchItem;\r\n        if (!item) {\r\n          continue;\r\n        }\r\n        const action = item.getPouchItemAction(\r\n          state,\r\n          Number.parseInt(index),\r\n          itemOccurrence.params,\r\n        );\r\n        if (\r\n          action.isEnabled &&\r\n          item.shouldAutoUse(state, itemOccurrence.params)\r\n        ) {\r\n          state = action?.transform?.(state) ?? state;\r\n        }\r\n      }\r\n    } while (used);\r\n    state.temp.isInPouch = false;\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { ItemTag, translateItemTag } from \"../../backend/items/Item\";\r\nimport { Text } from \"../utility/Text\";\r\n\r\nexport function ItemTags(props: { tags: ItemTag[] }) {\r\n  const theme = useTheme();\r\n  return (\r\n    <View style={styles.tagRow}>\r\n      {props.tags.map((tag) => (\r\n        <View\r\n          style={[\r\n            styles.tagStyle,\r\n            {\r\n              backgroundColor: theme.colors.secondaryContainer,\r\n              borderColor: theme.colors.secondaryContainer,\r\n            },\r\n          ]}\r\n          key={tag}\r\n        >\r\n          <Text\r\n            doNotScaleFonts={true}\r\n            style={[\r\n              styles.tagTextStyle,\r\n              { color: theme.colors.onSecondaryContainer },\r\n            ]}\r\n          >\r\n            {translateItemTag(tag)}\r\n          </Text>\r\n        </View>\r\n      ))}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  tagRow: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  tagStyle: {\r\n    textAlign: \"center\",\r\n    paddingHorizontal: 6,\r\n    borderRadius: 8,\r\n    height: 18,\r\n    marginRight: 4,\r\n  },\r\n  tagTextStyle: {\r\n    fontSize: 11,\r\n    lineHeight: 16,\r\n  },\r\n});\r\n","import React, { useMemo } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { ItemStack } from \"../../backend/items/Item\";\r\nimport { Items } from \"../../backend/items/Items\";\r\nimport { PouchItem } from \"../../backend/items/equipment/PouchItem\";\r\nimport { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { Markdown } from \"../utility/Markdown\";\r\nimport { DescriptionViewer, EffectViewer } from \"../utility/Miscellaneous\";\r\nimport { Text } from \"../utility/Text\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\nimport { ItemTags } from \"./ItemTags\";\r\nimport { ItemTile } from \"./ItemTile\";\r\n\r\nexport interface ItemInfoProps {\r\n  itemStack: ItemStack;\r\n  showTile: boolean;\r\n}\r\n\r\nexport function ItemInfo(props: ItemInfoProps) {\r\n  const state = useGameState();\r\n\r\n  const { itemId, params } = props.itemStack.itemOccurrence;\r\n  const item = Items.getById(itemId);\r\n  const name = item.getName(params);\r\n  const description = item.getDescription(state, params);\r\n  const effect = item.getEffect(state, params);\r\n  const tags = item.getTags();\r\n  const usesPerCombat =\r\n    item instanceof PouchItem ? item.getUsesPerCombat(state, params) : null;\r\n  const usesPerCombatExplanation =\r\n    item instanceof PouchItem\r\n      ? item.getUsesPerCombatExplanation(state, params)\r\n      : null;\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View style={styles.itemDetailsContainer}>\r\n        <View style={styles.main}>\r\n          <Text h3>\r\n            {name}\r\n            {props.itemStack.amount > 1 && ` (${props.itemStack.amount})`}\r\n          </Text>\r\n          <View style={styles.tagRow}>\r\n            <ItemTags tags={tags} />\r\n          </View>\r\n          {description && <DescriptionViewer>{description}</DescriptionViewer>}\r\n          {effect && <EffectViewer>{effect}</EffectViewer>}\r\n          {usesPerCombat && usesPerCombat > 1 && (\r\n            <Markdown>\r\n              {t(\"Can be used ^{{times}}^<{{explanation}}> times per combat\", {\r\n                times: formatNumber(usesPerCombat),\r\n                explanation: usesPerCombatExplanation,\r\n              })}\r\n            </Markdown>\r\n          )}\r\n        </View>\r\n        {props.showTile && (\r\n          <ItemTile\r\n            title={name}\r\n            icon={item.getId()}\r\n            quality={params?.itemQuality}\r\n            tooltipIdSuffix=\"itemInfo\"\r\n          />\r\n        )}\r\n      </View>\r\n    ),\r\n    [\r\n      name,\r\n      props.itemStack.amount,\r\n      JSON.stringify(tags),\r\n      description,\r\n      effect,\r\n      usesPerCombat,\r\n      params?.itemQuality,\r\n      item.getId(),\r\n    ],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  itemDetailsContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n  main: {\r\n    flex: 1,\r\n  },\r\n  tagRow: {\r\n    marginVertical: 4,\r\n  },\r\n});\r\n","import React, { useCallback, useMemo, useRef } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { isAutocastUnlocked } from \"../../backend/autocast/Autocast\";\r\nimport { getConcatenatedRequirements } from \"../../backend/events/progression/LevelUp\";\r\nimport { getTotalAmountOfItem } from \"../../backend/items/Inventory\";\r\nimport { TransmutationSpell } from \"../../backend/items/transmute/TransmutationSpell\";\r\nimport { translateElement } from \"../../backend/spells/Elements\";\r\nimport { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { Button } from \"../utility/Button\";\r\nimport { CostViewer } from \"../utility/CostViewer\";\r\nimport { Markdown } from \"../utility/Markdown\";\r\nimport { SpellWizardsInfo } from \"../utility/SpellWizardsInfo\";\r\nimport Styles from \"../utility/Styles\";\r\nimport { Text } from \"../utility/Text\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\nimport { ItemInfo } from \"./ItemInfo\";\r\n\r\nexport interface TransmuteSpellDetailsProps {\r\n  spell: TransmutationSpell;\r\n}\r\n\r\nexport function TransmuteSpellInfo(props: TransmuteSpellDetailsProps) {\r\n  const state = useGameState();\r\n\r\n  const spell = props.spell;\r\n  const item = spell.getItem();\r\n  const params = item.getDefaultParams();\r\n  const totalOwnedText = t(`Total owned: {{amount}}`, {\r\n    amount: getTotalAmountOfItem(item, state),\r\n  });\r\n  const cost = spell.getCraftingMaterials(state);\r\n  const isCraftable = spell.isVisible(state);\r\n\r\n  const theme = useTheme();\r\n\r\n  const concatenatedRequirements = getConcatenatedRequirements(spell);\r\n  const cannotCastText = t(\r\n    `You do not meet the requirements to cast this Transmutation spell. You need: {{requirements}}`,\r\n    { requirements: concatenatedRequirements },\r\n  );\r\n\r\n  const exp = spell.getMainExp(state);\r\n\r\n  const expGainText =\r\n    exp.element != null\r\n      ? t(\"Exp gain: +{{amount}} {{element}} exp\", {\r\n          amount: formatNumber(exp.expMax),\r\n          element: translateElement(exp.element),\r\n        })\r\n      : t(\"Exp gain: +{{min}}~{{max}} exp (various)\", {\r\n          min: formatNumber(exp.expMin),\r\n          max: formatNumber(exp.expMax),\r\n        });\r\n\r\n  const itemStack = useMemo(\r\n    () => ({\r\n      itemOccurrence: { itemId: item.getId(), params },\r\n      amount: 1,\r\n    }),\r\n    [item.getId()],\r\n  );\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View>\r\n        <ItemInfo itemStack={itemStack} showTile={false} />\r\n        <Markdown>{totalOwnedText}</Markdown>\r\n        <Markdown>{expGainText}</Markdown>\r\n        <View style={styles.costContainer}>\r\n          <View style={styles.costTextContainer}>\r\n            <Markdown>{t(\"Cost:\")}</Markdown>\r\n          </View>\r\n          <CostViewer resources={cost.resources} items={cost.items} />\r\n        </View>\r\n        {!isCraftable && (\r\n          <View style={styles.actionRow}>\r\n            <Text\r\n              style={[styles.cannotCraftText, { color: theme.colors.error }]}\r\n            >\r\n              {cannotCastText}\r\n            </Text>\r\n          </View>\r\n        )}\r\n      </View>\r\n    ),\r\n    [\r\n      itemStack,\r\n      totalOwnedText,\r\n      expGainText,\r\n      JSON.stringify(cost),\r\n      isCraftable,\r\n      cannotCastText,\r\n      theme,\r\n    ],\r\n  );\r\n}\r\n\r\nexport function TransmuteSpellDetails(props: TransmuteSpellDetailsProps) {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const spell = props.spell;\r\n  const item = spell.getItem();\r\n  const params = item.getDefaultParams();\r\n  const totalOwnedText = t(`Total owned: {{amount}}`, {\r\n    amount: getTotalAmountOfItem(item, state),\r\n  });\r\n\r\n  const cost = spell.getCraftingMaterials(state);\r\n  const canTransmute = spell.canCraft(state);\r\n  const isCraftable = spell.isVisible(state);\r\n  const theme = useTheme();\r\n\r\n  const concatenatedRequirements = getConcatenatedRequirements(spell);\r\n  const cannotCastText = t(\r\n    `You do not meet the requirements to cast this Transmutation spell. You need: {{requirements}}`,\r\n    { requirements: concatenatedRequirements },\r\n  );\r\n\r\n  const exp = spell.getMainExp(state);\r\n\r\n  const expGainText =\r\n    exp.element != null\r\n      ? t(\"Exp gain: +{{amount}} {{element}} exp\", {\r\n          amount: formatNumber(exp.expMax),\r\n          element: translateElement(exp.element),\r\n        })\r\n      : t(\"Exp gain: +{{min}}~{{max}} exp (various)\", {\r\n          min: formatNumber(exp.expMin),\r\n          max: formatNumber(exp.expMax),\r\n        });\r\n\r\n  const maxCraftAmount = spell.timesCraftable(state);\r\n\r\n  const transmuteCallback = useCallback(() => {\r\n    stateRef.current.apply(spell.doAction.bind(spell, {}));\r\n  }, [item]);\r\n\r\n  const transmuteMaxCallback = useCallback(() => {\r\n    stateRef.current.apply(spell.craftMax.bind(spell));\r\n  }, [item]);\r\n\r\n  const transmuteIntermediateCallback = useCallback(() => {\r\n    stateRef.current.apply(spell.craftIntermediate.bind(spell));\r\n  }, [item]);\r\n\r\n  const transmuteMaxVisible = maxCraftAmount > 1;\r\n\r\n  const transmuteIntermediateVisible =\r\n    spell.isCraftIntermediatePotentiallyPossible(state);\r\n  const transmuteIntermediateEnabled = spell.isCraftIntermediatePossible(state);\r\n\r\n  const itemStack = useMemo(\r\n    () => ({\r\n      itemOccurrence: { itemId: item.getId(), params },\r\n      amount: 1,\r\n    }),\r\n    [item.getId()],\r\n  );\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View style={styles.craftingDetailsContainer}>\r\n        <ItemInfo itemStack={itemStack} showTile={true} />\r\n        <Markdown>{totalOwnedText}</Markdown>\r\n        <Markdown>{expGainText}</Markdown>\r\n        <View style={styles.costContainer}>\r\n          <Markdown>{t(\"Cost:\")}</Markdown>\r\n          <CostViewer resources={cost.resources} items={cost.items} />\r\n        </View>\r\n        {isAutocastUnlocked(state) && (\r\n          <View style={Styles.mt4}>\r\n            <SpellWizardsInfo spellId={spell.getId()} />\r\n          </View>\r\n        )}\r\n        <View style={styles.actionRow}>\r\n          {isCraftable ? (\r\n            [\r\n              <Button\r\n                key=\"craft_button\"\r\n                enableAutoRepress={true}\r\n                autoRepressConfig={{\r\n                  dropoffMultiplier: 0.8,\r\n                  startingThreshold: 300,\r\n                  startingRepressTime: 200,\r\n                  minTimeMs: 50,\r\n                }}\r\n                disabled={!canTransmute}\r\n                onPress={transmuteCallback}\r\n              >\r\n                {t(\"Transmute\")}\r\n              </Button>,\r\n              transmuteMaxVisible && (\r\n                <Button\r\n                  key=\"craft_max\"\r\n                  disabled={!canTransmute}\r\n                  onPress={transmuteMaxCallback}\r\n                >\r\n                  {t(\"Transmute All ({{amount}})\", {\r\n                    amount: formatNumber(maxCraftAmount),\r\n                  })}\r\n                </Button>\r\n              ),\r\n              transmuteIntermediateVisible && (\r\n                <Button\r\n                  key=\"craft_intermediate\"\r\n                  onPress={transmuteIntermediateCallback}\r\n                  disabled={!transmuteIntermediateEnabled}\r\n                >\r\n                  {t(\"Transmute Materials\", {\r\n                    amount: formatNumber(maxCraftAmount),\r\n                  })}\r\n                </Button>\r\n              ),\r\n            ]\r\n          ) : (\r\n            <Text\r\n              style={[styles.cannotCraftText, { color: theme.colors.error }]}\r\n            >\r\n              {cannotCastText}\r\n            </Text>\r\n          )}\r\n        </View>\r\n      </View>\r\n    ),\r\n    [\r\n      itemStack,\r\n      totalOwnedText,\r\n      expGainText,\r\n      JSON.stringify(cost.resources),\r\n      JSON.stringify(cost.items),\r\n      isAutocastUnlocked(state),\r\n      canTransmute,\r\n      transmuteMaxVisible,\r\n      transmuteMaxCallback,\r\n      maxCraftAmount,\r\n      stateRef,\r\n      theme,\r\n      isCraftable,\r\n      transmuteIntermediateCallback,\r\n      transmuteIntermediateEnabled,\r\n      transmuteIntermediateVisible,\r\n    ],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  craftingDetailsContainer: {\r\n    marginBottom: 16,\r\n  },\r\n  tagRow: {\r\n    marginVertical: 4,\r\n  },\r\n  actionRow: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    marginTop: 8,\r\n    gap: 8,\r\n  },\r\n  actionButtonContainer: {\r\n    marginRight: 8,\r\n  },\r\n  costContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-start\",\r\n    marginTop: 4,\r\n  },\r\n  costTextContainer: {\r\n    marginRight: 8,\r\n  },\r\n  inventoryFullContainer: {\r\n    flex: 1,\r\n    marginHorizontal: 8,\r\n  },\r\n  cannotCraftText: {\r\n    fontStyle: \"italic\",\r\n  },\r\n});\r\n","import React, { useCallback, useMemo, useRef } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport {\r\n  assignSpellcraftToVat,\r\n  canApplySpellcraftToSpell,\r\n} from \"../../backend/spellcraft/SpellcraftUtils\";\r\nimport { Spellcrafts } from \"../../backend/spellcraft/Spellcrafts\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { ItemTile } from \"../inventory/ItemTile\";\r\nimport { Button } from \"../utility/Button\";\r\nimport { CostViewer } from \"../utility/CostViewer\";\r\nimport { EffectViewer } from \"../utility/Miscellaneous\";\r\nimport Styles from \"../utility/Styles\";\r\nimport { Text } from \"../utility/Text\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\n\r\nexport function SpellcraftInfo(props: {\r\n  spellcraftId: string;\r\n  showTile: boolean;\r\n}) {\r\n  const state = useGameState();\r\n\r\n  const spellcraft = Spellcrafts.getById(props.spellcraftId);\r\n  const item = spellcraft.getBaseItem();\r\n  const cost = {\r\n    resources: {},\r\n    items: {},\r\n  };\r\n  cost.items[item.getId()] = 1000;\r\n\r\n  const theme = useTheme();\r\n\r\n  const effect = spellcraft.getEffect(state);\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View>\r\n        <View style={styles.itemDetailsContainer}>\r\n          <View style={styles.main}>\r\n            <Text h3>{item.getDefaultName()}</Text>\r\n            {effect && <EffectViewer>{effect}</EffectViewer>}\r\n          </View>\r\n          {props.showTile && (\r\n            <ItemTile\r\n              title={spellcraft.getName()}\r\n              icon={item.getId()}\r\n              tooltipIdSuffix=\"spellcraftInfo\"\r\n              borderColor={theme.colors.outline}\r\n            />\r\n          )}\r\n        </View>\r\n        <View style={styles.costContainer}>\r\n          <View style={Styles.mr8}>\r\n            <Text>{t(\"Cost:\")}</Text>\r\n          </View>\r\n          <CostViewer resources={cost.resources} items={cost.items} />\r\n        </View>\r\n      </View>\r\n    ),\r\n    [item.getId(), effect, JSON.stringify(cost), theme],\r\n  );\r\n}\r\n\r\nexport function SpellcraftDetails(props: {\r\n  vatId: string;\r\n  spellcraftId: string;\r\n}) {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const vatId = props.vatId;\r\n  const spellcraft = Spellcrafts.getById(props.spellcraftId);\r\n  const item = spellcraft.getBaseItem();\r\n\r\n  const cost = {\r\n    resources: {},\r\n    items: {},\r\n  };\r\n  cost.items[item.getId()] = 1000;\r\n\r\n  const canAfford = spellcraft.canAfford(state);\r\n\r\n  const assignCallback = useCallback(() => {\r\n    stateRef.current.apply((state) =>\r\n      assignSpellcraftToVat(state, vatId, props.spellcraftId),\r\n    );\r\n  }, [item]);\r\n\r\n  const vat = state.run.spellcrafts[vatId];\r\n\r\n  const isAlreadyAssigned = vat.spellcraftId == props.spellcraftId;\r\n  const hasError = !canApplySpellcraftToSpell(state, vat.spellId, spellcraft);\r\n\r\n  const theme = useTheme();\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View style={styles.craftingDetailsContainer}>\r\n        <SpellcraftInfo spellcraftId={props.spellcraftId} showTile={true} />\r\n        <View style={styles.actionRow}>\r\n          <Button\r\n            key=\"assignButton\"\r\n            disabled={!canAfford || isAlreadyAssigned || hasError}\r\n            onPress={assignCallback}\r\n          >\r\n            {t(\"Spellcraft\")}\r\n          </Button>\r\n        </View>\r\n        {!isAlreadyAssigned && hasError && (\r\n          <View style={Styles.mt8}>\r\n            <Text style={{ color: theme.colors.error, fontStyle: \"italic\" }}>\r\n              {t(\r\n                \"You cannot assign this Spellcraft to the current spell! You may have only up to 2 separate Spellcrafts on a single spell. They must both be different, and unless the Spellcraft used is from items that you can Transmute using your Primary Element, the Spellcraft can only be used once across all spells!\",\r\n              )}\r\n            </Text>\r\n          </View>\r\n        )}\r\n      </View>\r\n    ),\r\n    [\r\n      props.spellcraftId,\r\n      canAfford,\r\n      assignCallback,\r\n      isAlreadyAssigned,\r\n      hasError,\r\n      theme,\r\n    ],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  craftingDetailsContainer: {\r\n    marginBottom: 16,\r\n  },\r\n  actionRow: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    marginTop: 8,\r\n    gap: 8,\r\n  },\r\n  actionButtonContainer: {\r\n    marginRight: 8,\r\n  },\r\n  costContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-start\",\r\n    marginTop: 4,\r\n  },\r\n  costTextContainer: {\r\n    marginRight: 8,\r\n  },\r\n  inventoryFullContainer: {\r\n    flex: 1,\r\n    marginHorizontal: 8,\r\n  },\r\n  cannotCraftText: {\r\n    fontStyle: \"italic\",\r\n  },\r\n  itemDetailsContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n  main: {\r\n    flex: 1,\r\n  },\r\n});\r\n","import React, { useMemo, useRef } from \"react\";\r\nimport {\r\n  Platform,\r\n  ScrollView,\r\n  StyleSheet,\r\n  View,\r\n  useWindowDimensions,\r\n} from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { ItemCompendiumInfo } from \"../../backend/items/ItemCompendium\";\r\nimport { Items } from \"../../backend/items/Items\";\r\nimport { TransmutationSpell } from \"../../backend/items/transmute/TransmutationSpell\";\r\nimport { Spellcrafts } from \"../../backend/spellcraft/Spellcrafts\";\r\nimport { Spells } from \"../../backend/spells/Spells\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { SpellcraftInfo } from \"../spellcraft/SpellcraftDetails\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\nimport { TransmuteSpellInfo } from \"./CraftingDetails\";\r\nimport { ItemInfo } from \"./ItemInfo\";\r\nimport { ItemTile } from \"./ItemTile\";\r\n\r\nexport interface ItemGridElement {\r\n  itemOrSpellId: string;\r\n  amount: number;\r\n  params: any;\r\n  disabled?: boolean;\r\n  disableTooltip?: boolean;\r\n  itemInfo?: ItemCompendiumInfo;\r\n}\r\n\r\nexport enum ItemGridElementUsage {\r\n  INVENTORY = \"INVENTORY\",\r\n  TRANSMUTE = \"TRANSMUTE\",\r\n  COMPENDIUM = \"COMPENDIUM\",\r\n  SPELLCRAFT = \"SPELLCRAFT\",\r\n}\r\n\r\nexport interface ItemGridProps {\r\n  items: ItemGridElement[];\r\n  location?: ItemGridElementUsage;\r\n  onPressItem?: (itemGridElement: ItemGridElement) => void;\r\n  onDoublePressItem?: (itemGridElement: ItemGridElement) => void;\r\n  overrideMaxHeight?: number;\r\n}\r\n\r\nfunction ItemGridTooltipUnmemoized(props: {\r\n  item: ItemGridElement | undefined;\r\n  location: ItemGridElementUsage | undefined;\r\n}) {\r\n  if (props.item == null || props.location == ItemGridElementUsage.COMPENDIUM) {\r\n    return null;\r\n  }\r\n  const itemGridElement = props.item;\r\n  return useMemo(() => {\r\n    if (props.location == ItemGridElementUsage.TRANSMUTE) {\r\n      const spell = Spells.getById(\r\n        itemGridElement.itemOrSpellId,\r\n      ) as TransmutationSpell;\r\n      return <TransmuteSpellInfo spell={spell} />;\r\n    } else if (props.location == ItemGridElementUsage.SPELLCRAFT) {\r\n      return (\r\n        <SpellcraftInfo\r\n          showTile={false}\r\n          spellcraftId={Spellcrafts.getAll()\r\n            .find(\r\n              (spellcraft) =>\r\n                spellcraft.getBaseItem().getId() ==\r\n                itemGridElement.itemOrSpellId,\r\n            )\r\n            .getId()}\r\n        />\r\n      );\r\n    }\r\n    const item = Items.getById(itemGridElement.itemOrSpellId);\r\n    return (\r\n      <ItemInfo\r\n        itemStack={{\r\n          itemOccurrence: {\r\n            itemId: item.getId(),\r\n            params: itemGridElement.params,\r\n          },\r\n          amount: itemGridElement.amount,\r\n        }}\r\n        showTile={false}\r\n      />\r\n    );\r\n  }, [JSON.stringify(itemGridElement), props.location]);\r\n}\r\n\r\nconst ItemGridTooltip = React.memo(\r\n  ItemGridTooltipUnmemoized,\r\n  (prevProps, nextProps) =>\r\n    JSON.stringify(prevProps) == JSON.stringify(nextProps),\r\n);\r\n\r\nfunction ItemGridElementUnmemoized(props: {\r\n  itemGridElement: ItemGridElement;\r\n  location: ItemGridElementUsage;\r\n  index: number;\r\n  onPress: (item: ItemGridElement) => void;\r\n  onDoublePress: (item: ItemGridElement) => void;\r\n}) {\r\n  const { itemGridElement, index, onPress, onDoublePress } = props;\r\n  const item =\r\n    props.location == ItemGridElementUsage.TRANSMUTE\r\n      ? (\r\n          Spells.getById(itemGridElement.itemOrSpellId) as TransmutationSpell\r\n        ).getItem()\r\n      : Items.getById(itemGridElement.itemOrSpellId);\r\n  const accessibilityMarker = useMemo(() => {\r\n    let accessibilityMarker: React.ReactNode = null;\r\n    if (index % 10 == 0) {\r\n      accessibilityMarker = (\r\n        <View\r\n          style={styles.accessibilityHidden}\r\n          accessible={true}\r\n          accessibilityLabel={t(\"Item list position {{index}}\", {\r\n            index: index + 1,\r\n          })}\r\n          accessibilityRole=\"header\"\r\n          // @ts-ignore This prop is supported\r\n          accessibilityLevel={5}\r\n          accessibilityElementsHidden={false}\r\n        />\r\n      );\r\n    }\r\n    return accessibilityMarker;\r\n  }, [index]);\r\n  const tooltip = useMemo(\r\n    () =>\r\n      itemGridElement.disableTooltip || Platform.OS != \"web\" ? null : (\r\n        <ItemGridTooltip item={itemGridElement} location={props.location} />\r\n      ),\r\n    [itemGridElement, props.location],\r\n  );\r\n  return useMemo(\r\n    () => (\r\n      <View>\r\n        {accessibilityMarker}\r\n        <ItemTile\r\n          title={item.getName(itemGridElement.params)}\r\n          onPress={onPress ? onPress.bind(null, itemGridElement) : undefined}\r\n          onDoublePress={\r\n            onDoublePress\r\n              ? onDoublePress.bind(null, itemGridElement)\r\n              : undefined\r\n          }\r\n          icon={item.getId()}\r\n          quality={itemGridElement?.params?.itemQuality}\r\n          disabled={itemGridElement.disabled}\r\n          amount={itemGridElement.amount}\r\n          tooltipIdSuffix={props.location}\r\n          tooltip={tooltip}\r\n        />\r\n      </View>\r\n    ),\r\n    [\r\n      accessibilityMarker,\r\n      itemGridElement,\r\n      tooltip,\r\n      onPress,\r\n      onDoublePress,\r\n      props.location,\r\n    ],\r\n  );\r\n}\r\n\r\nconst ItemGridTile = React.memo(ItemGridElementUnmemoized);\r\n\r\nexport function ItemGrid(props: ItemGridProps) {\r\n  const theme = useTheme();\r\n  const state = useGameState();\r\n  const { height, width } = useWindowDimensions();\r\n  const estimatedMaxHeight = Math.max(220, height - 80 - 300 - 300);\r\n  let stateRef = useRef(state);\r\n  stateRef.current = state;\r\n  const topContainerStyle = useMemo(\r\n    () => [styles.container, { borderColor: theme.colors.outlineVariant }],\r\n    [theme],\r\n  );\r\n  const scrollViewStyle = useMemo(\r\n    () => [\r\n      props.overrideMaxHeight != null\r\n        ? {\r\n            maxHeight: props.overrideMaxHeight,\r\n          }\r\n        : { maxHeight: estimatedMaxHeight },\r\n    ],\r\n    [props.overrideMaxHeight, estimatedMaxHeight],\r\n  );\r\n  const insideContainerStyle = useMemo(\r\n    () => [styles.gridContainer, { backgroundColor: theme.colors.background }],\r\n    [theme],\r\n  );\r\n  return useMemo(() => {\r\n    return (\r\n      <View style={topContainerStyle}>\r\n        <ScrollView style={scrollViewStyle} nestedScrollEnabled={true}>\r\n          <View style={insideContainerStyle}>\r\n            {props.items.map((itemGridElement, index) => (\r\n              <ItemGridTile\r\n                key={\r\n                  itemGridElement.itemOrSpellId +\r\n                  JSON.stringify(itemGridElement.params)\r\n                }\r\n                itemGridElement={itemGridElement}\r\n                index={index}\r\n                onPress={props.onPressItem}\r\n                onDoublePress={props.onDoublePressItem}\r\n                location={props.location}\r\n              />\r\n            ))}\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }, [\r\n    JSON.stringify(props.items),\r\n    props.onPressItem,\r\n    props.onDoublePressItem,\r\n    props.location,\r\n    topContainerStyle,\r\n    scrollViewStyle,\r\n    theme,\r\n  ]);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    borderWidth: 2,\r\n  },\r\n  scrollView: {\r\n    maxHeight: 220,\r\n  },\r\n  gridContainer: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\",\r\n    flex: 1,\r\n  },\r\n  accessibilityHidden: {\r\n    width: 1,\r\n    height: 1,\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n  },\r\n});\r\n","import { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { Platform } from \"expo-modules-core\";\r\nimport React from \"react\";\r\nimport { StyleProp, StyleSheet } from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport RNPicker from \"react-native-picker-select\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { useAuxOptions } from \"./AuxOptionsContext\";\r\n\r\nfunction DropDownIcon() {\r\n  const theme = useTheme();\r\n  return (\r\n    <MaterialIcons\r\n      name=\"arrow-drop-down\"\r\n      size={24}\r\n      color={theme.colors.onPrimary}\r\n    />\r\n  );\r\n}\r\n\r\nexport type PickerData = { key: string; label: string; value: string };\r\n\r\nexport function Picker(props: {\r\n  selectedValue: string;\r\n  onValueChange: (itemValue: string, itemIndex: number) => void;\r\n  data: PickerData[];\r\n  disablePlaceholder?: boolean;\r\n  maxLength?: number;\r\n  style?: StyleProp<any>;\r\n}) {\r\n  const { style, selectedValue, ...rest } = props;\r\n  const theme = useTheme();\r\n  const auxOptions = useAuxOptions();\r\n  return (\r\n    <RNPicker\r\n      {...rest}\r\n      style={{\r\n        inputAndroidContainer: {\r\n          backgroundColor: theme.colors.primary,\r\n          padding: 8,\r\n          paddingVertical: auxOptions.compactLayout ? 0 : 8,\r\n          paddingRight: 32,\r\n          borderRadius: 4,\r\n        },\r\n        inputAndroid: StyleSheet.flatten([\r\n          {\r\n            color: theme.colors.onPrimary,\r\n          },\r\n          style,\r\n        ]),\r\n        iconContainer: {\r\n          top: auxOptions.compactLayout ? 2 : 10,\r\n          right: 4,\r\n          width: Platform.OS === \"web\" ? 0 : 24,\r\n          display: Platform.OS === \"web\" ? \"none\" : \"flex\",\r\n        },\r\n        viewContainer: StyleSheet.flatten([\r\n          Platform.OS === \"web\"\r\n            ? {\r\n                alignSelf: \"center\",\r\n              }\r\n            : undefined,\r\n          style,\r\n        ]),\r\n        placeholder: {\r\n          color: theme.colors.onPrimary,\r\n        },\r\n      }}\r\n      placeholder={props.disablePlaceholder ? {} : { label: t(\"Select...\") }}\r\n      fixAndroidTouchableBug={true}\r\n      // @ts-expect-error Icon is not properly typed\r\n      Icon={DropDownIcon}\r\n      value={selectedValue}\r\n      useNativeAndroidPickerStyle={false}\r\n      dropdownIconColor={theme.colors.onBackground}\r\n      dropdownIconRippleColor={theme.colors.onBackground}\r\n      textInputProps={props.maxLength && { maxLength: props.maxLength }}\r\n      items={props.data}\r\n    ></RNPicker>\r\n  );\r\n}\r\n","import React, { useCallback, useState } from \"react\";\r\n\r\nexport type UIContextValue = {\r\n  getUIState: (id: string) => any;\r\n  setUIState: (id: string, value: any) => void;\r\n};\r\n\r\nexport const UIContext = React.createContext<UIContextValue>({\r\n  getUIState: (id: string) => null,\r\n  setUIState: (id: string, value: any) => {},\r\n});\r\n\r\nexport function useUIStateFromContext<T>(\r\n  context: UIContextValue,\r\n  key: string,\r\n  initialValue: T,\r\n): [T, (value: T) => void] {\r\n  const currentValue = context.getUIState(key) ?? initialValue;\r\n  const [stateValue, setStateValue] = useState<T>(currentValue);\r\n  const setCurrentValue = useCallback(\r\n    (value: T) => {\r\n      setStateValue(value);\r\n      context.setUIState(key, value);\r\n    },\r\n    [context, key, setStateValue],\r\n  );\r\n\r\n  return [stateValue as T, setCurrentValue];\r\n}\r\n","import { t } from \"i18next\";\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { Platform, StyleSheet, View } from \"react-native\";\r\nimport { TextInput } from \"react-native-paper\";\r\nimport { Flag } from \"../backend/Flag\";\r\nimport { hasFlag } from \"../backend/Flags\";\r\nimport {\r\n  addGameStateListener,\r\n  clearGameStateListener,\r\n} from \"../backend/GameStateListeners\";\r\nimport { isEnhancementUnlocked } from \"../backend/enhancement/Enhancements\";\r\nimport { isExplorationUnlocked } from \"../backend/exploration/Exploration\";\r\nimport { translateItemTag } from \"../backend/items/Item\";\r\nimport { ItemTagEnum } from \"../backend/items/ItemTagEnum\";\r\nimport {\r\n  TransmutationSpell,\r\n  getAllTransmutationSpellsEverCastable,\r\n} from \"../backend/items/transmute/TransmutationSpell\";\r\nimport {\r\n  getElementLevel,\r\n  getUnlockedElements,\r\n} from \"../backend/spells/Elements\";\r\nimport { Spells } from \"../backend/spells/Spells\";\r\nimport { fromEntries } from \"../utils/CoreUtils\";\r\nimport { TransmuteSpellDetails } from \"./inventory/CraftingDetails\";\r\nimport {\r\n  ItemGrid,\r\n  ItemGridElement,\r\n  ItemGridElementUsage,\r\n} from \"./inventory/ItemGrid\";\r\nimport { Button } from \"./utility/Button\";\r\nimport { CheckBox } from \"./utility/CheckBox\";\r\nimport { Picker as UtilityPicker } from \"./utility/Picker\";\r\nimport Styles from \"./utility/Styles\";\r\nimport { Text } from \"./utility/Text\";\r\nimport { UIContext, useUIStateFromContext } from \"./utility/UIContext\";\r\nimport { VisibilityContext } from \"./utility/VisibilityContext\";\r\nimport { useGameState } from \"./utility/useGameState\";\r\n\r\nexport const ITEM_TAG_ORDER = [\r\n  ItemTagEnum.Material,\r\n  ItemTagEnum.Hand,\r\n  ItemTagEnum.Body,\r\n  ItemTagEnum.Accessory,\r\n  ItemTagEnum.Consumable,\r\n  ItemTagEnum.Equipment,\r\n  ItemTagEnum.Familiar,\r\n  ItemTagEnum.QuestItem,\r\n];\r\n\r\nexport default function Transmute() {\r\n  const state = useGameState();\r\n  const uiContext = useContext(UIContext);\r\n  const [selectedElement, setSelectedElement] = useState(\r\n    null as ItemGridElement | null,\r\n  );\r\n  const [selectedTag, setSelectedTag] = useUIStateFromContext(\r\n    uiContext,\r\n    \"CraftingTag\",\r\n    \"All\",\r\n  );\r\n  const maxElementLevels = state.world.maxElementLevels;\r\n  const currentElementLevels = fromEntries(\r\n    getUnlockedElements(state).map((element) => [\r\n      element,\r\n      getElementLevel(state, element),\r\n    ]),\r\n  );\r\n  let castableSpells = useMemo(() => {\r\n    const allItems = getAllTransmutationSpellsEverCastable(state);\r\n    return allItems;\r\n  }, [\r\n    JSON.stringify(maxElementLevels),\r\n    isExplorationUnlocked(state),\r\n    isEnhancementUnlocked(state),\r\n    hasFlag(state, Flag.DeepCavernsUnlocked),\r\n    hasFlag(state, Flag.LostForestUnlocked),\r\n  ]);\r\n\r\n  const tags = useMemo(() => {\r\n    const tagSet = new Set<string>();\r\n    castableSpells.forEach((spell) => {\r\n      const tags = spell.getItem().getTags();\r\n      tags.forEach((tag) => tagSet.add(tag));\r\n    });\r\n    const tags = Array.from(tagSet).sort((a, b) => {\r\n      const indexA = ITEM_TAG_ORDER.findIndex((tag) => tag == a);\r\n      const indexB = ITEM_TAG_ORDER.findIndex((tag) => tag == b);\r\n      return indexA - indexB;\r\n    });\r\n    return tags;\r\n  }, [castableSpells]);\r\n\r\n  useEffect(() => {\r\n    if (!tags.includes(selectedTag)) {\r\n      setSelectedTag(\"All\");\r\n    }\r\n  }, [tags.join(), selectedTag]);\r\n\r\n  useEffect(() => setSelectedElement(null), [selectedTag]);\r\n\r\n  const selectedElementRef = useRef(selectedElement);\r\n  selectedElementRef.current = selectedElement;\r\n\r\n  const visible = useContext(VisibilityContext);\r\n\r\n  useEffect(() => {\r\n    if (visible) {\r\n      addGameStateListener(\r\n        \"TransmutationComponent\",\r\n        (newState) => {\r\n          setSelectedElement(null);\r\n        },\r\n        (state) =>\r\n          getAllTransmutationSpellsEverCastable(state)\r\n            .map((item) => item.getId())\r\n            .join(),\r\n      );\r\n      return () => clearGameStateListener(\"TransmutationComponent\");\r\n    }\r\n  }, [visible]);\r\n\r\n  const onPressItem = React.useCallback(\r\n    (item: ItemGridElement) => {\r\n      setSelectedElement(item);\r\n    },\r\n    [setSelectedElement],\r\n  );\r\n\r\n  const tagButtons = useMemo(() => {\r\n    return (\r\n      <UtilityPicker\r\n        onValueChange={setSelectedTag}\r\n        style={styles.picker}\r\n        selectedValue={selectedTag}\r\n        data={[\"All\", ...tags].map((tag) => ({\r\n          label: tag == \"All\" ? t(\"All\") : translateItemTag(tag as ItemTagEnum),\r\n          value: tag,\r\n          key: tag,\r\n        }))}\r\n        disablePlaceholder={true}\r\n      />\r\n    );\r\n  }, [setSelectedTag, selectedTag, JSON.stringify(tags)]);\r\n\r\n  const sortedCastableSpells = useMemo(\r\n    () =>\r\n      castableSpells\r\n        .filter(\r\n          (spell) =>\r\n            selectedTag === \"All\" ||\r\n            spell\r\n              .getItem()\r\n              .getTags()\r\n              .includes(selectedTag as ItemTagEnum),\r\n        )\r\n        .sort((a, b) => {\r\n          const firstTagA = ITEM_TAG_ORDER.findIndex((tag) =>\r\n            a\r\n              .getItem()\r\n              .getTags()\r\n              .includes(tag as ItemTagEnum),\r\n          );\r\n          const firstTagB = ITEM_TAG_ORDER.findIndex((tag) =>\r\n            b\r\n              .getItem()\r\n              .getTags()\r\n              .includes(tag as ItemTagEnum),\r\n          );\r\n          if (firstTagA != firstTagB) {\r\n            return firstTagA - firstTagB;\r\n          }\r\n          const maxA = Math.max(\r\n            ...(Object.values(a.getLevelRequirements()).filter(\r\n              (n) => n != undefined,\r\n            ) as number[]),\r\n          );\r\n          const maxB = Math.max(\r\n            ...(Object.values(b.getLevelRequirements()).filter(\r\n              (n) => n != undefined,\r\n            ) as number[]),\r\n          );\r\n          return maxA - maxB;\r\n        }),\r\n    [selectedTag, castableSpells],\r\n  );\r\n\r\n  const [hideLocked, setHideLocked] = useUIStateFromContext(\r\n    uiContext,\r\n    \"crafting_hide_locked\",\r\n    false,\r\n  );\r\n\r\n  const toggleLockedCallback = useCallback(() => {\r\n    setHideLocked(!hideLocked);\r\n  }, [hideLocked, setHideLocked]);\r\n\r\n  useEffect(() => setSelectedElement(null), [hideLocked]);\r\n\r\n  const [filterText, setFilterText] = useState(\"\");\r\n  useEffect(() => setSelectedElement(null), [filterText]);\r\n\r\n  const [filterTextTemp, setFilterTextTemp] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => setFilterText(filterTextTemp), 400);\r\n    return () => clearTimeout(timeout);\r\n  }, [filterTextTemp]);\r\n\r\n  const itemGridElements = useMemo(\r\n    () =>\r\n      sortedCastableSpells.map((spell) => ({\r\n        itemOrSpellId: spell.getId(),\r\n        amount: 1,\r\n        params: spell.getItem().getDefaultParams(),\r\n        disabled: !spell.isVisible(state),\r\n      })),\r\n    [\r\n      JSON.stringify(maxElementLevels),\r\n      JSON.stringify(currentElementLevels),\r\n      sortedCastableSpells,\r\n    ],\r\n  );\r\n\r\n  const itemGridElementsJSON = useMemo(\r\n    () => JSON.stringify(itemGridElements),\r\n    [itemGridElements],\r\n  );\r\n\r\n  const isAnyLocked = useMemo(() => {\r\n    return itemGridElements.some((element) => element.disabled);\r\n  }, [itemGridElementsJSON]);\r\n\r\n  const itemGridElementsFiltered = useMemo(() => {\r\n    let elements = itemGridElements;\r\n    if (hideLocked) {\r\n      elements = elements.filter(\r\n        (itemGridElement) => !itemGridElement.disabled,\r\n      );\r\n    }\r\n    if (filterText.length >= 3) {\r\n      elements = elements.filter((itemGridElement) => {\r\n        return Spells.getById(itemGridElement.itemOrSpellId)\r\n          .getSpellName()\r\n          .toLowerCase()\r\n          .includes(filterText.toLowerCase());\r\n      });\r\n    }\r\n    return elements.map((element, index) => ({\r\n      ...element,\r\n      disableTooltip: selectedElement?.itemOrSpellId == element.itemOrSpellId,\r\n    }));\r\n  }, [itemGridElementsJSON, hideLocked, selectedElement, filterText]);\r\n\r\n  const itemGridElementsFilteredJSON = useMemo(\r\n    () => JSON.stringify(itemGridElementsFiltered),\r\n    [itemGridElementsFiltered],\r\n  );\r\n\r\n  const selectedSpell =\r\n    selectedElement != null\r\n      ? (Spells.getById(selectedElement?.itemOrSpellId) as TransmutationSpell)\r\n      : undefined;\r\n\r\n  const itemGrid = useMemo(\r\n    () => (\r\n      <ItemGrid\r\n        items={itemGridElementsFiltered}\r\n        location={ItemGridElementUsage.TRANSMUTE}\r\n        onPressItem={onPressItem}\r\n      />\r\n    ),\r\n    [itemGridElementsFilteredJSON, onPressItem],\r\n  );\r\n\r\n  const details = useMemo(\r\n    () => (\r\n      <View style={styles.detailsContainer}>\r\n        {selectedSpell && <TransmuteSpellDetails spell={selectedSpell} />}\r\n      </View>\r\n    ),\r\n    [selectedSpell?.getId()],\r\n  );\r\n\r\n  const clearFilter = useCallback(() => {\r\n    setFilterText(\"\");\r\n    setFilterTextTemp(\"\");\r\n  }, []);\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View style={styles.container}>\r\n        <View style={[Styles.flexRowSpaceBetween, Styles.mb8, Styles.ph8]}>\r\n          <View style={[styles.tagPickerContainer]}>{tagButtons}</View>\r\n          {isAnyLocked && (\r\n            <CheckBox\r\n              title={t(\"Hide locked\")}\r\n              checked={hideLocked}\r\n              onPress={toggleLockedCallback}\r\n              containerStyle={styles.checkboxContainer}\r\n            />\r\n          )}\r\n        </View>\r\n        <View style={[Styles.flexRowAlignCenter, Styles.mb8, Styles.ph8]}>\r\n          <Text>{t(\"Filter:\")}</Text>\r\n          <TextInput\r\n            style={[Styles.ml8, { minWidth: 180 }]}\r\n            mode=\"outlined\"\r\n            dense={true}\r\n            value={filterTextTemp}\r\n            onChangeText={setFilterTextTemp}\r\n          />\r\n          {filterTextTemp.length > 0 && (\r\n            <Button onPress={clearFilter} compact={true} style={Styles.ml8}>\r\n              {t(\"Clear\")}\r\n            </Button>\r\n          )}\r\n        </View>\r\n        {itemGrid}\r\n        {details}\r\n      </View>\r\n    ),\r\n    [\r\n      tagButtons,\r\n      isAnyLocked,\r\n      hideLocked,\r\n      toggleLockedCallback,\r\n      itemGrid,\r\n      details,\r\n      filterTextTemp,\r\n      setFilterTextTemp,\r\n      clearFilter,\r\n    ],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"flex-start\",\r\n    width: \"100%\",\r\n    paddingTop: 16,\r\n  },\r\n  detailsContainer: {\r\n    marginTop: 16,\r\n    paddingHorizontal: 8,\r\n    paddingBottom: 8,\r\n  },\r\n  buttonGroupContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"flex-start\",\r\n    height: undefined,\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"flex-start\",\r\n    borderWidth: 0,\r\n  },\r\n  buttonGroupButtonContainer: {\r\n    flex: 1,\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: \"#eee\",\r\n    margin: 4,\r\n  },\r\n  picker: {\r\n    flex: 1,\r\n  },\r\n  tagPickerContainer: {\r\n    width: Platform.OS != \"web\" ? 180 : null,\r\n    ...Platform.select({\r\n      android: { backgroundColor: \"#eee\", borderRadius: 10, default: {} },\r\n    }),\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    flexWrap: \"wrap\",\r\n    marginBottom: 16,\r\n    paddingHorizontal: 8,\r\n  },\r\n  checkboxContainer: {\r\n    marginLeft: 0,\r\n    padding: 0,\r\n    maxWidth: 140,\r\n  },\r\n  checkboxText: {\r\n    fontWeight: \"normal\",\r\n  },\r\n});\r\n","import { useMemo } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { getConcatenatedRequirements } from \"../../backend/events/progression/LevelUp\";\r\nimport { ItemCompendiumInfo } from \"../../backend/items/ItemCompendium\";\r\nimport { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { ItemInfo } from \"../inventory/ItemInfo\";\r\nimport { Markdown } from \"../utility/Markdown\";\r\n\r\nexport function ItemCompendiumDetails(props: { info: ItemCompendiumInfo }) {\r\n  const info = props.info;\r\n  const item = info.item;\r\n  const params = item.getDefaultParams();\r\n  const spell = info.transmuteSpell;\r\n\r\n  const howToObtainStrings = [];\r\n  if (spell != null) {\r\n    const concatenatedRequirements = getConcatenatedRequirements(spell);\r\n    howToObtainStrings.push(\r\n      t(\"Transmutation ({{requirements}})\", {\r\n        requirements: concatenatedRequirements,\r\n      }),\r\n    );\r\n  }\r\n  info.knownLootFromEnemies.forEach((lootInfo) =>\r\n    howToObtainStrings.push(\r\n      lootInfo.lootChance != null\r\n        ? t(\"{{enemyName}} ({{chance}}% to get {{amount}})\", {\r\n            enemyName: lootInfo.enemy.getName(),\r\n            amount: lootInfo.amount,\r\n            chance: formatNumber(lootInfo.lootChance * 100, {\r\n              showDecimals: true,\r\n            }),\r\n          })\r\n        : t(\"{{enemyName}} (???)\", { enemyName: lootInfo.enemy.getName() }),\r\n    ),\r\n  );\r\n\r\n  const howToObtainText = t(\"How to obtain: *{{howToObtain}}*\", {\r\n    howToObtain:\r\n      howToObtainStrings.length > 0\r\n        ? howToObtainStrings.join(t(\", \"))\r\n        : t(\"Unknown\"),\r\n  });\r\n\r\n  const howToObtainComponent = useMemo(\r\n    () => (\r\n      <View>\r\n        <Markdown>{howToObtainText}</Markdown>\r\n      </View>\r\n    ),\r\n    [howToObtainText],\r\n  );\r\n\r\n  const itemStack = useMemo(\r\n    () => ({\r\n      itemOccurrence: { itemId: item.getId(), params },\r\n      amount: 1,\r\n    }),\r\n    [item.getId()],\r\n  );\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View>\r\n        <ItemInfo itemStack={itemStack} showTile={true} />\r\n        {howToObtainComponent}\r\n      </View>\r\n    ),\r\n    [itemStack, howToObtainComponent],\r\n  );\r\n}\r\n","import { t } from \"i18next\";\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { Platform, StyleSheet, View } from \"react-native\";\r\nimport { TextInput } from \"react-native-paper\";\r\nimport { translateItemTag } from \"../../backend/items/Item\";\r\nimport { getAllKnownItemCompendiumInfos } from \"../../backend/items/ItemCompendium\";\r\nimport { ItemTagEnum } from \"../../backend/items/ItemTagEnum\";\r\nimport { Items } from \"../../backend/items/Items\";\r\nimport { ITEM_TAG_ORDER } from \"../Transmute\";\r\nimport {\r\n  ItemGrid,\r\n  ItemGridElement,\r\n  ItemGridElementUsage,\r\n} from \"../inventory/ItemGrid\";\r\nimport { Button } from \"../utility/Button\";\r\nimport { Picker as UtilityPicker } from \"../utility/Picker\";\r\nimport Styles from \"../utility/Styles\";\r\nimport { Text } from \"../utility/Text\";\r\nimport { UIContext, useUIStateFromContext } from \"../utility/UIContext\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\nimport { ItemCompendiumDetails } from \"./ItemCompendiumDetails\";\r\n\r\nexport default function ItemCompendium() {\r\n  const state = useGameState();\r\n  const uiContext = useContext(UIContext);\r\n  const [selectedElement, setSelectedElement] = useState(\r\n    null as ItemGridElement | null,\r\n  );\r\n  const [selectedTag, setSelectedTag] = useUIStateFromContext(\r\n    uiContext,\r\n    \"CompendiumTag\",\r\n    \"All\",\r\n  );\r\n  let visibleItemInfos = getAllKnownItemCompendiumInfos(state);\r\n\r\n  const tags = useMemo(() => {\r\n    const tagSet = new Set<string>();\r\n    visibleItemInfos.forEach((info) => {\r\n      const tags = info.item.getTags();\r\n      tags.forEach((tag) => tagSet.add(tag));\r\n    });\r\n    const tags = Array.from(tagSet).sort((a, b) => {\r\n      const indexA = ITEM_TAG_ORDER.findIndex((tag) => tag == a);\r\n      const indexB = ITEM_TAG_ORDER.findIndex((tag) => tag == b);\r\n      return indexA - indexB;\r\n    });\r\n    return tags;\r\n  }, [visibleItemInfos]);\r\n\r\n  useEffect(() => {\r\n    if (!tags.includes(selectedTag)) {\r\n      setSelectedTag(\"All\");\r\n    }\r\n  }, [tags.join(), selectedTag]);\r\n\r\n  useEffect(() => setSelectedElement(null), [selectedTag]);\r\n\r\n  const selectedElementRef = useRef(selectedElement);\r\n  selectedElementRef.current = selectedElement;\r\n\r\n  useEffect(() => {\r\n    setSelectedElement(null);\r\n  }, [visibleItemInfos]);\r\n\r\n  const onPressItem = React.useCallback(\r\n    (item: ItemGridElement) => {\r\n      setSelectedElement(item);\r\n    },\r\n    [setSelectedElement],\r\n  );\r\n\r\n  const tagButtons = useMemo(() => {\r\n    return (\r\n      <UtilityPicker\r\n        onValueChange={setSelectedTag}\r\n        style={styles.picker}\r\n        selectedValue={selectedTag}\r\n        data={[\"All\", ...tags].map((tag) => ({\r\n          label: tag == \"All\" ? t(\"All\") : translateItemTag(tag as ItemTagEnum),\r\n          value: tag,\r\n          key: tag,\r\n        }))}\r\n      />\r\n    );\r\n  }, [setSelectedTag, selectedTag, JSON.stringify(tags)]);\r\n\r\n  const sortedItemInfos = useMemo(\r\n    () =>\r\n      visibleItemInfos\r\n        .filter(\r\n          (info) =>\r\n            selectedTag === \"All\" ||\r\n            info.item.getTags().includes(selectedTag as ItemTagEnum),\r\n        )\r\n        .sort((a, b) => {\r\n          const firstTagA = ITEM_TAG_ORDER.findIndex((tag) =>\r\n            a.item.getTags().includes(tag as ItemTagEnum),\r\n          );\r\n          const firstTagB = ITEM_TAG_ORDER.findIndex((tag) =>\r\n            b.item.getTags().includes(tag as ItemTagEnum),\r\n          );\r\n          if (firstTagA != firstTagB) {\r\n            return firstTagA - firstTagB;\r\n          }\r\n          if (a.transmuteSpell != null && b.transmuteSpell == null) {\r\n            return 1;\r\n          } else if (a.transmuteSpell == null && b.transmuteSpell != null) {\r\n            return -1;\r\n          } else if (a.transmuteSpell == null && b.transmuteSpell == null) {\r\n            return 0;\r\n          }\r\n\r\n          const maxA = Math.max(\r\n            ...(Object.values(a.transmuteSpell.getLevelRequirements()).filter(\r\n              (n) => n != undefined,\r\n            ) as number[]),\r\n          );\r\n          const maxB = Math.max(\r\n            ...(Object.values(b.transmuteSpell.getLevelRequirements()).filter(\r\n              (n) => n != undefined,\r\n            ) as number[]),\r\n          );\r\n          return maxA - maxB;\r\n        }),\r\n    [selectedTag, visibleItemInfos],\r\n  );\r\n\r\n  const [filterText, setFilterText] = useState(\"\");\r\n  useEffect(() => setSelectedElement(null), [filterText]);\r\n\r\n  const [filterTextTemp, setFilterTextTemp] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => setFilterText(filterTextTemp), 400);\r\n    return () => clearTimeout(timeout);\r\n  }, [filterTextTemp]);\r\n\r\n  const itemGridElements = useMemo(\r\n    () =>\r\n      sortedItemInfos.map((info) => ({\r\n        itemOrSpellId: info.item.getId(),\r\n        amount: 1,\r\n        params: info.item.getDefaultParams(),\r\n        disabled: false,\r\n        itemInfo: info,\r\n      })),\r\n    [sortedItemInfos],\r\n  );\r\n\r\n  const itemGridElementsFiltered = useMemo(() => {\r\n    let elements = itemGridElements;\r\n    if (filterText.length >= 3) {\r\n      elements = elements.filter((itemGridElement) => {\r\n        return Items.getById(itemGridElement.itemOrSpellId)\r\n          .getDefaultName()\r\n          .toLowerCase()\r\n          .includes(filterText.toLowerCase());\r\n      });\r\n    }\r\n    return elements.map((element, index) => ({\r\n      ...element,\r\n      disableTooltip: true,\r\n    }));\r\n  }, [itemGridElements, selectedElement, filterText]);\r\n\r\n  const selectedItemInfo = selectedElement;\r\n\r\n  const itemGrid = useMemo(\r\n    () => (\r\n      <ItemGrid\r\n        items={itemGridElementsFiltered}\r\n        location={ItemGridElementUsage.COMPENDIUM}\r\n        onPressItem={onPressItem}\r\n      />\r\n    ),\r\n    [itemGridElementsFiltered, onPressItem],\r\n  );\r\n\r\n  const details = useMemo(\r\n    () => (\r\n      <View style={styles.detailsContainer}>\r\n        {selectedItemInfo && (\r\n          <ItemCompendiumDetails info={selectedItemInfo.itemInfo} />\r\n        )}\r\n      </View>\r\n    ),\r\n    [selectedItemInfo?.itemOrSpellId],\r\n  );\r\n\r\n  const clearFilter = useCallback(() => {\r\n    setFilterText(\"\");\r\n    setFilterTextTemp(\"\");\r\n  }, []);\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View style={styles.container}>\r\n        <View style={[Styles.flexRowSpaceBetween, Styles.mb8, Styles.ph8]}>\r\n          <View style={[styles.tagPickerContainer]}>{tagButtons}</View>\r\n        </View>\r\n        <View style={[Styles.flexRowAlignCenter, Styles.mb8, Styles.ph8]}>\r\n          <Text>{t(\"Filter:\")}</Text>\r\n          <TextInput\r\n            style={[Styles.ml8, { minWidth: 180 }]}\r\n            mode=\"outlined\"\r\n            dense={true}\r\n            value={filterTextTemp}\r\n            onChangeText={setFilterTextTemp}\r\n          />\r\n          {filterTextTemp.length > 0 && (\r\n            <Button onPress={clearFilter} compact={true} style={Styles.ml8}>\r\n              {t(\"Clear\")}\r\n            </Button>\r\n          )}\r\n        </View>\r\n        {itemGrid}\r\n        {details}\r\n      </View>\r\n    ),\r\n    [\r\n      tagButtons,\r\n      itemGrid,\r\n      details,\r\n      filterTextTemp,\r\n      setFilterTextTemp,\r\n      clearFilter,\r\n    ],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"flex-start\",\r\n    width: \"100%\",\r\n    paddingTop: 16,\r\n  },\r\n  detailsContainer: {\r\n    marginTop: 16,\r\n    paddingHorizontal: 8,\r\n    paddingBottom: 8,\r\n  },\r\n  buttonGroupContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"flex-start\",\r\n    height: undefined,\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"flex-start\",\r\n    borderWidth: 0,\r\n  },\r\n  buttonGroupButtonContainer: {\r\n    flex: 1,\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: \"#eee\",\r\n    margin: 4,\r\n  },\r\n  picker: {\r\n    flex: 1,\r\n  },\r\n  tagPickerContainer: {\r\n    width: Platform.OS != \"web\" ? 180 : null,\r\n    ...Platform.select({\r\n      android: { backgroundColor: \"#eee\", borderRadius: 10, default: {} },\r\n    }),\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    flexWrap: \"wrap\",\r\n    marginBottom: 16,\r\n    paddingHorizontal: 8,\r\n  },\r\n  checkboxContainer: {\r\n    marginLeft: 0,\r\n    padding: 0,\r\n    maxWidth: 140,\r\n  },\r\n  checkboxText: {\r\n    fontWeight: \"normal\",\r\n  },\r\n});\r\n","import React, { useMemo, useState } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { SegmentedButtons } from \"react-native-paper\";\r\nimport { t } from \"../utils/I18n\";\r\nimport Bestiary from \"./compendium/Bestiary\";\r\nimport ItemCompendium from \"./compendium/ItemCompendium\";\r\nimport { GameStateFreezer } from \"./utility/GameStateFreezer\";\r\nimport Styles from \"./utility/Styles\";\r\nimport { Text } from \"./utility/Text\";\r\n\r\nexport default function Compendium() {\r\n  const [selectedTab, setSelectedTab] = useState(\"item\");\r\n  const buttons = useMemo(\r\n    () => [\r\n      { value: \"item\", label: t(\"Items\") },\r\n      { value: \"bestiary\", label: t(\"Bestiary\") },\r\n    ],\r\n    [],\r\n  );\r\n  const buttonSelectors = (\r\n    <SegmentedButtons\r\n      value={selectedTab}\r\n      onValueChange={setSelectedTab}\r\n      buttons={buttons}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <View>\r\n      <View style={styles.headerContainer}>\r\n        <Text h1>{t(\"Compendium\")}</Text>\r\n      </View>\r\n\r\n      {buttonSelectors}\r\n\r\n      <View style={Styles.mt16}>\r\n        <View style={selectedTab != \"item\" && { display: \"none\" }}>\r\n          <GameStateFreezer isVisible={selectedTab == \"item\"}>\r\n            <ItemCompendium />\r\n          </GameStateFreezer>\r\n        </View>\r\n        <View style={selectedTab != \"bestiary\" && { display: \"none\" }}>\r\n          <GameStateFreezer isVisible={selectedTab == \"bestiary\"}>\r\n            <Bestiary />\r\n          </GameStateFreezer>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"flex-start\",\r\n    width: \"100%\",\r\n  },\r\n  headerContainer: {\r\n    marginBottom: 16,\r\n  },\r\n  captionText: {\r\n    flex: 1,\r\n  },\r\n});\r\n","import { Audio } from \"expo-av\";\r\n\r\nconst soundMap: Record<string, any> = {\r\n  menuClick: require(\"./menu/click.wav\"),\r\n};\r\n\r\nclass AudioManager {\r\n  sampleMap: Record<string, Audio.Sound> = {};\r\n\r\n  async load(): Promise<void> {\r\n    await Audio.setIsEnabledAsync(true);\r\n    await Promise.all(\r\n      Object.keys(soundMap).map(async (audioId) => {\r\n        const audioSample = soundMap[audioId];\r\n        const audioSound = new Audio.Sound();\r\n        await audioSound.loadAsync(audioSample);\r\n        this.sampleMap[audioId] = audioSound;\r\n      }),\r\n    );\r\n  }\r\n\r\n  play(audioId: string) {\r\n    this.sampleMap[audioId].replayAsync();\r\n    this.sampleMap[audioId].replayAsync();\r\n  }\r\n}\r\n\r\nexport default new AudioManager();\r\n","import { getEventMessageById } from \"./events/Events\";\r\nimport { GameState } from \"./GameState\";\r\nimport { hasTemporaryEffect } from \"./temporaryeffects/TemporaryEffects\";\r\n\r\nexport function cleanup(state: GameState): GameState {\r\n  // Cleanup events\r\n  const events = Object.values(state.run.eventOccurrences).sort(\r\n    (a, b) => b.timestamp - a.timestamp,\r\n  );\r\n  const terminalEvents = events.filter((event) => {\r\n    return (\r\n      event.currentMessageId &&\r\n      getEventMessageById(event.currentMessageId).isTerminal()\r\n    );\r\n  });\r\n  const oldEventOccurrenceIds = terminalEvents\r\n    .slice(20)\r\n    .map((eventOccurrence) => eventOccurrence.eventOccurrenceId);\r\n  oldEventOccurrenceIds.forEach((eventOccurrenceId) => {\r\n    delete state.run.eventOccurrences[eventOccurrenceId];\r\n  });\r\n\r\n  // Cleanup old temporary effect\r\n  for (const key in state.run.temporaryEffects) {\r\n    const temporaryEffect = state.run.temporaryEffects[key];\r\n    if (\r\n      !hasTemporaryEffect(state, temporaryEffect.id, temporaryEffect.target)\r\n    ) {\r\n      delete state.run.temporaryEffects[key];\r\n    }\r\n  }\r\n\r\n  state.global.notifications = state.global.notifications.filter(\r\n    (notification) => notification.globalTimestampRead == null,\r\n  );\r\n\r\n  // Cleanup old action results\r\n  state.run.exploration.actionResultQueue =\r\n    state.run.exploration.actionResultQueue.slice(-10);\r\n\r\n  return state;\r\n}\r\n","import { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { registerTimeTickListener } from \"../../timetick/TimeTick\";\r\nimport { getSecondsPlayed } from \"../../timetick/TotalTimePlayed\";\r\nimport {\r\n  applyTransformations,\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { triggerEvent } from \"../Events\";\r\nimport { GameEvent } from \"../GameEvent\";\r\n\r\nexport type RandomEvent = {\r\n  event: GameEvent;\r\n  weight: number;\r\n  eligible?: (state: GameState) => boolean;\r\n  getParams?: (state: GameState) => any;\r\n};\r\n\r\nconst randomEvents: Record<string, RandomEvent> = {};\r\n\r\nexport function registerRandomEventTrigger(\r\n  event: GameEvent,\r\n  weight: number,\r\n  eligible?: (state: GameState) => boolean,\r\n  getParams?: (state: GameState) => any,\r\n): void {\r\n  randomEvents[event.getId()] = {\r\n    event,\r\n    weight,\r\n    eligible,\r\n    getParams,\r\n  };\r\n}\r\n\r\nconst PITY_COUNTER_THRESHOLD = 60 * 60 * 3; // 3 hours\r\nconst PITY_COUNTER_SECOND_THRESHOLD = 60 * 60 * 6; // 6 hours\r\nconst PITY_COUNTER_VARIANCE = 0.3;\r\nconst PITY_MULTIPLIER = 40;\r\nconst PITY_MAX_PER_RUN = 2;\r\n\r\nfunction registerPity(state: GameState): GameState {\r\n  state.run.pityCounter += 1;\r\n  const nextPitySec =\r\n    PITY_COUNTER_SECOND_THRESHOLD +\r\n    (Math.random() - 0.5) *\r\n      (PITY_COUNTER_SECOND_THRESHOLD * PITY_COUNTER_VARIANCE);\r\n  state.run.pityEnabledAtSeconds = getSecondsPlayed(state) + nextPitySec;\r\n  return state;\r\n}\r\n\r\nexport function isInPity(state: GameState): boolean {\r\n  return (\r\n    state.run.pityCounter < PITY_MAX_PER_RUN &&\r\n    getSecondsPlayed(state) > (state.run.pityEnabledAtSeconds ?? Infinity)\r\n  );\r\n}\r\n\r\nconst randomEventWeightTags = [TransformationTags.RandomEventWeight];\r\n\r\nexport function triggerRandomEvent(state: GameState): GameState {\r\n  // Initialize the pity counter, if needed\r\n  if (state.run.pityEnabledAtSeconds === undefined) {\r\n    const nextPitySec =\r\n      PITY_COUNTER_THRESHOLD +\r\n      (Math.random() - 0.5) * (PITY_COUNTER_THRESHOLD * PITY_COUNTER_VARIANCE);\r\n    state.run.pityEnabledAtSeconds = getSecondsPlayed(state) + nextPitySec;\r\n  }\r\n  const eventsThatApply = Object.values(randomEvents).filter(\r\n    (randomEvent) => !randomEvent.eligible || randomEvent.eligible(state),\r\n  );\r\n  if (eventsThatApply.length === 0) {\r\n    return state;\r\n  }\r\n  const totalWeight = eventsThatApply.reduce((sumToNow, randomEvent) => {\r\n    const weight = applyTransformations(\r\n      randomEventWeightTags,\r\n      state,\r\n      randomEvent.weight,\r\n      { randomEvent: randomEvent },\r\n    );\r\n    return sumToNow + weight;\r\n  }, 0);\r\n  let eventRoll = Math.random() * totalWeight;\r\n  for (let idx in eventsThatApply) {\r\n    const event = eventsThatApply[idx];\r\n    const weight = applyTransformations(\r\n      randomEventWeightTags,\r\n      state,\r\n      event.weight,\r\n      { randomEvent: event },\r\n    );\r\n    eventRoll -= weight;\r\n    if (eventRoll < 0) {\r\n      const params = event.getParams ? event.getParams(state) : {};\r\n      if (event.event.getStorylines().length > 0) {\r\n        state = registerPity(state);\r\n      }\r\n      return triggerEvent(event.event, params)(state);\r\n    }\r\n  }\r\n  return state;\r\n}\r\n\r\nexport function debugRandomEvents(state: GameState): Record<string, number> {\r\n  const eventsThatApply = Object.values(randomEvents).filter(\r\n    (randomEvent) => !randomEvent.eligible || randomEvent.eligible(state),\r\n  );\r\n  const totalWeight = eventsThatApply.reduce((sumToNow, randomEvent) => {\r\n    const weight = applyTransformations(\r\n      randomEventWeightTags,\r\n      state,\r\n      randomEvent.weight,\r\n      { randomEvent: randomEvent },\r\n    );\r\n    return sumToNow + weight;\r\n  }, 0);\r\n  const chancesPerEvent: Record<string, number> = {};\r\n  eventsThatApply.forEach((event) => {\r\n    const weight = applyTransformations(\r\n      randomEventWeightTags,\r\n      state,\r\n      event.weight,\r\n      { randomEvent: event },\r\n    );\r\n    chancesPerEvent[event.event.getId()] = weight / totalWeight;\r\n  });\r\n  return chancesPerEvent;\r\n}\r\n\r\nexport function loadRandomEventTriggers(): void {\r\n  registerTransformation(\r\n    [[TransformationTags.RandomEventWeight]],\r\n    \"PityEventChance\",\r\n    t(\"Storyline Pity\"),\r\n    TransformationType.Multiplier,\r\n    (state, params) => {\r\n      const randomEvent: RandomEvent = params.randomEvent;\r\n      if (randomEvent.event.getStorylines().length > 0 && isInPity(state)) {\r\n        return PITY_MULTIPLIER;\r\n      }\r\n      return 1.0;\r\n    },\r\n  );\r\n  registerTimeTickListener(\r\n    \"RandomEventTriggers\",\r\n    (state: GameState, elapsedSec: number) => {\r\n      const secsPlayed = getSecondsPlayed(state) + state.run.extraEventSecs;\r\n      if (secsPlayed > (state.run.nextRandomEvent || 0)) {\r\n        state = triggerRandomEvent(state);\r\n\r\n        // The next random event will occur in 8 to 12 minutes. However,\r\n        // this period becomes longer and longer as more seconds have been played\r\n        // in the current run: 40 to 60 mins after 24 hours, for example.\r\n        // This rewards quickly triggering random events after retirement and\r\n        // prevents low quality random event spam later in the game.\r\n        // This is capped at 24 in-game hours.\r\n        const periodMultiplier = Math.max(\r\n          1.0 + Math.min(secsPlayed, 60 * 60 * 24) / (60 * 60 * 6),\r\n          1.0,\r\n        );\r\n        state.run.nextRandomEvent =\r\n          (8 + Math.random() * 4) * 60 * periodMultiplier + secsPlayed;\r\n      }\r\n      return state;\r\n    },\r\n  );\r\n}\r\n","import { openURL } from \"expo-linking\";\r\nimport { GameState } from \"../backend/GameState\";\r\nimport { loadBase64Data, serializeSaveData } from \"../backend/SaveData\";\r\nimport { isElectron } from \"./ElectronUtils\";\r\nimport { t } from \"./I18n\";\r\n\r\nexport type LoadResult =\r\n  | {\r\n      result: \"success\";\r\n      data: GameState;\r\n    }\r\n  | {\r\n      result: \"cancel\";\r\n    }\r\n  | {\r\n      result: \"error\";\r\n      error: string;\r\n    };\r\n\r\nexport type TranslationsLoadResult =\r\n  | {\r\n      result: \"success\";\r\n      data: Record<string, string>;\r\n    }\r\n  | {\r\n      result: \"cancel\";\r\n    }\r\n  | {\r\n      result: \"error\";\r\n      error: string;\r\n    };\r\n\r\nexport type SaveResult =\r\n  | {\r\n      result: \"success\";\r\n    }\r\n  | {\r\n      result: \"cancel\";\r\n    }\r\n  | {\r\n      result: \"error\";\r\n      error: string;\r\n    };\r\n\r\nexport const SAVE_TO_FILE_SUPPORTED = true;\r\nexport const LOAD_FROM_FILE_SUPPORTED = isElectron();\r\n\r\nexport async function loadSaveFromFile(): Promise<LoadResult> {\r\n  if (!isElectron()) {\r\n    return { result: \"error\", error: \"Not implemented\" };\r\n  }\r\n\r\n  try {\r\n    // @ts-expect-error window.showOpenFilePicker() is available in Electron\r\n    const [fileHandle] = await window.showOpenFilePicker();\r\n    if (fileHandle != null) {\r\n      const file = await fileHandle.getFile();\r\n      const resultContents = await file.text();\r\n      const unserialized = await loadBase64Data(resultContents);\r\n      if (unserialized != null) {\r\n        return { result: \"success\", data: unserialized };\r\n      }\r\n      return {\r\n        result: \"error\",\r\n        error: t(\"Failed decompressing and decoding the file\"),\r\n      };\r\n    }\r\n  } catch (e) {\r\n    return {\r\n      result: \"error\",\r\n      error: t(\r\n        \"Found unexpected error reading from the filesystem or deserializing\",\r\n      ),\r\n    };\r\n  }\r\n  return { result: \"cancel\" };\r\n}\r\n\r\nexport async function loadTranslationsFromFile(): Promise<TranslationsLoadResult> {\r\n  if (!isElectron()) {\r\n    return { result: \"error\", error: \"Not implemented\" };\r\n  }\r\n\r\n  try {\r\n    // @ts-expect-error window.showOpenFilePicker() is available in Electron\r\n    const [fileHandle] = await window.showOpenFilePicker();\r\n    if (fileHandle != null) {\r\n      const file = await fileHandle.getFile();\r\n      const resultContents = await file.text();\r\n      try {\r\n        const unserialized = JSON.parse(resultContents);\r\n        if (unserialized != null) {\r\n          return { result: \"success\", data: unserialized };\r\n        }\r\n        return {\r\n          result: \"error\",\r\n          error: t(\"Unknown error parsing the file\"),\r\n        };\r\n      } catch (e) {\r\n        return {\r\n          result: \"error\",\r\n          error: t(\"Error parsing the translation file\"),\r\n        };\r\n      }\r\n    }\r\n  } catch (e) {\r\n    return {\r\n      result: \"error\",\r\n      error: t(\"Found unexpected error reading from the filesystem\"),\r\n    };\r\n  }\r\n  return { result: \"cancel\" };\r\n}\r\n\r\nexport async function saveToFile(state: GameState): Promise<SaveResult> {\r\n  const serializedData = await serializeSaveData(state);\r\n  await openURL(\"data:application/octet-stream;utf8,\" + serializedData);\r\n  return { result: \"success\" };\r\n}\r\n","import { getDocumentAsync } from \"expo-document-picker\";\r\nimport * as FileSystem from \"expo-file-system\";\r\nimport React, { useCallback, useMemo, useRef, useState } from \"react\";\r\nimport { I18nManager, Platform, StyleSheet, View } from \"react-native\";\r\nimport { Card, TextInput } from \"react-native-paper\";\r\nimport AudioManager from \"../audio/AudioManager\";\r\nimport { cleanup } from \"../backend/Cleanup\";\r\nimport { clearFlag, hasFlag, setFlag } from \"../backend/Flags\";\r\nimport { Resource, grantResource } from \"../backend/Resources\";\r\nimport {\r\n  loadBase64Data,\r\n  makeCompatible,\r\n  saveDataUnsafe,\r\n} from \"../backend/SaveData\";\r\nimport { getAllGameEvents, triggerEvent } from \"../backend/events/Events\";\r\nimport { debugRandomEvents } from \"../backend/events/autorandom/RandomEventTrigger\";\r\nimport { AttackTarget } from \"../backend/exploration/AttackTarget\";\r\nimport {\r\n  CombatStat,\r\n  clearCombatStatCache,\r\n} from \"../backend/exploration/CombatStats\";\r\nimport { SpellElement, grantElementExp } from \"../backend/spells/Elements\";\r\nimport { Storylines } from \"../backend/storylines/Storylines\";\r\nimport { getSecondsPlayed } from \"../backend/timetick/TotalTimePlayed\";\r\nimport {\r\n  TransformationType,\r\n  explainTransformations,\r\n  registerTransformation,\r\n} from \"../backend/transformation/Transformation\";\r\nimport { keysOf } from \"../utils/CoreUtils\";\r\nimport { saveToFile } from \"../utils/FilesystemSave\";\r\nimport { formatNumber } from \"../utils/FormattingUtils\";\r\nimport { Storage } from \"../utils/Storage\";\r\nimport { Button } from \"./utility/Button\";\r\nimport CategoryContainer from \"./utility/CategoryContainer\";\r\nimport { Picker } from \"./utility/Picker\";\r\nimport { Text } from \"./utility/Text\";\r\nimport { useGameState } from \"./utility/useGameState\";\r\n\r\nexport default function Debug() {\r\n  const events = getAllGameEvents();\r\n  const storylines = Storylines.getAll();\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const [selectedEvent, setSelectedEvent] = useState(\"\");\r\n\r\n  const picker = useMemo(\r\n    () => (\r\n      <Picker\r\n        onValueChange={(value) => setSelectedEvent(value)}\r\n        selectedValue={selectedEvent}\r\n        data={Object.values(events).map((event, idx) => ({\r\n          label: event.getId(),\r\n          value: event.getId(),\r\n          key: event.getId(),\r\n        }))}\r\n      />\r\n    ),\r\n    [setSelectedEvent, selectedEvent, keysOf(events).join()],\r\n  );\r\n  const eventButtons = useMemo(\r\n    () => (\r\n      <CategoryContainer title=\"Trigger events\">\r\n        <Button\r\n          onPress={() =>\r\n            stateRef.current.apply((state) => {\r\n              state.run.nextRandomEvent = 0;\r\n              return state;\r\n            })\r\n          }\r\n        >\r\n          Trigger random event\r\n        </Button>\r\n        {picker}\r\n        <Button\r\n          onPress={() =>\r\n            stateRef.current.apply(triggerEvent(events[selectedEvent]))\r\n          }\r\n        >\r\n          Trigger specific event\r\n        </Button>\r\n      </CategoryContainer>\r\n    ),\r\n    [JSON.stringify(Object.keys(events)), selectedEvent],\r\n  );\r\n\r\n  const [selectedStoryline, setSelectedStoryline] = useState(\"\");\r\n\r\n  const pickerStoryline = useMemo(\r\n    () => (\r\n      <Picker\r\n        onValueChange={(value) => setSelectedStoryline(value)}\r\n        selectedValue={selectedStoryline}\r\n        data={storylines.map((storyline, idx) => ({\r\n          label: storyline.getId(),\r\n          value: storyline.getId(),\r\n          key: storyline.getId(),\r\n        }))}\r\n      />\r\n    ),\r\n    [setSelectedStoryline, selectedStoryline],\r\n  );\r\n  const storylineButtons = useMemo(\r\n    () => (\r\n      <CategoryContainer title=\"Trigger Storylines\">\r\n        {pickerStoryline}\r\n        <Button\r\n          onPress={() =>\r\n            stateRef.current.apply((state) =>\r\n              Storylines.getById(selectedStoryline).complete(state),\r\n            )\r\n          }\r\n        >\r\n          Complete Storyline\r\n        </Button>\r\n        <Button\r\n          onPress={() =>\r\n            stateRef.current.apply((state) =>\r\n              Storylines.getById(selectedStoryline).activateBonus(state),\r\n            )\r\n          }\r\n        >\r\n          Activate Storyline bonus\r\n        </Button>\r\n      </CategoryContainer>\r\n    ),\r\n    [selectedStoryline],\r\n  );\r\n\r\n  const [newPlayerContextState, setNewPlayerContextState] = useState(\r\n    JSON.stringify(state, null, \"  \"),\r\n  );\r\n  const [fixingPlayerContextState, setFixingPlayerContextState] = useState(\"\");\r\n  const overridePlayerContext = useCallback(async () => {\r\n    const deserializedJSON = JSON.parse(newPlayerContextState);\r\n    stateRef.current.overwrite((_oldState) => {\r\n      return makeCompatible(deserializedJSON);\r\n    });\r\n    await saveDataUnsafe(deserializedJSON);\r\n  }, [newPlayerContextState]);\r\n\r\n  const [transformDebugInput, setTransformDebugInput] = useState(\"\");\r\n  const [transformDebugOutput, setTransformDebugOutput] = useState(\"\");\r\n\r\n  const calculate = useCallback(() => {\r\n    const tags = transformDebugInput.split(\",\");\r\n\r\n    const output = explainTransformations(tags, stateRef.current, 1.0);\r\n    const debugOutput = Object.keys(output)\r\n      .map((key) => {\r\n        const eachType = output[key as TransformationType].map(\r\n          ({ id, value }) =>\r\n            `${id}: ${\r\n              value != null\r\n                ? formatNumber(value, { showDecimals: true })\r\n                : \"undefined\"\r\n            }`,\r\n        );\r\n        return key + \": \" + eachType.join(\", \");\r\n      })\r\n      .join(\"\\n\");\r\n    setTransformDebugOutput(debugOutput);\r\n  }, [transformDebugInput, setTransformDebugOutput]);\r\n\r\n  const playSoundCallback = useCallback(\r\n    () => AudioManager.play(\"menuClick\"),\r\n    [],\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <CategoryContainer title=\"Other actions\">\r\n        <Button\r\n          onPress={async () => {\r\n            const result = await getDocumentAsync();\r\n            if (result.type == \"success\") {\r\n              const resultContents = await FileSystem.readAsStringAsync(\r\n                result.uri,\r\n              );\r\n              const unserialized = await loadBase64Data(resultContents);\r\n              console.warn(unserialized);\r\n            }\r\n            console.warn(result);\r\n          }}\r\n        >\r\n          Open Document Picker\r\n        </Button>\r\n        <Button enableAutoRepress={true} onPress={playSoundCallback}>\r\n          Play Sounds\r\n        </Button>\r\n        <Button\r\n          onPress={() =>\r\n            stateRef.current.apply((state) => {\r\n              for (let resource in stateRef.current.run.resources) {\r\n                if (resource != Resource.TimePiece) {\r\n                  state = grantResource(resource as Resource, 1e30)(state);\r\n                }\r\n              }\r\n              // state = grantResource(Resource.TimePieces, 9999999)(state);\r\n              return state;\r\n            })\r\n          }\r\n        >\r\n          Max all storages\r\n        </Button>\r\n        <Button\r\n          onPress={() =>\r\n            stateRef.current.apply((state) => {\r\n              state.global.debugShowUpdatesPerSec =\r\n                !state.global.debugShowUpdatesPerSec;\r\n              return state;\r\n            })\r\n          }\r\n        >\r\n          Toggle UPS overlay\r\n        </Button>\r\n        <Button\r\n          onPress={() =>\r\n            stateRef.current.apply((state) => {\r\n              if (hasFlag(state, \"machinegun_mode\")) {\r\n                state = clearFlag(\"machinegun_mode\")(state);\r\n              } else {\r\n                state = setFlag(\"machinegun_mode\")(state);\r\n              }\r\n              state = clearCombatStatCache(state, AttackTarget.Player);\r\n              return state;\r\n            })\r\n          }\r\n        >\r\n          Toggle machinegun mode\r\n        </Button>\r\n        <Button onPress={() => I18nManager.forceRTL(true)}>Force RTL</Button>\r\n        <Button\r\n          onPress={() =>\r\n            stateRef.current.apply((state) => {\r\n              state = grantElementExp(SpellElement.Fire, 10000)(state);\r\n              state = grantElementExp(SpellElement.Earth, 10000)(state);\r\n              state = grantElementExp(SpellElement.Water, 10000)(state);\r\n              state = grantElementExp(SpellElement.Air, 10000)(state);\r\n              return state;\r\n            })\r\n          }\r\n        >\r\n          Grant 10k element exp\r\n        </Button>\r\n        <Button\r\n          onPress={() =>\r\n            stateRef.current.apply((state) => {\r\n              state.run.warpTimeSecs = 60 * 10;\r\n              return state;\r\n            })\r\n          }\r\n        >\r\n          Warp 10 minutes\r\n        </Button>\r\n        <Button\r\n          onPress={() => {\r\n            stateRef.current.apply((state) => {\r\n              state.run.skipAheadTime = 60 * 10;\r\n              return state;\r\n            });\r\n          }}\r\n        >\r\n          Artificially pass 10 minutes\r\n        </Button>\r\n        <Button\r\n          onPress={() =>\r\n            stateRef.current.apply((state) => {\r\n              if (hasFlag(state, \"debug_2x_speed\")) {\r\n                state = clearFlag(\"debug_2x_speed\")(state);\r\n              } else {\r\n                state = setFlag(\"debug_2x_speed\")(state);\r\n              }\r\n              return state;\r\n            })\r\n          }\r\n        >\r\n          Toggle 2x speed\r\n        </Button>\r\n        <Button\r\n          onPress={() =>\r\n            stateRef.current.apply((state) => {\r\n              if (hasFlag(state, \"debug_0x_speed\")) {\r\n                state = clearFlag(\"debug_0x_speed\")(state);\r\n              } else {\r\n                state = setFlag(\"debug_0x_speed\")(state);\r\n              }\r\n              return state;\r\n            })\r\n          }\r\n        >\r\n          Toggle 0x speed\r\n        </Button>\r\n        <Button\r\n          onPress={() =>\r\n            stateRef.current.apply((state) => {\r\n              if (hasFlag(state, \"debug_invincibility\")) {\r\n                state = clearFlag(\"debug_invincibility\")(state);\r\n              } else {\r\n                state = setFlag(\"debug_invincibility\")(state);\r\n              }\r\n              state = clearCombatStatCache(state, AttackTarget.Player);\r\n              return state;\r\n            })\r\n          }\r\n        >\r\n          Toggle invincibility\r\n        </Button>\r\n        <Button\r\n          onPress={() => {\r\n            state.apply(cleanup);\r\n          }}\r\n          key=\"cleanupplayercontext\"\r\n        >\r\n          Run cleanup\r\n        </Button>\r\n        <Button\r\n          onPress={() => {\r\n            Storage.set(\r\n              \"uploadedTranslationsJSON\",\r\n              `{\"Advanced Furniture Preservation ({{furniture}})\": \"YE{{furniture}}SYESYESSSS\", \"**Full Version**\": \"NONONNOO\"}`,\r\n            );\r\n          }}\r\n          key=\"settranslations\"\r\n        >\r\n          Set mock translations\r\n        </Button>\r\n      </CategoryContainer>\r\n      <Card>\r\n        <Card.Title title=\"Multiplier Debugging\"></Card.Title>\r\n        <Text>Separate tags by commas</Text>\r\n        <TextInput\r\n          onChangeText={setTransformDebugInput}\r\n          value={transformDebugInput}\r\n          onSubmitEditing={calculate}\r\n        />\r\n        <Button onPress={calculate}>Calculate Multipliers</Button>\r\n        <Text>{transformDebugOutput}</Text>\r\n      </Card>\r\n      <Card>\r\n        <Card.Title title=\"Random Event Debugging\"></Card.Title>\r\n        <Text>\r\n          Next event in{\" \"}\r\n          {formatNumber(\r\n            state.run.nextRandomEvent -\r\n              state.run.extraEventSecs -\r\n              getSecondsPlayed(state),\r\n          )}{\" \"}\r\n          sec\r\n        </Text>\r\n        <Text>{JSON.stringify(debugRandomEvents(state), null, \"\\t\")}</Text>\r\n      </Card>\r\n      <Card>\r\n        <Card.Title title=\"Game State Editing\"></Card.Title>\r\n        <TextInput\r\n          multiline={true}\r\n          onChangeText={setNewPlayerContextState}\r\n          value={newPlayerContextState}\r\n          contentStyle={{ height: 400 }}\r\n          mode=\"outlined\"\r\n          style={{\r\n            height: 400,\r\n            fontFamily: Platform.select({\r\n              android: \"monospace\",\r\n              default: \"Courier New\",\r\n            }),\r\n          }}\r\n        />\r\n        <Button onPress={overridePlayerContext} key=\"setPlayerContext\">\r\n          Set State\r\n        </Button>\r\n      </Card>\r\n\r\n      <Card>\r\n        <Card.Title title=\"Game State Fixing\"></Card.Title>\r\n        <TextInput\r\n          multiline={true}\r\n          onChangeText={setFixingPlayerContextState}\r\n          value={fixingPlayerContextState}\r\n          mode=\"outlined\"\r\n          style={{\r\n            height: 400,\r\n            fontFamily: Platform.select({\r\n              android: \"monospace\",\r\n              default: \"Courier New\",\r\n            }),\r\n          }}\r\n        />\r\n        <Button\r\n          onPress={async () => {\r\n            const unserialized = await loadBase64Data(fixingPlayerContextState);\r\n            setFixingPlayerContextState(\r\n              JSON.stringify(unserialized, null, \"  \"),\r\n            );\r\n          }}\r\n          key=\"fixPlayerContext\"\r\n        >\r\n          Load\r\n        </Button>\r\n        <Button\r\n          onPress={() => {\r\n            saveToFile(JSON.parse(fixingPlayerContextState));\r\n          }}\r\n          key=\"getAsFile\"\r\n        >\r\n          Save to file\r\n        </Button>\r\n      </Card>\r\n\r\n      <Card>\r\n        <Card.Title title=\"Trigger Events\"></Card.Title>\r\n        {eventButtons}\r\n      </Card>\r\n      <Card>\r\n        <Card.Title title=\"Trigger Storylines\"></Card.Title>\r\n        {storylineButtons}\r\n      </Card>\r\n    </View>\r\n  );\r\n}\r\n\r\nregisterTransformation(\r\n  [[AttackTarget.Player, CombatStat.AttackDelay]],\r\n  \"machinegun_delay\",\r\n  \"Machinegun Mode\",\r\n  TransformationType.Override,\r\n  (state) => (hasFlag(state, \"machinegun_mode\") ? 0.01 : undefined),\r\n);\r\n\r\nregisterTransformation(\r\n  [[AttackTarget.Player, CombatStat.Attack]],\r\n  \"machinegun_attack\",\r\n  \"Machinegun Mode\",\r\n  TransformationType.Override,\r\n  (state) => (hasFlag(state, \"machinegun_mode\") ? 1 : undefined),\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"flex-start\",\r\n    width: \"100%\",\r\n  },\r\n});\r\n","import { Flag } from \"../Flag\";\r\nimport { hasFlag } from \"../Flags\";\r\nimport { GameState } from \"../GameState\";\r\nimport { DataStore } from \"../generic/DataStore\";\r\nimport { Challenge } from \"./Challenge\";\r\n\r\nconst Challenges = new DataStore<Challenge>();\r\n\r\nexport { Challenges };\r\n\r\nexport function getCurrentChallenge(state: GameState): Challenge | undefined {\r\n  const currentChallengeId = state.run.currentChallengeId;\r\n  if (!currentChallengeId) {\r\n    return undefined;\r\n  }\r\n  return Challenges.getById(currentChallengeId);\r\n}\r\n\r\nexport function getVisibleChallenges(state: GameState): Challenge[] {\r\n  if (!areChallengesUnlocked(state)) {\r\n    return [];\r\n  }\r\n\r\n  return Challenges.getAll().filter((challenge) => challenge.isVisible(state));\r\n}\r\n\r\nexport function areChallengesUnlocked(state: GameState): boolean {\r\n  return hasFlag(state, Flag.ChallengesUnlocked);\r\n}\r\n","import moment from \"moment\";\r\nimport React from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { EndingStats } from \"../../backend/GameState\";\r\nimport { Challenges } from \"../../backend/challenges/Challenges\";\r\nimport { CombatClasses } from \"../../backend/classes/CombatClasses\";\r\nimport { Endings } from \"../../backend/ending/Endings\";\r\nimport { translateElement } from \"../../backend/spells/Elements\";\r\nimport { getTotalStorylineCount } from \"../../backend/storylines/Storylines\";\r\nimport { formatNumber, formatTimeLong } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { Text } from \"./Text\";\r\n\r\ntype RowProps = {\r\n  caption: string;\r\n  value: string;\r\n};\r\n\r\nfunction Row(props: RowProps) {\r\n  return (\r\n    <View style={styles.row}>\r\n      <View style={styles.rowCaption}>\r\n        <Text numberOfLines={2}>{props.caption}</Text>\r\n      </View>\r\n      <Text style={styles.valueText}>{props.value}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport function EndingDataViewer(props: { endingData: EndingStats }) {\r\n  const endingData = props.endingData;\r\n  const ending = Endings.getById(endingData.endingId);\r\n\r\n  const totalDuration = moment.duration(endingData.totalTimePlayed, \"seconds\");\r\n  const thisWorldDuration = moment.duration(\r\n    endingData.totalTimePlayedThisWorld,\r\n    \"seconds\",\r\n  );\r\n  const thisRunDuration = moment.duration(\r\n    endingData.totalTimePlayedThisRun,\r\n    \"seconds\",\r\n  );\r\n  const totalActiveDuration =\r\n    endingData.totalActiveTimePlayed != null\r\n      ? moment.duration(endingData.totalActiveTimePlayed, \"seconds\")\r\n      : null;\r\n  const totalActiveDurationThisWorld =\r\n    endingData.totalActiveTimePlayedThisWorld != null\r\n      ? moment.duration(endingData.totalActiveTimePlayedThisWorld, \"seconds\")\r\n      : null;\r\n  const totalActiveDurationThisRun =\r\n    endingData.totalActiveTimePlayedThisRun != null\r\n      ? moment.duration(endingData.totalActiveTimePlayedThisRun, \"seconds\")\r\n      : null;\r\n  const thisRunTimePieces = endingData.timePiecesConsumedThisRun;\r\n  const thisWorldTimePieces = endingData.timePiecesConsumedThisWorld;\r\n  const totalTimePieces = endingData.timePiecesConsumed;\r\n  const totalRealDuration =\r\n    endingData.totalRealWorldTimePlayed != null\r\n      ? moment.duration(endingData.totalRealWorldTimePlayed, \"seconds\")\r\n      : null;\r\n  const totalRealDurationThisWorld =\r\n    endingData.totalRealWorldTimePlayedThisWorld != null\r\n      ? moment.duration(endingData.totalRealWorldTimePlayedThisWorld, \"seconds\")\r\n      : null;\r\n  const totalRealDurationThisRun =\r\n    endingData.totalRealWorldTimePlayedThisRun != null\r\n      ? moment.duration(endingData.totalRealWorldTimePlayedThisRun, \"seconds\")\r\n      : null;\r\n\r\n  const combatClassText =\r\n    CombatClasses.getByIdNullable(\r\n      endingData.combatClassId,\r\n    )?.getDisplayName?.() ?? t(\"None\");\r\n\r\n  const primaryElementText =\r\n    endingData.secondaryElement != null\r\n      ? t(\"{{primaryElement}}, {{secondaryElement}}\", {\r\n          primaryElement: translateElement(endingData.primaryElement),\r\n          secondaryElement: translateElement(endingData.secondaryElement),\r\n        })\r\n      : t(\"{{primaryElement}}\", {\r\n          primaryElement: translateElement(endingData.primaryElement),\r\n        });\r\n\r\n  const primaryElementLevelsText =\r\n    endingData.secondaryElement != null\r\n      ? t(\"{{primaryElementLevel}}, {{secondaryElementLevel}}\", {\r\n          primaryElementLevel: formatNumber(\r\n            endingData.primaryElementLevelOnEnding,\r\n          ),\r\n          secondaryElementLevel: formatNumber(\r\n            endingData.secondaryElementLevelOnEnding,\r\n          ),\r\n        })\r\n      : t(\"{{primaryElementLevel}}\", {\r\n          primaryElementLevel: formatNumber(\r\n            endingData.primaryElementLevelOnEnding,\r\n          ),\r\n        });\r\n\r\n  const challengeText = Challenges.getByIdNullable(\r\n    endingData.challengeId,\r\n  )?.getName?.();\r\n\r\n  const newGamePlusCount = endingData.worldsCreated;\r\n  const isNewGamePlus = newGamePlusCount > 0;\r\n  const showWorldStats = isNewGamePlus;\r\n  const worldModifiers = t(\r\n    \"{{sheerPower}}/{{storylineOracle}}/{{blazingSpeed}} - D{{worldDifficulty}}\",\r\n    {\r\n      sheerPower: formatNumber(endingData.sheerPowerLevel),\r\n      storylineOracle: formatNumber(endingData.storylineOracleLevel),\r\n      blazingSpeed: formatNumber(endingData.blazingSpeedLevel),\r\n      worldDifficulty: formatNumber(endingData.worldDifficultyLevel),\r\n    },\r\n  );\r\n\r\n  const storylineCount = getTotalStorylineCount();\r\n\r\n  return (\r\n    <View>\r\n      <Row caption={t(\"Ending:\")} value={ending.title} />\r\n      <Row\r\n        caption={t(\"Date:\")}\r\n        value={moment(endingData.timestamp).format(\"Y-MM-DD h:mm A\")}\r\n      />\r\n      {isNewGamePlus && (\r\n        <Row caption={t(\"World Modifiers:\")} value={worldModifiers} />\r\n      )}\r\n      {challengeText != null && (\r\n        <Row caption={t(\"Challenge:\")} value={challengeText} />\r\n      )}\r\n      <Row caption={t(\"Primary Element:\")} value={primaryElementText} />\r\n      <Row caption={t(\"Class:\")} value={combatClassText} />\r\n      <Row\r\n        caption={t(\"Total In-Game Time Played:\")}\r\n        value={formatTimeLong(totalDuration)}\r\n      />\r\n      {showWorldStats && (\r\n        <Row\r\n          caption={t(\"In-Game Time Played (This World):\")}\r\n          value={formatTimeLong(thisWorldDuration)}\r\n        />\r\n      )}\r\n      <Row\r\n        caption={t(\"In-Game Time Played (This Run):\")}\r\n        value={formatTimeLong(thisRunDuration)}\r\n      />\r\n      <Row\r\n        caption={t(\"Total Real World Time Played:\")}\r\n        value={formatTimeLong(totalActiveDuration)}\r\n      />\r\n      {showWorldStats && (\r\n        <Row\r\n          caption={t(\"Real World Time Played (This World):\")}\r\n          value={formatTimeLong(totalActiveDurationThisWorld)}\r\n        />\r\n      )}\r\n      <Row\r\n        caption={t(\"Real World Time Played (This Run):\")}\r\n        value={formatTimeLong(totalActiveDurationThisRun)}\r\n      />\r\n      <Row\r\n        caption={t(\"Total Time Pieces Consumed:\")}\r\n        value={formatNumber(totalTimePieces)}\r\n      />\r\n      {showWorldStats && (\r\n        <Row\r\n          caption={t(\"Time Pieces Consumed (This World):\")}\r\n          value={formatNumber(thisWorldTimePieces)}\r\n        />\r\n      )}\r\n      <Row\r\n        caption={t(\"Time Pieces Consumed (This Run):\")}\r\n        value={formatNumber(thisRunTimePieces)}\r\n      />\r\n      <Row\r\n        caption={t(\"Total Time Since Starting Game:\")}\r\n        value={formatTimeLong(totalRealDuration)}\r\n      />\r\n      {showWorldStats && (\r\n        <Row\r\n          caption={t(\"Total Time Since Starting This World:\")}\r\n          value={formatTimeLong(totalRealDurationThisWorld)}\r\n        />\r\n      )}\r\n      <Row\r\n        caption={t(\"Total Time Since Starting This Run:\")}\r\n        value={formatTimeLong(totalRealDurationThisRun)}\r\n      />\r\n      {showWorldStats && (\r\n        <Row\r\n          caption={t(\"Other Worlds visited:\")}\r\n          value={formatNumber(newGamePlusCount)}\r\n        />\r\n      )}\r\n      <Row\r\n        caption={\r\n          showWorldStats\r\n            ? t(\"Total Retirements (This World):\")\r\n            : t(\"Total Retirements:\")\r\n        }\r\n        value={endingData.totalRetirements?.toString?.() ?? \"\"}\r\n      />\r\n      <Row\r\n        caption={t(\"Maximum Primary Level Obtained:\")}\r\n        value={endingData.mpl.toString()}\r\n      />\r\n      <Row\r\n        caption={t(\"Primary Element Level on Game Beaten:\")}\r\n        value={primaryElementLevelsText}\r\n      />\r\n      <Row\r\n        caption={t(\"Global Experience Multiplier:\")}\r\n        value={t(\"{{multiplier}}x\", {\r\n          multiplier: formatNumber(endingData.researchMultiplier, {\r\n            showDecimals: true,\r\n          }),\r\n        })}\r\n      />\r\n      <Row\r\n        caption={t(\"Global Production Multiplier:\")}\r\n        value={t(\"{{multiplier}}x\", {\r\n          multiplier: formatNumber(endingData.productionMultiplier, {\r\n            showDecimals: true,\r\n          }),\r\n        })}\r\n      />\r\n      <Row\r\n        caption={t(\"Total Completed Storylines:\")}\r\n        value={t(\"{{completedStorylines}} / {{totalStorylines}}\", {\r\n          completedStorylines: formatNumber(endingData.completedStorylines),\r\n          totalStorylines: storylineCount,\r\n        })}\r\n      />\r\n      <Row\r\n        caption={t(\"Storyline Completion Percentage:\")}\r\n        value={t(\"{{percent}}%\", {\r\n          percent: formatNumber(\r\n            endingData.completedStorylines > storylineCount\r\n              ? 100 + (endingData.completedStorylines - storylineCount)\r\n              : (100 * endingData.completedStorylines) / storylineCount,\r\n          ),\r\n        })}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  row: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginBottom: 4,\r\n  },\r\n  valueText: {\r\n    minWidth: 100,\r\n    textAlign: \"right\",\r\n    fontWeight: \"bold\",\r\n    marginLeft: 8,\r\n  },\r\n  rowCaption: {\r\n    flex: 1,\r\n  },\r\n});\r\n","import React, { useRef } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { EndingStats } from \"../backend/GameState\";\r\nimport { Endings, getEndingData } from \"../backend/ending/Endings\";\r\nimport { t } from \"../utils/I18n\";\r\nimport { Button } from \"./utility/Button\";\r\nimport Divider from \"./utility/Divider\";\r\nimport { EndingDataViewer } from \"./utility/EndingDataViewer\";\r\nimport { Markdown } from \"./utility/Markdown\";\r\nimport Styles from \"./utility/Styles\";\r\nimport { Text } from \"./utility/Text\";\r\nimport { useGameState } from \"./utility/useGameState\";\r\n\r\nexport default function Ending(props: {\r\n  close: () => void;\r\n  overrideEnding?: EndingStats;\r\n}) {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const endingData = props.overrideEnding ?? getEndingData(state);\r\n  if (endingData == null) {\r\n    return <View />;\r\n  }\r\n\r\n  const ending = Endings.getById(endingData.endingId);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text h1>{ending?.title}</Text>\r\n      <View style={styles.explanation}>\r\n        <Markdown style={styles.explanationText}>\r\n          {ending?.description}\r\n        </Markdown>\r\n      </View>\r\n      <View style={styles.dividerContainer}>\r\n        <Divider />\r\n      </View>\r\n      <View style={styles.congratsContainer}>\r\n        <Text h1>{t(\"Congratulations!\")}</Text>\r\n        <Text h2>{t(\"You have cleared Magic Research 2!\")}</Text>\r\n      </View>\r\n      <View style={Styles.mb16}>\r\n        <EndingDataViewer endingData={endingData} />\r\n      </View>\r\n      <View style={Styles.mt16}>\r\n        <Button onPress={props.close}>{t(\"Close\")}</Button>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"flex-start\",\r\n    width: \"100%\",\r\n  },\r\n  explanation: {\r\n    marginTop: 16,\r\n    flex: 1,\r\n    alignItems: \"stretch\",\r\n    width: \"100%\",\r\n  },\r\n  explanationText: {\r\n    width: \"100%\",\r\n  },\r\n  dividerContainer: {\r\n    marginTop: 32,\r\n    marginBottom: 24,\r\n  },\r\n  congratsContainer: {\r\n    alignItems: \"center\",\r\n    marginBottom: 16,\r\n  },\r\n});\r\n","import React, { useCallback, useMemo, useRef } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { Flag } from \"../backend/Flag\";\r\nimport { hasFlag } from \"../backend/Flags\";\r\nimport {\r\n  ActionArea,\r\n  ActionSubcategories,\r\n  translateActionSubcategory,\r\n} from \"../backend/action/ActionAreas\";\r\nimport { getAllPurchasedEnhancements } from \"../backend/enhancement/Enhancements\";\r\nimport { keysOf } from \"../utils/CoreUtils\";\r\nimport { t } from \"../utils/I18n\";\r\nimport ActionsContainer from \"./utility/ActionsContainer\";\r\nimport CategoryContainer from \"./utility/CategoryContainer\";\r\nimport { CheckBox } from \"./utility/CheckBox\";\r\nimport { Markdown } from \"./utility/Markdown\";\r\nimport Styles from \"./utility/Styles\";\r\nimport { Text } from \"./utility/Text\";\r\nimport { useGameState } from \"./utility/useGameState\";\r\n\r\nfunction ObtainedEnhancementsView() {\r\n  const state = useGameState();\r\n  const alreadyObtainedEnhancements = getAllPurchasedEnhancements(state);\r\n  return useMemo(\r\n    () => (\r\n      <View style={Styles.mt8}>\r\n        {keysOf(alreadyObtainedEnhancements).length == 0 && (\r\n          <Text key=\"none\" style={{ fontStyle: \"italic\" }}>\r\n            {t(\"You have not completed any enhancements yet!\")}\r\n          </Text>\r\n        )}\r\n        {keysOf(alreadyObtainedEnhancements).map((area, idx) => (\r\n          <View key={area} style={idx > 0 && Styles.mt8}>\r\n            <Text h3>\r\n              {translateActionSubcategory(area as ActionSubcategories)}\r\n            </Text>\r\n            {alreadyObtainedEnhancements[area].map((enhancement) => (\r\n              <View key={enhancement.getId()}>\r\n                <Markdown>\r\n                  {t(\"**{{enhancementName}}:** {{enhancementEffect}}\", {\r\n                    enhancementName: enhancement.getDisplayName(state),\r\n                    enhancementEffect: enhancement.getDisplayEffect(state),\r\n                  })}\r\n                </Markdown>\r\n              </View>\r\n            ))}\r\n          </View>\r\n        ))}\r\n      </View>\r\n    ),\r\n    [\r\n      JSON.stringify(alreadyObtainedEnhancements),\r\n      alreadyObtainedEnhancements.ENHANCE_STORAGE?.map((enhancement) => {\r\n        return enhancement.getDisplayEffect(state);\r\n      }).join(),\r\n    ],\r\n  );\r\n}\r\n\r\nfunction EnhancementConfigView() {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const autoPurchaseCallback = useCallback(() => {\r\n    stateRef.current.apply((state) => {\r\n      state.options.autoPurchaseEnhancements =\r\n        !state.options.autoPurchaseEnhancements;\r\n      return state;\r\n    });\r\n  }, []);\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View style={Styles.mt8}>\r\n        <View>\r\n          <CheckBox\r\n            title={t(\"Auto purchase all\")}\r\n            checked={state.options.autoPurchaseEnhancements}\r\n            onPress={autoPurchaseCallback}\r\n            containerStyle={styles.checkboxContainer}\r\n          />\r\n        </View>\r\n      </View>\r\n    ),\r\n    [state.options.autoPurchaseEnhancements, autoPurchaseCallback],\r\n  );\r\n}\r\n\r\nexport default function Enhance() {\r\n  const state = useGameState();\r\n\r\n  const purchasedComponent = useMemo(\r\n    () => (\r\n      <View style={Styles.mt16}>\r\n        <CategoryContainer title={t(\"Already obtained\")}>\r\n          <ObtainedEnhancementsView />\r\n        </CategoryContainer>\r\n      </View>\r\n    ),\r\n    [],\r\n  );\r\n\r\n  const showAutoPurchase = hasFlag(state, Flag.AutoPurchaseUnlocked);\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View style={styles.campusContainer}>\r\n        {showAutoPurchase && (\r\n          <View style={Styles.mb16}>\r\n            <CategoryContainer title={t(\"Enhancement Config\")}>\r\n              <EnhancementConfigView />\r\n            </CategoryContainer>\r\n          </View>\r\n        )}\r\n        <ActionsContainer area={ActionArea.ENHANCEMENT} />\r\n        {purchasedComponent}\r\n      </View>\r\n    ),\r\n    [purchasedComponent, showAutoPurchase],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  campusContainer: {\r\n    height: \"100%\",\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"flex-start\",\r\n    width: \"100%\",\r\n  },\r\n  checkboxContainer: {\r\n    marginLeft: 0,\r\n    marginTop: 8,\r\n    padding: 0,\r\n  },\r\n});\r\n","import memoize from \"sonic-memoize\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { ActionEffect } from \"../action/Action\";\r\nimport { cacheBooleanTrueOnly } from \"../Caching\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport { clearCombatStatCache } from \"../exploration/CombatStats\";\r\nimport { GameState } from \"../GameState\";\r\nimport { meetsRequirements, SpellElement } from \"../spells/Elements\";\r\nimport { clearResearcherExpCache } from \"../study/Study\";\r\nimport { grantTemporaryEffect } from \"../temporaryeffects/TemporaryEffects\";\r\nimport { clearCalculatedIncomeCache } from \"../timetick/IncomeOverTime\";\r\nimport {\r\n  applyTransformations,\r\n  clearTransformationCache,\r\n  explainTransformationsText,\r\n  TransformationTag,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { ritualWeakness } from \"./RitualWeakness\";\r\n\r\nexport abstract class Ritual {\r\n  constructor() {}\r\n\r\n  abstract getId(): string;\r\n  abstract getBaseName(): string;\r\n  abstract getDescription(state: GameState): string;\r\n  abstract getEffect(state: GameState): string;\r\n  abstract getBaseCorruptionCost(): number;\r\n\r\n  getDisplayName(state: GameState): string {\r\n    const baseName = this.getBaseName();\r\n    return !this.isActive(state)\r\n      ? baseName\r\n      : t(\"{{ritualName}} (Active)\", { ritualName: baseName });\r\n  }\r\n\r\n  protected getBaseRitualEffects(): Record<string, ActionEffect> {\r\n    return {};\r\n  }\r\n\r\n  _costTags = [\r\n    TransformationTags.Corruption,\r\n    TransformationTags.PerRitualCost,\r\n  ].concat(this.getTags() as TransformationTags[]);\r\n\r\n  getCorruptionCost(state: GameState): number {\r\n    return applyTransformations(\r\n      this._costTags,\r\n      state,\r\n      this.getBaseCorruptionCost(),\r\n      { ritualId: this.getId() },\r\n    );\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Death: this.getDeathLevelRequirement(),\r\n    };\r\n  }\r\n\r\n  abstract getDeathLevelRequirement(): number;\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return cacheBooleanTrueOnly(\r\n      state,\r\n      \"ritualVisibility.\" + this.getId(),\r\n      (s) => {\r\n        const elementRequirements = this.getLevelRequirements();\r\n        const isVisible = meetsRequirements(s, elementRequirements);\r\n        return isVisible;\r\n      },\r\n    );\r\n  }\r\n\r\n  turnOn(state: GameState): GameState {\r\n    if (!this.isVisible(state)) {\r\n      return state;\r\n    }\r\n\r\n    state.run.activeRituals[this.getId()] = true;\r\n    state = clearTransformationCache(\r\n      new Set([TransformationTags.Corruption]),\r\n      state,\r\n    );\r\n    state = grantTemporaryEffect(ritualWeakness.getId(), 60, {\r\n      target: AttackTarget.Player,\r\n    })(state);\r\n    state = clearCombatStatCache(state);\r\n    state = clearCalculatedIncomeCache(state);\r\n    state = clearResearcherExpCache(state);\r\n    return state;\r\n  }\r\n\r\n  turnOff(state: GameState): GameState {\r\n    state.run.activeRituals[this.getId()] = false;\r\n    state = clearTransformationCache(\r\n      new Set([TransformationTags.Corruption]),\r\n      state,\r\n    );\r\n    state = clearCombatStatCache(state);\r\n    state = clearCalculatedIncomeCache(state);\r\n    state = clearResearcherExpCache(state);\r\n    return state;\r\n  }\r\n\r\n  isActive(state: GameState): boolean {\r\n    return state.run.activeRituals[this.getId()] ?? false;\r\n  }\r\n\r\n  getTags(): TransformationTag[] {\r\n    const tags = [TransformationTags.Ritual, this.getId()];\r\n    return tags;\r\n  }\r\n\r\n  getCachedBaseRitualEffects = memoize(() => this.getBaseRitualEffects());\r\n\r\n  tagsByEffect: Record<string, string[]> = {};\r\n  getTagsByEffect(key: string, baseEffect: ActionEffect): string[] {\r\n    if (this.tagsByEffect?.[key] == null) {\r\n      this.tagsByEffect[key] = [\r\n        ...this.getTags(),\r\n        ...(baseEffect.tags ?? []),\r\n        TransformationTags.RitualEffect,\r\n        key,\r\n      ];\r\n    }\r\n    return this.tagsByEffect[key];\r\n  }\r\n\r\n  ritualEffectParams = memoize(() => ({ ritual: this }));\r\n\r\n  getRitualEffects(state: GameState, onlyId?: string): Record<string, number> {\r\n    const baseEffects = this.getCachedBaseRitualEffects();\r\n    const finalEffects: Record<string, number> = {};\r\n    for (let key in baseEffects) {\r\n      if (onlyId != null && key != onlyId) {\r\n        continue;\r\n      }\r\n      const baseEffect = baseEffects[key];\r\n      finalEffects[key] = applyTransformations(\r\n        this.getTagsByEffect(key, baseEffect),\r\n        state,\r\n        baseEffect.value,\r\n        this.ritualEffectParams(),\r\n      );\r\n    }\r\n    return finalEffects;\r\n  }\r\n\r\n  ritualEffectExplanationParams = memoize((baseEffect: ActionEffect) => ({\r\n    ritual: this,\r\n    unit: baseEffect.unit,\r\n    valueType: baseEffect.valueType,\r\n  }));\r\n\r\n  getRitualEffectExplanations(\r\n    state: GameState,\r\n    onlyId?: string,\r\n  ): Record<string, string> {\r\n    const baseEffects = this.getCachedBaseRitualEffects();\r\n    const finalEffects: Record<string, string> = {};\r\n    for (let key in baseEffects) {\r\n      if (onlyId != null && key != onlyId) {\r\n        continue;\r\n      }\r\n      const baseEffect = baseEffects[key];\r\n      finalEffects[key] = explainTransformationsText(\r\n        this.getTagsByEffect(key, baseEffect),\r\n        state,\r\n        baseEffect.value,\r\n        this.ritualEffectExplanationParams(baseEffect),\r\n      );\r\n    }\r\n    return finalEffects;\r\n  }\r\n}\r\n","import { formatMultiplier } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { ActionEffect } from \"../action/Action\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport { CombatStat } from \"../exploration/CombatStats\";\r\nimport { ExplorationStatus } from \"../exploration/ExplorationStatus\";\r\nimport { getExplorationStatus } from \"../exploration/ExplorationUtils\";\r\nimport { FamiliarCompanionStatusType } from \"../familiars/Familiar\";\r\nimport { getCurrentCompanionData } from \"../familiars/FamiliarUtils\";\r\nimport { GameState } from \"../GameState\";\r\nimport { Storylines } from \"../storylines/Storylines\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationValueType } from \"../transformation/TransformationTags\";\r\nimport { Ritual } from \"./Ritual\";\r\nimport { Rituals } from \"./Rituals\";\r\n\r\nclass NecromancyRitual extends Ritual {\r\n  getId(): string {\r\n    return \"necromancyRitual\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(`Necromancy Ritual`);\r\n  }\r\n  getDescription(state: GameState): string {\r\n    return t(\"Your Familiars could gain unholy strength...\");\r\n  }\r\n  protected getBaseRitualEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      attackMagnitude: {\r\n        value: 1.0,\r\n        valueType: TransformationValueType.Percent,\r\n      },\r\n      regenMagnitude: {\r\n        value: 5.0,\r\n        valueType: TransformationValueType.Percent,\r\n      },\r\n    };\r\n  }\r\n  getEffect(state: GameState): string {\r\n    const effects = this.getRitualEffects(state);\r\n    const explanations = this.getRitualEffectExplanations(state);\r\n    return t(\r\n      `^{{attackMultiplier}}^<{{attackExplanation}}> Familiar :attack:; ^{{regenMultiplier}}^<{{regenExplanation}}> Familiar :hp: regeneration while recovering during combat`,\r\n      {\r\n        attackMultiplier: formatMultiplier(1.0 + effects.attackMagnitude),\r\n        attackExplanation: explanations.attackMagnitude,\r\n        regenMultiplier: formatMultiplier(1.0 + effects.regenMagnitude),\r\n        regenExplanation: explanations.regenMagnitude,\r\n      },\r\n    );\r\n  }\r\n  getBaseCorruptionCost(): number {\r\n    return 6;\r\n  }\r\n  getDeathLevelRequirement(): number {\r\n    return 1;\r\n  }\r\n  isVisible(state: GameState): boolean {\r\n    return Storylines.getById(\"forbiddenInvocation\").isBonusActive(state);\r\n  }\r\n}\r\n\r\nexport const necromancyRitual = new NecromancyRitual();\r\n\r\nexport function loadNecromancyRitual() {\r\n  Rituals.register(necromancyRitual);\r\n\r\n  registerTransformation(\r\n    [[AttackTarget.Familiar, CombatStat.Attack]],\r\n    necromancyRitual.getId(),\r\n    necromancyRitual.getBaseName(),\r\n    TransformationType.Multiplier,\r\n    (state) =>\r\n      necromancyRitual.isActive(state)\r\n        ? necromancyRitual.getRitualEffects(state, \"attackMagnitude\")\r\n            .attackMagnitude + 1.0\r\n        : 1.0,\r\n  );\r\n\r\n  registerTransformation(\r\n    [[AttackTarget.Familiar, CombatStat.HPRegen]],\r\n    necromancyRitual.getId(),\r\n    necromancyRitual.getBaseName(),\r\n    TransformationType.Multiplier,\r\n    (state) =>\r\n      necromancyRitual.isActive(state) &&\r\n      getExplorationStatus(state) == ExplorationStatus.Combat &&\r\n      getCurrentCompanionData(state)?.status?.companionStatus ==\r\n        FamiliarCompanionStatusType.Reviving\r\n        ? necromancyRitual.getRitualEffects(state, \"regenMagnitude\")\r\n            .regenMagnitude + 1.0\r\n        : 1.0,\r\n  );\r\n}\r\n\r\nexport function shouldShowGrayscaleFamiliar(state: GameState): boolean {\r\n  return necromancyRitual.isActive(state);\r\n}\r\n","import React from \"react\";\r\n\r\nexport type AccessibilityContextValue = {\r\n  announceForAccessibility: (announcement: string) => void;\r\n};\r\n\r\nexport const AccessibilityContext =\r\n  React.createContext<AccessibilityContextValue>({\r\n    announceForAccessibility: () => {},\r\n  });\r\n","import * as React from \"react\";\r\nimport {\r\n  Animated,\r\n  I18nManager,\r\n  LayoutChangeEvent,\r\n  Platform,\r\n  StyleProp,\r\n  StyleSheet,\r\n  View,\r\n  ViewStyle,\r\n} from \"react-native\";\r\n\r\nimport setColor from \"color\";\r\nimport { useTheme } from \"react-native-paper\";\r\n\r\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\r\n  /**\r\n   * Animated value (between 0 and 1). This tells the progress bar to rely on this value to animate it.\r\n   * Note: It should not be used in parallel with the `progress` prop.\r\n   */\r\n  animatedValue?: number;\r\n  /**\r\n   * Progress value (between 0 and 1).\r\n   * Note: It should not be used in parallel with the `animatedValue` prop.\r\n   */\r\n  progress?: number;\r\n  /**\r\n   * Color of the progress bar. The background color will be calculated based on this but you can change it by passing `backgroundColor` to `style` prop.\r\n   */\r\n  color?: string;\r\n  /**\r\n   * If the progress bar will show indeterminate progress.\r\n   */\r\n  indeterminate?: boolean;\r\n  /**\r\n   * Whether to show the ProgressBar (true, the default) or hide it (false).\r\n   */\r\n  visible?: boolean;\r\n  style?: StyleProp<ViewStyle>;\r\n};\r\n\r\nconst INDETERMINATE_DURATION = 2000;\r\nconst INDETERMINATE_MAX_WIDTH = 0.6;\r\nconst { isRTL } = I18nManager;\r\n\r\n/**\r\n * Progress bar is an indicator used to present progress of some activity in the app.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <img src=\"screenshots/progress-bar.png\" />\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { ProgressBar, MD3Colors } from 'react-native-paper';\r\n *\r\n * const MyComponent = () => (\r\n *   <ProgressBar progress={0.5} color={MD3Colors.error50} />\r\n * );\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nexport const ProgressBar = ({\r\n  color,\r\n  indeterminate,\r\n  style,\r\n  progress = 0,\r\n  visible = true,\r\n  animatedValue,\r\n  ...rest\r\n}: Props) => {\r\n  const theme = useTheme();\r\n  const { current: timer } = React.useRef<Animated.Value>(\r\n    new Animated.Value(0),\r\n  );\r\n  const passedAnimatedValue =\r\n    React.useRef<Props[\"animatedValue\"]>(animatedValue);\r\n  const [width, setWidth] = React.useState<number>(0);\r\n  const [prevWidth, setPrevWidth] = React.useState<number>(0);\r\n\r\n  const indeterminateAnimation =\r\n    React.useRef<Animated.CompositeAnimation | null>(null);\r\n\r\n  const { scale } = theme.animation;\r\n\r\n  React.useEffect(() => {\r\n    passedAnimatedValue.current = animatedValue;\r\n  });\r\n\r\n  const startAnimation = React.useCallback(() => {\r\n    /**\r\n     * We shouldn't add @param animatedValue to the\r\n     * deps array, to avoid the unnecessary loop.\r\n     * We can only check if the prop is passed initially,\r\n     * and we do early return.\r\n     */\r\n    const externalAnimation =\r\n      typeof passedAnimatedValue.current !== \"undefined\" &&\r\n      passedAnimatedValue.current >= 0;\r\n\r\n    if (externalAnimation) {\r\n      return;\r\n    }\r\n\r\n    // Animate progress bar\r\n    if (indeterminate) {\r\n      if (!indeterminateAnimation.current) {\r\n        indeterminateAnimation.current = Animated.timing(timer, {\r\n          duration: INDETERMINATE_DURATION,\r\n          toValue: 1,\r\n          // Animated.loop does not work if useNativeDriver is true on web\r\n          useNativeDriver: Platform.OS !== \"web\",\r\n          isInteraction: false,\r\n        });\r\n      }\r\n\r\n      // Reset timer to the beginning\r\n      timer.setValue(0);\r\n\r\n      Animated.loop(indeterminateAnimation.current).start();\r\n    } else {\r\n      Animated.timing(timer, {\r\n        duration: 200 * scale,\r\n        toValue: progress ? progress : 0,\r\n        useNativeDriver: true,\r\n        isInteraction: false,\r\n      }).start();\r\n    }\r\n  }, [scale, indeterminate, timer, progress]);\r\n\r\n  const stopAnimation = React.useCallback(() => {\r\n    // Stop indeterminate animation\r\n    if (indeterminateAnimation.current) {\r\n      indeterminateAnimation.current.stop();\r\n    }\r\n  }, [scale]);\r\n\r\n  React.useEffect(() => {\r\n    if (visible) startAnimation();\r\n    else stopAnimation();\r\n  }, [visible, startAnimation, stopAnimation]);\r\n\r\n  React.useEffect(() => {\r\n    if (animatedValue && animatedValue >= 0) {\r\n      timer.setValue(animatedValue);\r\n    }\r\n  }, [animatedValue, timer]);\r\n\r\n  React.useEffect(() => {\r\n    // Start animation the very first time when previously the width was unclear\r\n    if (visible && prevWidth === 0) {\r\n      startAnimation();\r\n    }\r\n  }, [prevWidth, startAnimation, visible]);\r\n\r\n  const onLayout = React.useCallback(\r\n    (event: LayoutChangeEvent) => {\r\n      const newWidth = event.nativeEvent.layout.width;\r\n      if (width != newWidth) {\r\n        setPrevWidth(width);\r\n        setWidth(newWidth);\r\n      }\r\n    },\r\n    [width],\r\n  );\r\n\r\n  const tintColor = color || theme.colors?.primary;\r\n  const trackTintColor = theme.isV3\r\n    ? theme.colors.surfaceVariant\r\n    : setColor(tintColor).alpha(0.38).rgb().string();\r\n\r\n  const progressBar = React.useMemo(\r\n    () =>\r\n      width ? (\r\n        <Animated.View\r\n          style={[\r\n            styles.progressBar,\r\n            {\r\n              width,\r\n              backgroundColor: tintColor,\r\n              transform: [\r\n                {\r\n                  translateX: timer.interpolate(\r\n                    indeterminate\r\n                      ? {\r\n                          inputRange: [0, 0.5, 1],\r\n                          outputRange: [\r\n                            (isRTL ? 1 : -1) * 0.5 * width,\r\n                            (isRTL ? 1 : -1) *\r\n                              0.5 *\r\n                              INDETERMINATE_MAX_WIDTH *\r\n                              width,\r\n                            (isRTL ? -1 : 1) * 0.7 * width,\r\n                          ],\r\n                        }\r\n                      : {\r\n                          inputRange: [0, 1],\r\n                          outputRange: [(isRTL ? 1 : -1) * 0.5 * width, 0],\r\n                        },\r\n                  ),\r\n                },\r\n                {\r\n                  // Workaround for workaround for https://github.com/facebook/react-native/issues/6278\r\n                  scaleX: timer.interpolate(\r\n                    indeterminate\r\n                      ? {\r\n                          inputRange: [0, 0.5, 1],\r\n                          outputRange: [\r\n                            0.0001,\r\n                            INDETERMINATE_MAX_WIDTH,\r\n                            0.0001,\r\n                          ],\r\n                        }\r\n                      : {\r\n                          inputRange: [0, 1],\r\n                          outputRange: [0.0001, 1],\r\n                        },\r\n                  ),\r\n                },\r\n              ],\r\n            },\r\n          ]}\r\n        />\r\n      ) : null,\r\n    [width, tintColor, timer, isRTL],\r\n  );\r\n\r\n  return React.useMemo(\r\n    () => (\r\n      <View\r\n        onLayout={onLayout}\r\n        {...rest}\r\n        accessible\r\n        accessibilityRole=\"progressbar\"\r\n        accessibilityState={{ busy: visible }}\r\n        accessibilityValue={\r\n          indeterminate ? {} : { min: 0, max: 100, now: progress * 100 }\r\n        }\r\n      >\r\n        <View\r\n          style={[styles.container, { backgroundColor: trackTintColor }, style]}\r\n        >\r\n          {progressBar}\r\n        </View>\r\n      </View>\r\n    ),\r\n    [onLayout, visible, trackTintColor, style, indeterminate, progressBar],\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    height: 4,\r\n    overflow: \"hidden\",\r\n  },\r\n\r\n  progressBar: {\r\n    flex: 1,\r\n  },\r\n});\r\n","import React, { useContext, useEffect, useMemo } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport {\r\n  getCurrentEnemyAction,\r\n  getEnemyActionProgress,\r\n} from \"../../backend/exploration/Exploration\";\r\nimport { AccessibilityContext } from \"../utility/AccessibilityContext\";\r\nimport { ProgressBar } from \"../utility/ProgressBar\";\r\nimport { Text } from \"../utility/Text\";\r\nimport { UIContext } from \"../utility/UIContext\";\r\nimport { VisibilityContext } from \"../utility/VisibilityContext\";\r\nimport { GameIcon } from \"../utility/icons/GameIcon\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\n\r\nexport function EnemyActionDisplay() {\r\n  const state = useGameState();\r\n  const uiContext = useContext(UIContext);\r\n  const currentEventOccurrenceId = uiContext.getUIState(\r\n    \"current_event_occurrence_id\",\r\n  );\r\n  const currentEnemyAction = getCurrentEnemyAction(state);\r\n  const progress = getEnemyActionProgress(state);\r\n  const accessibilityContext = useContext(AccessibilityContext);\r\n  const visible = useContext(VisibilityContext);\r\n  useEffect(() => {\r\n    if (\r\n      currentEnemyAction?.name != null &&\r\n      currentEventOccurrenceId == null &&\r\n      visible\r\n    ) {\r\n      setTimeout(\r\n        () =>\r\n          accessibilityContext.announceForAccessibility(\r\n            currentEnemyAction?.name,\r\n          ),\r\n        0,\r\n      );\r\n    }\r\n  }, [\r\n    currentEnemyAction,\r\n    currentEventOccurrenceId,\r\n    accessibilityContext,\r\n    visible,\r\n  ]);\r\n  return useMemo(() => {\r\n    if (!currentEnemyAction) {\r\n      return (\r\n        <View style={styles.row}>\r\n          <GameIcon icon=\"attack\" style={styles.icon} />\r\n          <View style={styles.progressBarContainer}>\r\n            <Text style={styles.idleTextContainer}>-</Text>\r\n            <ProgressBar progress={0} style={{ width: 120 }} />\r\n          </View>\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <View style={styles.row}>\r\n        <GameIcon icon=\"attack\" style={styles.icon} />\r\n        <View style={styles.progressBarContainer}>\r\n          <Text numberOfLines={1} style={styles.markdownContainer}>\r\n            {currentEnemyAction.name}\r\n          </Text>\r\n          <View style={{ width: 120 }}>\r\n            <ProgressBar progress={progress} style={{ width: 120 }} />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    );\r\n  }, [currentEnemyAction?.name, progress]);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  row: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  icon: {\r\n    marginRight: 4,\r\n    height: 24,\r\n    width: 24,\r\n  },\r\n  progressBarContainer: {\r\n    flex: 1,\r\n    marginTop: -5,\r\n  },\r\n  idleTextContainer: {\r\n    height: 21,\r\n  },\r\n  markdownContainer: {\r\n    height: 21,\r\n  },\r\n});\r\n","import React, { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport {\r\n  Animated,\r\n  Platform,\r\n  Text as RNText,\r\n  StyleSheet,\r\n  View,\r\n} from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport {\r\n  AttackTarget,\r\n  translateAttackTarget,\r\n} from \"../../backend/exploration/AttackTarget\";\r\nimport { CombatActionResult } from \"../../backend/exploration/ExplorationActionResult\";\r\nimport { getSecondsPlayed } from \"../../backend/timetick/TotalTimePlayed\";\r\nimport { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { ProgressBar } from \"../utility/ProgressBar\";\r\nimport { VisibilityContext } from \"../utility/VisibilityContext\";\r\nimport { GameIcon } from \"../utility/icons/GameIcon\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\n\r\nfunction CombatActionResultDisplay(props: {\r\n  action: CombatActionResult;\r\n  delay: number;\r\n}) {\r\n  const [auxText, auxTextStyle] = useMemo(() => {\r\n    let auxText = null,\r\n      auxTextStyle = null;\r\n    if (props.action != undefined) {\r\n      if (!props.action.isHit) {\r\n        auxText = t(\"Miss!\");\r\n      } else {\r\n        auxText =\r\n          (props.action.damage > 0 ? \"-\" : \"\") +\r\n          formatNumber(Math.abs(props.action.damage), {\r\n            showDecimals: false,\r\n          }) +\r\n          (props.action.isCrit ? \"!\" : \"\");\r\n        auxTextStyle = props.action.isCrit\r\n          ? styles.auxTextCritical\r\n          : props.action.damage >= 0\r\n          ? styles.auxTextDamage\r\n          : styles.auxTextHealing;\r\n      }\r\n    }\r\n    return [auxText, auxTextStyle];\r\n  }, [props.action]);\r\n\r\n  const damageAnim = useRef(new Animated.Value(0)).current;\r\n  const opacityAnim = useRef(new Animated.Value(0)).current;\r\n  useEffect(() => {\r\n    damageAnim.setValue(0);\r\n    Animated.sequence([\r\n      Animated.delay(props.delay),\r\n      Animated.spring(damageAnim, {\r\n        toValue: -16,\r\n        useNativeDriver: true,\r\n        bounciness: 0,\r\n      }),\r\n    ]).start();\r\n  }, [props.action?.id]);\r\n  useEffect(() => {\r\n    Animated.sequence([\r\n      Animated.delay(props.delay),\r\n      Animated.timing(opacityAnim, {\r\n        toValue: 1,\r\n        useNativeDriver: true,\r\n        duration: 0,\r\n      }),\r\n      Animated.timing(opacityAnim, {\r\n        toValue: 0,\r\n        useNativeDriver: true,\r\n        duration: 800,\r\n      }),\r\n    ]).start();\r\n  }, [props.action?.id]);\r\n\r\n  const theme = useTheme();\r\n\r\n  return useMemo(\r\n    () =>\r\n      auxText ? (\r\n        <Animated.View\r\n          style={[\r\n            styles.auxTextContainer,\r\n            { transform: [{ translateY: damageAnim }], opacity: opacityAnim },\r\n          ]}\r\n        >\r\n          <RNText\r\n            style={[\r\n              styles.auxText,\r\n              { color: theme.colors.onBackground },\r\n              auxTextStyle,\r\n            ]}\r\n          >\r\n            {auxText}\r\n          </RNText>\r\n        </Animated.View>\r\n      ) : (\r\n        <View />\r\n      ),\r\n    [damageAnim, opacityAnim, theme, auxText, auxTextStyle],\r\n  );\r\n}\r\n\r\nfunction HPBarNonMemo(props: {\r\n  empty: boolean;\r\n  current: number;\r\n  max: number;\r\n  actionTarget: AttackTarget;\r\n}) {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n  const visible = useContext(VisibilityContext);\r\n  const mountTime = useRef(getSecondsPlayed(state));\r\n\r\n  useEffect(() => {\r\n    mountTime.current = getSecondsPlayed(stateRef.current);\r\n  }, [visible]);\r\n\r\n  const actions = useMemo(\r\n    () =>\r\n      !state.options.hideDamageEffects\r\n        ? state.run.exploration.actionResultQueue.filter(\r\n            (result) =>\r\n              result != null &&\r\n              result.target === props.actionTarget &&\r\n              result.time > mountTime.current,\r\n          )\r\n        : [],\r\n    [\r\n      state.options.hideDamageEffects,\r\n      props.actionTarget,\r\n      state.run.exploration.lastActionResultPushedTime,\r\n    ],\r\n  );\r\n  const actionKeys = useMemo(\r\n    () => actions.map((action) => action.id).join(),\r\n    [actions],\r\n  );\r\n  const actionResults = useMemo(() => {\r\n    let lastTime = 0,\r\n      delay = 0;\r\n    const displays = [];\r\n    for (let actionIdx in actions) {\r\n      const action = actions[actionIdx];\r\n      if (action.time * 1000 < lastTime + 300) {\r\n        delay += lastTime + 300 - action.time * 1000;\r\n      } else {\r\n        delay = 0;\r\n      }\r\n      displays.push(\r\n        <CombatActionResultDisplay\r\n          key={action.id}\r\n          action={action}\r\n          delay={delay}\r\n        />,\r\n      );\r\n      lastTime = action.time * 1000;\r\n    }\r\n    return displays;\r\n  }, [actionKeys]);\r\n\r\n  const theme = useTheme();\r\n\r\n  const style = useMemo(\r\n    () => [\r\n      styles.bar,\r\n      // @ts-ignore The hpBarBackground is not part of react-native-elements\r\n      { backgroundColor: theme.colors.hpBarBackground },\r\n    ],\r\n    [theme],\r\n  );\r\n\r\n  const progressBar = useMemo(\r\n    () => (\r\n      <ProgressBar\r\n        progress={props.current / props.max}\r\n        // @ts-ignore The hpBarForeground is not part of react-native-elements\r\n        color={theme.colors.hpBarForeground}\r\n        style={style}\r\n      />\r\n    ),\r\n    [props.current / props.max, theme, style],\r\n  );\r\n\r\n  const progressBarText = useMemo(\r\n    () =>\r\n      !props.empty && (\r\n        <RNText style={styles.overlaidText}>\r\n          {formatNumber(Math.ceil(props.current))}/\r\n          {formatNumber(Math.ceil(props.max))}\r\n        </RNText>\r\n      ),\r\n    [props.empty, formatNumber(Math.ceil(props.current)), props.max],\r\n  );\r\n\r\n  const accessibilityLabel = useMemo(\r\n    () =>\r\n      t(\"{{target}} HP: {{current}}/{{max}} {{shortcut}}\", {\r\n        target: translateAttackTarget(props.actionTarget),\r\n        current: formatNumber(Math.ceil(props.current), {\r\n          showDecimals: false,\r\n        }),\r\n        cap: formatNumber(Math.ceil(props.max), { showDecimals: false }),\r\n        shortcut: Platform.OS === \"web\" ? t(\" (Control + Shift + Z)\") : \"\",\r\n      }),\r\n    [\r\n      props.actionTarget,\r\n      formatNumber(Math.ceil(props.current), {\r\n        showDecimals: false,\r\n      }),\r\n      props.max,\r\n    ],\r\n  );\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View\r\n        style={[styles.row, styles.container]}\r\n        accessibilityLabel={accessibilityLabel}\r\n        accessible={true}\r\n        accessibilityRole={Platform.OS !== \"web\" ? \"header\" : undefined}\r\n      >\r\n        {/* @ts-expect-error react-native-web supports this */}\r\n        <GameIcon icon=\"hp\" style={styles.icon} accessibilityHidden={true} />\r\n        {/* @ts-expect-error react-native-web supports this */}\r\n        <View style={styles.progressBarContainer} accessibilityHidden={true}>\r\n          {progressBar}\r\n          {progressBarText}\r\n          {actionResults}\r\n        </View>\r\n      </View>\r\n    ),\r\n    [\r\n      accessibilityLabel,\r\n      progressBar,\r\n      progressBarText,\r\n      props.empty,\r\n      props.actionTarget,\r\n      actionResults,\r\n    ],\r\n  );\r\n}\r\n\r\nconst HPBar = React.memo(HPBarNonMemo);\r\n\r\nexport { HPBar };\r\n\r\nconst styles = StyleSheet.create({\r\n  row: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  icon: {\r\n    marginTop: -4,\r\n    marginRight: 4,\r\n    height: 24,\r\n    width: 24,\r\n  },\r\n  overlaidText: {\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n    position: \"absolute\",\r\n    top: Platform.select({\r\n      default: 0,\r\n      android: -1,\r\n    }),\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n  },\r\n  auxTextContainer: {\r\n    left: 48,\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n  },\r\n  auxText: {\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  auxTextCritical: {\r\n    color: \"#dd0\",\r\n  },\r\n  auxTextDamage: {\r\n    color: \"#f00\",\r\n  },\r\n  auxTextHealing: {\r\n    color: \"#0f0\",\r\n  },\r\n  progressBarContainer: {\r\n    flex: 1,\r\n  },\r\n  container: {\r\n    height: 24,\r\n  },\r\n  bar: {\r\n    height: 20,\r\n    borderRadius: 10,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { AttackTarget } from \"../../backend/exploration/AttackTarget\";\r\nimport { getCurrentEnemyHP } from \"../../backend/exploration/Exploration\";\r\nimport { ExplorationStatus } from \"../../backend/exploration/ExplorationStatus\";\r\nimport { getExplorationStatus } from \"../../backend/exploration/ExplorationUtils\";\r\nimport { getCurrentEnemy } from \"../../backend/exploration/enemies/Enemies\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\nimport { HPBar } from \"./HPBar\";\r\n\r\nexport function EnemyHPBar() {\r\n  const state = useGameState();\r\n  const inCombat = getExplorationStatus(state) == ExplorationStatus.Combat;\r\n  let currentHP = 0;\r\n  let maxHP = 1;\r\n  if (inCombat) {\r\n    currentHP = getCurrentEnemyHP(state);\r\n    maxHP = getCurrentEnemy(state).getMaxHP(state);\r\n  }\r\n\r\n  return (\r\n    <HPBar\r\n      empty={!inCombat}\r\n      current={currentHP}\r\n      max={maxHP}\r\n      actionTarget={AttackTarget.Enemy}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { StyleProp, StyleSheet, View, ViewStyle } from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { getPrimaryButtonTextColor } from \"./Miscellaneous\";\r\n\r\nexport function ActiveMark(props: {\r\n  disabled: boolean;\r\n  style?: StyleProp<ViewStyle>;\r\n  themeOverride?: any;\r\n}) {\r\n  const theme = useTheme();\r\n  const themeToUse = props.themeOverride ?? theme;\r\n  const color = getPrimaryButtonTextColor(themeToUse, props.disabled);\r\n  return (\r\n    <View\r\n      style={[styles.activeMark, { backgroundColor: color }, props?.style]}\r\n    />\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  activeMark: {\r\n    width: 8,\r\n    height: 8,\r\n    alignSelf: \"center\",\r\n    marginRight: 8,\r\n    borderRadius: 4,\r\n  },\r\n});\r\n","import React, { useCallback, useMemo, useRef } from \"react\";\r\nimport {\r\n  Platform,\r\n  StyleSheet,\r\n  TouchableWithoutFeedback,\r\n  View,\r\n} from \"react-native\";\r\nimport {\r\n  addActionToQuickbar,\r\n  isInQuickbar,\r\n  isQuickbarFull,\r\n} from \"../../backend/Quickbar\";\r\n\r\nimport { Entypo, Ionicons } from \"@expo/vector-icons\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { getThemeByElementAndDarkMode } from \"../../Themes\";\r\nimport { cacheByArbitraryVersion } from \"../../backend/Caching\";\r\nimport { Flag } from \"../../backend/Flag\";\r\nimport { hasFlag } from \"../../backend/Flags\";\r\nimport { StateContextValue } from \"../../backend/GameState\";\r\nimport { Resource, getResourceCap } from \"../../backend/Resources\";\r\nimport {\r\n  addSpellToPermaCast,\r\n  isAutocastUnlocked,\r\n  isSpellInPermaCast,\r\n  permaCastWizardPowerNeeded,\r\n  permaCastWizardsNeeded,\r\n  removeSpellFromPermaCast,\r\n} from \"../../backend/autocast/Autocast\";\r\nimport {\r\n  SpellElement,\r\n  getPrimaryElements,\r\n  getUnlockedElements,\r\n  translateElement,\r\n} from \"../../backend/spells/Elements\";\r\nimport { Spell } from \"../../backend/spells/Spell\";\r\nimport {\r\n  addFavoriteSpell,\r\n  isInFavoriteSpells,\r\n  removeFromFavoriteSpells,\r\n  toggleEmpowered,\r\n} from \"../../backend/spells/Spells\";\r\nimport { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { ActiveMark } from \"./ActiveMark\";\r\nimport { useAuxOptions } from \"./AuxOptionsContext\";\r\nimport { Button } from \"./Button\";\r\nimport { GameStateFreezer } from \"./GameStateFreezer\";\r\nimport { Markdown } from \"./Markdown\";\r\nimport { DescriptionViewer, elementColorByTheme } from \"./Miscellaneous\";\r\nimport { SpellWizardsInfo } from \"./SpellWizardsInfo\";\r\nimport Styles from \"./Styles\";\r\nimport { Text } from \"./Text\";\r\nimport { TooltipPositionType, TooltipWrapper } from \"./Tooltip\";\r\nimport { GameIcon } from \"./icons/GameIcon\";\r\nimport { useGameState } from \"./useGameState\";\r\n\r\nexport function SpellElementTag(props: { element: SpellElement }) {\r\n  const spellElement = props.element;\r\n  const state = useGameState();\r\n  const theme = useTheme();\r\n  return useMemo(\r\n    () => (\r\n      <View\r\n        style={[\r\n          styles.elementTextContainer,\r\n          {\r\n            backgroundColor: elementColorByTheme(theme.dark, spellElement),\r\n          },\r\n        ]}\r\n      >\r\n        <Text\r\n          style={[\r\n            getPrimaryElements(state).includes(spellElement) &&\r\n              styles.primaryElementText,\r\n            styles.spellElementBadgeText,\r\n          ]}\r\n        >\r\n          {spellElement}\r\n        </Text>\r\n      </View>\r\n    ),\r\n    [spellElement, getPrimaryElements(state).join(), theme],\r\n  );\r\n}\r\n\r\ntype SpellViewProps = {\r\n  spell: Spell;\r\n  tooltipExtra?: string;\r\n  showAddToQuickbar?: boolean;\r\n  showWizards?: boolean;\r\n  collapsed?: boolean;\r\n  toggleCollapsed?: () => void;\r\n  isMinimal?: boolean;\r\n  onPress?: (spell: Spell) => void;\r\n};\r\n\r\nfunction SpellNameText(props: { spell: Spell }) {\r\n  const state = useGameState();\r\n  const spell = props.spell;\r\n  return <>{spell.getDisplayName(state)}</>;\r\n}\r\n\r\nfunction SpellViewButtonContents(props: { spell: Spell; theme: any }) {\r\n  const spell = props.spell;\r\n  const theme = props.theme;\r\n  const state = useGameState();\r\n  const disabled = !spell.isEnabled(state);\r\n  const buttonTitleStyles = useMemo(\r\n    () => [\r\n      {\r\n        color: theme.colors.onPrimary,\r\n      },\r\n      disabled && {\r\n        color: theme.colors.onSurfaceDisabled,\r\n      },\r\n      styles.smallButtonTitle,\r\n    ],\r\n    [theme, disabled],\r\n  );\r\n  const spellDisplayName = useMemo(\r\n    () => <SpellNameText spell={spell} />,\r\n    [spell],\r\n  );\r\n  const spellCost = spell.getCost(state)?.resources?.Mana ?? 0;\r\n  const isActive = spell.isActive(state);\r\n  const buttonContents = useMemo(\r\n    () => (\r\n      <View style={styles.spellButtonTitleContainer}>\r\n        <View style={styles.spellButtonTitleOnlyContainer}>\r\n          {isActive && <ActiveMark disabled={disabled} themeOverride={theme} />}\r\n          <View style={styles.spellButtonTitleTitleOnlyContainer}>\r\n            <Text style={buttonTitleStyles} numberOfLines={2}>\r\n              {spellDisplayName}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n        <View\r\n          style={[styles.spellButtonCostContainer, Styles.flexRowAlignCenter]}\r\n        >\r\n          <Text style={buttonTitleStyles} doNotScaleFonts={true}>\r\n            {formatNumber(spellCost, { showDecimals: false })}\r\n          </Text>\r\n          <GameIcon icon=\"mana\" style={styles.spellManaIcon} />\r\n        </View>\r\n      </View>\r\n    ),\r\n    [isActive, disabled, buttonTitleStyles, spellDisplayName, spellCost],\r\n  );\r\n  return buttonContents;\r\n}\r\n\r\nfunction SpellViewMemoized(\r\n  props: SpellViewProps & { state: StateContextValue },\r\n) {\r\n  const state = props.state;\r\n  const stateRef = useRef(props.state);\r\n  const spell = props.spell;\r\n  const showAddToQuickbar = props.showAddToQuickbar || false;\r\n\r\n  let displayDescription = \"\",\r\n    displayEffect = \"\";\r\n\r\n  if (!props.collapsed || Platform.OS === \"web\") {\r\n    [displayDescription, displayEffect] = cacheByArbitraryVersion(\r\n      state,\r\n      \"spellDescriptionAndEffect:\" + spell.getId(),\r\n      (state) => [\r\n        spell.getDisplayDescription(state),\r\n        spell.getDisplayEffect(state),\r\n      ],\r\n      (state) =>\r\n        Math.floor(Date.now() / 500).toString() + spell.isEmpowered(state),\r\n    );\r\n  }\r\n\r\n  const descriptionContainer = useMemo(() => {\r\n    const descriptionContents = `${displayDescription} **${displayEffect}**`;\r\n    return (\r\n      <View style={styles.descriptionTextContainer}>\r\n        <DescriptionViewer style={{ flex: 1 }}>\r\n          {descriptionContents}\r\n        </DescriptionViewer>\r\n      </View>\r\n    );\r\n  }, [displayDescription, displayEffect]);\r\n\r\n  const theme = useTheme();\r\n\r\n  let spellElement: SpellElement | undefined = spell.getElement();\r\n  if (spellElement && !getUnlockedElements(state).includes(spellElement)) {\r\n    spellElement = undefined;\r\n  }\r\n  const elementText = useMemo(() => {\r\n    return (\r\n      <View>\r\n        {spellElement != null && (\r\n          <View style={styles.elementContainer}>\r\n            <Markdown>{t(\"Element:\")}</Markdown>\r\n            <SpellElementTag element={spellElement} />\r\n          </View>\r\n        )}\r\n      </View>\r\n    );\r\n  }, [spellElement, theme]);\r\n\r\n  const mainExp = spell.getMainExp(state);\r\n\r\n  const expText = useMemo(\r\n    () => (\r\n      <View style={[Styles.mt4, Styles.flexRowSpaceBetween]}>\r\n        <View style={Styles.flex}>\r\n          <Markdown>{t(\"Exp gain:\")}</Markdown>\r\n        </View>\r\n        <View style={[Styles.ml8]}>\r\n          <Markdown style={{ textAlign: \"right\" }}>\r\n            {mainExp.element != null\r\n              ? t(\"+{{amount}} {{element}} exp\", {\r\n                  amount: formatNumber(mainExp.expMin),\r\n                  element: translateElement(mainExp.element),\r\n                })\r\n              : t(\"+{{min}}~{{max}} exp (various)\", {\r\n                  min: formatNumber(mainExp.expMin),\r\n                  max: formatNumber(mainExp.expMax),\r\n                })}\r\n          </Markdown>\r\n        </View>\r\n      </View>\r\n    ),\r\n    [mainExp.element, mainExp.expMin, mainExp.expMax],\r\n  );\r\n\r\n  const cooldownContainer = useMemo(() => {\r\n    const cooldown = spell.getCooldown(state);\r\n    const cooldownText = t(\"{{cooldown}} sec\", {\r\n      cooldown: formatNumber(cooldown, { showDecimals: true }),\r\n    });\r\n    return (\r\n      <View>\r\n        {cooldown > 0 && (\r\n          <View style={styles.costContainer}>\r\n            <Markdown>{t(\"Cooldown:\")}</Markdown>\r\n            <Markdown containerStyle={{ flex: null }}>{cooldownText}</Markdown>\r\n          </View>\r\n        )}\r\n      </View>\r\n    );\r\n  }, [(!props.collapsed || Platform.OS === \"web\") && spell.getCooldown(state)]);\r\n\r\n  const toggleFavorite = useCallback(() => {\r\n    stateRef.current.apply((state) =>\r\n      isInFavoriteSpells(state, spell)\r\n        ? removeFromFavoriteSpells(state, spell)\r\n        : addFavoriteSpell(state, spell),\r\n    );\r\n  }, []);\r\n\r\n  const favoritesButton = useMemo(\r\n    () => (\r\n      <Ionicons\r\n        accessibilityLabel={\r\n          isInFavoriteSpells(state, spell)\r\n            ? t(\"Remove from Favorites\")\r\n            : t(\"Add to Favorites\")\r\n        }\r\n        onPress={toggleFavorite}\r\n        name={isInFavoriteSpells(state, spell) ? \"heart\" : \"heart-outline\"}\r\n        color={theme.colors.onBackground}\r\n        size={32}\r\n      />\r\n    ),\r\n    [\r\n      !props.showAddToQuickbar && isInFavoriteSpells(state, spell),\r\n      toggleFavorite,\r\n      theme,\r\n    ],\r\n  );\r\n\r\n  const elementTheme = state.options.colorSpellButtonsByElement\r\n    ? getThemeByElementAndDarkMode(spell.getElement(), theme.dark)\r\n    : theme;\r\n\r\n  const disabled = !spell.isEnabled(state);\r\n  const buttonOnPress = useCallback(() => {\r\n    if (props.onPress != null) {\r\n      props.onPress(spell);\r\n    } else {\r\n      stateRef.current.apply(\r\n        spell.doAction.bind(spell, { isAutomatic: false }),\r\n      );\r\n    }\r\n  }, [props.onPress, spell]);\r\n  const auxOptions = useAuxOptions();\r\n  const buttonContents = useMemo(\r\n    () => <SpellViewButtonContents spell={spell} theme={elementTheme} />,\r\n    [spell, elementTheme],\r\n  );\r\n  const button = useMemo(\r\n    () => (\r\n      <TooltipWrapper\r\n        tooltip={\r\n          props.collapsed || props.isMinimal ? (\r\n            <View>\r\n              {descriptionContainer}\r\n              {elementText}\r\n              {expText}\r\n              {cooldownContainer}\r\n            </View>\r\n          ) : undefined\r\n        }\r\n        tooltipPosition={\r\n          showAddToQuickbar\r\n            ? TooltipPositionType.RIGHT_OF_ELEMENT\r\n            : TooltipPositionType.LEFT_OF_ELEMENT\r\n        }\r\n        tooltipId={\r\n          spell.getId() +\r\n          (showAddToQuickbar ? \"yes\" : \"no\") +\r\n          props.tooltipExtra\r\n        }\r\n      >\r\n        <Button\r\n          key={spell.getId()}\r\n          compact={true}\r\n          enableAutoRepress={true}\r\n          onPress={buttonOnPress}\r\n          style={Styles.flex}\r\n          labelStyle={[\r\n            styles.buttonLabelStyle,\r\n            auxOptions.compactLayout && { height: 36 },\r\n          ]}\r\n          contentStyle={[\r\n            styles.buttonContentStyle,\r\n            auxOptions.compactLayout && { height: 36 },\r\n          ]}\r\n          theme={elementTheme}\r\n          // @ts-ignore I added this myself\r\n          TextComponent={View}\r\n          disabled={disabled}\r\n          disableDisabledRenderingOptimization={true}\r\n        >\r\n          {buttonContents}\r\n        </Button>\r\n      </TooltipWrapper>\r\n    ),\r\n    [\r\n      spell.getDisplayName(state),\r\n      buttonOnPress,\r\n      disabled,\r\n      descriptionContainer,\r\n      elementText,\r\n      expText,\r\n      cooldownContainer,\r\n      props.collapsed,\r\n      props.isMinimal,\r\n      showAddToQuickbar,\r\n      props.tooltipExtra,\r\n      buttonContents,\r\n      elementTheme,\r\n      auxOptions.compactLayout,\r\n    ],\r\n  );\r\n\r\n  const addToQuickbarButton = useMemo(\r\n    () => (\r\n      <Button\r\n        onPress={() =>\r\n          stateRef.current.apply((state) => addActionToQuickbar(state, spell))\r\n        }\r\n        style={styles.quickbarButtonContainer}\r\n        disabled={\r\n          isInQuickbar(state, {\r\n            type: \"action\",\r\n            id: spell.getId(),\r\n          }) || isQuickbarFull(state)\r\n        }\r\n      >\r\n        {t(\"Add to Quickbar\")}\r\n      </Button>\r\n    ),\r\n    [\r\n      props.showAddToQuickbar &&\r\n        isInQuickbar(state, {\r\n          type: \"action\",\r\n          id: spell.getId(),\r\n        }),\r\n      props.showAddToQuickbar && isQuickbarFull(state),\r\n    ],\r\n  );\r\n\r\n  const isSpellPermaCastAllowed =\r\n    spell.isPermaCastAllowed() && hasFlag(state, Flag.PermaCastUnlocked);\r\n  const calculatePermaCastStuff = isSpellPermaCastAllowed && !props.collapsed;\r\n  const permaCastManaCost = calculatePermaCastStuff\r\n    ? spell.getPermaCastManaCostPerSec(state)\r\n    : 0;\r\n  const permaCastDelay = calculatePermaCastStuff\r\n    ? spell.getPermaCastDelaySec(state)\r\n    : 0;\r\n  const permaCastWizardPowerNeededForSpell = calculatePermaCastStuff\r\n    ? permaCastWizardPowerNeeded(state, spell)\r\n    : 0;\r\n  const permaCastWizardsNeededForSpell = calculatePermaCastStuff\r\n    ? permaCastWizardsNeeded(state, spell)\r\n    : 0;\r\n  const isInPermaCast = isSpellInPermaCast(state, spell);\r\n\r\n  const hasEnoughMaxManaForPermacast = calculatePermaCastStuff\r\n    ? spell.getManaCost(state) <= getResourceCap(state, Resource.Mana)\r\n    : true;\r\n\r\n  const permaCastButton = useMemo(\r\n    () =>\r\n      calculatePermaCastStuff ? (\r\n        <Button\r\n          onPress={() =>\r\n            stateRef.current.apply((state) =>\r\n              isSpellInPermaCast(state, spell)\r\n                ? removeSpellFromPermaCast(state, spell)\r\n                : addSpellToPermaCast(state, spell),\r\n            )\r\n          }\r\n          disabled={!hasEnoughMaxManaForPermacast && !isInPermaCast}\r\n          compact={true}\r\n          mode=\"outlined\"\r\n        >\r\n          {!isInPermaCast ? t(\"Perma-Cast\") : t(\"Stop Perma-Cast\")}\r\n        </Button>\r\n      ) : null,\r\n    [\r\n      calculatePermaCastStuff,\r\n      spell,\r\n      hasEnoughMaxManaForPermacast,\r\n      isInPermaCast,\r\n      permaCastManaCost,\r\n      permaCastWizardsNeededForSpell,\r\n    ],\r\n  );\r\n\r\n  const isEmpowerable = spell.isEmpoweringPossible(state);\r\n  const isEmpowered = spell.isEmpowered(state);\r\n  const empowerButton = useMemo(\r\n    () =>\r\n      isEmpowerable ? (\r\n        <Button\r\n          onPress={() =>\r\n            stateRef.current.apply((state) => toggleEmpowered(state, spell))\r\n          }\r\n          compact={true}\r\n          mode=\"outlined\"\r\n        >\r\n          {!isEmpowered ? t(\"Empower\") : t(\"Cancel Empower\")}\r\n        </Button>\r\n      ) : null,\r\n    [spell, isEmpowerable, isEmpowered],\r\n  );\r\n\r\n  const extraActionsRow = useMemo(\r\n    () => (\r\n      <View\r\n        style={[\r\n          Styles.mt8,\r\n          Styles.mb4,\r\n          Styles.alignSelfNormal,\r\n          Styles.flexRowAlignCenter,\r\n          { gap: 8 },\r\n        ]}\r\n      >\r\n        {empowerButton}\r\n        {permaCastButton}\r\n      </View>\r\n    ),\r\n    [permaCastButton, empowerButton],\r\n  );\r\n\r\n  const permaCastParams = calculatePermaCastStuff\r\n    ? {\r\n        sec: formatNumber(permaCastDelay, { showDecimals: true }),\r\n        mana: formatNumber(permaCastManaCost, { showDecimals: true }),\r\n        wizardPower: formatNumber(permaCastWizardPowerNeededForSpell, {\r\n          showDecimals: true,\r\n        }),\r\n        wizText:\r\n          permaCastWizardsNeededForSpell > 1\r\n            ? t(\"{{wiz}} wizards\", {\r\n                wiz: formatNumber(permaCastWizardsNeededForSpell),\r\n              })\r\n            : t(\"{{wiz}} wizard\", {\r\n                wiz: formatNumber(permaCastWizardsNeededForSpell),\r\n              }),\r\n      }\r\n    : {};\r\n\r\n  const permaCastText = calculatePermaCastStuff\r\n    ? isInPermaCast\r\n      ? hasEnoughMaxManaForPermacast\r\n        ? t(\r\n            \"You are Perma-Casting this spell every {{sec}} sec. Requires {{mana}}:mana:/sec and {{wizardPower}}:wizardpower:/sec (about {{wizText}})\",\r\n            permaCastParams,\r\n          )\r\n        : t(\r\n            \"You are Perma-Casting this spell, but your Max:mana: is not enough, so it will not get cast.\",\r\n          )\r\n      : hasEnoughMaxManaForPermacast\r\n      ? t(\r\n          \"You may Perma-Cast this spell to automatically cast it every {{sec}} sec. Requires {{mana}}:mana:/sec and {{wizardPower}}:wizardpower:/sec (about {{wizText}})\",\r\n          permaCastParams,\r\n        )\r\n      : t(\"You may Perma-Cast this spell, but your Max:mana: is not enough.\")\r\n    : \"\";\r\n\r\n  const empowerText = isEmpowerable\r\n    ? isEmpowered\r\n      ? t(\"You are Empowering this spell.\")\r\n      : t(\r\n          \"You may Empower this spell to increase its effects at a higher :mana: cost.\",\r\n        )\r\n    : \"\";\r\n\r\n  const extrasText =\r\n    calculatePermaCastStuff && isEmpowerable\r\n      ? t(\"{{empowerText}}\\n\\n{{permaCastText}}\", {\r\n          permaCastText,\r\n          empowerText,\r\n        })\r\n      : calculatePermaCastStuff\r\n      ? permaCastText\r\n      : empowerText;\r\n\r\n  const extrasExplanation = useMemo(\r\n    () => <Markdown>{extrasText}</Markdown>,\r\n    [extrasText],\r\n  );\r\n\r\n  return useMemo(() => {\r\n    if (props.isMinimal) {\r\n      return <View style={styles.buttonContainerView}>{button}</View>;\r\n    }\r\n    return (\r\n      <View\r\n        style={[styles.actionContainer, auxOptions.compactLayout && Styles.mv4]}\r\n        key={spell.getId()}\r\n      >\r\n        <View style={styles.buttonRowContainer}>\r\n          <View style={styles.buttonContainerView}>{button}</View>\r\n          <TouchableWithoutFeedback\r\n            accessibilityLabel={props.collapsed ? t(\"Expand\") : t(\"Collapse\")}\r\n            onPress={props.toggleCollapsed}\r\n          >\r\n            <View style={styles.expandContainer}>\r\n              <Entypo\r\n                name={props.collapsed ? \"chevron-right\" : \"chevron-down\"}\r\n                size={24}\r\n                color={theme.colors.onBackground}\r\n              />\r\n            </View>\r\n          </TouchableWithoutFeedback>\r\n        </View>\r\n        {(!props.collapsed || !props.showAddToQuickbar) && (\r\n          <GameStateFreezer isVisible={!props.collapsed}>\r\n            {/* There is some weirdness on Android where even with display: \"none\" some piece is displayed */}\r\n            <View style={props.collapsed && { display: \"none\", opacity: 0 }}>\r\n              <View style={styles.descriptionRow}>\r\n                {descriptionContainer}\r\n                {!showAddToQuickbar && favoritesButton}\r\n                {showAddToQuickbar && addToQuickbarButton}\r\n              </View>\r\n              {elementText}\r\n              {expText}\r\n              {cooldownContainer}\r\n              {props.showWizards &&\r\n              !isInPermaCast &&\r\n              isAutocastUnlocked(state) ? (\r\n                <View style={Styles.mt4}>\r\n                  <SpellWizardsInfo spellId={spell.getId()} />\r\n                </View>\r\n              ) : null}\r\n              {(calculatePermaCastStuff || isEmpowerable) &&\r\n                !showAddToQuickbar &&\r\n                extraActionsRow}\r\n              {extrasText != \"\" && !showAddToQuickbar\r\n                ? extrasExplanation\r\n                : null}\r\n            </View>\r\n          </GameStateFreezer>\r\n        )}\r\n      </View>\r\n    );\r\n  }, [\r\n    spell.getId(),\r\n    auxOptions.compactLayout,\r\n    !props.collapsed && cooldownContainer,\r\n    !props.collapsed && expText,\r\n    !props.collapsed && descriptionContainer,\r\n    showAddToQuickbar,\r\n    showAddToQuickbar && addToQuickbarButton,\r\n    showAddToQuickbar && state.run.quickbar.length,\r\n    props.collapsed,\r\n    props.showWizards,\r\n    isInPermaCast,\r\n    isAutocastUnlocked(state),\r\n    theme,\r\n    toggleFavorite,\r\n    props.isMinimal,\r\n    props.toggleCollapsed,\r\n    favoritesButton,\r\n    button,\r\n    calculatePermaCastStuff,\r\n    isEmpowerable,\r\n    permaCastButton,\r\n    extrasExplanation,\r\n  ]);\r\n}\r\n\r\nexport function SpellView(props: SpellViewProps & { isVisible?: boolean }) {\r\n  const state = useGameState();\r\n\r\n  return useMemo(\r\n    () => <SpellViewMemoized state={state} {...props} />,\r\n    [\r\n      props.spell.getId(),\r\n      props.collapsed,\r\n      props.tooltipExtra,\r\n      props.showAddToQuickbar,\r\n      props.toggleCollapsed,\r\n      props.isVisible !== false ? state : false,\r\n    ],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  actionContainer: { marginVertical: 8 },\r\n  buttonRowContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  quickbarButtonContainer: {\r\n    marginTop: 4,\r\n    marginLeft: 8,\r\n  },\r\n  expandContainer: {\r\n    width: 40,\r\n    alignSelf: \"stretch\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    cursor: \"pointer\",\r\n  },\r\n  costContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-start\",\r\n    marginTop: 4,\r\n  },\r\n  elementContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-end\",\r\n    marginTop: 4,\r\n  },\r\n  descriptionTextContainer: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    paddingRight: 4,\r\n  },\r\n  buttonTitle: {\r\n    fontSize: 16,\r\n    textAlign: \"center\",\r\n    paddingVertical: 1,\r\n    ...Platform.select({\r\n      android: {\r\n        fontFamily: \"sans-serif-medium\",\r\n      },\r\n      default: {\r\n        fontSize: 18,\r\n      },\r\n    }),\r\n  },\r\n  smallButtonTitle: {\r\n    fontSize: 12,\r\n  },\r\n  buttonContainerView: {\r\n    flexDirection: \"row\",\r\n    flex: 1,\r\n  },\r\n  buttonContainer: {\r\n    flex: 1,\r\n  },\r\n  buttonContainerSmall: {\r\n    marginRight: 0,\r\n  },\r\n  disabledActionText: {\r\n    color: \"#aaa\",\r\n  },\r\n  capTooLowText: {\r\n    color: \"#d99\",\r\n  },\r\n  turnOnRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginTop: 8,\r\n  },\r\n  turnOnQuantityContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  plusMinusContainer: {\r\n    marginLeft: 8,\r\n  },\r\n  spellButtonTitleContainer: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  spellButtonTitleOnlyContainer: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  spellButtonTitleTitleOnlyContainer: {\r\n    flex: 1,\r\n  },\r\n  spellButtonCostContainer: {\r\n    flexDirection: \"row\",\r\n    width: 50,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  spellManaIcon: {\r\n    height: 16,\r\n    width: 16,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    marginLeft: 2,\r\n  },\r\n  descriptionRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"flex-start\",\r\n    marginTop: 8,\r\n  },\r\n  elementTextContainer: {\r\n    paddingHorizontal: 8,\r\n    borderRadius: 8,\r\n  },\r\n  primaryElementText: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  spellElementBadgeText: {\r\n    color: \"white\",\r\n  },\r\n  buttonLabelStyle: {\r\n    marginHorizontal: 16,\r\n    flex: 1,\r\n    marginVertical: 0,\r\n    height: 40,\r\n  },\r\n  buttonContentStyle: { marginHorizontal: 0, flex: 1, height: 40 },\r\n});\r\n","import { MaterialIcons } from \"@expo/vector-icons\";\r\nimport React from \"react\";\r\nimport { StyleSheet, TouchableWithoutFeedback, View } from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\n\r\nexport function DragHandle(props: { drag: () => void }) {\r\n  const theme = useTheme();\r\n  return (\r\n    <View\r\n      importantForAccessibility=\"no-hide-descendants\"\r\n      accessibilityElementsHidden={true}\r\n      style={styles.dragHandle}\r\n    >\r\n      <TouchableWithoutFeedback\r\n        onPressIn={props.drag}\r\n        hitSlop={{ top: 8, bottom: 8, left: 8, right: 8 }}\r\n      >\r\n        <MaterialIcons\r\n          name=\"drag-indicator\"\r\n          size={24}\r\n          color={theme.colors.onBackground}\r\n        />\r\n      </TouchableWithoutFeedback>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  dragHandle: {\r\n    cursor: \"grab\",\r\n    marginRight: 8,\r\n  },\r\n});\r\n","import React, { useCallback, useMemo, useRef } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport DraggableFlatList, {\r\n  RenderItemParams,\r\n  ScaleDecorator,\r\n} from \"react-native-draggable-flatlist\";\r\nimport { IconButton, useTheme } from \"react-native-paper\";\r\nimport { StateContextValue } from \"../../backend/GameState\";\r\nimport { Spell } from \"../../backend/spells/Spell\";\r\nimport {\r\n  getFavoriteSpells,\r\n  removeFromFavoriteSpells,\r\n} from \"../../backend/spells/Spells\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport CategoryContainer from \"../utility/CategoryContainer\";\r\nimport { DragHandle } from \"../utility/DragHandle\";\r\nimport { SpellView } from \"../utility/SpellView\";\r\nimport Styles from \"../utility/Styles\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\n\r\nfunction FavoriteSpellsContainerInside(props: { state: StateContextValue }) {\r\n  const favoriteSpells = getFavoriteSpells(props.state).filter(\r\n    (spell) => spell != null,\r\n  );\r\n  if (favoriteSpells.length === 0) {\r\n    return null;\r\n  }\r\n  const stateRef = useRef(props.state);\r\n  stateRef.current = props.state;\r\n\r\n  const theme = useTheme();\r\n\r\n  const renderItem = useCallback(\r\n    ({ item, drag, isActive }: RenderItemParams<Spell>) => {\r\n      const spell = item;\r\n      return (\r\n        <ScaleDecorator>\r\n          <View style={Styles.flexRowAlignCenter} key={spell.getId()}>\r\n            <DragHandle drag={drag} />\r\n            <SpellView\r\n              key={spell.getId()}\r\n              spell={spell}\r\n              isMinimal={true}\r\n              tooltipExtra=\"favorite\"\r\n            />\r\n            <IconButton\r\n              icon=\"close\"\r\n              accessibilityLabel={t(\"Remove from Favorites\")}\r\n              style={styles.deleteButton}\r\n              hitSlop={{ top: 8, bottom: 8, left: 8, right: 8 }}\r\n              onPress={() =>\r\n                stateRef.current.apply((state) =>\r\n                  removeFromFavoriteSpells(state, spell),\r\n                )\r\n              }\r\n            />\r\n          </View>\r\n        </ScaleDecorator>\r\n      );\r\n    },\r\n    [removeFromFavoriteSpells, theme],\r\n  );\r\n  const keyExtractor = useCallback((spell: Spell) => spell.getId(), []);\r\n  return useMemo(\r\n    () => (\r\n      <View style={Styles.flex}>\r\n        <CategoryContainer\r\n          title={t(\"Favorites\")}\r\n          containerStyle={styles.categoryContainer}\r\n          contentContainerStyle={Styles.flex}\r\n        >\r\n          <View style={[Styles.mt8, Styles.flex]}>\r\n            <DraggableFlatList\r\n              data={favoriteSpells}\r\n              renderItem={renderItem}\r\n              containerStyle={Styles.flex}\r\n              keyExtractor={keyExtractor}\r\n              onDragEnd={(params) => {\r\n                stateRef.current.apply((state) => {\r\n                  state.run.favoriteSpells = params.data.map((spell) =>\r\n                    spell.getId(),\r\n                  );\r\n                  return state;\r\n                });\r\n              }}\r\n            />\r\n          </View>\r\n        </CategoryContainer>\r\n      </View>\r\n    ),\r\n    [\r\n      favoriteSpells.map((spell) => spell.getId()).join(),\r\n      renderItem,\r\n      keyExtractor,\r\n    ],\r\n  );\r\n}\r\n\r\nexport function FavoriteSpellsContainer(props: { isVisible?: boolean }) {\r\n  const state = useGameState();\r\n\r\n  return useMemo(\r\n    () => <FavoriteSpellsContainerInside state={state} {...props} />,\r\n    [props.isVisible !== false ? state : false],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  deleteButton: {\r\n    marginLeft: 8,\r\n    width: 32,\r\n    height: 32,\r\n  },\r\n  deleteButtonInner: {\r\n    paddingHorizontal: 0,\r\n    paddingVertical: 0,\r\n    height: 32,\r\n    width: 32,\r\n    borderRadius: 16,\r\n  },\r\n  categoryContainer: {\r\n    paddingTop: 8,\r\n    flex: 1,\r\n  },\r\n});\r\n","import { useMemo } from \"react\";\r\nimport { StyleSheet, TouchableOpacity, View } from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { getThemeByElementAndDarkMode } from \"../../Themes\";\r\nimport { SpellElement, translateElement } from \"../../backend/spells/Elements\";\r\nimport { GameIcon } from \"../utility/icons/GameIcon\";\r\n\r\ntype SelectorItemProps = {\r\n  element: SpellElement;\r\n  selected: boolean;\r\n  onPress: () => void;\r\n  dividerColor?: string;\r\n};\r\n\r\nfunction SpellElementSelectorItem(props: SelectorItemProps) {\r\n  const { element, selected, onPress } = { ...props };\r\n  const theme = useTheme();\r\n  const themeForElement = getThemeByElementAndDarkMode(element, theme.dark);\r\n  return useMemo(\r\n    () => (\r\n      <TouchableOpacity\r\n        onPress={onPress}\r\n        accessible={true}\r\n        accessibilityLabel={translateElement(element)}\r\n        accessibilityRole=\"tab\"\r\n      >\r\n        <View\r\n          style={[\r\n            styles.itemContainerStyle,\r\n            { borderColor: props.dividerColor ?? theme.colors.outlineVariant },\r\n            selected\r\n              ? { backgroundColor: themeForElement.colors.primaryContainer }\r\n              : null,\r\n          ]}\r\n        >\r\n          <GameIcon icon={element.toLowerCase()} />\r\n        </View>\r\n      </TouchableOpacity>\r\n    ),\r\n    [onPress, element, theme, selected, props.dividerColor],\r\n  );\r\n}\r\n\r\nexport type Props = {\r\n  onPress: (element: SpellElement) => void;\r\n  elements: SpellElement[];\r\n  selected: SpellElement;\r\n  dividerColor?: string;\r\n  style: any;\r\n};\r\n\r\nexport function SpellElementSelector(props: Props) {\r\n  return useMemo(\r\n    () => (\r\n      <View style={[styles.container, props.style]}>\r\n        {props.elements.map((element) => (\r\n          <SpellElementSelectorItem\r\n            key={element}\r\n            onPress={() => props.onPress(element)}\r\n            element={element}\r\n            selected={props.selected == element}\r\n            dividerColor={props.dividerColor}\r\n          />\r\n        ))}\r\n      </View>\r\n    ),\r\n    [\r\n      props.style,\r\n      props.elements.join(\"\"),\r\n      props.selected,\r\n      props.onPress,\r\n      props.dividerColor,\r\n    ],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  itemContainerStyle: {\r\n    width: 34,\r\n    height: 34,\r\n    borderWidth: 1,\r\n  },\r\n  container: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    gap: 2,\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n","import { SimpleLineIcons } from \"@expo/vector-icons\";\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { Platform, StyleSheet, View } from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { StateContextValue } from \"../../backend/GameState\";\r\nimport { ActionArea } from \"../../backend/action/ActionAreas\";\r\nimport { SpellElement } from \"../../backend/spells/Elements\";\r\nimport { Spell } from \"../../backend/spells/Spell\";\r\nimport { getVisibleSpellsByElement } from \"../../backend/spells/Spells\";\r\nimport { clone, keysOf } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { Button } from \"../utility/Button\";\r\nimport CategoryContainer from \"../utility/CategoryContainer\";\r\nimport { GameStateFreezer } from \"../utility/GameStateFreezer\";\r\nimport { SpellElementTag, SpellView } from \"../utility/SpellView\";\r\nimport Styles from \"../utility/Styles\";\r\nimport { Text } from \"../utility/Text\";\r\nimport {\r\n  UIContext,\r\n  UIContextValue,\r\n  useUIStateFromContext,\r\n} from \"../utility/UIContext\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\nimport { FavoriteSpellsContainer } from \"./FavoriteSpellsContainer\";\r\nimport { SpellElementSelector } from \"./SpellElementSelector\";\r\n\r\nfunction SpellsContainerInside(props: {\r\n  uiKey: string;\r\n  area?: ActionArea;\r\n  onlyBySchool?: boolean;\r\n  showAddToQuickbar?: boolean;\r\n  showWizards?: boolean;\r\n  hideTitle?: boolean;\r\n  dividerColor?: string;\r\n  state: StateContextValue;\r\n  uiContext: UIContextValue;\r\n  isVisible?: boolean;\r\n}) {\r\n  const state = props.state;\r\n  const uiContext = props.uiContext;\r\n\r\n  const currentElementKey = props.uiKey + \".currentElement\";\r\n  const spellsByElement = getVisibleSpellsByElement(state, props.area);\r\n\r\n  const elements = keysOf(spellsByElement);\r\n\r\n  const [currentElement, setCurrentElement] = useUIStateFromContext(\r\n    uiContext,\r\n    currentElementKey,\r\n    elements?.[0] ?? SpellElement.Fire,\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!elements.includes(currentElement)) {\r\n      setCurrentElement(elements?.[0]);\r\n    }\r\n  }, [elements.join(\",\")]);\r\n\r\n  const [expandedSpells, setExpandedSpells] = useState<Record<string, boolean>>(\r\n    {},\r\n  );\r\n  const expandedSpellsRef = useRef(expandedSpells);\r\n  expandedSpellsRef.current = expandedSpells;\r\n\r\n  const currentElementSpells = spellsByElement?.[currentElement] || [];\r\n\r\n  const toggleCollapsed = useCallback((spell: Spell) => {\r\n    const id = spell.getId();\r\n    expandedSpellsRef.current[id] = !expandedSpellsRef?.current?.[id];\r\n    setExpandedSpells(clone(expandedSpellsRef.current));\r\n  }, []);\r\n\r\n  const boundToggleCollapsed = useMemo(\r\n    () =>\r\n      Object.fromEntries(\r\n        elements.map((element) => [\r\n          element,\r\n          Object.fromEntries(\r\n            spellsByElement[element].map((spell) => [\r\n              spell.getId(),\r\n              toggleCollapsed.bind(null, spell),\r\n            ]),\r\n          ),\r\n        ]),\r\n      ),\r\n    [spellsByElement],\r\n  );\r\n\r\n  const spellActionContainers = useMemo(() => {\r\n    if (!props.showAddToQuickbar) {\r\n      return elements.map((element) => {\r\n        const spellArray = spellsByElement[element];\r\n        return (\r\n          <GameStateFreezer\r\n            key={element}\r\n            isVisible={currentElement === element}\r\n          >\r\n            <View style={currentElement !== element && { display: \"none\" }}>\r\n              {spellArray.map((spell, idx) => {\r\n                return (\r\n                  <SpellView\r\n                    key={spell.getId()}\r\n                    spell={spell}\r\n                    showAddToQuickbar={props.showAddToQuickbar}\r\n                    showWizards={props.showWizards}\r\n                    collapsed={!expandedSpells?.[spell.getId()]}\r\n                    toggleCollapsed={\r\n                      boundToggleCollapsed[element][spell.getId()]\r\n                    }\r\n                    isVisible={props.isVisible && currentElement === element}\r\n                  />\r\n                );\r\n              })}\r\n            </View>\r\n          </GameStateFreezer>\r\n        );\r\n      });\r\n    }\r\n    return currentElementSpells.map((spell, idx) => {\r\n      return (\r\n        <SpellView\r\n          key={spell.getId()}\r\n          spell={spell}\r\n          showAddToQuickbar={props.showAddToQuickbar}\r\n          showWizards={props.showWizards}\r\n          collapsed={!expandedSpells?.[spell.getId()]}\r\n          toggleCollapsed={boundToggleCollapsed[currentElement][spell.getId()]}\r\n          isVisible={props.isVisible}\r\n        />\r\n      );\r\n    });\r\n  }, [\r\n    !props.showAddToQuickbar ? spellsByElement : currentElementSpells,\r\n    JSON.stringify(expandedSpells),\r\n    boundToggleCollapsed,\r\n    currentElement,\r\n    props.isVisible,\r\n    props.showWizards,\r\n  ]);\r\n\r\n  const spellElementPicker = useMemo(\r\n    () => (\r\n      <SpellElementSelector\r\n        onPress={(value) => setCurrentElement(value as SpellElement)}\r\n        style={styles.picker}\r\n        selected={currentElement}\r\n        elements={elements}\r\n        dividerColor={props.dividerColor}\r\n      />\r\n    ),\r\n    [\r\n      setCurrentElement,\r\n      currentElement,\r\n      JSON.stringify(elements),\r\n      props.dividerColor,\r\n    ],\r\n  );\r\n\r\n  const currentElementSpellsString = currentElementSpells\r\n    .map((spell) => spell.getId())\r\n    .join(\",\");\r\n\r\n  const hasAllSpellsExpanded = useMemo(() => {\r\n    return !currentElementSpells.some(\r\n      (spell) => !(expandedSpells?.[spell.getId()] ?? false),\r\n    );\r\n  }, [expandedSpells, currentElementSpellsString]);\r\n\r\n  const expandCollapseAll = useCallback(() => {\r\n    let expandedSomething = false;\r\n    currentElementSpells.forEach((spell) => {\r\n      const spellId = spell.getId();\r\n      if (!expandedSpells?.[spellId]) {\r\n        expandedSomething = true;\r\n        expandedSpells[spellId] = true;\r\n      }\r\n    });\r\n    if (!expandedSomething) {\r\n      currentElementSpells.forEach((spell) => {\r\n        delete expandedSpells[spell.getId()];\r\n      });\r\n    }\r\n    setExpandedSpells(clone(expandedSpells));\r\n  }, [expandedSpells, currentElementSpellsString]);\r\n\r\n  const theme = useTheme();\r\n\r\n  return useMemo(() => {\r\n    return (\r\n      <View>\r\n        {!props.hideTitle && (\r\n          <View\r\n            accessible={true}\r\n            accessibilityRole=\"header\"\r\n            style={styles.emptyTitleContainer}\r\n          >\r\n            <SimpleLineIcons\r\n              name=\"magic-wand\"\r\n              size={24}\r\n              style={styles.magicWand}\r\n              color={theme.colors.onBackground}\r\n            />\r\n            <Text h2 accessibilityRole=\"none\">\r\n              {t(\"Cast Spell\")}\r\n            </Text>\r\n          </View>\r\n        )}\r\n        {!props.onlyBySchool && (\r\n          <View>\r\n            <FavoriteSpellsContainer isVisible={props.isVisible} />\r\n          </View>\r\n        )}\r\n        {elements.length > 0 ? (\r\n          <CategoryContainer\r\n            title={t(\"By Element\")}\r\n            dividerColor={props.dividerColor}\r\n          >\r\n            <View style={styles.schoolRowContainer}>\r\n              <View style={styles.tagPickerContainer}>\r\n                {spellElementPicker}\r\n              </View>\r\n              <View style={Styles.flexCenter}>\r\n                <Button compact={true} onPress={expandCollapseAll}>\r\n                  {hasAllSpellsExpanded ? t(\"Collapse all\") : t(\"Expand all\")}\r\n                </Button>\r\n                <View style={Styles.mt8}>\r\n                  <SpellElementTag element={currentElement} />\r\n                </View>\r\n              </View>\r\n            </View>\r\n            <View style={styles.schoolContainer}>{spellActionContainers}</View>\r\n          </CategoryContainer>\r\n        ) : (\r\n          <View style={styles.noSpellsContainer}>\r\n            <Text style={styles.noSpellsText}>{t(\"No spells yet!\")}</Text>\r\n          </View>\r\n        )}\r\n      </View>\r\n    );\r\n  }, [\r\n    props.hideTitle,\r\n    currentElement,\r\n    setCurrentElement,\r\n    spellActionContainers,\r\n    props.isVisible,\r\n    spellElementPicker,\r\n    expandCollapseAll,\r\n    props.onlyBySchool,\r\n    props.dividerColor,\r\n    elements.length,\r\n    hasAllSpellsExpanded,\r\n    theme,\r\n  ]);\r\n}\r\n\r\nexport default function SpellsContainer(props: {\r\n  uiKey: string;\r\n  area: ActionArea;\r\n  hideRecent?: boolean;\r\n  showAddToQuickbar?: boolean;\r\n  showWizards?: boolean;\r\n  isVisible?: boolean;\r\n  hideTitle?: boolean;\r\n  onlyBySchool?: boolean;\r\n  dividerColor?: string;\r\n}) {\r\n  const state = useGameState();\r\n  const uiContext = useContext(UIContext);\r\n\r\n  return useMemo(\r\n    () => (\r\n      <GameStateFreezer isVisible={props.isVisible}>\r\n        <SpellsContainerInside state={state} uiContext={uiContext} {...props} />\r\n      </GameStateFreezer>\r\n    ),\r\n    [\r\n      props.area,\r\n      props.hideRecent,\r\n      props.showAddToQuickbar,\r\n      props.onlyBySchool,\r\n      props.showWizards,\r\n      props.isVisible !== false ? state : false,\r\n      props.isVisible !== false ? uiContext : false,\r\n      props.isVisible !== false ? props.dividerColor : false,\r\n    ],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  schoolContainer: { marginTop: 8 },\r\n  spellsContainer: { marginTop: 8 },\r\n  schoolButton: { marginVertical: 4 },\r\n  magicWand: { marginRight: 8 },\r\n  schoolTitleContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n  },\r\n  emptyTitleContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n  },\r\n  titleContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  schoolTitleTextContainer: {},\r\n  picker: {\r\n    flex: 1,\r\n    width: 144,\r\n  },\r\n  schoolRowContainer: {\r\n    marginTop: 8,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  tagPickerContainer: {\r\n    width: 180,\r\n  },\r\n  buttonTitle: {\r\n    textAlign: \"center\",\r\n    paddingVertical: 1,\r\n    ...Platform.select({\r\n      android: {\r\n        fontFamily: \"sans-serif-medium\",\r\n      },\r\n      default: {\r\n        fontSize: 18,\r\n      },\r\n    }),\r\n    fontSize: 12,\r\n  },\r\n  noSpellsText: {\r\n    fontStyle: \"italic\",\r\n  },\r\n  noSpellsContainer: {\r\n    marginTop: 16,\r\n  },\r\n  nuxText: {\r\n    fontStyle: \"italic\",\r\n  },\r\n});\r\n","import { useEffect } from \"react\";\r\n\r\nexport function KeyboardListener(props: {\r\n  callback: (ev: KeyboardEvent) => void;\r\n}) {\r\n  const callback = props.callback;\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", callback);\r\n    return () => window.removeEventListener(\"keydown\", callback);\r\n  }, [callback]);\r\n  return null;\r\n}\r\n","import React, { useCallback, useMemo, useRef } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport {\r\n  EquipmentSlot,\r\n  getEquippedItem,\r\n  getMaxEquippedItemsPerSlot,\r\n} from \"../../backend/items/Equipment\";\r\nimport { Items } from \"../../backend/items/Items\";\r\nimport {\r\n  PouchItem,\r\n  getUsesLeftForPouchItem,\r\n} from \"../../backend/items/equipment/PouchItem\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { ItemInfo } from \"../inventory/ItemInfo\";\r\nimport { ItemTile } from \"../inventory/ItemTile\";\r\nimport { CheckBox } from \"../utility/CheckBox\";\r\nimport Styles from \"../utility/Styles\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\n\r\nfunction EquippedPouchSlot(props: { index: number }) {\r\n  const state = useGameState();\r\n  const index = props.index;\r\n  const equippedItem = getEquippedItem(state, EquipmentSlot.Pouch, index);\r\n\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const item =\r\n    equippedItem && (Items.getById(equippedItem.itemId) as PouchItem);\r\n  if (item && !(item instanceof PouchItem)) {\r\n    throw new Error(\"Only pouch items should be equipped\");\r\n  }\r\n\r\n  const useAction = item?.getPouchItemAction?.(\r\n    state,\r\n    index,\r\n    equippedItem.params,\r\n  );\r\n  const usesLeft = getUsesLeftForPouchItem(state, index);\r\n\r\n  return useMemo(() => {\r\n    if (!equippedItem) {\r\n      return (\r\n        <View key={index}>\r\n          <ItemTile title={t(\"Empty\")} />\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <View key={index}>\r\n        <ItemTile\r\n          icon={item.getId()}\r\n          quality={equippedItem?.params?.itemQuality}\r\n          disabled={!useAction.isEnabled}\r\n          amount={usesLeft > 1 ? usesLeft : undefined}\r\n          title={item.getName(equippedItem.params)}\r\n          onPress={() => stateRef.current.apply(useAction.transform)}\r\n          tooltip={\r\n            <ItemInfo\r\n              showTile={false}\r\n              itemStack={{ itemOccurrence: equippedItem, amount: 1 }}\r\n            />\r\n          }\r\n          tooltipIdSuffix={\"explorationPouch\" + index}\r\n        />\r\n      </View>\r\n    );\r\n  }, [\r\n    JSON.stringify(equippedItem),\r\n    useAction?.isEnabled,\r\n    index,\r\n    usesLeft,\r\n    useAction?.transform,\r\n    stateRef,\r\n    item?.getName(equippedItem?.params || {}),\r\n  ]);\r\n}\r\n\r\nexport default function ExplorationPouch(props: {}) {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n  const capacity = getMaxEquippedItemsPerSlot(state, EquipmentSlot.Pouch);\r\n  const slotComponents = useMemo(() => {\r\n    let slotComponents = [];\r\n    for (let i = 0; i < capacity; i++) {\r\n      slotComponents.push(<EquippedPouchSlot key={i} index={i} />);\r\n    }\r\n    return slotComponents;\r\n  }, [capacity]);\r\n\r\n  const autoUsePouchToggle = useCallback(() => {\r\n    stateRef.current.apply((state) => {\r\n      state.global.autoUsePouch = !state.global.autoUsePouch;\r\n      return state;\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <View>\r\n      <View\r\n        style={[\r\n          Styles.flexRowAlignCenter,\r\n          Styles.flexCenter,\r\n          { flexWrap: \"wrap\" },\r\n        ]}\r\n      >\r\n        {slotComponents}\r\n      </View>\r\n      <View style={[Styles.mt16, Styles.ph16]}>\r\n        <View>\r\n          <CheckBox\r\n            title={t(\"Auto-use pouch items\")}\r\n            checked={state.global.autoUsePouch}\r\n            onPress={autoUsePouchToggle}\r\n          />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import { MaterialIcons } from \"@expo/vector-icons\";\r\nimport React, { useMemo } from \"react\";\r\nimport { Image, StyleSheet, View } from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { AttackTarget } from \"../../backend/exploration/AttackTarget\";\r\nimport {\r\n  TemporaryEffects,\r\n  getTemporaryEffectsForTarget,\r\n} from \"../../backend/temporaryeffects/TemporaryEffects\";\r\nimport { getSecondsPlayed } from \"../../backend/timetick/TotalTimePlayed\";\r\nimport { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport Styles from \"./Styles\";\r\nimport { Text } from \"./Text\";\r\nimport Tooltip from \"./tooltip/PaperTooltip\";\r\nimport { useGameState } from \"./useGameState\";\r\n\r\nconst HITSLOP = { top: 8, bottom: 8, left: 8, right: 8 };\r\n\r\nfunction TemporaryEffectRow(props: {\r\n  tooltip: string;\r\n  text: string;\r\n  icon: any;\r\n}) {\r\n  const theme = useTheme();\r\n  const tooltip = useMemo(\r\n    () => (\r\n      <View style={Styles.mr8}>\r\n        <Tooltip title={props.tooltip} hitSlop={HITSLOP}>\r\n          <MaterialIcons\r\n            name=\"info\"\r\n            size={16}\r\n            color={theme.colors.onBackground}\r\n          />\r\n        </Tooltip>\r\n      </View>\r\n    ),\r\n    [props.tooltip, theme],\r\n  );\r\n  const viewStyle = useMemo(\r\n    () => [\r\n      styles.row,\r\n      {\r\n        width: \"100%\",\r\n      },\r\n    ],\r\n    [],\r\n  );\r\n  const image = useMemo(\r\n    () => <Image source={props.icon} style={styles.icon} />,\r\n    [props.icon],\r\n  );\r\n  return (\r\n    <View style={viewStyle}>\r\n      {tooltip}\r\n      {image}\r\n      <Text doNotScaleFonts={true} style={styles.boostText}>\r\n        {props.text}\r\n      </Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst TemporaryEffectRowMemo = React.memo(TemporaryEffectRow);\r\n\r\nexport function TemporaryEffectsViewer(props: {\r\n  target?: AttackTarget;\r\n  isVisible?: boolean;\r\n  accessibilityHeader?: string;\r\n  maxElements?: number;\r\n  skipPermacast?: boolean;\r\n}) {\r\n  const state = useGameState();\r\n  const target = props.target ?? AttackTarget.Player;\r\n  const temporaryEffects = getTemporaryEffectsForTarget(state, target)\r\n    .concat(\r\n      target == AttackTarget.Player\r\n        ? getTemporaryEffectsForTarget(state, AttackTarget.Familiar)\r\n        : [],\r\n    )\r\n    .sort(\r\n      (a, b) =>\r\n        (target == AttackTarget.Enemy ? -1 : 1) *\r\n          ((TemporaryEffects.getById(a.id).isBeneficial() ? 10000 : 0) -\r\n            (TemporaryEffects.getById(b.id).isBeneficial() ? 10000 : 0)) +\r\n        (a.fromPermacast ? 1000 : 0) -\r\n        (b.fromPermacast ? 1000 : 0) +\r\n        (a.fromPouch ? 100 : 0) -\r\n        (b.fromPouch ? 100 : 0) +\r\n        (a.fromAutocast ? 10 : 0) -\r\n        (b.fromAutocast ? 10 : 0),\r\n    );\r\n  const viewStyle = useMemo(\r\n    () => [\r\n      styles.row,\r\n      {\r\n        width: \"100%\",\r\n      },\r\n    ],\r\n    [],\r\n  );\r\n  return useMemo(() => {\r\n    const rows = temporaryEffects\r\n      .slice(0, props.maxElements)\r\n      .map((temporaryEffect, idx) => {\r\n        const { endTime } = temporaryEffect;\r\n        const temporaryEffectObject = TemporaryEffects.getById(\r\n          temporaryEffect.id,\r\n        );\r\n        const name = temporaryEffectObject.getDisplayName();\r\n        const timeLeftSec = endTime - getSecondsPlayed(state);\r\n        const isPermacast = temporaryEffect.fromPermacast;\r\n        const text =\r\n          isPermacast && !props.skipPermacast\r\n            ? t(\"{{familiarPrefix}}{{temporaryEffectName}} (P)\", {\r\n                temporaryEffectName: name,\r\n                familiarPrefix:\r\n                  temporaryEffect.target == AttackTarget.Familiar\r\n                    ? t(\"(Familiar) \")\r\n                    : \"\",\r\n              })\r\n            : t(\r\n                \"{{familiarPrefix}}{{temporaryEffectName}} ({{temporaryEffectDuration}} sec)\",\r\n                {\r\n                  temporaryEffectName: name,\r\n                  temporaryEffectDuration: formatNumber(timeLeftSec),\r\n                  familiarPrefix:\r\n                    temporaryEffect.target == AttackTarget.Familiar\r\n                      ? t(\"(Familiar) \")\r\n                      : \"\",\r\n                },\r\n              );\r\n        return (\r\n          <View\r\n            key={temporaryEffect.id + temporaryEffect.target}\r\n            style={idx > 0 && Styles.mt2}\r\n          >\r\n            <TemporaryEffectRowMemo\r\n              text={text}\r\n              tooltip={temporaryEffectObject.getDisplayDescription(\r\n                state,\r\n                temporaryEffect,\r\n              )}\r\n              icon={temporaryEffectObject.getIcon()}\r\n            />\r\n          </View>\r\n        );\r\n      });\r\n    let andMoreComponent = null;\r\n    if (rows.length < temporaryEffects.length) {\r\n      andMoreComponent = (\r\n        <View key=\"andMore\" style={viewStyle}>\r\n          <Text doNotScaleFonts={true} style={styles.boostText}>\r\n            {t(\"And {{notShownElements}} more...\", {\r\n              notShownElements: formatNumber(\r\n                temporaryEffects.length - rows.length,\r\n              ),\r\n            })}\r\n          </Text>\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <View style={styles.container}>\r\n        {temporaryEffects.length > 0 && props.accessibilityHeader != null && (\r\n          <View\r\n            style={styles.accessibilityHidden}\r\n            accessible={true}\r\n            accessibilityLabel={props.accessibilityHeader}\r\n            accessibilityRole=\"header\"\r\n            accessibilityElementsHidden={false}\r\n          />\r\n        )}\r\n        {rows}\r\n        {andMoreComponent}\r\n      </View>\r\n    );\r\n  }, [\r\n    props.isVisible !== false ? state : false,\r\n    props.isVisible !== false ? temporaryEffects : false,\r\n    props.maxElements,\r\n  ]);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"stretch\",\r\n  },\r\n  icon: {\r\n    height: 16,\r\n    width: 16,\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    marginTop: 4,\r\n  },\r\n  boostText: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n  accessibilityHidden: {\r\n    width: 1,\r\n    height: 1,\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n  },\r\n});\r\n","import { MaterialIcons } from \"@expo/vector-icons\";\r\nimport React, { useCallback, useMemo, useRef } from \"react\";\r\nimport {\r\n  Platform,\r\n  ScrollView,\r\n  StyleSheet,\r\n  TouchableWithoutFeedback,\r\n  View,\r\n} from \"react-native\";\r\nimport DraggableFlatList, {\r\n  DragEndParams,\r\n  RenderItemParams,\r\n  ScaleDecorator,\r\n} from \"react-native-draggable-flatlist\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport {\r\n  QuickbarAction,\r\n  QuickbarActionImpl,\r\n  getQuickbarActions,\r\n  removeFromQuickbar,\r\n} from \"../../backend/Quickbar\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { ActiveMark } from \"../utility/ActiveMark\";\r\nimport { Button } from \"../utility/Button\";\r\nimport { IconButton } from \"../utility/IconButton\";\r\nimport { KeyboardListener } from \"../utility/KeyboardListener\";\r\nimport { getPrimaryButtonTextColor } from \"../utility/Miscellaneous\";\r\nimport Styles from \"../utility/Styles\";\r\n\r\nimport { getThemeByElementAndDarkMode } from \"../../Themes\";\r\nimport { Spell } from \"../../backend/spells/Spell\";\r\nimport { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { TemporaryEffectsViewer } from \"../utility/TemporaryEffectsViewer\";\r\nimport { Text } from \"../utility/Text\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\n\r\nfunction QuickbarIndexSelector(props: {}) {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n  const currentQuickbar = state.world.currentQuickbar;\r\n  const disableBackArrow = currentQuickbar <= 0;\r\n  const disableForwardArrow = currentQuickbar >= 3;\r\n  const slotNumber = currentQuickbar + 1;\r\n\r\n  const goBack = useCallback(() => {\r\n    stateRef.current.apply((state) => {\r\n      state.world.currentQuickbar = state.world.currentQuickbar - 1;\r\n      return state;\r\n    });\r\n  }, []);\r\n\r\n  const goForward = useCallback(() => {\r\n    stateRef.current.apply((state) => {\r\n      state.world.currentQuickbar = state.world.currentQuickbar + 1;\r\n      return state;\r\n    });\r\n  }, []);\r\n\r\n  const theme = useTheme();\r\n\r\n  const backButton = useMemo(\r\n    () => (\r\n      <Button\r\n        disabled={disableBackArrow}\r\n        accessibilityLabel={t(\"Previous Quickbar\")}\r\n        passthroughStyle={styles.quickbarSelectorButton}\r\n        ButtonComponent={IconButton}\r\n        size={24}\r\n        icon={() => (\r\n          <MaterialIcons\r\n            name=\"arrow-back\"\r\n            size={24}\r\n            color={\r\n              disableBackArrow\r\n                ? theme.colors.onSurfaceDisabled\r\n                : theme.colors.onPrimary\r\n            }\r\n          />\r\n        )}\r\n        disableDisabledRenderingOptimization={true}\r\n        onPress={goBack}\r\n      />\r\n    ),\r\n    [disableBackArrow, goBack],\r\n  );\r\n  const forwardButton = useMemo(\r\n    () => (\r\n      <Button\r\n        disabled={disableForwardArrow}\r\n        accessibilityLabel={t(\"Next Quickbar\")}\r\n        passthroughStyle={styles.quickbarSelectorButton}\r\n        ButtonComponent={IconButton}\r\n        size={24}\r\n        icon={() => (\r\n          <MaterialIcons\r\n            name=\"arrow-forward\"\r\n            size={24}\r\n            color={\r\n              disableForwardArrow\r\n                ? theme.colors.onSurfaceDisabled\r\n                : theme.colors.onPrimary\r\n            }\r\n          />\r\n        )}\r\n        disableDisabledRenderingOptimization={true}\r\n        onPress={goForward}\r\n      />\r\n    ),\r\n    [disableForwardArrow, goForward],\r\n  );\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View\r\n        style={[\r\n          styles.row,\r\n          {\r\n            alignSelf: \"stretch\",\r\n            justifyContent: \"center\",\r\n          },\r\n        ]}\r\n      >\r\n        {backButton}\r\n        <View style={styles.barText}>\r\n          <View>\r\n            <Text>{t(\"Bar {{slot}}\", { slot: formatNumber(slotNumber) })}</Text>\r\n          </View>\r\n          {Platform.OS === \"web\" && (\r\n            <View>\r\n              <Text style={{ color: theme.colors.tertiary }} numberOfLines={1}>\r\n                {t(\"[Ctrl+1~4]\")}\r\n              </Text>\r\n            </View>\r\n          )}\r\n        </View>\r\n        {forwardButton}\r\n      </View>\r\n    ),\r\n    [backButton, slotNumber, forwardButton],\r\n  );\r\n}\r\n\r\nfunction QuickbarActionContainer(props: {\r\n  quickbarAction: QuickbarAction;\r\n  hotkey: string | undefined;\r\n  drag: () => void;\r\n}) {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const quickbarAction = props.quickbarAction;\r\n  const name = quickbarAction.getDisplayName(state);\r\n  const transform = quickbarAction.getTransform(state);\r\n  const data = quickbarAction.toQuickbarData();\r\n  const enabled = quickbarAction.isEnabled(state);\r\n  const active = quickbarAction.isActive(state);\r\n\r\n  const theme = useTheme();\r\n  const elementTheme =\r\n    quickbarAction instanceof QuickbarActionImpl &&\r\n    state.options.colorSpellButtonsByElement\r\n      ? getThemeByElementAndDarkMode(\r\n          (quickbarAction.getAction() as Spell).getElement(),\r\n          theme.dark,\r\n        )\r\n      : theme;\r\n\r\n  const title = useMemo(() => {\r\n    if (props.hotkey) {\r\n      return (\r\n        <Text\r\n          style={[\r\n            styles.smallButtonTitle,\r\n            {\r\n              color: getPrimaryButtonTextColor(elementTheme, !enabled),\r\n            },\r\n            Styles.flex,\r\n          ]}\r\n          numberOfLines={2}\r\n        >\r\n          <Text\r\n            style={\r\n              enabled\r\n                ? { color: elementTheme.colors.onTertiary }\r\n                : { color: getPrimaryButtonTextColor(elementTheme, !enabled) }\r\n            }\r\n          >\r\n            [{props.hotkey}]\r\n          </Text>{\" \"}\r\n          {name}\r\n        </Text>\r\n      );\r\n    }\r\n    return (\r\n      <Text\r\n        style={[\r\n          styles.smallButtonTitle,\r\n          {\r\n            color: getPrimaryButtonTextColor(elementTheme, !enabled),\r\n          },\r\n          Styles.flex,\r\n        ]}\r\n        numberOfLines={2}\r\n      >\r\n        {name}\r\n      </Text>\r\n    );\r\n  }, [props.hotkey, name, elementTheme, enabled]);\r\n\r\n  const onPress = useCallback(\r\n    () => stateRef.current.apply(transform),\r\n    [transform],\r\n  );\r\n\r\n  return useMemo(\r\n    () => (\r\n      <ScaleDecorator>\r\n        <View style={[Styles.flex, Styles.flexRowAlignCenter, Styles.mv4]}>\r\n          <View\r\n            importantForAccessibility=\"no-hide-descendants\"\r\n            accessibilityElementsHidden={true}\r\n            style={styles.dragHandle}\r\n          >\r\n            <TouchableWithoutFeedback\r\n              onPressIn={props.drag}\r\n              hitSlop={{ top: 8, bottom: 8, left: 8, right: 8 }}\r\n              importantForAccessibility=\"no-hide-descendants\"\r\n              accessibilityElementsHidden={true}\r\n            >\r\n              <MaterialIcons\r\n                name=\"drag-indicator\"\r\n                size={24}\r\n                color={theme.colors.onSecondaryContainer}\r\n              />\r\n            </TouchableWithoutFeedback>\r\n          </View>\r\n          <View style={Styles.flex}>\r\n            <Button\r\n              icon={\r\n                active\r\n                  ? () => (\r\n                      <ActiveMark\r\n                        disabled={!enabled}\r\n                        style={{ marginRight: -8 }}\r\n                      />\r\n                    )\r\n                  : undefined\r\n              }\r\n              onPress={onPress}\r\n              disabled={!enabled}\r\n              compact={true}\r\n              style={Styles.flex}\r\n              labelStyle={{\r\n                marginHorizontal: 16,\r\n                flex: 1,\r\n                marginVertical: 0,\r\n                height: 40,\r\n              }}\r\n              contentStyle={{ marginHorizontal: 0, flex: 1, height: 40 }}\r\n              TextComponent={View}\r\n              enableAutoRepress={true}\r\n              disableDisabledRenderingOptimization={true}\r\n              numberOfLines={2}\r\n              theme={elementTheme}\r\n            >\r\n              <View style={[Styles.flex, Styles.flexRowAlignCenter]}>\r\n                <Text numberOfLines={2}>{title}</Text>\r\n              </View>\r\n            </Button>\r\n          </View>\r\n          <Button\r\n            accessibilityLabel={t(\"Remove from Quickbar\")}\r\n            // importantForAccessibility=\"no-hide-descendants\"\r\n            // accessibilityElementsHidden={true}\r\n            passthroughStyle={styles.deleteButton}\r\n            ButtonComponent={IconButton}\r\n            hitSlop={{ top: 8, bottom: 8, left: 8, right: 8 }}\r\n            onPress={() =>\r\n              stateRef.current.apply((state) => {\r\n                return removeFromQuickbar(state, data);\r\n              })\r\n            }\r\n            icon=\"close\"\r\n            disableDisabledRenderingOptimization={true}\r\n          />\r\n        </View>\r\n      </ScaleDecorator>\r\n    ),\r\n    [\r\n      name,\r\n      stateRef,\r\n      transform,\r\n      enabled,\r\n      active,\r\n      removeFromQuickbar,\r\n      props.hotkey,\r\n      elementTheme,\r\n      props.drag,\r\n    ],\r\n  );\r\n}\r\n\r\nexport function QuickbarContainer() {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n  const quickbar = getQuickbarActions(state);\r\n\r\n  const renderItem = useCallback(\r\n    ({ item, getIndex, drag, isActive }: RenderItemParams<QuickbarAction>) => (\r\n      <QuickbarActionContainer\r\n        hotkey={\r\n          Platform.OS === \"web\"\r\n            ? (((getIndex() ?? 0) + 1) % 10).toString()\r\n            : undefined\r\n        }\r\n        drag={drag}\r\n        quickbarAction={item}\r\n      />\r\n    ),\r\n    [],\r\n  );\r\n  const keyExtractor = useCallback(\r\n    (quickbarAction: QuickbarAction) =>\r\n      JSON.stringify(quickbarAction.toQuickbarData()),\r\n    [],\r\n  );\r\n  const quickbarKeypressCallback = useCallback(\r\n    (ev: KeyboardEvent) => {\r\n      if (ev.ctrlKey) {\r\n        let slot = -1;\r\n        switch (ev.key) {\r\n          case \"1\":\r\n            slot = 0;\r\n            break;\r\n          case \"2\":\r\n            slot = 1;\r\n            break;\r\n          case \"3\":\r\n            slot = 2;\r\n            break;\r\n          case \"4\":\r\n            slot = 3;\r\n            break;\r\n        }\r\n        if (slot > -1) {\r\n          stateRef.current.apply((state) => {\r\n            state.world.currentQuickbar = slot;\r\n            return state;\r\n          });\r\n        }\r\n        return;\r\n      }\r\n      let slot = -1;\r\n      switch (ev.key) {\r\n        case \"1\":\r\n          slot = 0;\r\n          break;\r\n        case \"2\":\r\n          slot = 1;\r\n          break;\r\n        case \"3\":\r\n          slot = 2;\r\n          break;\r\n        case \"4\":\r\n          slot = 3;\r\n          break;\r\n        case \"5\":\r\n          slot = 4;\r\n          break;\r\n        case \"6\":\r\n          slot = 5;\r\n          break;\r\n        case \"7\":\r\n          slot = 6;\r\n          break;\r\n        case \"8\":\r\n          slot = 7;\r\n          break;\r\n        case \"9\":\r\n          slot = 8;\r\n          break;\r\n        case \"0\":\r\n          slot = 9;\r\n          break;\r\n      }\r\n\r\n      if (slot >= 0) {\r\n        const quickbarAction = quickbar?.[slot];\r\n        if (quickbarAction != null) {\r\n          const transform = quickbarAction.getTransform(stateRef.current);\r\n          const enabled = quickbarAction.isEnabled(stateRef.current);\r\n          if (enabled) {\r\n            stateRef.current.apply(transform);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [JSON.stringify(quickbar)],\r\n  );\r\n  const onDragEnd = useCallback((params: DragEndParams<QuickbarAction>) => {\r\n    stateRef.current.apply((state) => {\r\n      state.world.quickbars[state.world.currentQuickbar] = params.data.map(\r\n        (quickbarAction) => quickbarAction.toQuickbarData(),\r\n      );\r\n      return state;\r\n    });\r\n  }, []);\r\n  return useMemo(\r\n    () => (\r\n      <View style={styles.mainContainer}>\r\n        <KeyboardListener callback={quickbarKeypressCallback} />\r\n        <View style={styles.actionsContainer}>\r\n          {Platform.select({\r\n            web: (\r\n              <ScrollView\r\n                style={styles.actionsScroll}\r\n                nestedScrollEnabled={true}\r\n              >\r\n                {quickbar.length > 0 ? (\r\n                  <DraggableFlatList\r\n                    renderItem={renderItem}\r\n                    data={quickbar}\r\n                    keyExtractor={keyExtractor}\r\n                    onDragEnd={onDragEnd}\r\n                    nestedScrollEnabled={true}\r\n                  />\r\n                ) : (\r\n                  <Text style={styles.emptyText}>\r\n                    {t(\r\n                      'Your Quickbar is empty. Add actions to the Quickbar through the \"Spells\" menu at the bottom!',\r\n                    )}\r\n                  </Text>\r\n                )}\r\n              </ScrollView>\r\n            ),\r\n            default:\r\n              quickbar.length > 0 ? (\r\n                <DraggableFlatList\r\n                  renderItem={renderItem}\r\n                  data={quickbar}\r\n                  keyExtractor={keyExtractor}\r\n                  onDragEnd={onDragEnd}\r\n                  nestedScrollEnabled={true}\r\n                />\r\n              ) : (\r\n                <Text style={styles.emptyText}>\r\n                  {t(\r\n                    'Your Quickbar is empty. Add actions to the Quickbar through the \"Spells\" menu at the bottom!',\r\n                  )}\r\n                </Text>\r\n              ),\r\n          })}\r\n        </View>\r\n        <View style={styles.infoContainer}>\r\n          <View\r\n            style={styles.accessibilityHidden}\r\n            accessible={true}\r\n            accessibilityLabel={t(\"Select Quickbar slot\")}\r\n            accessibilityRole=\"header\"\r\n            accessibilityElementsHidden={false}\r\n          />\r\n          <QuickbarIndexSelector />\r\n          <ScrollView style={styles.infoContainer} nestedScrollEnabled={true}>\r\n            <TemporaryEffectsViewer\r\n              accessibilityHeader={t(\"Player Buffs\")}\r\n              maxElements={5}\r\n            />\r\n          </ScrollView>\r\n        </View>\r\n      </View>\r\n    ),\r\n    [\r\n      renderItem,\r\n      keyExtractor,\r\n      onDragEnd,\r\n      JSON.stringify(quickbar),\r\n      quickbarKeypressCallback,\r\n    ],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  emptyText: { fontWeight: \"bold\", fontStyle: \"italic\" },\r\n  row: { flexDirection: \"row\", alignItems: \"center\", marginVertical: 4 },\r\n  mainContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"stretch\",\r\n    height: \"100%\",\r\n  },\r\n  actionsContainer: {\r\n    flex: 1.5,\r\n    marginRight: 8,\r\n  },\r\n  infoContainer: { flex: 1 },\r\n  actionsScroll: { flex: 1 },\r\n  mainButton: {\r\n    flex: 1,\r\n  },\r\n  smallButtonTitle: {\r\n    fontSize: 12,\r\n  },\r\n  deleteButton: {\r\n    marginLeft: 8,\r\n    paddingHorizontal: 0,\r\n    paddingVertical: 0,\r\n    height: 24,\r\n    width: 24,\r\n    borderRadius: 16,\r\n  },\r\n  quickbarSelectorButton: {\r\n    height: 24,\r\n    width: 24,\r\n    borderRadius: 12,\r\n    marginHorizontal: 4,\r\n    paddingHorizontal: 0,\r\n    paddingVertical: 0,\r\n  },\r\n  barText: {\r\n    marginHorizontal: 4,\r\n    alignItems: \"center\",\r\n  },\r\n  dragHandle: {\r\n    cursor: \"grab\",\r\n    marginRight: 8,\r\n  },\r\n  accessibilityHidden: {\r\n    width: 1,\r\n    height: 1,\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n  },\r\n});\r\n","import React, { useCallback, useMemo, useRef } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport {\r\n  EquipmentSlot,\r\n  getMaxEquippedItemsPerSlot,\r\n  loadEquipmentLoadoutFromPosition,\r\n} from \"../../backend/items/Equipment\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { Button } from \"../utility/Button\";\r\nimport { GameIcon } from \"../utility/icons/GameIcon\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\n\r\nexport function EquipmentSetButtons() {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const setNumber = state.run.lastEquipmentLoadoutModified + 1;\r\n\r\n  const equipmentSetButtonCallback = useCallback((index: number) => {\r\n    stateRef.current.apply((state) =>\r\n      loadEquipmentLoadoutFromPosition(state, index),\r\n    );\r\n  }, []);\r\n\r\n  const theme = useTheme();\r\n\r\n  const equipmentSetButtons = useMemo(() => {\r\n    return [0, 1, 2, 3].map((i) => {\r\n      const equipmentSet = state.run.equipmentLoadouts?.[i];\r\n      const icons: React.ReactNode[] = [];\r\n      for (let slot of [\r\n        EquipmentSlot.Hand,\r\n        EquipmentSlot.Body,\r\n        EquipmentSlot.Accessory,\r\n      ]) {\r\n        const capacity = getMaxEquippedItemsPerSlot(state, slot);\r\n        for (let i = 0; i < capacity; i++) {\r\n          const itemOccurrence = equipmentSet?.equipment?.[slot]?.[i];\r\n          if (itemOccurrence != null) {\r\n            const icon = (\r\n              <GameIcon\r\n                key={slot + i}\r\n                icon={itemOccurrence.itemId}\r\n                small={true}\r\n              />\r\n            );\r\n            icons.push(icon);\r\n          } else {\r\n            icons.push(<View key={slot + i} style={styles.emptyIcon} />);\r\n          }\r\n        }\r\n      }\r\n\r\n      return (\r\n        <View key={i} style={styles.buttonContainer}>\r\n          <Button\r\n            style={styles.setButton}\r\n            contentStyle={{ margin: 0, flex: 1 }}\r\n            disabled={setNumber == i + 1}\r\n            compact={true}\r\n            onPress={equipmentSetButtonCallback.bind(null, i)}\r\n          >\r\n            {t(`Set {{number}}`, { number: i + 1 })}\r\n          </Button>\r\n          <View style={styles.iconsContainer}>{icons}</View>\r\n        </View>\r\n      );\r\n    });\r\n  }, [\r\n    JSON.stringify(state.run.equipmentLoadouts),\r\n    equipmentSetButtonCallback,\r\n    setNumber,\r\n    theme,\r\n  ]);\r\n\r\n  return (\r\n    <View style={styles.equipmentSetButtonsRow}>{equipmentSetButtons}</View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  equipmentSetButtonsRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  setButton: {\r\n    width: 70,\r\n  },\r\n  setText: {\r\n    marginRight: 8,\r\n  },\r\n  smallButtonTitle: {\r\n    fontSize: 12,\r\n  },\r\n  iconsContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: 16,\r\n    width: 48,\r\n    marginTop: 2,\r\n  },\r\n  emptyIcon: {\r\n    width: 16,\r\n  },\r\n  buttonContainer: {\r\n    marginLeft: 4,\r\n    alignItems: \"center\",\r\n    width: 70,\r\n  },\r\n});\r\n","import color from \"color\";\r\nimport { useMemo } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { getThemeByElementAndDarkMode } from \"../../Themes\";\r\nimport { SYNCHRO_INITIAL_STATE } from \"../../backend/GameState\";\r\nimport {\r\n  SYNCHRO_COLS,\r\n  SYNCHRO_ROWS,\r\n  getSynchroPosition,\r\n} from \"../../backend/synchro/Synchro\";\r\nimport Styles from \"../utility/Styles\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\n\r\nexport function SynchroGridSmallDisplay(props: { gridIndex: number }) {\r\n  const state = useGameState();\r\n  const theme = useTheme();\r\n  const strategy =\r\n    state.world.synchro.grids[props.gridIndex] ?? SYNCHRO_INITIAL_STATE;\r\n\r\n  const rows = useMemo(() => {\r\n    const rows = [];\r\n    for (let j = 0; j < SYNCHRO_ROWS; j++) {\r\n      const currentRow = [];\r\n      for (let i = 0; i < SYNCHRO_COLS; i++) {\r\n        const element = getSynchroPosition(state, i, j, strategy);\r\n        let backgroundColor = undefined;\r\n        if (element != null) {\r\n          const elementTheme = getThemeByElementAndDarkMode(\r\n            element,\r\n            theme.dark,\r\n          );\r\n          backgroundColor = color(elementTheme.colors.primaryContainer)\r\n            .saturate(0.5)\r\n            .lighten(theme.dark ? 0.5 : -0.5)\r\n            .toString();\r\n        }\r\n\r\n        currentRow.push(\r\n          <View\r\n            key={i}\r\n            style={{\r\n              width: 8,\r\n              height: 8,\r\n              borderLeftWidth: 1,\r\n              borderTopWidth: 1,\r\n              borderColor: theme.colors.outline,\r\n              backgroundColor,\r\n            }}\r\n          />,\r\n        );\r\n      }\r\n      rows.push(\r\n        <View key={j} style={Styles.flexRowAlignCenter}>\r\n          {currentRow}\r\n        </View>,\r\n      );\r\n    }\r\n    return rows;\r\n  }, [JSON.stringify(strategy), theme]);\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View\r\n        style={{\r\n          borderRightWidth: 1,\r\n          borderBottomWidth: 1,\r\n          borderColor: theme.colors.outline,\r\n        }}\r\n      >\r\n        {rows}\r\n      </View>\r\n    ),\r\n    [rows, theme],\r\n  );\r\n}\r\n","import color from \"color\";\r\nimport { useCallback, useMemo, useRef } from \"react\";\r\nimport { TouchableOpacity, View } from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { setCurrentSynchroGrid } from \"../../backend/synchro/Synchro\";\r\nimport { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\nimport { SynchroGridSmallDisplay } from \"./SynchroGridSmallDisplay\";\r\n\r\nexport function SynchroGridSelector(props: { gridIndex: number }) {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const theme = useTheme();\r\n\r\n  const onPress = useCallback(\r\n    () =>\r\n      stateRef.current.apply((state) => {\r\n        state = setCurrentSynchroGrid(state, props.gridIndex);\r\n        return state;\r\n      }),\r\n    [props.gridIndex],\r\n  );\r\n\r\n  const selected = props.gridIndex == state.world.synchro.currentGrid;\r\n\r\n  return useMemo(\r\n    () => (\r\n      <TouchableOpacity\r\n        onPress={onPress}\r\n        accessible={true}\r\n        accessibilityLabel={\r\n          selected\r\n            ? t(\"Selected - Select Grid {{index}}\", {\r\n                index: formatNumber(props.gridIndex + 1),\r\n              })\r\n            : t(\"Select Grid {{index}}\", {\r\n                index: formatNumber(props.gridIndex + 1),\r\n              })\r\n        }\r\n        accessibilityRole=\"button\"\r\n      >\r\n        <View\r\n          style={{\r\n            borderRadius: 4,\r\n            backgroundColor: selected\r\n              ? color(theme.colors.primary).alpha(0.25).toString()\r\n              : undefined,\r\n            padding: 4,\r\n          }}\r\n        >\r\n          <SynchroGridSmallDisplay gridIndex={props.gridIndex} />\r\n        </View>\r\n      </TouchableOpacity>\r\n    ),\r\n    [onPress, selected, theme, props.gridIndex],\r\n  );\r\n}\r\n","import { memo } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { SYNCHRO_GRID_AMOUNT } from \"../../backend/synchro/Synchro\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport Styles from \"../utility/Styles\";\r\nimport { Text } from \"../utility/Text\";\r\nimport { SynchroGridSelector } from \"./SynchroGridSelector\";\r\n\r\nexport const SynchroGridSelectors = memo((props: {}) => {\r\n  const selectors = [];\r\n  for (let i = 0; i < SYNCHRO_GRID_AMOUNT; i++) {\r\n    selectors.push(<SynchroGridSelector key={i} gridIndex={i} />);\r\n  }\r\n\r\n  return (\r\n    <View style={Styles.flexRowAlignCenter}>\r\n      <View>\r\n        <Text h4>{t(\"Grids:\")}</Text>\r\n      </View>\r\n      <View\r\n        style={[\r\n          Styles.ml16,\r\n          Styles.flexRowAlignCenter,\r\n          { flex: 1, gap: 4, flexWrap: \"wrap\" },\r\n        ]}\r\n      >\r\n        {selectors}\r\n      </View>\r\n    </View>\r\n  );\r\n});\r\n","import { useCallback, useMemo, useRef } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { loadAutocastStrategy } from \"../../backend/autocast/Autocast\";\r\nimport { keysOf } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { Button } from \"./Button\";\r\nimport { Text } from \"./Text\";\r\nimport { useGameState } from \"./useGameState\";\r\n\r\nexport function AutocastLoadoutLoadContainer(props: {}) {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const loadoutObjects = state.global.autocast.savedStrategies ?? [];\r\n  const loadPosition = useCallback((position: number) => {\r\n    stateRef.current.apply((state) => loadAutocastStrategy(state, position));\r\n  }, []);\r\n  return useMemo(\r\n    () => (\r\n      <View style={styles.loadoutsLoadRow}>\r\n        <View style={styles.loadTextContainer}>\r\n          <Text>{t(\"Load:\")}</Text>\r\n        </View>\r\n        {keysOf(loadoutObjects).length > 0 ? (\r\n          keysOf(loadoutObjects).map((key) => {\r\n            const loadoutObject = loadoutObjects[key];\r\n            if (loadoutObject == null) {\r\n              return null;\r\n            }\r\n            const name =\r\n              loadoutObject?.name != \"\" && loadoutObject?.name != null\r\n                ? loadoutObject?.name\r\n                : t(\"Slot {{slot}}\", {\r\n                    slot:\r\n                      (typeof key === \"string\" ? Number.parseInt(key) : key) +\r\n                      1,\r\n                  });\r\n            return (\r\n              <Button\r\n                key={key}\r\n                style={styles.loadButton}\r\n                labelStyle={styles.smallButtonTitle}\r\n                compact={true}\r\n                onPress={loadPosition.bind(null, key)}\r\n              >\r\n                {name}\r\n              </Button>\r\n            );\r\n          })\r\n        ) : (\r\n          <Text style={styles.noLoadoutsText}>\r\n            {t(\"No loadouts have been saved yet!\")}\r\n          </Text>\r\n        )}\r\n      </View>\r\n    ),\r\n    [JSON.stringify(loadoutObjects), loadPosition],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  loadoutsLoadRow: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    alignItems: \"center\",\r\n    gap: 8,\r\n  },\r\n  loadButton: {},\r\n  loadTextContainer: {\r\n    marginRight: 8,\r\n  },\r\n  noLoadoutsText: {\r\n    fontStyle: \"italic\",\r\n  },\r\n  smallButtonTitle: {\r\n    fontSize: 12,\r\n  },\r\n});\r\n","import React, { useCallback, useMemo, useRef } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { isSynchroUnlocked } from \"../../backend/synchro/Synchro\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { EquipmentSetButtons } from \"../inventory/EquipmentSetButtons\";\r\nimport { SynchroGridSelectors } from \"../synchro/SynchroGridSelectors\";\r\nimport { AutocastLoadoutLoadContainer } from \"../utility/AutocastLoadoutLoadContainer\";\r\nimport CategoryContainer from \"../utility/CategoryContainer\";\r\nimport { CheckBox } from \"../utility/CheckBox\";\r\nimport { Text } from \"../utility/Text\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\n\r\nexport function StrategyContainer() {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const theme = useTheme();\r\n\r\n  const lastLoadoutUsed =\r\n    state.global.autocast.savedStrategies?.[\r\n      state.global.autocast.lastStrategyIndex\r\n    ]?.name ?? null;\r\n\r\n  const autoNextFloorCallback = useCallback(() => {\r\n    stateRef.current.apply((state) => {\r\n      state.run.autoAdvanceToNextFloor = !state.run.autoAdvanceToNextFloor;\r\n      return state;\r\n    });\r\n  }, []);\r\n\r\n  const autoBossCallback = useCallback(() => {\r\n    stateRef.current.apply((state) => {\r\n      state.run.autoAttemptBoss = !state.run.autoAttemptBoss;\r\n      return state;\r\n    });\r\n  }, []);\r\n\r\n  const fullyHealedCallback = useCallback(() => {\r\n    stateRef.current.apply((state) => {\r\n      state.options.waitUntilFullyHealedBeforeExplore =\r\n        !state.options.waitUntilFullyHealedBeforeExplore;\r\n      return state;\r\n    });\r\n  }, []);\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View style={styles.mainContainer}>\r\n        <View style={styles.actionsContainer}>\r\n          <CategoryContainer\r\n            title={t(\"Equipment Sets\")}\r\n            containerStyle={styles.equipmentContainer}\r\n            dividerColor={theme.colors.surfaceDisabled}\r\n          >\r\n            <View style={styles.categoryContents}>\r\n              <EquipmentSetButtons />\r\n            </View>\r\n          </CategoryContainer>\r\n          {isSynchroUnlocked(state) && (\r\n            <CategoryContainer\r\n              title={t(\"Synchro Grids\")}\r\n              containerStyle={styles.autocastContainer}\r\n              dividerColor={theme.colors.surfaceDisabled}\r\n            >\r\n              <View style={styles.categoryContents}>\r\n                <SynchroGridSelectors />\r\n              </View>\r\n            </CategoryContainer>\r\n          )}\r\n          <CategoryContainer\r\n            title={t(\"Wizard Strategy\")}\r\n            containerStyle={styles.autocastContainer}\r\n            dividerColor={theme.colors.surfaceDisabled}\r\n          >\r\n            <View style={styles.categoryContents}>\r\n              <AutocastLoadoutLoadContainer />\r\n              {lastLoadoutUsed != null && (\r\n                <View style={styles.lastLoadedContainer}>\r\n                  <Text>\r\n                    {t(\"Last loaded: {{lastLoadoutUsed}}\", { lastLoadoutUsed })}\r\n                  </Text>\r\n                </View>\r\n              )}\r\n            </View>\r\n          </CategoryContainer>\r\n          <CategoryContainer\r\n            title={t(\"Exploration Config\")}\r\n            containerStyle={styles.autocastContainer}\r\n            dividerColor={theme.colors.surfaceDisabled}\r\n          >\r\n            <View style={styles.categoryContents}>\r\n              <View>\r\n                <CheckBox\r\n                  title={t(\"Automatically advance to the next floor\")}\r\n                  checked={state.run.autoAdvanceToNextFloor}\r\n                  onPress={autoNextFloorCallback}\r\n                  containerStyle={styles.checkboxContainer}\r\n                />\r\n              </View>\r\n              <View>\r\n                <CheckBox\r\n                  title={t(\"Automatically attempt fighting the boss\")}\r\n                  checked={state.run.autoAttemptBoss}\r\n                  onPress={autoBossCallback}\r\n                  containerStyle={styles.checkboxContainer}\r\n                />\r\n              </View>\r\n              <View>\r\n                <CheckBox\r\n                  title={t(\"Wait until fully healed before exploring\")}\r\n                  checked={state.options.waitUntilFullyHealedBeforeExplore}\r\n                  onPress={fullyHealedCallback}\r\n                  containerStyle={styles.checkboxContainer}\r\n                />\r\n              </View>\r\n            </View>\r\n          </CategoryContainer>\r\n        </View>\r\n      </View>\r\n    ),\r\n    [\r\n      lastLoadoutUsed,\r\n      state.run.autoAdvanceToNextFloor,\r\n      state.run.autoAttemptBoss,\r\n      state.options.waitUntilFullyHealedBeforeExplore,\r\n      isSynchroUnlocked(state),\r\n      theme,\r\n    ],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  mainContainer: {\r\n    height: \"100%\",\r\n  },\r\n  actionsContainer: {\r\n    flex: 1.5,\r\n    marginRight: 8,\r\n  },\r\n  equipmentContainer: {\r\n    paddingTop: 0,\r\n  },\r\n  autocastContainer: {\r\n    paddingTop: 0,\r\n    marginTop: 16,\r\n  },\r\n  categoryContents: {\r\n    marginTop: 8,\r\n  },\r\n  lastLoadedContainer: {\r\n    marginTop: 8,\r\n  },\r\n  checkboxContainer: {\r\n    marginLeft: 0,\r\n    marginTop: 8,\r\n    padding: 0,\r\n  },\r\n});\r\n","import React, { useCallback, useContext, useMemo, useRef } from \"react\";\r\nimport {\r\n  Platform,\r\n  ScrollView,\r\n  StyleSheet,\r\n  TouchableWithoutFeedback,\r\n  View,\r\n  useWindowDimensions,\r\n} from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\r\nimport { clearFlag, hasFlag, setFlag } from \"../../backend/Flags\";\r\nimport { GameState } from \"../../backend/GameState\";\r\nimport { ActionArea } from \"../../backend/action/ActionAreas\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport SpellsContainer from \"../spells/SpellsContainer\";\r\nimport { AccessibilityContext } from \"../utility/AccessibilityContext\";\r\nimport { GameStateFreezer } from \"../utility/GameStateFreezer\";\r\nimport { KeyboardListener } from \"../utility/KeyboardListener\";\r\nimport { Text } from \"../utility/Text\";\r\nimport { UIContext, useUIStateFromContext } from \"../utility/UIContext\";\r\nimport { VisibilityContext } from \"../utility/VisibilityContext\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\nimport ExplorationPouch from \"./ExplorationPouch\";\r\nimport { QuickbarContainer } from \"./QuickbarContainer\";\r\nimport { StrategyContainer } from \"./StrategyContainer\";\r\n\r\nexport function ExplorationBottomComponent(props: { containerHeight: number }) {\r\n  const uiContext = useContext(UIContext);\r\n  const [openedTab, setOpenedTab] = useUIStateFromContext(\r\n    uiContext,\r\n    \"exploration_bottom_component_tab\",\r\n    \"\",\r\n  );\r\n  const theme = useTheme();\r\n  const visible = useContext(VisibilityContext);\r\n  const { height, width } = useWindowDimensions();\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n  const isBottomMenuEnabled = state.options.enableBottomMenu;\r\n\r\n  const insets = useSafeAreaInsets();\r\n\r\n  const accessibilityContext = useContext(AccessibilityContext);\r\n  const isPaused = hasFlag(state, \"combat_paused_magic_tap\");\r\n\r\n  const onPause = useCallback(() => {\r\n    stateRef.current.apply((state: GameState) =>\r\n      isPaused\r\n        ? clearFlag(\"combat_paused_magic_tap\")(state)\r\n        : setFlag(\"combat_paused_magic_tap\")(state),\r\n    );\r\n    accessibilityContext.announceForAccessibility(\r\n      isPaused ? t(\"Resuming Exploration\") : t(\"Pausing Exploration\"),\r\n    );\r\n  }, [accessibilityContext, isPaused]);\r\n\r\n  const onKeyboard = useCallback(\r\n    (ev: KeyboardEvent) => {\r\n      if (visible && ev.shiftKey && ev.ctrlKey && ev.key == \"X\") {\r\n        onPause();\r\n      }\r\n    },\r\n    [onPause, visible],\r\n  );\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View>\r\n        <View\r\n          style={[\r\n            styles.mainComponent,\r\n            {\r\n              backgroundColor: theme.colors.secondaryContainer,\r\n              borderColor: theme.colors.outlineVariant,\r\n            },\r\n            !openedTab && { display: \"none\" },\r\n          ]}\r\n        >\r\n          {openedTab == \"Inventory\" && (\r\n            <ScrollView\r\n              style={[\r\n                styles.mainScrollView,\r\n                {\r\n                  height: Math.max(\r\n                    Math.min(props.containerHeight - 434, 350),\r\n                    168,\r\n                  ),\r\n                },\r\n              ]}\r\n              nestedScrollEnabled={true}\r\n            >\r\n              <View\r\n                style={styles.accessibilityHidden}\r\n                accessible={true}\r\n                accessibilityLabel={t(\"Inventory Tab\")}\r\n                accessibilityRole=\"header\"\r\n                accessibilityElementsHidden={false}\r\n              />\r\n              <ExplorationPouch />\r\n            </ScrollView>\r\n          )}\r\n          <ScrollView\r\n            style={[\r\n              styles.mainScrollView,\r\n              {\r\n                height: Math.max(\r\n                  Math.min(props.containerHeight - 434, 350),\r\n                  168,\r\n                ),\r\n              },\r\n              openedTab != \"Spells\" && { display: \"none\" },\r\n            ]}\r\n          >\r\n            <View\r\n              style={styles.accessibilityHidden}\r\n              accessible={true}\r\n              accessibilityLabel={t(\"Spells Tab\")}\r\n              accessibilityRole=\"header\"\r\n              accessibilityElementsHidden={false}\r\n            />\r\n            <GameStateFreezer isVisible={openedTab == \"Spells\"}>\r\n              <SpellsContainer\r\n                uiKey=\"ExplorationBottomContainer\"\r\n                area={ActionArea.EXPLORATION}\r\n                hideRecent={true}\r\n                showAddToQuickbar={true}\r\n                onlyBySchool={true}\r\n                hideTitle={true}\r\n                isVisible={openedTab == \"Spells\"}\r\n                dividerColor={theme.colors.surfaceDisabled}\r\n              />\r\n            </GameStateFreezer>\r\n          </ScrollView>\r\n          {openedTab == \"Quickbar\" && (\r\n            <View\r\n              style={[\r\n                styles.quickbarScrollView,\r\n                {\r\n                  height: Math.max(\r\n                    Math.min(props.containerHeight - 434, 350),\r\n                    168,\r\n                  ),\r\n                },\r\n              ]}\r\n            >\r\n              <View\r\n                style={styles.accessibilityHidden}\r\n                accessible={true}\r\n                accessibilityLabel={t(\"Quickbar Tab\")}\r\n                accessibilityRole=\"header\"\r\n                accessibilityElementsHidden={false}\r\n              />\r\n              <QuickbarContainer />\r\n            </View>\r\n          )}\r\n          {openedTab == \"Strategy\" && (\r\n            <ScrollView\r\n              style={[\r\n                styles.mainScrollView,\r\n                {\r\n                  height: Math.max(\r\n                    Math.min(props.containerHeight - 434, 350),\r\n                    150,\r\n                  ),\r\n                },\r\n                openedTab != \"Strategy\" && { display: \"none\" },\r\n              ]}\r\n            >\r\n              <View\r\n                style={styles.accessibilityHidden}\r\n                accessible={true}\r\n                accessibilityLabel={t(\"Strategy Tab\")}\r\n                accessibilityRole=\"header\"\r\n                accessibilityElementsHidden={false}\r\n              />\r\n              <StrategyContainer />\r\n            </ScrollView>\r\n          )}\r\n        </View>\r\n        <View style={styles.tabsContainer}>\r\n          <View\r\n            style={styles.accessibilityHidden}\r\n            accessible={true}\r\n            accessibilityLabel=\"Exploration Tabs\"\r\n            accessibilityRole=\"header\"\r\n            accessibilityElementsHidden={false}\r\n          />\r\n          <TouchableWithoutFeedback\r\n            onPress={onPause}\r\n            accessibilityElementsHidden={false}\r\n          >\r\n            <View\r\n              accessibilityLabel={\r\n                isPaused\r\n                  ? t(\"Resume Exploration {{shortcut}}\", {\r\n                      shortcut:\r\n                        Platform.OS === \"web\"\r\n                          ? t(\"(Shortcut Control + Shift + X)\")\r\n                          : \"\",\r\n                    })\r\n                  : t(\"Pause Exploration {{shortcut}}\", {\r\n                      shortcut:\r\n                        Platform.OS === \"web\"\r\n                          ? t(\"(Shortcut Control + Shift + X)\")\r\n                          : \"\",\r\n                    })\r\n              }\r\n              accessibilityRole=\"button\"\r\n              style={[styles.accessibilityHidden, { left: 1 }]}\r\n            />\r\n          </TouchableWithoutFeedback>\r\n          <TouchableWithoutFeedback\r\n            onPress={() => {\r\n              setOpenedTab(\"\");\r\n            }}\r\n            accessibilityElementsHidden={false}\r\n          >\r\n            <View\r\n              accessibilityLabel={t(\"Exploration Log - Exploration\")}\r\n              accessibilityRole=\"tab\"\r\n              style={[styles.accessibilityHidden, { left: 2 }]}\r\n            />\r\n          </TouchableWithoutFeedback>\r\n          <KeyboardListener callback={onKeyboard} />\r\n          <TouchableWithoutFeedback\r\n            onPress={() => {\r\n              if (openedTab != \"Inventory\") {\r\n                setOpenedTab(\"Inventory\");\r\n              } else {\r\n                setOpenedTab(\"\");\r\n              }\r\n            }}\r\n            accessibilityLabel={t(\"Items - Exploration\")}\r\n            accessibilityRole=\"tab\"\r\n          >\r\n            <View\r\n              style={[\r\n                styles.tab,\r\n                {\r\n                  backgroundColor: theme.colors.secondaryContainer,\r\n                  borderColor: theme.colors.outlineVariant,\r\n                },\r\n                openedTab == \"Inventory\" && styles.selectedTab,\r\n              ]}\r\n            >\r\n              <Text h3>{t(\"Items\")}</Text>\r\n            </View>\r\n          </TouchableWithoutFeedback>\r\n          <TouchableWithoutFeedback\r\n            onPress={() => {\r\n              if (openedTab != \"Spells\") {\r\n                setOpenedTab(\"Spells\");\r\n              } else {\r\n                setOpenedTab(\"\");\r\n              }\r\n            }}\r\n            accessibilityLabel={t(\"Spells - Exploration\")}\r\n            accessibilityRole=\"tab\"\r\n          >\r\n            <View\r\n              style={[\r\n                styles.tab,\r\n                {\r\n                  backgroundColor: theme.colors.secondaryContainer,\r\n                  borderColor: theme.colors.outlineVariant,\r\n                },\r\n                openedTab == \"Spells\" && styles.selectedTab,\r\n              ]}\r\n            >\r\n              <Text h3>{t(\"Spells\")}</Text>\r\n            </View>\r\n          </TouchableWithoutFeedback>\r\n          <TouchableWithoutFeedback\r\n            onPress={() => {\r\n              if (openedTab != \"Strategy\") {\r\n                setOpenedTab(\"Strategy\");\r\n              } else {\r\n                setOpenedTab(\"\");\r\n              }\r\n            }}\r\n            accessibilityLabel={t(\"Strategy - Exploration\")}\r\n            accessibilityRole=\"tab\"\r\n          >\r\n            <View\r\n              style={[\r\n                styles.tab,\r\n                {\r\n                  backgroundColor: theme.colors.secondaryContainer,\r\n                  borderColor: theme.colors.outlineVariant,\r\n                },\r\n                openedTab == \"Strategy\" && styles.selectedTab,\r\n              ]}\r\n            >\r\n              <Text h3>{t(\"Strategy\")}</Text>\r\n            </View>\r\n          </TouchableWithoutFeedback>\r\n          <TouchableWithoutFeedback\r\n            onPress={() => {\r\n              if (openedTab != \"Quickbar\") {\r\n                setOpenedTab(\"Quickbar\");\r\n              } else {\r\n                setOpenedTab(\"\");\r\n              }\r\n            }}\r\n            accessibilityLabel={t(\"Quickbar - Exploration\")}\r\n            accessibilityRole=\"tab\"\r\n          >\r\n            <View\r\n              style={[\r\n                styles.tab,\r\n                {\r\n                  backgroundColor: theme.colors.secondaryContainer,\r\n                  borderColor: theme.colors.outlineVariant,\r\n                },\r\n                openedTab == \"Quickbar\" && styles.selectedTab,\r\n              ]}\r\n            >\r\n              <Text h3>{t(\"Quickbar\")}</Text>\r\n            </View>\r\n          </TouchableWithoutFeedback>\r\n        </View>\r\n      </View>\r\n    ),\r\n    [\r\n      openedTab,\r\n      setOpenedTab,\r\n      theme,\r\n      visible,\r\n      props.containerHeight,\r\n      onPause,\r\n      isPaused,\r\n    ],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  mainComponent: {\r\n    padding: 8,\r\n    marginHorizontal: 2,\r\n    borderWidth: StyleSheet.hairlineWidth,\r\n  },\r\n  mainScrollView: { height: 296 },\r\n  quickbarScrollView: { height: 226, overflow: \"hidden\" },\r\n  tabsContainer: {\r\n    marginHorizontal: 8,\r\n    marginBottom: 8,\r\n    flexDirection: \"row\",\r\n    alignItems: \"flex-end\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  tab: {\r\n    borderWidth: StyleSheet.hairlineWidth,\r\n    borderRadius: 8,\r\n    padding: 8,\r\n    top: -1,\r\n    cursor: \"pointer\",\r\n  },\r\n  selectedTab: {\r\n    borderTopLeftRadius: 0,\r\n    borderTopRightRadius: 0,\r\n    borderTopWidth: 0,\r\n    paddingTop: 16,\r\n    position: \"relative\",\r\n  },\r\n  accessibilityHidden: {\r\n    width: 1,\r\n    height: 1,\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { View } from \"react-native\";\r\nimport {\r\n  getExplorationStartTime,\r\n  getExplorationTimeRequirementSec,\r\n} from \"../../backend/exploration/Exploration\";\r\nimport { getSecondsPlayed } from \"../../backend/timetick/TotalTimePlayed\";\r\nimport { ProgressBar } from \"../utility/ProgressBar\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\n\r\nexport function ExplorationProgressDisplay() {\r\n  const state = useGameState();\r\n  const currentTime = getSecondsPlayed(state);\r\n  const actionStartTime = getExplorationStartTime(state);\r\n  const actionTotalTime = getExplorationTimeRequirementSec(state);\r\n  const progress = (currentTime - actionStartTime) / actionTotalTime;\r\n  return (\r\n    <View style={{ width: 120 }}>\r\n      <ProgressBar progress={progress} />\r\n    </View>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { ActivityIndicator } from \"react-native-paper\";\r\nimport {\r\n  getCurrentFamiliarAction,\r\n  getFamiliarActionProgress,\r\n} from \"../../backend/exploration/Exploration\";\r\nimport {\r\n  FamiliarCompanionStatusType,\r\n  getCurrentCompanionData,\r\n} from \"../../backend/familiars/Familiar\";\r\nimport { ProgressBar } from \"../utility/ProgressBar\";\r\nimport Styles from \"../utility/Styles\";\r\nimport { Text } from \"../utility/Text\";\r\nimport { GameIcon } from \"../utility/icons/GameIcon\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\n\r\nexport function FamiliarActionDisplay() {\r\n  const state = useGameState();\r\n  const currentFamiliarAction = getCurrentFamiliarAction(state);\r\n  const ready = [\r\n    FamiliarCompanionStatusType.Exploring,\r\n    FamiliarCompanionStatusType.Combat,\r\n  ].includes(getCurrentCompanionData(state).status.companionStatus);\r\n  const progress = getFamiliarActionProgress(state);\r\n\r\n  return useMemo(() => {\r\n    if (!ready) {\r\n      return (\r\n        <View style={[styles.row, Styles.flexCenter]}>\r\n          <ActivityIndicator size=\"small\" />\r\n        </View>\r\n      );\r\n    }\r\n    if (!currentFamiliarAction) {\r\n      return (\r\n        <View style={styles.row}>\r\n          <GameIcon icon=\"attack\" style={styles.icon} />\r\n          <View style={styles.progressBarContainer}>\r\n            <Text style={styles.idleTextContainer}>-</Text>\r\n            <ProgressBar progress={0} style={styles.progressBar} />\r\n          </View>\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <View style={styles.row}>\r\n        <GameIcon icon=\"attack\" style={styles.icon} />\r\n        <View style={styles.progressBarContainer}>\r\n          <Text numberOfLines={1} style={styles.markdownContainer}>\r\n            {currentFamiliarAction.name}\r\n          </Text>\r\n          <ProgressBar progress={progress} style={styles.progressBar} />\r\n        </View>\r\n      </View>\r\n    );\r\n  }, [currentFamiliarAction?.name, progress, ready]);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  row: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    width: 148,\r\n  },\r\n  icon: {\r\n    marginRight: 4,\r\n    height: 24,\r\n    width: 24,\r\n  },\r\n  progressBarContainer: {\r\n    flex: 1,\r\n    marginTop: -5,\r\n  },\r\n  idleTextContainer: {\r\n    height: 21,\r\n  },\r\n  markdownContainer: {\r\n    height: 21,\r\n  },\r\n  progressBar: {\r\n    width: 120,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { AttackTarget } from \"../../backend/exploration/AttackTarget\";\r\nimport {\r\n  getCurrentCompanionClass,\r\n  getCurrentCompanionData,\r\n} from \"../../backend/familiars/Familiar\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\nimport { HPBar } from \"./HPBar\";\r\n\r\nexport function FamiliarHPBar() {\r\n  const state = useGameState();\r\n  const currentHP = getCurrentCompanionData(state)?.status?.currentHp || 0;\r\n  let maxHP =\r\n    getCurrentCompanionClass(state)?.getStatsForCompanion(state)?.maxHP || 1;\r\n  return (\r\n    <HPBar\r\n      empty={false}\r\n      current={currentHP}\r\n      max={maxHP}\r\n      actionTarget={AttackTarget.Familiar}\r\n    />\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { Image, ImageSourcePropType, StyleSheet, View } from \"react-native\";\r\nimport { sanitizeImageSourceForElectron } from \"../utility/icons/IconUtils\";\r\n\r\nexport function FamiliarSpriteTile(props: {\r\n  sprite?: ImageSourcePropType;\r\n  showDead?: boolean;\r\n  showUndead?: boolean;\r\n}) {\r\n  return useMemo(\r\n    () => (\r\n      <View style={styles.tile}>\r\n        {props.sprite && props.showUndead && (\r\n          <Image\r\n            resizeMode=\"contain\"\r\n            source={sanitizeImageSourceForElectron(props.sprite)}\r\n            style={[\r\n              styles.image,\r\n              {\r\n                tintColor: \"#444\",\r\n              },\r\n            ]}\r\n          />\r\n        )}\r\n        {props.sprite && (\r\n          <Image\r\n            resizeMode=\"contain\"\r\n            source={sanitizeImageSourceForElectron(props.sprite)}\r\n            style={[\r\n              styles.image,\r\n              {\r\n                opacity: props.showUndead ? 0.15 : props.showDead ? 0.25 : 1.0,\r\n                position: \"absolute\",\r\n              },\r\n            ]}\r\n          />\r\n        )}\r\n      </View>\r\n    ),\r\n    [props.sprite, props.showDead, props.showUndead],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  tile: {\r\n    height: 24,\r\n    width: 24,\r\n    justifyContent: \"center\",\r\n    alignItems: \"stretch\",\r\n  },\r\n  image: {\r\n    height: 22,\r\n    width: 22,\r\n  },\r\n});\r\n","import React, { useMemo } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { getPlayerActionProgress } from \"../../backend/exploration/Exploration\";\r\nimport { ExplorationStatus } from \"../../backend/exploration/ExplorationStatus\";\r\nimport { getExplorationStatus } from \"../../backend/exploration/ExplorationUtils\";\r\nimport { ProgressBar } from \"../utility/ProgressBar\";\r\nimport { GameIcon } from \"../utility/icons/GameIcon\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\n\r\nexport function PlayerActionDisplay() {\r\n  const state = useGameState();\r\n  const inCombat = getExplorationStatus(state) == ExplorationStatus.Combat;\r\n  let progress = 0;\r\n  if (inCombat) {\r\n    progress = getPlayerActionProgress(state);\r\n  }\r\n  return useMemo(\r\n    () => (\r\n      <View style={styles.row}>\r\n        <GameIcon icon=\"attack\" style={styles.icon} />\r\n        <ProgressBar progress={progress} style={{ width: 120 }} />\r\n      </View>\r\n    ),\r\n    [progress],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  icon: {\r\n    marginRight: 4,\r\n    height: 24,\r\n    width: 24,\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { AttackTarget } from \"../../backend/exploration/AttackTarget\";\r\nimport { calculatePlayerMaxHP } from \"../../backend/exploration/CombatStats\";\r\nimport { getCurrentPlayerHP } from \"../../backend/exploration/Exploration\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\nimport { HPBar } from \"./HPBar\";\r\n\r\nexport function PlayerHPBar() {\r\n  const state = useGameState();\r\n  const currentHP = getCurrentPlayerHP(state);\r\n  const maxHP = calculatePlayerMaxHP(state);\r\n  return (\r\n    <HPBar\r\n      empty={false}\r\n      current={currentHP}\r\n      max={maxHP}\r\n      actionTarget={AttackTarget.Player}\r\n    />\r\n  );\r\n}\r\n","import moment from \"moment\";\r\nimport React, { useMemo } from \"react\";\r\nimport { ScrollView, View } from \"react-native\";\r\nimport { getMessageLog } from \"../../backend/exploration/Exploration\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { Markdown } from \"../utility/Markdown\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\n\r\nexport function PlayerMessageLog() {\r\n  const state = useGameState();\r\n  const messageLog = getMessageLog(state);\r\n  return useMemo(\r\n    () => (\r\n      <ScrollView>\r\n        {messageLog.map((logItem) => {\r\n          const key: string = logItem.id;\r\n          return (\r\n            <View key={key}>\r\n              <Markdown\r\n                accessibilityLabel={\r\n                  logItem.accessibleMessage ?? logItem.message\r\n                }\r\n              >\r\n                {logItem.realTimestamp\r\n                  ? t(\"[{{time}}] {{message}}\", {\r\n                      time: moment(logItem.realTimestamp).format(\"h:mm:ss A\"),\r\n                      message: logItem.message,\r\n                    })\r\n                  : logItem.message}\r\n              </Markdown>\r\n            </View>\r\n          );\r\n        })}\r\n      </ScrollView>\r\n    ),\r\n    [messageLog.map((logItem) => logItem.id).join()],\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport {\r\n  Resource,\r\n  getResourceAmount,\r\n  getResourceCap,\r\n  getResourceInfo,\r\n  getSortedResourceKeys,\r\n} from \"../../backend/Resources\";\r\nimport { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { Text } from \"./Text\";\r\nimport { GameIcon } from \"./icons/GameIcon\";\r\nimport { useGameState } from \"./useGameState\";\r\n\r\nconst EPSILON = 1e-6;\r\n\r\nfunction ResourceItem(props: {\r\n  resource: Resource;\r\n  current: number;\r\n  cap: number;\r\n}) {\r\n  const resourceInfo = getResourceInfo(props.resource);\r\n  const isCapped = props.current >= props.cap - EPSILON;\r\n  const icon = useMemo(\r\n    () => <GameIcon icon={resourceInfo.icon} style={styles.icon} small />,\r\n    [resourceInfo.icon],\r\n  );\r\n  const theme = useTheme();\r\n  const textStyle = useMemo(\r\n    () => isCapped && { color: theme.colors.tertiary },\r\n    [isCapped, theme],\r\n  );\r\n  const textContents = `${formatNumber(props.current, {\r\n    showDecimals: true,\r\n  })}/${formatNumber(props.cap)}`;\r\n  const text = useMemo(\r\n    () => (\r\n      <Text style={textStyle} doNotScaleFonts={true}>\r\n        {textContents}\r\n      </Text>\r\n    ),\r\n    [textContents, textStyle],\r\n  );\r\n  return (\r\n    <View style={styles.item} accessible={true}>\r\n      {icon}\r\n      {text}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst ResourceItemMemo = React.memo(ResourceItem);\r\n\r\nexport function BottomResourceViewer(props: { isVisible?: boolean }) {\r\n  const state = useGameState();\r\n  const resourceKeys = getSortedResourceKeys(state) as Array<Resource>;\r\n  const rows = useMemo(\r\n    () =>\r\n      resourceKeys.map((resourceName) => {\r\n        if (resourceName == Resource.Mana) {\r\n          return null;\r\n        }\r\n        return (\r\n          <ResourceItemMemo\r\n            resource={resourceName}\r\n            current={getResourceAmount(state, resourceName)}\r\n            cap={getResourceCap(state, resourceName)}\r\n            key={resourceName}\r\n          />\r\n        );\r\n      }),\r\n    [props.isVisible !== false ? state : false],\r\n  );\r\n  return <View style={styles.container}>{rows}</View>;\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  item: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    width: 106,\r\n  },\r\n  inlineRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  icon: {\r\n    marginRight: 2,\r\n  },\r\n});\r\n","import { MaterialIcons } from \"@expo/vector-icons\";\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport {\r\n  LayoutChangeEvent,\r\n  ScrollView,\r\n  StyleSheet,\r\n  View,\r\n  useWindowDimensions,\r\n} from \"react-native\";\r\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\r\nimport { ActivityIndicator, useTheme } from \"react-native-paper\";\r\nimport { clearFlag, hasFlag } from \"../backend/Flags\";\r\nimport { AttackTarget } from \"../backend/exploration/AttackTarget\";\r\nimport { calculatePlayerMaxHP } from \"../backend/exploration/CombatStats\";\r\nimport {\r\n  endExploration,\r\n  getCurrentDungeonFloor,\r\n  getCurrentEnemyHP,\r\n  getCurrentFamiliarHP,\r\n  getCurrentPlayerHP,\r\n  getSuccessfulExplorationsForFloor,\r\n  pauseExploration,\r\n  resumeExploration,\r\n  startBossExploration,\r\n  startExplorationOnFloor,\r\n} from \"../backend/exploration/Exploration\";\r\nimport { ExplorationStatus } from \"../backend/exploration/ExplorationStatus\";\r\nimport { getExplorationStatus } from \"../backend/exploration/ExplorationUtils\";\r\nimport {\r\n  hasCurrentActiveCompanion,\r\n  hasCurrentCompanion,\r\n} from \"../backend/exploration/Summoning\";\r\nimport { Dungeon } from \"../backend/exploration/dungeons/Dungeon\";\r\nimport { DungeonFloor } from \"../backend/exploration/dungeons/DungeonFloor\";\r\nimport {\r\n  getUnlockedDungeons,\r\n  isDungeonFloorCompletedThisRun,\r\n} from \"../backend/exploration/dungeons/Dungeons\";\r\nimport { getCurrentEnemy } from \"../backend/exploration/enemies/Enemies\";\r\nimport {\r\n  FamiliarCompanionStatusType,\r\n  getCurrentCompanionClass,\r\n  getCurrentCompanionData,\r\n} from \"../backend/familiars/Familiar\";\r\nimport { shouldShowGrayscaleFamiliar } from \"../backend/rituals/NecromancyRitual\";\r\nimport { formatNumber } from \"../utils/FormattingUtils\";\r\nimport { t } from \"../utils/I18n\";\r\nimport { EnemyActionDisplay } from \"./exploration/EnemyActionDisplay\";\r\nimport { EnemyHPBar } from \"./exploration/EnemyHPBar\";\r\nimport { EnemySpriteTile } from \"./exploration/EnemySpriteTile\";\r\nimport { ExplorationBottomComponent } from \"./exploration/ExplorationBottomComponent\";\r\nimport { ExplorationProgressDisplay } from \"./exploration/ExplorationProgressDisplay\";\r\nimport { FamiliarActionDisplay } from \"./exploration/FamiliarActionDisplay\";\r\nimport { FamiliarHPBar } from \"./exploration/FamiliarHPBar\";\r\nimport { FamiliarSpriteTile } from \"./exploration/FamiliarSpriteTile\";\r\nimport { PlayerActionDisplay } from \"./exploration/PlayerActionDisplay\";\r\nimport { PlayerHPBar } from \"./exploration/PlayerHPBar\";\r\nimport { PlayerMessageLog } from \"./exploration/PlayerMessageLog\";\r\nimport { AccessibilityContext } from \"./utility/AccessibilityContext\";\r\nimport { BottomResourceViewer } from \"./utility/BottomResourceViewer\";\r\nimport { Button } from \"./utility/Button\";\r\nimport CategoryContainer from \"./utility/CategoryContainer\";\r\nimport Divider from \"./utility/Divider\";\r\nimport { GameStateFreezer } from \"./utility/GameStateFreezer\";\r\nimport { KeyboardListener } from \"./utility/KeyboardListener\";\r\nimport Styles from \"./utility/Styles\";\r\nimport { TemporaryEffectsViewer } from \"./utility/TemporaryEffectsViewer\";\r\nimport { Text } from \"./utility/Text\";\r\nimport { UIContext } from \"./utility/UIContext\";\r\nimport { VisibilityContext } from \"./utility/VisibilityContext\";\r\nimport { GameIcon } from \"./utility/icons/GameIcon\";\r\nimport { useGameState } from \"./utility/useGameState\";\r\n\r\nfunction ExplorationRow(props: { floor: DungeonFloor }) {\r\n  const floor = props.floor;\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n  const isBossUnlocked =\r\n    floor.canFightBoss(state) && floor.getBoss(state) != null;\r\n  const isFloorCompleted = isDungeonFloorCompletedThisRun(state, floor);\r\n  const theme = useTheme();\r\n  return useMemo(\r\n    () => (\r\n      <View>\r\n        <View style={styles.noneRow}>\r\n          <View>\r\n            <Text style={styles.noneFloorText}>{floor.getFloorName()}</Text>\r\n            <View style={styles.noneStatusRow}>\r\n              <Text>{t(\"Status: \")}</Text>\r\n              {isBossUnlocked ? (\r\n                <MaterialIcons\r\n                  name=\"check\"\r\n                  size={24}\r\n                  style={styles.noneIcon}\r\n                  color={\r\n                    isFloorCompleted\r\n                      ? theme.dark\r\n                        ? theme.colors.primaryContainer\r\n                        : theme.colors.primary\r\n                      : theme.colors.onBackground\r\n                  }\r\n                />\r\n              ) : (\r\n                <MaterialIcons\r\n                  name=\"lock-open\"\r\n                  size={24}\r\n                  style={styles.noneIcon}\r\n                  color={theme.colors.onBackground}\r\n                />\r\n              )}\r\n              <Text>\r\n                {isFloorCompleted\r\n                  ? t(\"Completed\")\r\n                  : isBossUnlocked\r\n                  ? t(\"Boss Unlocked\")\r\n                  : t(\"Open for Exploration\")}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n          <Button\r\n            onPress={() =>\r\n              stateRef.current.apply((state) => {\r\n                state = startExplorationOnFloor(state, floor);\r\n                if (floor.getNextFloor(state)?.isUnlocked?.(state)) {\r\n                  state.run.autoAdvanceToNextFloor = false;\r\n                }\r\n                return state;\r\n              })\r\n            }\r\n          >\r\n            {t(\"Explore\")}\r\n          </Button>\r\n        </View>\r\n      </View>\r\n    ),\r\n    [isFloorCompleted, isBossUnlocked, theme, floor.getFloorName()],\r\n  );\r\n}\r\n\r\nfunction ExplorationDungeon(props: { dungeon: Dungeon }) {\r\n  const state = useGameState();\r\n  const unlockedFloors = props.dungeon\r\n    .getDungeonFloors()\r\n    .filter((floor) => floor.isUnlocked(state));\r\n  return useMemo(\r\n    () => (\r\n      <CategoryContainer title={props.dungeon.getName()}>\r\n        <View style={Styles.mt8}>\r\n          {/* {props.dungeon.hasTriggeredEvent(state) && (\r\n          <View style={Styles.mb8}>\r\n            <Text style={styles.noMoreStorylines}>\r\n              {t(\r\n                \"No more Storylines can be found by exploring these areas this run!\",\r\n              )}\r\n            </Text>\r\n          </View>\r\n        )} */}\r\n          {unlockedFloors.map((floor) => {\r\n            return <ExplorationRow key={floor.getId()} floor={floor} />;\r\n          })}\r\n        </View>\r\n      </CategoryContainer>\r\n    ),\r\n    [JSON.stringify(unlockedFloors.map((floor) => floor.getId()))],\r\n  );\r\n}\r\n\r\nfunction ExplorationNone() {\r\n  const state = useGameState();\r\n  const allDungeons = getUnlockedDungeons(state);\r\n  return useMemo(\r\n    () => (\r\n      <ScrollView\r\n        style={styles.container}\r\n        contentContainerStyle={styles.noneContent}\r\n      >\r\n        <View style={styles.topRow}>\r\n          <Text h2>{t(\"Exploration\")}</Text>\r\n        </View>\r\n        <Text>{t(\"Select a destination.\")}</Text>\r\n        {allDungeons.map((dungeon) => {\r\n          return <ExplorationDungeon key={dungeon.getId()} dungeon={dungeon} />;\r\n        })}\r\n      </ScrollView>\r\n    ),\r\n    [JSON.stringify(allDungeons.map((dungeon) => dungeon.getId()))],\r\n  );\r\n}\r\n\r\nfunction ExplorationMain() {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n  const explorationStatus = getExplorationStatus(state);\r\n\r\n  const dungeonFloor = getCurrentDungeonFloor(state);\r\n  const dungeonTitle = dungeonFloor.getFloorName();\r\n  const currentEnemySprite =\r\n    explorationStatus == ExplorationStatus.Combat &&\r\n    getCurrentEnemy(state).getPicture(state);\r\n  const toUnlockBoss =\r\n    dungeonFloor.getExplorationSuccessesForBoss(state) -\r\n    getSuccessfulExplorationsForFloor(state, dungeonFloor.getId());\r\n  const currentEnemyName =\r\n    explorationStatus == ExplorationStatus.Combat &&\r\n    getCurrentEnemy(state).getName();\r\n\r\n  const checkmark =\r\n    getSuccessfulExplorationsForFloor(state, dungeonFloor.getId()) >=\r\n      dungeonFloor.getExplorationSuccessesForBoss(state) ||\r\n    isDungeonFloorCompletedThisRun(state, dungeonFloor);\r\n  const hasBoss = dungeonFloor.getBoss(state) != null;\r\n  const canFightBoss = dungeonFloor.canFightBoss(state);\r\n  const canMoveToNextFloor = dungeonFloor\r\n    .getNextFloor(state)\r\n    ?.isUnlocked(state);\r\n\r\n  const fightingBoss =\r\n    explorationStatus == ExplorationStatus.Combat &&\r\n    getCurrentEnemy(state).isBoss();\r\n\r\n  const isExplorationPaused = hasFlag(state, \"exploration_paused\");\r\n  const togglePauseExploration = useCallback(() => {\r\n    stateRef.current.apply((state) =>\r\n      hasFlag(state, \"exploration_paused\")\r\n        ? resumeExploration(state)\r\n        : pauseExploration(state),\r\n    );\r\n  }, []);\r\n  const pauseExplorationButton = useMemo(\r\n    () => (\r\n      <Button\r\n        style={styles.pauseExplorationButton}\r\n        compact={true}\r\n        onPress={togglePauseExploration}\r\n        disableDisabledRenderingOptimization={true}\r\n      >\r\n        {isExplorationPaused ? t(\"Resume Exploration\") : t(\"Pause Exploration\")}\r\n      </Button>\r\n    ),\r\n    [isExplorationPaused, togglePauseExploration],\r\n  );\r\n\r\n  const explorationStatusContainer = useMemo(() => {\r\n    let explorationStatusContainer = null;\r\n    if (explorationStatus == ExplorationStatus.Combat) {\r\n      explorationStatusContainer = (\r\n        <ScrollView\r\n          centerContent={false}\r\n          style={styles.explorationStatusContainer}\r\n          persistentScrollbar={true}\r\n        >\r\n          <Text h3>{currentEnemyName}</Text>\r\n          <View style={Styles.mt4}>\r\n            <EnemyHPBar />\r\n          </View>\r\n          <View style={Styles.mt4}>\r\n            <EnemyActionDisplay />\r\n          </View>\r\n          <View style={Styles.mt4}>\r\n            <TemporaryEffectsViewer\r\n              target={AttackTarget.Enemy}\r\n              skipPermacast={true}\r\n              accessibilityHeader={t(\"Enemy Buffs\")}\r\n            />\r\n          </View>\r\n        </ScrollView>\r\n      );\r\n    } else if (explorationStatus == ExplorationStatus.Exploring) {\r\n      explorationStatusContainer = (\r\n        <View style={styles.explorationStatusContainer}>\r\n          <View style={Styles.mb8}>\r\n            <Text h3>{t(\"Exploring...\")}</Text>\r\n          </View>\r\n          <ExplorationProgressDisplay />\r\n          {pauseExplorationButton}\r\n        </View>\r\n      );\r\n    } else if (explorationStatus == ExplorationStatus.ExploringBoss) {\r\n      explorationStatusContainer = (\r\n        <View style={styles.explorationStatusContainer}>\r\n          <Text h3>{t(\"Preparing for Boss...\")}</Text>\r\n          <ExplorationProgressDisplay />\r\n          {pauseExplorationButton}\r\n        </View>\r\n      );\r\n    } else if (explorationStatus == ExplorationStatus.Reviving) {\r\n      explorationStatusContainer = (\r\n        <View style={styles.explorationStatusContainer}>\r\n          <Text h3>{t(\"Recovering...\")}</Text>\r\n          <ActivityIndicator />\r\n        </View>\r\n      );\r\n    }\r\n    return explorationStatusContainer;\r\n  }, [explorationStatus, currentEnemyName, pauseExplorationButton]);\r\n\r\n  const hasCompanion = hasCurrentCompanion(state);\r\n  const currentCompanionSprite =\r\n    hasCompanion && getCurrentCompanionClass(state).getPicture(state);\r\n  const isCompanionReady =\r\n    hasCompanion &&\r\n    [\r\n      FamiliarCompanionStatusType.Combat,\r\n      FamiliarCompanionStatusType.Exploring,\r\n    ].includes(getCurrentCompanionData(state)?.status?.companionStatus);\r\n  const flipCompanionRow = useCallback(() => {\r\n    stateRef.current.apply((state) => {\r\n      state.run.exploration.familiarIsInBackRow =\r\n        !state.run.exploration.familiarIsInBackRow;\r\n      return state;\r\n    });\r\n  }, []);\r\n\r\n  const isFloorCompleted = isDungeonFloorCompletedThisRun(state, dungeonFloor);\r\n  const theme = useTheme();\r\n\r\n  const backdropColor =\r\n    explorationStatus == ExplorationStatus.Combat &&\r\n    getCurrentEnemy(state).getBackdropColor(state);\r\n\r\n  const accessibilityContext = useContext(AccessibilityContext);\r\n\r\n  const visible = useContext(VisibilityContext);\r\n  useEffect(() => {\r\n    stateRef.current.apply(clearFlag(\"combat_paused_magic_tap\"));\r\n    return () => stateRef.current.apply(clearFlag(\"combat_paused_magic_tap\"));\r\n  }, [visible]);\r\n\r\n  const uiContext = useContext(UIContext);\r\n  const currentEventOccurrenceId = uiContext.getUIState(\r\n    \"current_event_occurrence_id\",\r\n  );\r\n  const currentExplorationBottomTab =\r\n    uiContext.getUIState(\"exploration_bottom_component_tab\") ?? \"\";\r\n\r\n  useEffect(() => {\r\n    if (visible && currentEventOccurrenceId == null) {\r\n      if (explorationStatus === ExplorationStatus.Exploring) {\r\n        accessibilityContext.announceForAccessibility(t(\"Exploring\"));\r\n      }\r\n\r\n      if (explorationStatus === ExplorationStatus.ExploringBoss) {\r\n        accessibilityContext.announceForAccessibility(t(\"Preparing for boss\"));\r\n      }\r\n\r\n      if (explorationStatus === ExplorationStatus.Combat) {\r\n        accessibilityContext.announceForAccessibility(\r\n          t(\"Fighting {{enemy}}\", { enemy: currentEnemyName }),\r\n        );\r\n      }\r\n\r\n      if (explorationStatus === ExplorationStatus.Reviving) {\r\n        accessibilityContext.announceForAccessibility(\r\n          t(\"You were defeated. Recovering from injuries...\"),\r\n        );\r\n      }\r\n    }\r\n  }, [\r\n    explorationStatus,\r\n    accessibilityContext,\r\n    visible,\r\n    currentEventOccurrenceId,\r\n  ]);\r\n\r\n  const [lastAnnounced, setLastAnnounced] = useState(\"\");\r\n\r\n  const onKeyboard = useCallback(\r\n    (ev: KeyboardEvent) => {\r\n      if (!visible) {\r\n        return;\r\n      }\r\n\r\n      const state = stateRef.current;\r\n\r\n      if (ev.shiftKey && ev.ctrlKey && ev.key == \"Z\") {\r\n        const inCombat =\r\n          getExplorationStatus(state) == ExplorationStatus.Combat;\r\n        const hasFamiliar = hasCurrentActiveCompanion(state);\r\n        if (lastAnnounced === \"player\" && hasFamiliar) {\r\n          const currentHP = getCurrentFamiliarHP(state);\r\n          const maxHP =\r\n            getCurrentCompanionClass(state)?.getStatsForCompanion(state)\r\n              .maxHP ?? 0;\r\n          accessibilityContext.announceForAccessibility(\r\n            t(\"Familiar HP: {{current}}/{{max}}\", {\r\n              current: formatNumber(Math.ceil(currentHP), {\r\n                showDecimals: false,\r\n              }),\r\n              max: formatNumber(Math.ceil(maxHP), {\r\n                showDecimals: false,\r\n              }),\r\n            }),\r\n          );\r\n          setLastAnnounced(\"familiar\");\r\n        } else if (\r\n          (lastAnnounced === \"player\" ||\r\n            (hasFamiliar && lastAnnounced === \"familiar\")) &&\r\n          inCombat\r\n        ) {\r\n          const currentHP = getCurrentEnemyHP(state);\r\n          const maxHP = getCurrentEnemy(state).getMaxHP(state);\r\n          accessibilityContext.announceForAccessibility(\r\n            t(\"Enemy HP: {{current}}/{{max}}\", {\r\n              current: formatNumber(Math.ceil(currentHP), {\r\n                showDecimals: false,\r\n              }),\r\n              max: formatNumber(Math.ceil(maxHP), {\r\n                showDecimals: false,\r\n              }),\r\n            }),\r\n          );\r\n          setLastAnnounced(\"enemy\");\r\n        } else {\r\n          accessibilityContext.announceForAccessibility(\r\n            t(\"Player HP: {{current}}/{{max}}\", {\r\n              current: formatNumber(Math.ceil(getCurrentPlayerHP(state)), {\r\n                showDecimals: false,\r\n              }),\r\n              max: formatNumber(Math.ceil(calculatePlayerMaxHP(state)), {\r\n                showDecimals: false,\r\n              }),\r\n            }),\r\n          );\r\n          setLastAnnounced(\"player\");\r\n        }\r\n      }\r\n    },\r\n    [visible, lastAnnounced],\r\n  );\r\n\r\n  const isCompanionUndead = shouldShowGrayscaleFamiliar(state);\r\n\r\n  const buttonRow = useMemo(\r\n    () => (\r\n      <View style={styles.row}>\r\n        <Button\r\n          style={styles.exitButtonContainer}\r\n          compact={true}\r\n          onPress={() => stateRef.current.apply(endExploration)}\r\n        >\r\n          {t(\"Exit\")}\r\n        </Button>\r\n        <Button\r\n          style={styles.exitButtonContainer}\r\n          compact={true}\r\n          onPress={() =>\r\n            stateRef.current.apply((state) =>\r\n              startExplorationOnFloor(\r\n                state,\r\n                getCurrentDungeonFloor(state).getNextFloor(\r\n                  state,\r\n                ) as DungeonFloor,\r\n              ),\r\n            )\r\n          }\r\n          disabled={!canMoveToNextFloor}\r\n        >\r\n          {t(\"Next Floor\")}\r\n        </Button>\r\n        <Button\r\n          compact={true}\r\n          onPress={() => stateRef.current.apply(startBossExploration)}\r\n          disabled={!canFightBoss || fightingBoss}\r\n        >\r\n          {t(\"Fight Boss\")}\r\n        </Button>\r\n      </View>\r\n    ),\r\n    [canFightBoss, fightingBoss, canMoveToNextFloor],\r\n  );\r\n\r\n  const topContainer = useMemo(\r\n    () => (\r\n      <View>\r\n        <View style={[styles.row, styles.enemyContainer]}>\r\n          {explorationStatusContainer}\r\n          <View style={Styles.ml8}>\r\n            <EnemySpriteTile\r\n              sprite={currentEnemySprite}\r\n              backdropColor={backdropColor}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Divider />\r\n        {hasCompanion && !state.run.exploration.familiarIsInBackRow && (\r\n          <View\r\n            key=\"companion\"\r\n            style={[styles.row, styles.summonContainer, { marginTop: 8 }]}\r\n          >\r\n            <FamiliarSpriteTile\r\n              sprite={currentCompanionSprite}\r\n              showDead={!isCompanionReady}\r\n              showUndead={isCompanionUndead}\r\n            />\r\n            <View style={{ flex: 1, marginLeft: 4, marginRight: 4 }}>\r\n              <FamiliarHPBar />\r\n            </View>\r\n            <FamiliarActionDisplay />\r\n          </View>\r\n        )}\r\n        <View\r\n          style={[\r\n            styles.row,\r\n            styles.playerContainer,\r\n            (!hasCompanion || state.run.exploration.familiarIsInBackRow) && {\r\n              marginTop: 8,\r\n            },\r\n          ]}\r\n        >\r\n          <View style={{ flex: 1, marginRight: 4 }}>\r\n            <PlayerHPBar />\r\n          </View>\r\n          <PlayerActionDisplay />\r\n        </View>\r\n        {hasCompanion && state.run.exploration.familiarIsInBackRow && (\r\n          <View key=\"companion\" style={[styles.row, styles.summonContainer]}>\r\n            <FamiliarSpriteTile\r\n              sprite={currentCompanionSprite}\r\n              showDead={!isCompanionReady}\r\n              showUndead={isCompanionUndead}\r\n            />\r\n            <View style={{ flex: 1, marginLeft: 4, marginRight: 4 }}>\r\n              <FamiliarHPBar />\r\n            </View>\r\n            <FamiliarActionDisplay />\r\n          </View>\r\n        )}\r\n        {hasCompanion && (\r\n          <View style={styles.switchFamiliarRowContainer}>\r\n            <View style={styles.switchFamiliarRow}>\r\n              <TouchableWithoutFeedback\r\n                onPress={flipCompanionRow}\r\n                accessibilityLabel={\r\n                  state.run.exploration.familiarIsInBackRow\r\n                    ? t(\"Send Familiar to Front Row\")\r\n                    : t(\"Send Familiar to Back Row\")\r\n                }\r\n                hitSlop={{ top: 8, bottom: 8, left: 8, right: 8 }}\r\n              >\r\n                <GameIcon icon=\"exchange\" small />\r\n              </TouchableWithoutFeedback>\r\n            </View>\r\n          </View>\r\n        )}\r\n        <View style={[styles.row, styles.runAway]}>\r\n          <View style={[styles.row, styles.unlockBossContainer]}>\r\n            {checkmark && (\r\n              <MaterialIcons\r\n                name=\"check\"\r\n                size={24}\r\n                style={styles.checkmark}\r\n                color={\r\n                  isFloorCompleted\r\n                    ? theme.dark\r\n                      ? theme.colors.primaryContainer\r\n                      : theme.colors.primary\r\n                    : theme.colors.onBackground\r\n                }\r\n              />\r\n            )}\r\n            <View style={styles.unlockBossTextContainer}>\r\n              <Text doNotScaleFonts={true} numberOfLines={2}>\r\n                {isFloorCompleted\r\n                  ? t(\"Floor complete!\")\r\n                  : canFightBoss\r\n                  ? t(\"Boss unlocked\")\r\n                  : hasBoss\r\n                  ? t(\"To unlock boss: {{amount}}\", {\r\n                      amount: formatNumber(toUnlockBoss),\r\n                    })\r\n                  : \"\"}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n          {buttonRow}\r\n        </View>\r\n      </View>\r\n    ),\r\n    [\r\n      currentEnemySprite,\r\n      explorationStatusContainer,\r\n      toUnlockBoss,\r\n      checkmark,\r\n      canFightBoss,\r\n      hasBoss,\r\n      stateRef,\r\n      startBossExploration,\r\n      endExploration,\r\n      hasCompanion,\r\n      currentCompanionSprite,\r\n      isFloorCompleted,\r\n      backdropColor,\r\n      isCompanionReady,\r\n      isCompanionUndead,\r\n      state.run.exploration.familiarIsInBackRow,\r\n      flipCompanionRow,\r\n      buttonRow,\r\n      theme,\r\n    ],\r\n  );\r\n\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  const [containerHeight, setContainerHeight] = useState(null);\r\n\r\n  const onLayout = useCallback((event: LayoutChangeEvent) => {\r\n    setContainerHeight(event.nativeEvent.layout.height);\r\n  }, []);\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View style={styles.wholeContainer} onLayout={onLayout}>\r\n        <View style={styles.container}>\r\n          <View style={[styles.topRow]}>\r\n            <Text h2>\r\n              {t(\"Exploration - {{dungeonTitle}}\", { dungeonTitle })}\r\n            </Text>\r\n          </View>\r\n          <View style={styles.restOfScreen}>\r\n            {topContainer}\r\n            <View style={styles.playerMessageLogContainer}>\r\n              {currentExplorationBottomTab == \"\" && (\r\n                <View\r\n                  style={styles.accessibilityHidden}\r\n                  accessible={true}\r\n                  accessibilityLabel={t(\"Exploration Log Tab\")}\r\n                  accessibilityRole=\"header\"\r\n                  accessibilityElementsHidden={false}\r\n                />\r\n              )}\r\n              <PlayerMessageLog />\r\n            </View>\r\n            {width < 640 &&\r\n              height > 640 &&\r\n              !state.options.hideBottomResourceViewer && (\r\n                <GameStateFreezer isVisible={currentExplorationBottomTab == \"\"}>\r\n                  <BottomResourceViewer />\r\n                </GameStateFreezer>\r\n              )}\r\n          </View>\r\n        </View>\r\n        <View style={styles.bottomComponentContainer}>\r\n          <ExplorationBottomComponent containerHeight={containerHeight} />\r\n        </View>\r\n        <KeyboardListener callback={onKeyboard} />\r\n      </View>\r\n    ),\r\n    [\r\n      stateRef,\r\n      currentExplorationBottomTab,\r\n      endExploration,\r\n      dungeonTitle,\r\n      topContainer,\r\n      theme,\r\n      onKeyboard,\r\n      width,\r\n      height,\r\n      state.options.hideBottomResourceViewer,\r\n      onLayout,\r\n      containerHeight,\r\n    ],\r\n  );\r\n}\r\n\r\nexport default function Exploration() {\r\n  const state = useGameState();\r\n\r\n  const explorationStatus = getExplorationStatus(state);\r\n\r\n  if (explorationStatus == ExplorationStatus.None) {\r\n    return <ExplorationNone />;\r\n  }\r\n\r\n  // We are exploring, reviving, or in combat\r\n  return <ExplorationMain />;\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  wholeContainer: { flex: 1 },\r\n  container: {\r\n    flex: 1,\r\n    padding: 8,\r\n  },\r\n  topRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    marginBottom: 8,\r\n    height: 32,\r\n  },\r\n  arrowBack: {\r\n    marginRight: 8,\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  checkmark: {\r\n    marginRight: 4,\r\n  },\r\n  enemyContainer: {\r\n    marginBottom: 8,\r\n  },\r\n  playerContainer: {\r\n    marginTop: 16,\r\n  },\r\n  summonContainer: {\r\n    marginTop: 16,\r\n  },\r\n  playerMessageLogContainer: {\r\n    flex: 1,\r\n    padding: 8,\r\n    borderColor: \"#444\",\r\n    borderWidth: StyleSheet.hairlineWidth,\r\n    marginTop: 8,\r\n  },\r\n  moveRow: {\r\n    marginTop: 8,\r\n  },\r\n  exitButtonContainer: { marginRight: 4 },\r\n  explorationStatusContainer: {\r\n    flex: 1,\r\n    maxHeight: 144,\r\n  },\r\n  restOfScreen: {\r\n    flex: 1,\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 48,\r\n  },\r\n  bottomComponentContainer: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    bottom: 0,\r\n    width: \"100%\",\r\n  },\r\n  dungeonButton: {\r\n    marginTop: 8,\r\n  },\r\n  gradient: {\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"60%\",\r\n    position: \"absolute\",\r\n    opacity: 0.3,\r\n  },\r\n  noneContent: {\r\n    paddingBottom: 32,\r\n  },\r\n  noneDungeonContentsContainer: {\r\n    marginTop: 8,\r\n  },\r\n  noneRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 4,\r\n  },\r\n  noneStatusRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n  },\r\n  noneFloorText: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  noneIcon: {\r\n    marginHorizontal: 4,\r\n  },\r\n  smallButtonTitle: {\r\n    fontSize: 12,\r\n  },\r\n  runAway: {\r\n    marginTop: 8,\r\n  },\r\n  unlockBossContainer: { flex: 1, justifyContent: \"flex-start\" },\r\n  unlockBossTextContainer: { flex: 1 },\r\n  accessibilityHidden: {\r\n    width: 1,\r\n    height: 1,\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n  },\r\n  pauseExplorationButton: {\r\n    marginTop: 16,\r\n    alignSelf: \"flex-start\",\r\n  },\r\n  noMoreStorylines: {\r\n    fontStyle: \"italic\",\r\n  },\r\n  switchFamiliarRow: {\r\n    position: \"absolute\",\r\n    top: -40,\r\n    cursor: \"pointer\",\r\n  },\r\n  switchFamiliarRowContainer: {\r\n    alignSelf: \"center\",\r\n  },\r\n});\r\n","import { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Item, ItemParams } from \"../Item\";\r\nimport { ItemTagEnum } from \"../ItemTagEnum\";\r\n\r\nclass SlimeDrop extends Item {\r\n  getId(): string {\r\n    return \"slimeDrop\";\r\n  }\r\n\r\n  getTags(): ItemTagEnum[] {\r\n    return [ItemTagEnum.Material];\r\n  }\r\n\r\n  getPicture() {\r\n    return require(\"./slimeDrop.png\");\r\n  }\r\n\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Slime Drop\");\r\n  }\r\n\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\"A piece of a felled Slime.\");\r\n  }\r\n\r\n  getEffect(state: GameState, params: ItemParams): string | undefined {\r\n    return undefined;\r\n  }\r\n\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 24;\r\n  }\r\n}\r\n\r\nexport default new SlimeDrop();\r\n","import { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Item, ItemParams } from \"../Item\";\r\nimport { ItemTagEnum } from \"../ItemTagEnum\";\r\n\r\nclass Wildgrass extends Item {\r\n  getId(): string {\r\n    return \"wildgrass\";\r\n  }\r\n\r\n  getTags(): ItemTagEnum[] {\r\n    return [ItemTagEnum.Material];\r\n  }\r\n\r\n  getPicture() {\r\n    return require(\"./wildgrass.png\");\r\n  }\r\n\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Wildgrass\");\r\n  }\r\n\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\"A basic herb used in alchemical compounds.\");\r\n  }\r\n\r\n  getEffect(state: GameState, params: ItemParams): string | undefined {\r\n    return undefined;\r\n  }\r\n\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 12;\r\n  }\r\n}\r\n\r\nexport default new Wildgrass();\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport SlimeDrop from \"../../../items/material/SlimeDrop\";\r\nimport Wildgrass from \"../../../items/material/Wildgrass\";\r\nimport { BattlerStats, Enemy, EnemyLoot } from \"../Enemy\";\r\n\r\nclass Slime extends Enemy {\r\n  getId(): string {\r\n    return \"slime\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Slime\");\r\n  }\r\n\r\n  getBaseStats(): BattlerStats {\r\n    return {\r\n      maxHP: 50,\r\n      attack: 15,\r\n      defense: 5,\r\n      attackDelay: 3.2,\r\n      accuracy: 100,\r\n      dodge: 100,\r\n      crit: 0,\r\n    };\r\n  }\r\n\r\n  getPicture(state: GameState) {\r\n    return require(\"./slime.png\");\r\n  }\r\n\r\n  getLevel(): number {\r\n    return 1;\r\n  }\r\n\r\n  getCoinsAwardedBase(state: GameState): number {\r\n    return 12;\r\n  }\r\n\r\n  getMonstiumAwardedBase(state: GameState): number {\r\n    return 3;\r\n  }\r\n\r\n  getItemsAwardedBase(state: GameState): EnemyLoot[] {\r\n    return [\r\n      {\r\n        itemId: Wildgrass.getId(),\r\n        amount: 1,\r\n        chance: 0.1,\r\n      },\r\n      {\r\n        itemId: SlimeDrop.getId(),\r\n        amount: 1,\r\n        chance: 0.5,\r\n      },\r\n    ];\r\n  }\r\n}\r\n\r\nexport default new Slime();\r\n","import { t } from \"../../utils/I18n\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport { CombatStat, getCachedCombatStat } from \"../exploration/CombatStats\";\r\nimport {\r\n  BattlerAction,\r\n  BattlerStats,\r\n  getCombatStatFromBattlerStat,\r\n} from \"../exploration/enemies/Enemy\";\r\nimport { standardFamiliarAttackEffect } from \"../exploration/Exploration\";\r\nimport { GameState } from \"../GameState\";\r\nimport {\r\n  getLevelByExpAndExponent,\r\n  getTotalExpRequiredForLevelByExponent,\r\n} from \"../spells/Elements\";\r\nimport {\r\n  applyTransformations,\r\n  applyTransformationsCached,\r\n  applyTransformationsPermaCached,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport {\r\n  FamiliarCompanionStatusType,\r\n  FamiliarData,\r\n  FamiliarStatusType,\r\n  getCurrentCompanionId,\r\n  getFamiliarData,\r\n} from \"./Familiar\";\r\n\r\nconst FAMILIAR_EXP_REQUIREMENT_MULTIPLIER = 0.015;\r\n\r\nexport const FAMILIAR_LEVEL_CAP_BASE = 90;\r\n\r\nconst cachedStats = {\r\n  maxHP: [AttackTarget.Familiar, CombatStat.MaxHP, \"maxHP\"],\r\n  attack: [AttackTarget.Familiar, CombatStat.Attack, \"attack\"],\r\n  attackDelay: [AttackTarget.Familiar, CombatStat.AttackDelay, \"attackDelay\"],\r\n  defense: [AttackTarget.Familiar, CombatStat.Defense, \"defense\"],\r\n  accuracy: [AttackTarget.Familiar, CombatStat.Accuracy, \"accuracy\"],\r\n  dodge: [AttackTarget.Familiar, CombatStat.Dodge, \"dodge\"],\r\n  crit: [AttackTarget.Familiar, CombatStat.Crit, \"crit\"],\r\n};\r\n\r\nconst FAMILIAR_MAX_LEVEL_TAGS = [TransformationTags.MaxFamiliarLevel];\r\n\r\nexport abstract class FamiliarClass {\r\n  abstract getId(): string;\r\n  abstract getPicture(state: GameState): any;\r\n  abstract getName(): string;\r\n  abstract getBaseStats(): BattlerStats;\r\n  abstract getPerLevelStatMultiplier(): BattlerStats;\r\n\r\n  getNextAction(state: GameState, familiarId: string): BattlerAction {\r\n    return {\r\n      name: t(\"Attack\"),\r\n      delay: this.getStats(state, familiarId).attackDelay,\r\n      transform: (state) =>\r\n        standardFamiliarAttackEffect(\r\n          state,\r\n          this.getStats(state, familiarId).attack,\r\n        ),\r\n    };\r\n  }\r\n\r\n  getNextActionForCompanion(state: GameState): BattlerAction {\r\n    return this.getNextAction(state, getCurrentCompanionId(state));\r\n  }\r\n\r\n  getStats(\r\n    state: GameState,\r\n    familiarId: string,\r\n    onlyStat?: CombatStat,\r\n  ): BattlerStats {\r\n    const level = this.getLevel(state, familiarId);\r\n    const baseStats = this.getBaseStats();\r\n    const multipliers = this.getPerLevelStatMultiplier();\r\n\r\n    const stats = {};\r\n\r\n    for (let stat in baseStats) {\r\n      if (onlyStat == null || onlyStat == getCombatStatFromBattlerStat(stat)) {\r\n        stats[stat] = getCachedCombatStat(\r\n          state,\r\n          AttackTarget.Familiar,\r\n          getCombatStatFromBattlerStat(stat),\r\n          (state) => {\r\n            const statFromLevel =\r\n              baseStats[stat] * Math.pow(multipliers[stat], level - 1);\r\n            return applyTransformations(\r\n              cachedStats[stat],\r\n              state,\r\n              statFromLevel,\r\n            );\r\n          },\r\n          familiarId,\r\n          level,\r\n        );\r\n      }\r\n    }\r\n\r\n    return stats as BattlerStats;\r\n  }\r\n\r\n  getMaxHP(state: GameState, familiarId: string): number {\r\n    const level = this.getLevel(state, familiarId);\r\n    const baseStats = this.getBaseStats();\r\n    const multipliers = this.getPerLevelStatMultiplier();\r\n\r\n    return getCachedCombatStat(\r\n      state,\r\n      AttackTarget.Familiar,\r\n      CombatStat.MaxHP,\r\n      (state) => {\r\n        const statFromLevel =\r\n          baseStats.maxHP * Math.pow(multipliers.maxHP, level - 1);\r\n        return applyTransformationsCached(\r\n          cachedStats.maxHP,\r\n          state,\r\n          statFromLevel,\r\n        );\r\n      },\r\n      familiarId,\r\n      level,\r\n    );\r\n  }\r\n\r\n  getStatsForCompanion(state: GameState, onlyStat?: CombatStat): BattlerStats {\r\n    return this.getStats(state, getCurrentCompanionId(state), onlyStat);\r\n  }\r\n\r\n  getLevel(state: GameState, familiarId: string): number {\r\n    const levelEstimate = state.temp.familiarLevelCache.get(familiarId);\r\n    const level = getLevelByExpAndExponent(\r\n      getFamiliarData(state, familiarId).exp /\r\n        FAMILIAR_EXP_REQUIREMENT_MULTIPLIER,\r\n      1.38,\r\n      this.getMaxLevel(state, familiarId),\r\n      levelEstimate,\r\n    );\r\n    if (level != levelEstimate) {\r\n      state.temp.familiarLevelCache.set(familiarId, level);\r\n    }\r\n    return level;\r\n  }\r\n\r\n  getMaxLevel(state: GameState, familiarId: string): number {\r\n    return applyTransformationsPermaCached(\r\n      FAMILIAR_MAX_LEVEL_TAGS,\r\n      state,\r\n      FAMILIAR_LEVEL_CAP_BASE,\r\n    );\r\n  }\r\n\r\n  getExpForNextLevel(state: GameState, familiarId: string): number {\r\n    return (\r\n      getTotalExpRequiredForLevelByExponent(\r\n        this.getLevel(state, familiarId) + 1,\r\n        1.38,\r\n        this.getMaxLevel(state, familiarId),\r\n      ) * FAMILIAR_EXP_REQUIREMENT_MULTIPLIER\r\n    );\r\n  }\r\n\r\n  create(state: GameState): GameState {\r\n    const newId = Math.random().toString();\r\n    const data: FamiliarData = {\r\n      id: newId,\r\n      familiarClassId: this.getId(),\r\n      exp:\r\n        getTotalExpRequiredForLevelByExponent(5, 1.38, 10) *\r\n        FAMILIAR_EXP_REQUIREMENT_MULTIPLIER,\r\n      status: {\r\n        status: FamiliarStatusType.Idle,\r\n        exploringDungeonFloorId: undefined,\r\n        exploringNextRandomRoll: Math.random(),\r\n        autoExploring: false,\r\n        triggerFamiliarDeath: false,\r\n        currentHp: this.getBaseStats().maxHP,\r\n        companionStatus: FamiliarCompanionStatusType.Exploring,\r\n        actionProgress: 0,\r\n      },\r\n      messageLog: [],\r\n    };\r\n    state.run.familiars[newId] = data;\r\n    data.status.currentHp = this.getStats(state, newId).maxHP;\r\n    return state;\r\n  }\r\n}\r\n","import { t } from \"../../utils/I18n\";\r\nimport { BattlerStats } from \"../exploration/enemies/Enemy\";\r\nimport Slime from \"../exploration/enemies/training/Slime\";\r\nimport { GameState } from \"../GameState\";\r\nimport { FamiliarClass } from \"./FamiliarClass\";\r\n\r\nclass SlimeFamiliar extends FamiliarClass {\r\n  getId(): string {\r\n    return \"slimeFamiliar\";\r\n  }\r\n  getPicture(state: GameState) {\r\n    return Slime.getPicture(state);\r\n  }\r\n  getName(): string {\r\n    return t(\"Slime\");\r\n  }\r\n  getBaseStats(): BattlerStats {\r\n    return {\r\n      maxHP: 50,\r\n      attack: 15,\r\n      defense: 5,\r\n      attackDelay: 3.2,\r\n      accuracy: 100,\r\n      dodge: 100,\r\n      crit: 0,\r\n    };\r\n  }\r\n  getPerLevelStatMultiplier(): BattlerStats {\r\n    return {\r\n      maxHP: 1.06,\r\n      attack: 1.06,\r\n      defense: 1.06,\r\n      attackDelay: 1,\r\n      accuracy: 1,\r\n      dodge: 1,\r\n      crit: 1,\r\n    };\r\n  }\r\n}\r\n\r\nexport const slimeFamiliar = new SlimeFamiliar();\r\n","import { keysOf } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport {\r\n  ActionArea,\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../action/ActionAreas\";\r\nimport { areFamiliarsUnlocked } from \"../familiars/Familiar\";\r\nimport { slimeFamiliar } from \"../familiars/SlimeFamiliar\";\r\nimport { GameState } from \"../GameState\";\r\nimport { Resource } from \"../Resources\";\r\nimport { SpellElement } from \"../spells/Elements\";\r\nimport { Building, BuildingSpell } from \"./Building\";\r\nimport { BuildingAmountListeners, getBuildingAmount } from \"./Buildings\";\r\n\r\nclass FamiliarCrate extends Building {\r\n  getId(): string {\r\n    return \"familiarCrate\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Familiar Crate\");\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Dedicate a parcel of land to a Familiar - a forever friend and companion to a skilled Wizard.\",\r\n    );\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\r\n      \"+1 Familiars. Note: Cannot be demolished - release the Familiar instead from the Familiars screen\",\r\n    );\r\n  }\r\n\r\n  getBaseLandRequired(): number {\r\n    return 25;\r\n  }\r\n\r\n  canTurnOff(): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const familiarCrate = new FamiliarCrate();\r\n\r\nclass BuildFamiliarCrate extends BuildingSpell {\r\n  getAreas(): Partial<Record<ActionArea, ActionSubcategory[]>> {\r\n    return { HOME: [ActionSubcategories.OTHER] };\r\n  }\r\n\r\n  getBuilding(): Building {\r\n    return familiarCrate;\r\n  }\r\n\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Coins: 10000,\r\n      LifeEssence: 10000,\r\n    };\r\n  }\r\n\r\n  getBaseResourceScale(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Coins: 10.0,\r\n      LifeEssence: 10.0,\r\n    };\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return areFamiliarsUnlocked(state) && super.isVisible(state);\r\n  }\r\n\r\n  shouldHideDemolish(): boolean {\r\n    return true;\r\n  }\r\n\r\n  canDemolish(state: GameState, amount: number): boolean {\r\n    return false;\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {};\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Life;\r\n  }\r\n}\r\n\r\nexport const buildFamiliarCrate = new BuildFamiliarCrate();\r\n\r\nfunction familiarEqualizer(state: GameState) {\r\n  const buildingAmt = getBuildingAmount(state, familiarCrate);\r\n  const familiarAmt = keysOf(state.run.familiars).length;\r\n  if (familiarAmt < buildingAmt) {\r\n    const buildingAmt = getBuildingAmount(state, familiarCrate);\r\n    let familiarAmt = keysOf(state.run.familiars).length;\r\n    while (familiarAmt < buildingAmt) {\r\n      state = slimeFamiliar.create(state);\r\n      familiarAmt++;\r\n    }\r\n  }\r\n  return state;\r\n}\r\n\r\nBuildingAmountListeners.register(familiarEqualizer, \"familiarCrates\");\r\n","import moment from \"moment\";\r\nimport React, { useMemo } from \"react\";\r\nimport { ScrollView, View } from \"react-native\";\r\nimport { getFamiliarMessageLog } from \"../../backend/familiars/Familiar\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { Markdown } from \"../utility/Markdown\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\n\r\nexport function FamiliarMessageLog(props: { familiarId: string }) {\r\n  const state = useGameState();\r\n  const messageLog = getFamiliarMessageLog(state, props.familiarId);\r\n  return useMemo(\r\n    () => (\r\n      <ScrollView>\r\n        {messageLog.length === 0 ? (\r\n          <View key=\"noActivity\">\r\n            <Markdown>{t(\"*No activity yet!*\")}</Markdown>\r\n          </View>\r\n        ) : (\r\n          messageLog.map((logItem) => {\r\n            const key: string = logItem.id;\r\n            return (\r\n              <View key={key}>\r\n                <Markdown\r\n                  accessibilityLabel={\r\n                    logItem.accessibleMessage ?? logItem.message\r\n                  }\r\n                >\r\n                  {logItem.realTimestamp\r\n                    ? t(\"[{{time}}] {{message}}\", {\r\n                        time: moment(logItem.realTimestamp).format(\"h:mm:ss A\"),\r\n                        message: logItem.message,\r\n                      })\r\n                    : logItem.message}\r\n                </Markdown>\r\n              </View>\r\n            );\r\n          })\r\n        )}\r\n      </ScrollView>\r\n    ),\r\n    [messageLog.map((logItem) => logItem.id).join()],\r\n  );\r\n}\r\n","import { StyleSheet, View } from \"react-native\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { DungeonFloor } from \"../../backend/exploration/dungeons/DungeonFloor\";\r\nimport {\r\n  Dungeons,\r\n  getUnlockedDungeons,\r\n} from \"../../backend/exploration/dungeons/Dungeons\";\r\nimport { getFloorsAvailableForFamiliars } from \"../../backend/familiars/Familiar\";\r\nimport { keysOf } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { Button } from \"./Button\";\r\nimport CategoryContainer from \"./CategoryContainer\";\r\nimport Styles from \"./Styles\";\r\nimport { Text } from \"./Text\";\r\nimport { useGameState } from \"./useGameState\";\r\n\r\nexport function DungeonFloorSelect(props: {\r\n  familiarId: string | undefined;\r\n  onSelect: (dungeonFloorId: string) => void;\r\n}) {\r\n  const state = useGameState();\r\n\r\n  const dungeons = getUnlockedDungeons(state);\r\n  const dungeonFloors = getFloorsAvailableForFamiliars(state);\r\n  const floorsByDungeon: Record<string, DungeonFloor[]> = {};\r\n  for (let dungeon of dungeons) {\r\n    const floors = dungeon.getDungeonFloors();\r\n    const filteredFloors = floors.filter((floor) =>\r\n      dungeonFloors.includes(floor),\r\n    );\r\n    if (filteredFloors.length > 0) {\r\n      floorsByDungeon[dungeon.getId()] = filteredFloors;\r\n    }\r\n  }\r\n  const theme = useTheme();\r\n\r\n  const floorsView = (\r\n    <View>\r\n      {keysOf(floorsByDungeon).map((dungeonId) => {\r\n        const dungeon = Dungeons.getById(dungeonId);\r\n        return (\r\n          <CategoryContainer title={dungeon.getName()} key={dungeon.getId()}>\r\n            <View style={Styles.mt8}>\r\n              {floorsByDungeon[dungeonId].map((floor) => {\r\n                return (\r\n                  <View\r\n                    style={[Styles.flexRowSpaceBetween, Styles.mv4]}\r\n                    key={floor.getId()}\r\n                  >\r\n                    <View>\r\n                      <Text>{floor.getFloorName()}</Text>\r\n                      {props.familiarId != null &&\r\n                        floor.isDangerousForFamiliar(\r\n                          state,\r\n                          props.familiarId,\r\n                        ) && (\r\n                          <Text style={{ color: theme.colors.error }}>\r\n                            {t(\"Caution - dangerous!\")}\r\n                          </Text>\r\n                        )}\r\n                    </View>\r\n                    <Button\r\n                      style={Styles.ml16}\r\n                      onPress={() => props.onSelect(floor.getId())}\r\n                    >\r\n                      {t(\"Explore\")}\r\n                    </Button>\r\n                  </View>\r\n                );\r\n              })}\r\n            </View>\r\n          </CategoryContainer>\r\n        );\r\n      })}\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <View style={[Styles.flex, styles.bigContainer]}>\r\n      <ScrollView style={[{ flexGrow: 0 }, Styles.mt8]}>\r\n        {floorsView}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  spellButtonTitleContainer: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  spellButtonTitleOnlyContainer: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  spellButtonCostContainer: {\r\n    flexDirection: \"row\",\r\n    width: 100,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  spellManaIcon: {\r\n    height: 16,\r\n    width: 16,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    marginLeft: 2,\r\n  },\r\n  bigContainer: {\r\n    width: 340,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { StyleSheet, useWindowDimensions, View } from \"react-native\";\r\nimport { Modal, useTheme } from \"react-native-paper\";\r\nimport Styles from \"./Styles\";\r\n\r\nexport function FullscreenModal(props: {\r\n  visible: boolean;\r\n  onDismiss: () => void;\r\n  children: React.ReactNode;\r\n}) {\r\n  const theme = useTheme();\r\n  const { width, height } = useWindowDimensions();\r\n  return (\r\n    <Modal\r\n      visible={props.visible}\r\n      onDismiss={props.onDismiss}\r\n      contentContainerStyle={[\r\n        styles.overlay,\r\n        {\r\n          maxWidth: Math.min(width - 16, 640),\r\n          maxHeight: height - 32,\r\n          backgroundColor: theme.colors.background,\r\n        },\r\n      ]}\r\n    >\r\n      <View style={[Styles.flex, Styles.p16]}>{props.children}</View>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  overlay: {\r\n    alignSelf: \"center\",\r\n    marginHorizontal: 16,\r\n    maxWidth: 640,\r\n  },\r\n});\r\n","import { Entypo } from \"@expo/vector-icons\";\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport { Portal, Surface, useTheme } from \"react-native-paper\";\r\nimport { buildFamiliarCrate } from \"../backend/buildings/FamiliarCrate\";\r\nimport { DungeonFloors } from \"../backend/exploration/dungeons/Dungeons\";\r\nimport {\r\n  FamiliarStatusType,\r\n  Familiars,\r\n  deleteFamiliar,\r\n  getFamiliarData,\r\n  setAllFamiliarsToAutoExplore,\r\n  setAllFamiliarsToExplore,\r\n  setCurrentCompanion,\r\n  setFamiliarToAutoExplore,\r\n  setFamiliarToExplore,\r\n  translateFamiliarCompanionStatusType,\r\n} from \"../backend/familiars/Familiar\";\r\nimport { keysOf } from \"../utils/CoreUtils\";\r\nimport { formatNumber } from \"../utils/FormattingUtils\";\r\nimport { t } from \"../utils/I18n\";\r\nimport { EnemySpriteTile } from \"./exploration/EnemySpriteTile\";\r\nimport { FamiliarMessageLog } from \"./familiars/FamiliarMessageLog\";\r\nimport { Button } from \"./utility/Button\";\r\nimport CategoryContainer from \"./utility/CategoryContainer\";\r\nimport { CombatStatsViewer } from \"./utility/CombatStatsViewer\";\r\nimport { DungeonFloorSelect } from \"./utility/DungeonFloorSelect\";\r\nimport { FullscreenModal } from \"./utility/FullscreenModal\";\r\nimport { GameStateFreezer } from \"./utility/GameStateFreezer\";\r\nimport { Markdown } from \"./utility/Markdown\";\r\nimport Styles from \"./utility/Styles\";\r\nimport { Text } from \"./utility/Text\";\r\nimport { UIContext, useUIStateFromContext } from \"./utility/UIContext\";\r\nimport { useGameState } from \"./utility/useGameState\";\r\n\r\nfunction FamiliarRow(props: { familiarId: string }) {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const theme = useTheme();\r\n\r\n  const [collapsed, setCollapsed] = useState(true);\r\n\r\n  const familiarId = props.familiarId;\r\n  const familiarData = getFamiliarData(state, familiarId);\r\n  const familiar = Familiars.getById(familiarData.familiarClassId);\r\n\r\n  const familiarLevel = familiar.getLevel(state, familiarId);\r\n  const familiarMaxLevel = familiar.getMaxLevel(state, familiarId);\r\n\r\n  let statusString = t(\"Idle\");\r\n  switch (familiarData.status.status) {\r\n    case FamiliarStatusType.Companion:\r\n      statusString = t(\"Fighting ({{companionStatus}})\", {\r\n        companionStatus: translateFamiliarCompanionStatusType(\r\n          familiarData.status.companionStatus,\r\n        ),\r\n      });\r\n      break;\r\n    case FamiliarStatusType.Exploring:\r\n      statusString = t(\r\n        \"{{auto}}Exploring ({{dungeonFloorName}} - {{explorationProgressPct}}%)\",\r\n        {\r\n          auto: familiarData.status.autoExploring ? t(\"Auto-\") : \"\",\r\n          dungeonFloorName: DungeonFloors.getById(\r\n            familiarData.status.exploringDungeonFloorId,\r\n          ).getFloorName(),\r\n          explorationProgressPct: formatNumber(\r\n            familiarData.status.actionProgress * 100,\r\n          ),\r\n        },\r\n      );\r\n      break;\r\n  }\r\n\r\n  const uiContext = useContext(UIContext);\r\n  const [_isModalSelectorOpen, setIsModalSelectorOpen] = useUIStateFromContext(\r\n    uiContext,\r\n    \"picker_open\",\r\n    false,\r\n  );\r\n  const [showingDungeonSelector, setShowingDungeonSelector] = useState(false);\r\n\r\n  const showModal = useCallback(() => {\r\n    setShowingDungeonSelector(true);\r\n    setIsModalSelectorOpen(true);\r\n  }, [setShowingDungeonSelector, setIsModalSelectorOpen]);\r\n  const hideModal = useCallback(() => {\r\n    setShowingDungeonSelector(false);\r\n    setIsModalSelectorOpen(false);\r\n  }, [setShowingDungeonSelector, setIsModalSelectorOpen]);\r\n\r\n  const [confirmRelease, setConfirmRelease] = useState(false);\r\n  const releaseFamiliar = useCallback(() => {\r\n    if (confirmRelease) {\r\n      stateRef.current.apply((state) => {\r\n        state = deleteFamiliar(state, familiarId);\r\n        buildFamiliarCrate._demolishUnsafe(state, 1);\r\n        return state;\r\n      });\r\n    } else {\r\n      setConfirmRelease(true);\r\n    }\r\n  }, [confirmRelease]);\r\n\r\n  const autoExploreCallback = useCallback(() => {\r\n    stateRef.current.apply((state) =>\r\n      setFamiliarToAutoExplore(state, familiarId),\r\n    );\r\n  }, [familiarId]);\r\n  const companionCallback = useCallback(() => {\r\n    stateRef.current.apply((state) => setCurrentCompanion(state, familiarId));\r\n  }, [familiarId]);\r\n  const explorationCallback = useCallback(\r\n    (dungeonFloorId: string) => {\r\n      stateRef.current.apply((state) =>\r\n        setFamiliarToExplore(state, familiarId, dungeonFloorId),\r\n      );\r\n      hideModal();\r\n    },\r\n    [familiarId, hideModal],\r\n  );\r\n\r\n  return useMemo(\r\n    () => (\r\n      <Surface mode=\"flat\" key={props.familiarId} style={styles.rowContainer}>\r\n        <TouchableOpacity\r\n          onPress={() => setCollapsed(!collapsed)}\r\n          style={styles.expandTouchable}\r\n        >\r\n          <View style={Styles.flexRowSpaceBetween}>\r\n            <View>\r\n              <Text h4 style={Styles.bold}>\r\n                {t(\"{{familiarName}} - Lv{{familiarLevel}}\", {\r\n                  familiarName: familiar.getName(),\r\n                  familiarLevel: familiarLevel,\r\n                })}\r\n              </Text>\r\n              <Text>{statusString}</Text>\r\n            </View>\r\n            <Entypo\r\n              name={collapsed ? \"chevron-right\" : \"chevron-down\"}\r\n              size={24}\r\n              color={theme.colors.onBackground}\r\n            />\r\n          </View>\r\n        </TouchableOpacity>\r\n        <GameStateFreezer isVisible={!collapsed}>\r\n          <View style={collapsed ? { display: \"none\" } : null}>\r\n            <View style={Styles.flexRowSpaceBetween}>\r\n              <View style={[Styles.flex, Styles.flexCenter]}>\r\n                <EnemySpriteTile sprite={familiar.getPicture(state)} />\r\n              </View>\r\n              <View style={Styles.flex}>\r\n                <CategoryContainer title={t(\"General\")}>\r\n                  <View style={Styles.mt8}>\r\n                    <View style={Styles.flexRowSpaceBetween}>\r\n                      <Text>{t(\"Level:\")}</Text>\r\n                      {familiarLevel < familiarMaxLevel ? (\r\n                        <Text>\r\n                          {t(\"{{level}}\", {\r\n                            level: formatNumber(familiarLevel),\r\n                          })}\r\n                        </Text>\r\n                      ) : (\r\n                        <Text>\r\n                          {t(\"{{level}} (Max)\", {\r\n                            level: formatNumber(familiarLevel),\r\n                          })}\r\n                        </Text>\r\n                      )}\r\n                    </View>\r\n                    <View style={Styles.flexRowSpaceBetween}>\r\n                      <Text>{t(\"Exp:\")}</Text>\r\n                      <Text>\r\n                        {t(\"{{currentExp}}/{{toNextLevel}}\", {\r\n                          currentExp: formatNumber(familiarData.exp),\r\n                          toNextLevel: formatNumber(\r\n                            familiar.getExpForNextLevel(state, familiarId),\r\n                          ),\r\n                        })}\r\n                      </Text>\r\n                    </View>\r\n                    <View style={Styles.flexRowSpaceBetween}>\r\n                      <Text>{t(\"Status:\")}</Text>\r\n                      <Text\r\n                        style={[Styles.ml8, { textAlign: \"right\", flex: 1 }]}\r\n                      >\r\n                        {statusString}\r\n                      </Text>\r\n                    </View>\r\n                  </View>\r\n                </CategoryContainer>\r\n                <CategoryContainer title={t(\"Stats\")}>\r\n                  <View style={Styles.mt8}>\r\n                    <CombatStatsViewer\r\n                      combatStats={{\r\n                        ...familiar.getStats(state, familiarId),\r\n                        currentHP: familiarData.status.currentHp,\r\n                      }}\r\n                      showCurrentHP={true}\r\n                    />\r\n                  </View>\r\n                </CategoryContainer>\r\n              </View>\r\n            </View>\r\n            <CategoryContainer title={t(\"Actions\")}>\r\n              <View style={Styles.mt8}>\r\n                <View style={styles.optionRow}>\r\n                  <Button\r\n                    onPress={companionCallback}\r\n                    disabled={\r\n                      familiarData.status.status == FamiliarStatusType.Companion\r\n                    }\r\n                    compact={true}\r\n                  >\r\n                    {t(\"Summon\")}\r\n                  </Button>\r\n                  <Button onPress={showModal} compact={true}>\r\n                    {t(\"Explore\")}\r\n                  </Button>\r\n                  <Button\r\n                    onPress={autoExploreCallback}\r\n                    disabled={\r\n                      familiarData.status.status ==\r\n                        FamiliarStatusType.Exploring &&\r\n                      familiarData.status.autoExploring\r\n                    }\r\n                    compact={true}\r\n                  >\r\n                    {t(\"Auto-Explore\")}\r\n                  </Button>\r\n                  <Portal>\r\n                    <FullscreenModal\r\n                      visible={showingDungeonSelector}\r\n                      onDismiss={hideModal}\r\n                    >\r\n                      <DungeonFloorSelect\r\n                        onSelect={explorationCallback}\r\n                        familiarId={familiarId}\r\n                      />\r\n                    </FullscreenModal>\r\n                  </Portal>\r\n                </View>\r\n              </View>\r\n              <View style={[Styles.mt8, Styles.ph8]}>\r\n                <CategoryContainer\r\n                  title={t(\"Release\")}\r\n                  initiallyExpanded={false}\r\n                >\r\n                  <View style={Styles.mt8}>\r\n                    <Markdown>\r\n                      {t(\r\n                        \"If you want to recover the land used by a Familiar Crate, you can release a familiar. However, you will **lose the familiar** permanently - if you build a Familiar Crate again, you will need to raise the familiar again as if it was new.\",\r\n                      )}\r\n                    </Markdown>\r\n                    <View style={[Styles.mt8, Styles.flexCenter]}>\r\n                      <Button onPress={releaseFamiliar}>\r\n                        {confirmRelease\r\n                          ? t(\"Press again to confirm\")\r\n                          : t(\"Release Familiar\")}\r\n                      </Button>\r\n                    </View>\r\n                  </View>\r\n                </CategoryContainer>\r\n              </View>\r\n            </CategoryContainer>\r\n            <CategoryContainer title={t(\"Activity\")} initiallyExpanded={false}>\r\n              <View style={[Styles.mt8, styles.messageLogContainer]}>\r\n                <FamiliarMessageLog familiarId={familiarId} />\r\n              </View>\r\n            </CategoryContainer>\r\n          </View>\r\n        </GameStateFreezer>\r\n      </Surface>\r\n    ),\r\n    [\r\n      collapsed,\r\n      setCollapsed,\r\n      familiar.getName(),\r\n      familiarLevel,\r\n      familiarMaxLevel,\r\n      statusString,\r\n      !collapsed && showingDungeonSelector,\r\n      !collapsed && hideModal,\r\n      !collapsed && explorationCallback,\r\n      !collapsed && autoExploreCallback,\r\n      !collapsed && JSON.stringify(familiarData),\r\n      theme,\r\n      confirmRelease,\r\n      releaseFamiliar,\r\n    ],\r\n  );\r\n}\r\n\r\nexport function FamiliarsComponent() {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const familiarIds = keysOf(state.run.familiars);\r\n\r\n  const uiContext = useContext(UIContext);\r\n  const [_isModalSelectorOpen, setIsModalSelectorOpen] = useUIStateFromContext(\r\n    uiContext,\r\n    \"picker_open\",\r\n    false,\r\n  );\r\n  const [showingDungeonSelector, setShowingDungeonSelector] = useState(false);\r\n\r\n  const showModal = useCallback(() => {\r\n    setShowingDungeonSelector(true);\r\n    setIsModalSelectorOpen(true);\r\n  }, [setShowingDungeonSelector, setIsModalSelectorOpen]);\r\n  const hideModal = useCallback(() => {\r\n    setShowingDungeonSelector(false);\r\n    setIsModalSelectorOpen(false);\r\n  }, [setShowingDungeonSelector, setIsModalSelectorOpen]);\r\n\r\n  const autoExploreCallback = useCallback(() => {\r\n    stateRef.current.apply((state) => setAllFamiliarsToAutoExplore(state));\r\n  }, []);\r\n  const explorationCallback = useCallback(\r\n    (dungeonFloorId: string) => {\r\n      stateRef.current.apply((state) =>\r\n        setAllFamiliarsToExplore(state, dungeonFloorId),\r\n      );\r\n      hideModal();\r\n    },\r\n    [hideModal],\r\n  );\r\n\r\n  return useMemo(() => {\r\n    return (\r\n      <View style={styles.topContainer}>\r\n        {familiarIds.length > 0 ? (\r\n          <View>\r\n            {familiarIds.map((familiarId) => (\r\n              <View key={familiarId} style={Styles.pv4}>\r\n                <FamiliarRow familiarId={familiarId} key={familiarId} />\r\n              </View>\r\n            ))}\r\n\r\n            <View style={Styles.mt16}>\r\n              <CategoryContainer title={t(\"Familiar Actions\")}>\r\n                <View style={Styles.flexCenter}>\r\n                  <View\r\n                    style={[\r\n                      Styles.mt8,\r\n                      Styles.flexRowAlignCenter,\r\n                      { gap: 8, justifyContent: \"space-around\" },\r\n                    ]}\r\n                  >\r\n                    <Button onPress={showModal} compact={true}>\r\n                      {t(\"All Explore\")}\r\n                    </Button>\r\n                    <Button onPress={autoExploreCallback} compact={true}>\r\n                      {t(\"All Auto-Explore\")}\r\n                    </Button>\r\n                  </View>\r\n                </View>\r\n                <Portal>\r\n                  <FullscreenModal\r\n                    visible={showingDungeonSelector}\r\n                    onDismiss={hideModal}\r\n                  >\r\n                    <DungeonFloorSelect\r\n                      onSelect={explorationCallback}\r\n                      familiarId={undefined}\r\n                    />\r\n                  </FullscreenModal>\r\n                </Portal>\r\n              </CategoryContainer>\r\n            </View>\r\n          </View>\r\n        ) : (\r\n          <Markdown>\r\n            {t(\r\n              \"In this screen, you can check the status of your familiars and control them. However, you have no familiars right now. Build a Familiar Crate in your Home to get one!\",\r\n            )}\r\n          </Markdown>\r\n        )}\r\n      </View>\r\n    );\r\n  }, [\r\n    familiarIds.join(),\r\n    showingDungeonSelector,\r\n    hideModal,\r\n    explorationCallback,\r\n    autoExploreCallback,\r\n    showModal,\r\n  ]);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n  },\r\n  contentContainer: {\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 4,\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  hintProgress: {\r\n    marginTop: 4,\r\n  },\r\n  loadoutsContainer: {\r\n    borderTopWidth: 1,\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 4,\r\n  },\r\n  categoryTitle: {\r\n    marginLeft: 8,\r\n  },\r\n  categoryContainer: {\r\n    paddingTop: 4,\r\n    marginBottom: 8,\r\n  },\r\n  campusContainer: {\r\n    flex: 1,\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  campusHintWarning: {\r\n    marginTop: 16,\r\n  },\r\n  optionRow: {\r\n    marginTop: 8,\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    gap: 8,\r\n    justifyContent: \"space-around\",\r\n  },\r\n  overlay: {\r\n    alignSelf: \"center\",\r\n    marginHorizontal: 16,\r\n    maxWidth: 640,\r\n  },\r\n  messageLogContainer: {\r\n    padding: 8,\r\n    borderColor: \"#444\",\r\n    borderWidth: 1,\r\n    maxHeight: 320,\r\n  },\r\n  rowContainer: {\r\n    padding: 8,\r\n    borderRadius: 8,\r\n  },\r\n  topContainer: {\r\n    gap: 8,\r\n  },\r\n  expandTouchable: {\r\n    // @ts-ignore This is a valid property\r\n    cursor: \"pointer\",\r\n  },\r\n});\r\n","import { t } from \"../../utils/I18n\";\r\nimport { GameState } from \"../GameState\";\r\nimport { addGameStateListener } from \"../GameStateListeners\";\r\nimport { DataStore } from \"../generic/DataStore\";\r\nimport { triggerNotification } from \"../Notifications\";\r\n\r\nexport type Help = {\r\n  id: string;\r\n  category: string;\r\n  title: string;\r\n  description: string;\r\n  descriptionWeb?: string;\r\n  order: number;\r\n  isVisible?: (state: GameState) => boolean;\r\n};\r\n\r\nexport enum HelpCategory {\r\n  Introduction = \"Introduction\",\r\n  ScreensOverview = \"ScreensOverview\",\r\n  ElementsOverview = \"ElementsOverview\",\r\n  GameFeatures = \"GameFeatures\",\r\n  Wizards = \"Wizards\",\r\n  Exploration = \"Exploration\",\r\n  TipsAndTricks = \"TipsAndTricks\",\r\n}\r\n\r\nexport function translateHelpCategory(helpCategory: HelpCategory): string {\r\n  switch (helpCategory) {\r\n    case HelpCategory.Introduction:\r\n      return t(\"Introduction\");\r\n    case HelpCategory.ScreensOverview:\r\n      return t(\"Screens Overview\");\r\n    case HelpCategory.ElementsOverview:\r\n      return t(\"Elements Overview\");\r\n    case HelpCategory.GameFeatures:\r\n      return t(\"Game Features\");\r\n    case HelpCategory.Wizards:\r\n      return t(\"Wizards\");\r\n    case HelpCategory.Exploration:\r\n      return t(\"Exploration\");\r\n    case HelpCategory.TipsAndTricks:\r\n      return t(\"Tips and Tricks\");\r\n    // Do not add a default\r\n  }\r\n}\r\n\r\nconst Helps = new DataStore<Help>();\r\n\r\nexport { Helps };\r\n\r\nexport function getVisibleHelps(state: GameState): Help[] {\r\n  return Helps.getAll()\r\n    .filter((help) => help.isVisible == null || help.isVisible(state))\r\n    .sort((a, b) => a.order - b.order);\r\n}\r\n\r\nexport function getVisibleHelpsByCategory(\r\n  state: GameState,\r\n): Record<HelpCategory, Help[]> {\r\n  const helps = getVisibleHelps(state);\r\n  const helpsByCategory = {\r\n    Introduction: [],\r\n    ScreensOverview: [],\r\n    ElementsOverview: [],\r\n    GameFeatures: [],\r\n    Wizards: [],\r\n    Exploration: [],\r\n    TipsAndTricks: [],\r\n  };\r\n  for (let help of helps) {\r\n    helpsByCategory[help.category] = helpsByCategory[help.category] ?? [];\r\n    helpsByCategory[help.category].push(help);\r\n  }\r\n  for (let category in helpsByCategory) {\r\n    if (helpsByCategory[category].length == 0) {\r\n      delete helpsByCategory[category];\r\n    }\r\n  }\r\n  return helpsByCategory;\r\n}\r\n\r\nlet tempIds: string | undefined = undefined;\r\n\r\naddGameStateListener(\r\n  \"HelpNotifier\",\r\n  (state) => {\r\n    if (tempIds == null) {\r\n      return;\r\n    }\r\n\r\n    const oldIds = tempIds?.split(\",\") ?? [];\r\n    const newHelps = getVisibleHelps(state);\r\n    const idsToNotify = [];\r\n    for (let help of newHelps) {\r\n      if (!oldIds.includes(help.order.toString())) {\r\n        idsToNotify.push(help.id);\r\n      }\r\n    }\r\n    if (idsToNotify.length > 0) {\r\n      return (newState) => {\r\n        for (let helpId of idsToNotify) {\r\n          newState = triggerNotification(newState, \"Help\", helpId);\r\n        }\r\n        return newState;\r\n      };\r\n    }\r\n  },\r\n  (state, oldValue) => {\r\n    tempIds = oldValue as string | undefined;\r\n    return getVisibleHelps(state)\r\n      .map((help) => help.order.toString())\r\n      .join(\",\");\r\n  },\r\n);\r\n","import { Entypo } from \"@expo/vector-icons\";\r\nimport React, { useMemo } from \"react\";\r\nimport { StyleSheet, TouchableWithoutFeedback, View } from \"react-native\";\r\nimport { Badge, useTheme } from \"react-native-paper\";\r\nimport { Help } from \"../../backend/helps/Helps\";\r\nimport { Markdown } from \"./Markdown\";\r\nimport { Text } from \"./Text\";\r\n\r\nexport function HelpContainer(props: {\r\n  help: Help;\r\n  showBadge: boolean;\r\n  collapsed?: boolean;\r\n  onPressExpand?: () => void;\r\n}) {\r\n  const help = props.help;\r\n  const title = help.title;\r\n  const description = help.description;\r\n\r\n  const descriptionContainer = useMemo(() => {\r\n    return (\r\n      <View style={styles.descriptionTextContainer}>\r\n        <Markdown style={styles.descriptionViewer}>{description}</Markdown>\r\n      </View>\r\n    );\r\n  }, [description]);\r\n\r\n  const theme = useTheme();\r\n\r\n  return useMemo(() => {\r\n    return (\r\n      <View style={styles.helpContainer} key={title}>\r\n        <TouchableWithoutFeedback\r\n          accessibilityRole=\"button\"\r\n          accessibilityHint=\"Expand\"\r\n          onPress={props.onPressExpand}\r\n        >\r\n          <View style={styles.topRowContainer}>\r\n            <View style={styles.topContainer}>\r\n              <Text h3 key={title}>\r\n                {title}\r\n              </Text>\r\n              {props.showBadge && (\r\n                <View style={styles.badgeContainer}>\r\n                  <Badge />\r\n                </View>\r\n              )}\r\n            </View>\r\n            <View style={styles.expandContainer}>\r\n              <Entypo\r\n                name={props.collapsed ? \"chevron-right\" : \"chevron-down\"}\r\n                size={24}\r\n                color={theme.colors.onBackground}\r\n              />\r\n            </View>\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n        {!props.collapsed && <View>{descriptionContainer}</View>}\r\n      </View>\r\n    );\r\n  }, [\r\n    theme,\r\n    title,\r\n    !props.collapsed && descriptionContainer,\r\n    props.collapsed,\r\n    props.onPressExpand,\r\n    props.showBadge,\r\n  ]);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  helpContainer: { marginVertical: 8 },\r\n  topRowContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n  },\r\n  expandContainer: {\r\n    width: 40,\r\n  },\r\n  descriptionTextContainer: {\r\n    marginBottom: 8,\r\n    marginTop: 8,\r\n    marginHorizontal: 8,\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  descriptionViewer: { flex: 1, justifyContent: \"center\" },\r\n  topContainer: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  disabledStorylineText: {\r\n    color: \"#aaa\",\r\n  },\r\n  badgeContainer: {\r\n    marginLeft: 8,\r\n  },\r\n});\r\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport {\r\n  getUnreadNotificationsByGroup,\r\n  markNotificationAsRead,\r\n} from \"../backend/Notifications\";\r\nimport {\r\n  Help,\r\n  HelpCategory,\r\n  getVisibleHelpsByCategory,\r\n  translateHelpCategory,\r\n} from \"../backend/helps/Helps\";\r\nimport { t } from \"../utils/I18n\";\r\nimport CategoryContainer from \"./utility/CategoryContainer\";\r\nimport Divider from \"./utility/Divider\";\r\nimport { HelpContainer } from \"./utility/HelpContainer\";\r\nimport Styles from \"./utility/Styles\";\r\nimport { Text } from \"./utility/Text\";\r\nimport { useGameState } from \"./utility/useGameState\";\r\n\r\nfunction HelpsCategoryContainer(props: {\r\n  expandedHelp: string;\r\n  setHelpCallback: (helpTitle: string) => void;\r\n  helps: Help[];\r\n  category: HelpCategory;\r\n}) {\r\n  const { category, expandedHelp, helps, setHelpCallback } = props;\r\n\r\n  const state = useGameState();\r\n  const helpNotifications = getUnreadNotificationsByGroup(state, \"Help\").map(\r\n    (notification) => notification.item,\r\n  );\r\n\r\n  const helpNameString = helps.map((help) => help.title).join(\",\");\r\n\r\n  const helpContainers = useMemo(\r\n    () =>\r\n      helps.map((help) => {\r\n        return (\r\n          <HelpContainer\r\n            key={help.title}\r\n            help={help}\r\n            showBadge={helpNotifications.includes(help.id)}\r\n            collapsed={expandedHelp != help.id}\r\n            onPressExpand={setHelpCallback.bind(null, help.id)}\r\n          />\r\n        );\r\n      }),\r\n    [helpNameString, expandedHelp, setHelpCallback, helpNotifications.join()],\r\n  );\r\n\r\n  return useMemo(() => {\r\n    if (helps.length === 0) {\r\n      return null;\r\n    }\r\n    return (\r\n      <CategoryContainer title={translateHelpCategory(category)}>\r\n        <View style={Styles.mt4}>\r\n          {helpContainers.map((helpContainer, idx) => {\r\n            return (\r\n              <View key={helps[idx].title}>\r\n                {idx > 0 && <Divider />}\r\n                {helpContainer}\r\n              </View>\r\n            );\r\n          })}\r\n          <Divider />\r\n        </View>\r\n      </CategoryContainer>\r\n    );\r\n  }, [helpNameString, helpContainers]);\r\n}\r\n\r\nfunction HelpsContainer() {\r\n  const [expandedHelp, setExpandedHelp] = useState(\"\");\r\n\r\n  const state = useGameState();\r\n  const stateRef = React.useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const setHelpCallback = useCallback(\r\n    (id: string) => {\r\n      if (expandedHelp == id) {\r\n        setExpandedHelp(\"\");\r\n      } else {\r\n        setExpandedHelp(id);\r\n      }\r\n    },\r\n    [expandedHelp],\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (expandedHelp != \"\") {\r\n      stateRef.current.apply((state) =>\r\n        markNotificationAsRead(state, \"Help\", expandedHelp),\r\n      );\r\n    }\r\n  }, [expandedHelp]);\r\n\r\n  const allHelps = getVisibleHelpsByCategory(state);\r\n\r\n  return useMemo(() => {\r\n    let categoryContainers = [];\r\n    for (let category in allHelps) {\r\n      const helps = allHelps[category];\r\n      if (helps != null && helps.length > 0) {\r\n        categoryContainers.push(\r\n          <HelpsCategoryContainer\r\n            category={category as HelpCategory}\r\n            expandedHelp={expandedHelp}\r\n            helps={helps}\r\n            setHelpCallback={setHelpCallback}\r\n            key={category}\r\n          />,\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <View>\r\n        {categoryContainers}\r\n        <Divider />\r\n      </View>\r\n    );\r\n  }, [JSON.stringify(allHelps), expandedHelp, setExpandedHelp]);\r\n}\r\n\r\nexport default function HelpScreen() {\r\n  return (\r\n    <View>\r\n      <View style={styles.headerContainer}>\r\n        <Text h1>{t(\"Help\")}</Text>\r\n      </View>\r\n\r\n      <Text>{t(\"Learn how to play the game!\")}</Text>\r\n      <View style={styles.helpContainer}>\r\n        <HelpsContainer />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"flex-start\",\r\n    width: \"100%\",\r\n  },\r\n  headerContainer: {\r\n    marginBottom: 16,\r\n  },\r\n  valueText: {\r\n    minWidth: 60,\r\n    textAlign: \"right\",\r\n    marginLeft: 8,\r\n  },\r\n  valueTextLong: {\r\n    minWidth: 112,\r\n  },\r\n  helpContainer: {\r\n    marginTop: 16,\r\n  },\r\n  captionText: {\r\n    flex: 1,\r\n  },\r\n});\r\n","import { GameState } from \"../GameState\";\r\n\r\nexport type Hint = {\r\n  description: string;\r\n  isCompleted: (state: GameState) => boolean;\r\n\r\n  // Returns a number between 0 and 1 representing a percentage\r\n  progress?: (state: GameState) => number;\r\n};\r\n\r\nlet hintsDatabase: Hint[] = [];\r\n\r\nexport function clearAllHints(): void {\r\n  hintsDatabase = [];\r\n}\r\n\r\nexport function pushHint(hint: Hint): void {\r\n  hintsDatabase.push(hint);\r\n}\r\n\r\nexport function getFirstHint(state: GameState): Hint | undefined {\r\n  for (const idx in hintsDatabase) {\r\n    const hint = hintsDatabase[idx];\r\n    if (!hint.isCompleted(state)) {\r\n      return hint;\r\n    }\r\n  }\r\n}\r\n\r\nexport function getFirstHintIndex(state: GameState): string | undefined {\r\n  for (const idx in hintsDatabase) {\r\n    const hint = hintsDatabase[idx];\r\n    if (!hint.isCompleted(state)) {\r\n      return idx;\r\n    }\r\n  }\r\n}\r\n","import React, {\r\n  useCallback,\r\n  useContext,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { ScrollView, StyleSheet, View } from \"react-native\";\r\nimport { Menu, useTheme } from \"react-native-paper\";\r\nimport { ActionArea } from \"../backend/action/ActionAreas\";\r\nimport {\r\n  getAutoPurchaseActions,\r\n  isAutoPurchaseUnlocked,\r\n} from \"../backend/action/Actions\";\r\nimport { getFirstHint } from \"../backend/hints/Hints\";\r\nimport { t } from \"../utils/I18n\";\r\nimport ActionsContainer from \"./utility/ActionsContainer\";\r\nimport { Button } from \"./utility/Button\";\r\nimport CategoryContainer from \"./utility/CategoryContainer\";\r\nimport { ProgressBar } from \"./utility/ProgressBar\";\r\nimport Styles from \"./utility/Styles\";\r\nimport { Text } from \"./utility/Text\";\r\nimport { VisibilityContext } from \"./utility/VisibilityContext\";\r\nimport { useGameState } from \"./utility/useGameState\";\r\n\r\nexport default function Home(props: {\r\n  onScroll: (event: any) => void;\r\n  scrollRef: any;\r\n}) {\r\n  const visible = useContext(VisibilityContext);\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n  const currentHint = getFirstHint(state);\r\n  const hintProgress = currentHint?.progress?.(state);\r\n\r\n  const theme = useTheme();\r\n\r\n  const [menuVisible, setMenuVisible] = useState(false);\r\n  const toggleMenuVisible = useCallback(\r\n    () => setMenuVisible(!menuVisible),\r\n    [menuVisible, setMenuVisible],\r\n  );\r\n\r\n  const menuButton = useMemo(\r\n    () => (\r\n      <Button compact={true} onPress={toggleMenuVisible}>\r\n        {t(\"More actions...\")}\r\n      </Button>\r\n    ),\r\n    [toggleMenuVisible],\r\n  );\r\n  const toggleAllAutoBuildAction = useMemo(\r\n    () => (\r\n      <Menu.Item\r\n        key=\"toggleAllAutoBuild\"\r\n        title={t(\"Toggle all auto-purchase max\")}\r\n        onPress={() => {\r\n          stateRef.current.apply((state) => {\r\n            let shouldEnableAll = false;\r\n            const actions = getAutoPurchaseActions();\r\n            for (let action of actions) {\r\n              if (\r\n                action.isVisible(state) &&\r\n                (action.getAreas()[ActionArea.HOME]?.length ?? 0) > 0 &&\r\n                !(state.run.autoPurchaseActions[action.getId()] ?? false)\r\n              ) {\r\n                shouldEnableAll = true;\r\n                break;\r\n              }\r\n            }\r\n            for (let action of actions) {\r\n              if (\r\n                action.isVisible(state) &&\r\n                (action.getAreas()[ActionArea.HOME]?.length ?? 0) > 0\r\n              ) {\r\n                state.run.autoPurchaseActions[action.getId()] = shouldEnableAll;\r\n              }\r\n            }\r\n            return state;\r\n          });\r\n          setMenuVisible(false);\r\n        }}\r\n      />\r\n    ),\r\n    [setMenuVisible],\r\n  );\r\n  const menuDismiss = useCallback(\r\n    () => setMenuVisible(false),\r\n    [setMenuVisible],\r\n  );\r\n  const menuActions = useMemo(() => {\r\n    const menuActions = [];\r\n    if (isAutoPurchaseUnlocked(state)) {\r\n      menuActions.push(toggleAllAutoBuildAction);\r\n    }\r\n    return menuActions;\r\n  }, [toggleAllAutoBuildAction, isAutoPurchaseUnlocked(state)]);\r\n\r\n  const menu = useMemo(() => {\r\n    return (\r\n      menuActions.length > 0 && (\r\n        <Menu visible={menuVisible} anchor={menuButton} onDismiss={menuDismiss}>\r\n          {menuActions}\r\n        </Menu>\r\n      )\r\n    );\r\n  }, [menuActions, menuVisible, menuButton, menuDismiss]);\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View style={styles.campusContainer}>\r\n        <ScrollView\r\n          contentContainerStyle={styles.contentContainer}\r\n          style={styles.container}\r\n          onScroll={visible && props.onScroll}\r\n          ref={props.scrollRef}\r\n        >\r\n          <View style={[Styles.mt8, Styles.flexRowSpaceBetween]}>\r\n            <Text h1>{t(\"Home\")}</Text>\r\n            {menu}\r\n          </View>\r\n          <ActionsContainer area={ActionArea.HOME} />\r\n        </ScrollView>\r\n        <View\r\n          style={[\r\n            styles.hintContainer,\r\n            { borderColor: theme.colors.outlineVariant },\r\n          ]}\r\n        >\r\n          <CategoryContainer\r\n            titleStyle={styles.categoryTitle}\r\n            title={t(\"Current Goal\")}\r\n            containerStyle={styles.categoryContainer}\r\n          >\r\n            <View style={styles.hintContents}>\r\n              <Text style={styles.hintContentsText}>\r\n                {currentHint?.description}!\r\n              </Text>\r\n              {currentHint?.progress && (\r\n                <ProgressBar\r\n                  progress={hintProgress}\r\n                  style={styles.hintProgress}\r\n                />\r\n              )}\r\n            </View>\r\n          </CategoryContainer>\r\n        </View>\r\n      </View>\r\n    ),\r\n    [currentHint, hintProgress, theme, props.onScroll, visible, menu],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n  },\r\n  contentContainer: {\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"flex-start\",\r\n    width: \"100%\",\r\n    paddingHorizontal: 8,\r\n  },\r\n  hintContents: {\r\n    marginLeft: 16,\r\n    marginTop: 8,\r\n    paddingRight: 32,\r\n  },\r\n  hintContentsText: {\r\n    fontStyle: \"italic\",\r\n  },\r\n  hintProgress: {\r\n    marginTop: 4,\r\n  },\r\n  hintContainer: {\r\n    borderTopWidth: 1,\r\n  },\r\n  categoryTitle: {\r\n    marginLeft: 8,\r\n  },\r\n  categoryContainer: {\r\n    paddingTop: 4,\r\n    marginBottom: 8,\r\n  },\r\n  campusContainer: {\r\n    height: \"100%\",\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"flex-start\",\r\n    width: \"100%\",\r\n  },\r\n  campusHintWarning: {\r\n    marginTop: 16,\r\n  },\r\n});\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { Storyline } from \"../../../storylines/Storyline\";\r\n\r\nconst storyline = new Storyline(\r\n  \"dualFlexibility\",\r\n  t(\"Dual Flexibility\"),\r\n  470,\r\n  40,\r\n  t(\r\n    \"Reach Lv45 on your primary element, and have a second element at least Lv35 and 3 levels higher than the next highest\",\r\n  ),\r\n  t(\"Unlock the ability to select a second Primary Element\"),\r\n  (state) => true,\r\n);\r\n\r\nexport { storyline as DualFlexibilityStoryline };\r\n","import React, { ReactNode } from \"react\";\r\nimport { Card as PaperCard, CardProps, useTheme } from \"react-native-paper\";\r\n\r\nexport function Card(\r\n  props: Omit<CardProps, \"elevation\"> & { children?: ReactNode },\r\n) {\r\n  const theme = useTheme();\r\n  return (\r\n    <PaperCard\r\n      {...props}\r\n      mode=\"outlined\"\r\n      // elevation={0}\r\n      style={[{ backgroundColor: theme.colors.background }, props?.style]}\r\n    >\r\n      {props.children}\r\n    </PaperCard>\r\n  );\r\n}\r\n","import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { StyleProp, View, ViewStyle } from \"react-native\";\r\nimport { TextInput, useTheme } from \"react-native-paper\";\r\nimport { GameState } from \"../../backend/GameState\";\r\nimport {\r\n  loadBase64Data,\r\n  makeCompatible,\r\n  saveDataUnsafe,\r\n} from \"../../backend/SaveData\";\r\nimport { compareVersions } from \"../../utils/CoreUtils\";\r\nimport {\r\n  LOAD_FROM_FILE_SUPPORTED,\r\n  loadSaveFromFile,\r\n} from \"../../utils/FilesystemSave\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport {\r\n  getCurrentVersion,\r\n  getCurrentVersionTimestamp,\r\n} from \"../../utils/Versioning\";\r\nimport { Button } from \"./Button\";\r\nimport Styles from \"./Styles\";\r\nimport { Text } from \"./Text\";\r\nimport { useGameState } from \"./useGameState\";\r\n\r\nexport default function LoadGameContainer(props: {\r\n  style?: StyleProp<ViewStyle>;\r\n}) {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  const [loadMessage, setLoadMessage] = useState<string | null>(\"\");\r\n  const [loadSaveContents, setLoadSaveContents] = useState(\"\");\r\n\r\n  const loadSaveFromDeserializedData = useCallback(\r\n    async (deserializedData: GameState) => {\r\n      try {\r\n        // Only in the demo version, fail loading saves coming from the full version.\r\n        const isDemo = false;\r\n        if (isDemo && deserializedData.global.isFullVersionSave) {\r\n          setLoadMessage(\r\n            t(\r\n              \"Failed to load save. This save data belongs to the full version of the game, and cannot be used in the demo version.\",\r\n            ),\r\n          );\r\n          return;\r\n        }\r\n\r\n        // Only in the full version, fail loading saves coming from the full version\r\n        // if they come from a future version.\r\n        const currentAppVersionTimestamp =\r\n          getCurrentVersionTimestamp() || +Infinity;\r\n        const currentAppVersion = getCurrentVersion() ?? \"99.99.99\";\r\n        const versionCompare = compareVersions(\r\n          currentAppVersion,\r\n          deserializedData.global.appVersionString,\r\n          2,\r\n        );\r\n        if (\r\n          !isDemo &&\r\n          deserializedData.global.isFullVersionSave &&\r\n          (currentAppVersionTimestamp <\r\n            deserializedData.global.appVersionTimestamp -\r\n              1000 * 60 * 60 * 24 * 30 ||\r\n            versionCompare < 0)\r\n        ) {\r\n          setLoadMessage(\r\n            t(\r\n              \"Failed to load save. This save data was made with a more recent version of the game. Please update your game and try again. If no update is available, please try restarting the game or your device several times and loading the save again.\",\r\n            ),\r\n          );\r\n          return;\r\n        }\r\n        const compatibleData = makeCompatible(deserializedData);\r\n        const skipAheadTime = Math.max(\r\n          Math.min(\r\n            60 * 60 * 48,\r\n            (Date.now() - compatibleData.run.lastProcessedTime) / 1000,\r\n          ),\r\n          0,\r\n        );\r\n        compatibleData.run.skipAheadTime = skipAheadTime;\r\n        stateRef.current.overwrite((_oldState) => {\r\n          return compatibleData;\r\n        });\r\n        await saveDataUnsafe(compatibleData);\r\n        setLoadMessage(t(\"Load successful!\"));\r\n      } catch (e) {\r\n        setLoadMessage(\r\n          t(\r\n            \"Failed to load save because of an unexpected error! Is the data valid?\",\r\n          ),\r\n        );\r\n      }\r\n    },\r\n    [],\r\n  );\r\n  const importSavefile = useCallback(async () => {\r\n    if (loadSaveContents === \"\") {\r\n      setLoadMessage(\r\n        t(\"Please paste your save in the text field above this message first!\"),\r\n      );\r\n      return;\r\n    }\r\n    try {\r\n      const deserializedData = await loadBase64Data(loadSaveContents);\r\n      if (deserializedData != null) {\r\n        await loadSaveFromDeserializedData(deserializedData);\r\n      } else {\r\n        setLoadMessage(\r\n          t(\"Failed to load save. Make sure you have copied the full text!\"),\r\n        );\r\n      }\r\n    } catch (e) {\r\n      setLoadMessage(\r\n        t(\"Failed to load save. Make sure you have copied the full text!\"),\r\n      );\r\n    }\r\n  }, [loadSaveContents, loadSaveFromDeserializedData]);\r\n  useEffect(() => setLoadMessage(\"\"), [loadSaveContents]);\r\n\r\n  const theme = useTheme();\r\n\r\n  const showByFile = LOAD_FROM_FILE_SUPPORTED;\r\n\r\n  const importSavefileFromFile = useCallback(async () => {\r\n    try {\r\n      const result = await loadSaveFromFile();\r\n      if (result.result === \"error\") {\r\n        setLoadMessage(\r\n          t(\r\n            \"There was an error reading from the file. Is it a valid Magic Research save? {{error}}\",\r\n            { error: result.error },\r\n          ),\r\n        );\r\n      }\r\n      if (result.result === \"success\") {\r\n        await loadSaveFromDeserializedData(result.data);\r\n      }\r\n    } catch (e) {\r\n      setLoadMessage(\r\n        t(\r\n          \"There was an error reading from the file. Is it a valid Magic Research save?\",\r\n        ),\r\n      );\r\n    }\r\n  }, [loadSaveFromDeserializedData]);\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View style={props.style}>\r\n        <TextInput\r\n          multiline={true}\r\n          onChangeText={setLoadSaveContents}\r\n          value={loadSaveContents}\r\n          mode=\"outlined\"\r\n          label={t(\"Save text\") ?? \"Save text\"}\r\n          style={{ maxHeight: 120 }}\r\n        />\r\n        {loadMessage != \"\" && (\r\n          <View style={Styles.mt8}>\r\n            <Text style={{ color: theme.colors.error }}>{loadMessage}</Text>\r\n          </View>\r\n        )}\r\n        {loadSaveContents != \"\" || !showByFile ? (\r\n          <Button style={Styles.mt16} onPress={importSavefile}>\r\n            {t(\"Import savefile\")}\r\n          </Button>\r\n        ) : (\r\n          <Button style={Styles.mt16} onPress={importSavefileFromFile}>\r\n            {t(\"Load from file\")}\r\n          </Button>\r\n        )}\r\n      </View>\r\n    ),\r\n    [\r\n      setLoadSaveContents,\r\n      loadSaveContents,\r\n      loadMessage,\r\n      importSavefile,\r\n      importSavefileFromFile,\r\n    ],\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { StyleSheet, View, useWindowDimensions } from \"react-native\";\r\nimport { Card, RadioButton } from \"react-native-paper\";\r\nimport { clearAllCaches } from \"../backend/Caching\";\r\nimport { isDemo } from \"../backend/Demo\";\r\nimport {\r\n  Challenges,\r\n  getVisibleChallenges,\r\n} from \"../backend/challenges/Challenges\";\r\nimport {\r\n  CombatClasses,\r\n  getSelectableCombatClasses,\r\n} from \"../backend/classes/CombatClasses\";\r\nimport { DualFlexibilityStoryline } from \"../backend/events/storyline/cavern/DualFlexibilityStoryline\";\r\nimport {\r\n  SpellElement,\r\n  getMaxPrimaryElementLevel,\r\n  getUnlockedElements,\r\n  grantStartingExp,\r\n  selectPrimaryElement,\r\n  selectSecondaryElement,\r\n  translateElement,\r\n} from \"../backend/spells/Elements\";\r\nimport { runGameStartupListeners } from \"../backend/spells/GameStartup\";\r\nimport { LOAD_FROM_FILE_SUPPORTED } from \"../utils/FilesystemSave\";\r\nimport { t } from \"../utils/I18n\";\r\nimport { Button } from \"./utility/Button\";\r\nimport { Card as UtilityCard } from \"./utility/Card\";\r\nimport LoadGameContainer from \"./utility/LoadGameContainer\";\r\nimport { Markdown } from \"./utility/Markdown\";\r\nimport Styles from \"./utility/Styles\";\r\nimport { Text } from \"./utility/Text\";\r\nimport { useGameState } from \"./utility/useGameState\";\r\n\r\nexport default function Intro() {\r\n  const state = useGameState();\r\n  const [selectedElement, setSelectedElement] = useState(null as string | null);\r\n  const elements = getUnlockedElements(state);\r\n\r\n  const selectedMPL =\r\n    selectedElement != null\r\n      ? getMaxPrimaryElementLevel(state, selectedElement as SpellElement)\r\n      : 0;\r\n  const isFirstTime =\r\n    (state.world.totalTimesResetted ?? 0) === 0 &&\r\n    (state.global.newGamePlusCount ?? 0) === 0;\r\n  const showLoadGameContainer = isFirstTime && !isDemo();\r\n\r\n  const loadText = LOAD_FROM_FILE_SUPPORTED\r\n    ? t(\r\n        \"If you have save data from the demo version of the game, you may load it by opening the save file, or pasting it here.\",\r\n      )\r\n    : t(\r\n        \"If you have save data from the demo version of the game, you may load it by pasting it here.\",\r\n      );\r\n  const primarySchoolText = t(`Please choose a primary element.`);\r\n\r\n  const elementDescriptionMap: Record<SpellElement, string> = {\r\n    Fire: t(\r\n      \"You have selected **Fire**! Fire specializes in high temperatures and raw power, as well as Catalysts, which increase the efficiency with which you can generate resources.\",\r\n    ),\r\n    Earth: t(\r\n      \"You have selected **Earth**! Earth is defensive and strongly protective. It specializes in Storages, which allow you to hold more resources at a time.\",\r\n    ),\r\n    Water: t(\r\n      \"You have selected **Water**! Water has a focus on health and basic Mana generation, the source of all Magic. Allows for more frequent spellcasting.\",\r\n    ),\r\n    Air: t(\r\n      \"You have selected **Air**! Air is speedy, but also plentiful. It is great for making large amounts of Coins, efficiently and quickly, as well as moving fast.\",\r\n    ),\r\n    Poison: t(\r\n      \"You have selected **Poison**! Poison can deal damage over time regardless of defense (and is sometimes even unavoidable), and is a key ingredient in many alchemical potions, Monstium gathering, and more.\",\r\n    ),\r\n    Mind: t(\r\n      \"You have selected **Mind**! Mind is a mysterious element with multiple applications, affecting various things about the game. It is also good for guaranteed damage that doesn't miss.\",\r\n    ),\r\n    Life: t(\r\n      \"You have selected **Life**! Apparently there is some of this element in each living being, from the tiniest plant to the largest animal. Key for healing and staying healthy.\",\r\n    ),\r\n    Electric: t(\r\n      \"You have selected **Electric**! Energy in one of its purest forms. Powerful, fast attacks, with a high critical hit chance that can pierce defenses.\",\r\n    ),\r\n    Death: t(\r\n      \"You have selected **Death**! One of the strongest elements, it is intensely powerful, but those who delve in it too much are said to become corrupt... It allows game-changing Rituals.\",\r\n    ),\r\n    Holy: t(\r\n      \"You have selected **Holy**! Power granted directly from a Divine, it can purify corruption.\",\r\n    ),\r\n    Time: t(\r\n      \"You have selected **Time**! A secret element, very few know about it.\",\r\n    ),\r\n    Space: t(\r\n      \"You have selected **Space**! A secret element, very few know about it.\",\r\n    ),\r\n  };\r\n\r\n  const [selectedClassId, setSelectedClassId] = useState(\r\n    undefined as string | undefined,\r\n  );\r\n  const classes = getSelectableCombatClasses(state);\r\n  const showClassSelection = classes.length > 0;\r\n  const selectedClass =\r\n    selectedClassId != null ? CombatClasses.getById(selectedClassId) : null;\r\n\r\n  const [selectedSecondaryElement, setSelectedSecondaryElement] = useState(\r\n    null as string | null,\r\n  );\r\n  const selectedSecondaryMPL =\r\n    selectedSecondaryElement != null\r\n      ? getMaxPrimaryElementLevel(\r\n          state,\r\n          selectedSecondaryElement as SpellElement,\r\n        )\r\n      : 0;\r\n  const secondarySchoolText = t(\r\n    \"Please choose a second primary element. It will gain identical bonuses to the first.\",\r\n  );\r\n  const showSecondaryElementSelection =\r\n    DualFlexibilityStoryline.isBonusActive(state);\r\n\r\n  useEffect(() => setSelectedSecondaryElement(null), [selectedElement]);\r\n\r\n  const [selectedChallengeId, setSelectedChallengeId] = useState(\r\n    undefined as string | undefined,\r\n  );\r\n  const challenges = getVisibleChallenges(state);\r\n  const showChallenges = challenges.length > 0;\r\n  const selectedChallenge =\r\n    selectedChallengeId != null\r\n      ? Challenges.getById(selectedChallengeId)\r\n      : null;\r\n\r\n  const allowMovingForward =\r\n    selectedElement != null &&\r\n    (!showClassSelection || selectedClassId != null) &&\r\n    (!showSecondaryElementSelection || selectedSecondaryElement != null);\r\n\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  return (\r\n    <View style={[styles.container, width < 600 && { width }]}>\r\n      <View>\r\n        <View>\r\n          <Text h1>{t(\"Welcome to Magic Research 2!\")}</Text>\r\n          <Text style={Styles.mt8}>\r\n            {t(\r\n              \"In Magic Research 2, you are a rookie wizard with a single ambition: to find or create the Philosopher's Stone, a legendary magical item that is said to be able to cure any illness. As you do so, you will learn more than you ever imagined about Magic and about the world around you. What kinds of adventures await you?\",\r\n            )}\r\n          </Text>\r\n          <Text style={Styles.mt8}>\r\n            {t(\r\n              \"Before starting your story, you will need to choose a primary element. While you will need to utilize every element at your disposal to succeed, choosing an element as a primary will make it much easier to become proficient on that element, and might allow you to access some specific content related to that element.\",\r\n            )}\r\n          </Text>\r\n        </View>\r\n        <UtilityCard style={Styles.mt16}>\r\n          <Card.Title title={t(\"Elements\")} accessibilityRole=\"header\" />\r\n          <Card.Content>\r\n            <Markdown>{primarySchoolText}</Markdown>\r\n            <View style={Styles.mt8}>\r\n              <RadioButton.Group\r\n                onValueChange={setSelectedElement}\r\n                value={selectedElement ?? \"\"}\r\n              >\r\n                {elements.map((element, idx) => (\r\n                  <RadioButton.Item\r\n                    value={element}\r\n                    key={element}\r\n                    label={translateElement(element)}\r\n                  />\r\n                ))}\r\n              </RadioButton.Group>\r\n            </View>\r\n            <View style={Styles.mt8}>\r\n              {selectedElement != undefined && (\r\n                <View>\r\n                  <Markdown>{elementDescriptionMap[selectedElement]}</Markdown>\r\n                  {selectedMPL > 0 ? (\r\n                    <Text style={Styles.mt8}>\r\n                      {t(\r\n                        \"Your Maximum Primary Level (MPL) for this element is {{mpl}}.\",\r\n                        { mpl: selectedMPL },\r\n                      )}\r\n                    </Text>\r\n                  ) : (\r\n                    false\r\n                  )}\r\n                </View>\r\n              )}\r\n            </View>\r\n            {showSecondaryElementSelection && selectedElement != undefined && (\r\n              <View style={Styles.mt16}>\r\n                <Markdown>{secondarySchoolText}</Markdown>\r\n                <View style={Styles.mt8}>\r\n                  <RadioButton.Group\r\n                    onValueChange={setSelectedSecondaryElement}\r\n                    value={selectedSecondaryElement ?? \"\"}\r\n                  >\r\n                    {elements\r\n                      .filter((element) => element != selectedElement)\r\n                      .map((element, idx) => (\r\n                        <RadioButton.Item\r\n                          value={element}\r\n                          key={element}\r\n                          label={translateElement(element)}\r\n                        />\r\n                      ))}\r\n                  </RadioButton.Group>\r\n                </View>\r\n                <View style={Styles.mt8}>\r\n                  {selectedSecondaryElement != undefined && (\r\n                    <View>\r\n                      <Markdown>\r\n                        {elementDescriptionMap[selectedSecondaryElement]}\r\n                      </Markdown>\r\n                      {selectedSecondaryMPL > 0 ? (\r\n                        <Text style={Styles.mt8}>\r\n                          {t(\r\n                            \"Your Maximum Primary Level (MPL) for this element is {{mpl}}.\",\r\n                            { mpl: selectedSecondaryMPL },\r\n                          )}\r\n                        </Text>\r\n                      ) : (\r\n                        false\r\n                      )}\r\n                    </View>\r\n                  )}\r\n                </View>\r\n              </View>\r\n            )}\r\n          </Card.Content>\r\n        </UtilityCard>\r\n        {showClassSelection && (\r\n          <UtilityCard style={Styles.mt16}>\r\n            <Card.Title title={t(\"Classes\")} accessibilityRole=\"header\" />\r\n            <Card.Content>\r\n              <Markdown>{t(\"Choose a class.\")}</Markdown>\r\n              <View style={Styles.mt8}>\r\n                <RadioButton.Group\r\n                  onValueChange={setSelectedClassId}\r\n                  value={selectedClassId ?? \"\"}\r\n                >\r\n                  {classes.map((combatClass, idx) => (\r\n                    <RadioButton.Item\r\n                      value={combatClass.getId()}\r\n                      key={combatClass.getId()}\r\n                      label={combatClass.getDisplayName()}\r\n                    />\r\n                  ))}\r\n                </RadioButton.Group>\r\n              </View>\r\n              <View style={Styles.mt8}>\r\n                {selectedClass != null && (\r\n                  <View>\r\n                    <View>\r\n                      <Markdown>\r\n                        {selectedClass.getDisplayDescription(state)}\r\n                      </Markdown>\r\n                    </View>\r\n                    <View>\r\n                      <Markdown>\r\n                        {t(\"Effect: **{{combatClassEffect}}**\", {\r\n                          combatClassEffect:\r\n                            selectedClass.getDisplayEffect(state),\r\n                        })}\r\n                      </Markdown>\r\n                    </View>\r\n                  </View>\r\n                )}\r\n              </View>\r\n            </Card.Content>\r\n          </UtilityCard>\r\n        )}\r\n        {showChallenges && (\r\n          <UtilityCard style={Styles.mt16}>\r\n            <Card.Title title={t(\"Challenges\")} accessibilityRole=\"header\" />\r\n            <Card.Content>\r\n              <Markdown>\r\n                {t(\r\n                  \"You may optionally select a challenge for the current retirement. Challenges strongly increase the difficulty of your journey; however, if you are able to complete them, you will gain permanent bonuses!\",\r\n                )}\r\n              </Markdown>\r\n              <View style={Styles.mt8}>\r\n                <RadioButton.Group\r\n                  onValueChange={setSelectedChallengeId}\r\n                  value={selectedChallengeId ?? \"\"}\r\n                >\r\n                  <RadioButton.Item\r\n                    value={\"\"}\r\n                    key={\"none\"}\r\n                    label={t(\"No Challenge\")}\r\n                  />\r\n                  {challenges.map((challenge, idx) => (\r\n                    <RadioButton.Item\r\n                      value={challenge.getId()}\r\n                      key={challenge.getId()}\r\n                      label={t(\"{{challenge}}{{completed}}\", {\r\n                        challenge: challenge.getName(),\r\n                        completed: challenge.isCompleted(state)\r\n                          ? t(\" (Complete!)\")\r\n                          : \"\",\r\n                      })}\r\n                    />\r\n                  ))}\r\n                </RadioButton.Group>\r\n              </View>\r\n              <View style={Styles.mt8}>\r\n                {selectedChallenge != null && (\r\n                  <View>\r\n                    <View>\r\n                      <Markdown>\r\n                        {t(\"{{description}} **{{effect}}**\", {\r\n                          description: selectedChallenge.getDescription(state),\r\n                          effect: selectedChallenge.getEffect(state),\r\n                        })}\r\n                      </Markdown>\r\n                    </View>\r\n                    <View style={Styles.mt4}>\r\n                      <Markdown>\r\n                        {t(\"To win: **{{objective}}**\", {\r\n                          objective: selectedChallenge.getObjective(state),\r\n                        })}\r\n                      </Markdown>\r\n                    </View>\r\n                    {selectedChallenge.isCompleted(state) && (\r\n                      <View style={Styles.mt4}>\r\n                        <Markdown>\r\n                          {t(\r\n                            \"*You have already completed this Challenge!* It is giving you the following permanent bonus: **{{reward}}**\",\r\n                            {\r\n                              reward: selectedChallenge.getReward(state),\r\n                            },\r\n                          )}\r\n                        </Markdown>\r\n                      </View>\r\n                    )}\r\n                  </View>\r\n                )}\r\n              </View>\r\n            </Card.Content>\r\n          </UtilityCard>\r\n        )}\r\n        <Button\r\n          style={styles.startButton}\r\n          disabled={!allowMovingForward}\r\n          onPress={() => {\r\n            state.apply((state) => {\r\n              state.run.combatClassId = selectedClassId;\r\n              state.run.currentChallengeId = selectedChallengeId;\r\n              state.run.lastProcessedTime = Date.now();\r\n              state = selectPrimaryElement(selectedElement as SpellElement)(\r\n                state,\r\n              );\r\n              if (selectedSecondaryElement != null) {\r\n                state = selectSecondaryElement(\r\n                  selectedSecondaryElement as SpellElement,\r\n                )(state);\r\n              }\r\n              // Grant the starting exp. Must be done after selecting primary elements\r\n              // due to Primary challenge.\r\n              state = grantStartingExp(state);\r\n              state = runGameStartupListeners(state);\r\n              // Clear all caches just in case\r\n              state = clearAllCaches(state);\r\n              return state;\r\n            });\r\n          }}\r\n        >\r\n          {t(\"Start the Game!\")}\r\n        </Button>\r\n        {showLoadGameContainer && (\r\n          <View>\r\n            <Markdown>{loadText}</Markdown>\r\n            <LoadGameContainer style={Styles.mt8} />\r\n          </View>\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"flex-start\",\r\n\r\n    maxWidth: 600,\r\n    paddingHorizontal: 16,\r\n    paddingTop: 8,\r\n  },\r\n  buttonGroupText: {\r\n    fontSize: 14,\r\n  },\r\n  startButton: {\r\n    marginVertical: 24,\r\n  },\r\n  mplText: {\r\n    marginTop: 8,\r\n  },\r\n});\r\n","import React, { useMemo, useRef } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport {\r\n  EquipmentSlot,\r\n  getEquippedExtraSlotItem,\r\n  getEquippedItem,\r\n  getMaxEquippedItemsPerSlot,\r\n  getUnequipAction,\r\n} from \"../../backend/items/Equipment\";\r\nimport { Items } from \"../../backend/items/Items\";\r\nimport { EquippableItem } from \"../../backend/items/equipment/EquippableItem\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { Button } from \"../utility/Button\";\r\nimport Styles from \"../utility/Styles\";\r\nimport { Text } from \"../utility/Text\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\nimport { ItemInfo } from \"./ItemInfo\";\r\nimport { ItemTile } from \"./ItemTile\";\r\n\r\nfunction EquippedItemSlot(props: {\r\n  slot: EquipmentSlot;\r\n  position?: number;\r\n  onPressEquippedItem?: (slot: EquipmentSlot) => void;\r\n}) {\r\n  const state = useGameState();\r\n  const slot = props.slot;\r\n  const position = props.position;\r\n  const equippedItem = getEquippedExtraSlotItem(state, slot, position);\r\n  const actualEquippedItem = getEquippedItem(state, slot, position);\r\n  const unequipAction = getUnequipAction(state, slot, position ?? 0);\r\n\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const item = equippedItem && Items.getById(equippedItem.itemId);\r\n  if (item && !(item instanceof EquippableItem)) {\r\n    throw new Error(\"Only equippable items should be equipped\");\r\n  }\r\n\r\n  const showAsDisabled = equippedItem != actualEquippedItem;\r\n  return useMemo(() => {\r\n    if (!equippedItem) {\r\n      return (\r\n        <View key={slot + position}>\r\n          <ItemTile title={t(\"Empty\")} />\r\n          <Button\r\n            compact={true}\r\n            style={[styles.button, { height: 20 }]}\r\n            labelStyle={{\r\n              marginHorizontal: 0,\r\n              flex: 1,\r\n              marginVertical: 0,\r\n              height: 20,\r\n            }}\r\n            contentStyle={{\r\n              marginHorizontal: 0,\r\n              height: 20,\r\n            }}\r\n            disabled={true}\r\n            onPress={() =>\r\n              unequipAction.transform &&\r\n              stateRef.current.apply(unequipAction.transform)\r\n            }\r\n          >\r\n            {unequipAction.description}\r\n          </Button>\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <View key={slot + position}>\r\n        <ItemTile\r\n          icon={(item as EquippableItem).getId()}\r\n          quality={equippedItem?.params?.itemQuality}\r\n          disabled={showAsDisabled}\r\n          title={(item as EquippableItem).getName(equippedItem.params)}\r\n          tooltip={\r\n            <ItemInfo\r\n              showTile={false}\r\n              itemStack={{ itemOccurrence: equippedItem, amount: 1 }}\r\n            />\r\n          }\r\n          tooltipIdSuffix={slot}\r\n        />\r\n        <Button\r\n          compact={true}\r\n          style={[styles.button, { height: 20 }]}\r\n          labelStyle={{\r\n            marginHorizontal: 0,\r\n            flex: 1,\r\n            marginVertical: 0,\r\n            height: 20,\r\n          }}\r\n          contentStyle={{\r\n            marginHorizontal: 0,\r\n            height: 20,\r\n          }}\r\n          disabled={!unequipAction.isEnabled}\r\n          onPress={() =>\r\n            unequipAction.transform &&\r\n            stateRef.current.apply(unequipAction.transform)\r\n          }\r\n        >\r\n          {unequipAction.description}\r\n        </Button>\r\n      </View>\r\n    );\r\n  }, [\r\n    JSON.stringify(equippedItem),\r\n    showAsDisabled,\r\n    slot,\r\n    position,\r\n    unequipAction.description,\r\n    unequipAction.isEnabled,\r\n    unequipAction.transform,\r\n    stateRef,\r\n    item?.getName(equippedItem?.params || {}),\r\n  ]);\r\n}\r\n\r\nexport default function EquippedItems(props: {\r\n  onPressEquippedItem?: (slot: EquipmentSlot) => void;\r\n}) {\r\n  const state = useGameState();\r\n  const slots = [\r\n    EquipmentSlot.Hand,\r\n    EquipmentSlot.Body,\r\n    EquipmentSlot.Accessory,\r\n  ];\r\n  const slotComponents = slots.map((slot) => {\r\n    const max = getMaxEquippedItemsPerSlot(state, slot);\r\n    const components = [];\r\n    for (let i = 0; i < max; i++) {\r\n      components.push(\r\n        <EquippedItemSlot\r\n          key={slot + i}\r\n          position={i}\r\n          slot={slot as EquipmentSlot}\r\n          onPressEquippedItem={props.onPressEquippedItem}\r\n        />,\r\n      );\r\n    }\r\n    return components;\r\n  });\r\n\r\n  return (\r\n    <View style={Styles.flexRowAlignCenter}>\r\n      <View>\r\n        <Text h4>{t(\"Equip:\")}</Text>\r\n      </View>\r\n      <View\r\n        style={[\r\n          Styles.ml16,\r\n          Styles.flexRowAlignCenter,\r\n          { flex: 1, gap: 4, flexWrap: \"wrap\" },\r\n        ]}\r\n      >\r\n        {slotComponents.flat()}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  equipmentRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n    flex: 1,\r\n  },\r\n  labelStyle: {\r\n    marginHorizontal: 8,\r\n    flex: 1,\r\n  },\r\n  button: {\r\n    height: 20,\r\n  },\r\n});\r\n","import React, { useMemo, useRef } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport {\r\n  EquipmentSlot,\r\n  getEquippedExtraSlotItem,\r\n  getEquippedItem,\r\n  getMaxEquippedItemsPerSlot,\r\n  getUnequipAction,\r\n} from \"../../backend/items/Equipment\";\r\nimport { Items } from \"../../backend/items/Items\";\r\nimport { EquippableItem } from \"../../backend/items/equipment/EquippableItem\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { Button } from \"../utility/Button\";\r\nimport Styles from \"../utility/Styles\";\r\nimport { Text } from \"../utility/Text\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\nimport { ItemInfo } from \"./ItemInfo\";\r\nimport { ItemTile } from \"./ItemTile\";\r\n\r\nfunction EquippedPouchSlot(props: { index: number }) {\r\n  const state = useGameState();\r\n  const index = props.index;\r\n  const equippedItem = getEquippedExtraSlotItem(\r\n    state,\r\n    EquipmentSlot.Pouch,\r\n    index,\r\n  );\r\n  const actualEquippedItem = getEquippedItem(state, EquipmentSlot.Pouch, index);\r\n  const unequipAction = getUnequipAction(state, EquipmentSlot.Pouch, index);\r\n\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const item = equippedItem && Items.getById(equippedItem.itemId);\r\n  if (item && !(item instanceof EquippableItem)) {\r\n    throw new Error(\"Only equippable items should be equipped\");\r\n  }\r\n\r\n  const showAsDisabled = equippedItem != actualEquippedItem;\r\n\r\n  return useMemo(() => {\r\n    if (!equippedItem) {\r\n      return (\r\n        <View key={index}>\r\n          <ItemTile title={t(\"Empty\")} />\r\n          <Button\r\n            compact={true}\r\n            style={[styles.button, { height: 20 }]}\r\n            labelStyle={{\r\n              marginHorizontal: 0,\r\n              flex: 1,\r\n              marginVertical: 0,\r\n              height: 20,\r\n            }}\r\n            contentStyle={{\r\n              marginHorizontal: 0,\r\n              height: 20,\r\n            }}\r\n            disabled={true}\r\n            onPress={() =>\r\n              unequipAction.transform &&\r\n              stateRef.current.apply(unequipAction.transform)\r\n            }\r\n          >\r\n            {unequipAction.description}\r\n          </Button>\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <View key={index}>\r\n        <ItemTile\r\n          icon={(item as EquippableItem).getId()}\r\n          quality={equippedItem?.params?.itemQuality}\r\n          disabled={showAsDisabled}\r\n          title={(item as EquippableItem).getName(equippedItem.params)}\r\n          tooltip={\r\n            <ItemInfo\r\n              showTile={false}\r\n              itemStack={{ itemOccurrence: equippedItem, amount: 1 }}\r\n            />\r\n          }\r\n          tooltipIdSuffix=\"pouch\"\r\n        />\r\n        <Button\r\n          compact={true}\r\n          style={[styles.button, { height: 20 }]}\r\n          labelStyle={{\r\n            marginHorizontal: 0,\r\n            flex: 1,\r\n            marginVertical: 0,\r\n            height: 20,\r\n          }}\r\n          contentStyle={{\r\n            marginHorizontal: 0,\r\n            height: 20,\r\n          }}\r\n          disabled={!unequipAction.isEnabled}\r\n          onPress={() =>\r\n            unequipAction.transform &&\r\n            stateRef.current.apply(unequipAction.transform)\r\n          }\r\n        >\r\n          {unequipAction.description}\r\n        </Button>\r\n      </View>\r\n    );\r\n  }, [\r\n    JSON.stringify(equippedItem),\r\n    showAsDisabled,\r\n    index,\r\n    unequipAction.description,\r\n    unequipAction.isEnabled,\r\n    unequipAction.transform,\r\n    stateRef,\r\n    item?.getName(equippedItem?.params || {}),\r\n  ]);\r\n}\r\n\r\nexport default function EquippedPouch(props: {}) {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n  const capacity = getMaxEquippedItemsPerSlot(state, EquipmentSlot.Pouch);\r\n  const slotComponents = useMemo(() => {\r\n    let slotComponents = [];\r\n    for (let i = 0; i < capacity; i++) {\r\n      slotComponents.push(<EquippedPouchSlot key={i} index={i} />);\r\n    }\r\n    return slotComponents;\r\n  }, [capacity]);\r\n\r\n  return useMemo(\r\n    () =>\r\n      capacity == 0 ? (\r\n        <View />\r\n      ) : (\r\n        <View style={Styles.flexRowAlignCenter}>\r\n          <View>\r\n            <Text h4>{t(\"Pouch:\")}</Text>\r\n          </View>\r\n          <View\r\n            style={[\r\n              Styles.ml16,\r\n              Styles.flexRowAlignCenter,\r\n              { flex: 1, gap: 4, flexWrap: \"wrap\" },\r\n            ]}\r\n          >\r\n            {slotComponents}\r\n          </View>\r\n        </View>\r\n      ),\r\n    [slotComponents, capacity],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    height: 20,\r\n  },\r\n});\r\n","import memoize from \"sonic-memoize\";\r\nimport { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { Flag } from \"../Flag\";\r\nimport { hasFlag } from \"../Flags\";\r\nimport { GameState } from \"../GameState\";\r\nimport { Resource } from \"../Resources\";\r\nimport {\r\n  ActionArea,\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../action/ActionAreas\";\r\nimport { SpellElement } from \"../spells/Elements\";\r\nimport {\r\n  applyTransformations,\r\n  explainTransformationsText,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { Building, BuildingSpell } from \"./Building\";\r\n\r\nconst BASE_TIME = 30;\r\nconst saleStallTags = [TransformationTags.TimePerAutoSalePerStall, \"saleStall\"];\r\nfunction getSaleStallSecsPerSale(state: GameState): number {\r\n  return applyTransformations(saleStallTags, state, BASE_TIME);\r\n}\r\nconst secsPerSaleUnit = memoize(() => ({\r\n  unit: t(\" sec\"),\r\n}));\r\nfunction getSaleStallSecsPerSaleExplanation(state: GameState): string {\r\n  return explainTransformationsText(\r\n    saleStallTags,\r\n    state,\r\n    BASE_TIME,\r\n    secsPerSaleUnit(),\r\n  );\r\n}\r\n\r\nclass SaleStall extends Building {\r\n  getId(): string {\r\n    return \"saleStall\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Market Stall\");\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"A public-facing area of your home used to sell things you have marked for sale.\",\r\n    );\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\r\n      \"Sells one item every ^{{amount}}^<{{timeExplanation}}> sec for ^{{multiplier}}x^<{{multiplierExplanation}}> the normal price\",\r\n      {\r\n        amount: formatNumber(getSaleStallSecsPerSale(state), {\r\n          showDecimals: true,\r\n        }),\r\n        timeExplanation: getSaleStallSecsPerSaleExplanation(state),\r\n        multiplier: formatNumber(getSaleStallPriceMultiplier(state), {\r\n          showDecimals: true,\r\n        }),\r\n        multiplierExplanation: getSaleStallPriceMultiplierExplanation(state),\r\n      },\r\n    );\r\n  }\r\n\r\n  getBaseLandRequired(): number {\r\n    return 3;\r\n  }\r\n\r\n  canTurnOff(): boolean {\r\n    return true;\r\n  }\r\n}\r\n\r\nconst saleStall = new SaleStall();\r\n\r\nclass BuildSaleStall extends BuildingSpell {\r\n  getAreas(): Partial<Record<ActionArea, ActionSubcategory[]>> {\r\n    return { HOME: [ActionSubcategories.OTHER] };\r\n  }\r\n\r\n  getBuilding(): Building {\r\n    return saleStall;\r\n  }\r\n\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Coins: 200,\r\n      AirEssence: 400,\r\n      EarthEssence: 100,\r\n    };\r\n  }\r\n\r\n  getBaseResourceScale(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Coins: 1.35,\r\n      AirEssence: 1.35,\r\n      EarthEssence: 1.35,\r\n    };\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 10;\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return isMarketUnlocked(state) && super.isVisible(state);\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {};\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Air;\r\n  }\r\n}\r\n\r\nexport function isMarketUnlocked(state: GameState) {\r\n  return hasFlag(state, Flag.SaleStallsUnlocked);\r\n}\r\n\r\nconst saleStallRevenueTags = [TransformationTags.SaleStallRevenue];\r\nexport function getSaleStallPriceMultiplier(state: GameState): number {\r\n  return applyTransformations(saleStallRevenueTags, state, 2.5);\r\n}\r\n\r\nconst multiplierUnit = memoize(() => ({\r\n  unit: t(\"x\"),\r\n}));\r\n\r\nexport function getSaleStallPriceMultiplierExplanation(\r\n  state: GameState,\r\n): string {\r\n  return explainTransformationsText(\r\n    saleStallRevenueTags,\r\n    state,\r\n    2.5,\r\n    multiplierUnit(),\r\n  );\r\n}\r\n\r\nconst buildSaleStall = new BuildSaleStall();\r\n\r\nexport { buildSaleStall as BuildSaleStall, saleStall as SaleStall };\r\n","import { t } from \"../../utils/I18n\";\r\nimport { getBuildingAmountTurnedOn } from \"../buildings/Buildings\";\r\nimport { getSaleStallPriceMultiplier, SaleStall } from \"../buildings/SaleStall\";\r\nimport { GameState } from \"../GameState\";\r\nimport { getAmountOfItem } from \"../items/Inventory\";\r\nimport { ItemOccurrence } from \"../items/Item\";\r\nimport { Items } from \"../items/Items\";\r\nimport { getResourceAmount, getResourceCap, Resource } from \"../Resources\";\r\nimport { registerTimeTickListener } from \"../timetick/TimeTick\";\r\nimport {\r\n  applyTransformations,\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\n\r\nfunction autosellOneItem(state: GameState): GameState {\r\n  const autosellItemOccurrences = state.run.saleStallItems;\r\n  const currentlyInInventory = autosellItemOccurrences.filter(\r\n    (itemOccurrence) => getAmountOfItem(itemOccurrence, state) > 0,\r\n  );\r\n  const distinctItemCount = currentlyInInventory.length;\r\n  if (distinctItemCount > 0) {\r\n    const selectedItem =\r\n      currentlyInInventory[Math.floor(Math.random() * distinctItemCount)];\r\n    const item = Items.getById(selectedItem.itemId);\r\n    const sellAction = item.getSellOneAction(state, selectedItem.params, [\r\n      TransformationTags.FromSaleStalls,\r\n    ]);\r\n    state = sellAction?.transform?.(state) ?? state;\r\n  }\r\n  return state;\r\n}\r\n\r\nexport function isItemBeingAutosold(state: GameState, item: ItemOccurrence) {\r\n  return (\r\n    state.run.saleStallItems.find(\r\n      (i) =>\r\n        i.itemId == item.itemId &&\r\n        JSON.stringify(i.params) == JSON.stringify(item.params),\r\n    ) != null\r\n  );\r\n}\r\n\r\nexport function toggleItemAutosold(state: GameState, item: ItemOccurrence) {\r\n  if (isItemBeingAutosold(state, item)) {\r\n    state.run.saleStallItems = state.run.saleStallItems.filter(\r\n      (i) =>\r\n        i.itemId != item.itemId ||\r\n        JSON.stringify(i.params) != JSON.stringify(item.params),\r\n    );\r\n  } else {\r\n    state.run.saleStallItems.push(item);\r\n  }\r\n  return state;\r\n}\r\n\r\nexport function disableAllAutosold(state: GameState) {\r\n  state.run.saleStallItems = [];\r\n  return state;\r\n}\r\n\r\nexport function loadMarket() {\r\n  registerTransformation(\r\n    [[TransformationTags.ItemSalePrice, TransformationTags.FromSaleStalls]],\r\n    \"saleStallRevenue\",\r\n    t(\"From Market Stalls\"),\r\n    TransformationType.Multiplier,\r\n    (state) => getSaleStallPriceMultiplier(state),\r\n  );\r\n  const tags = [TransformationTags.TimePerAutoSalePerStall];\r\n  registerTimeTickListener(\"Autosale\", (state, timeElapsedSec, isWarp) => {\r\n    const timePerSale = applyTransformations(tags, state, 60);\r\n    const saleStalls = getBuildingAmountTurnedOn(state, SaleStall);\r\n    if (saleStalls > 0) {\r\n      const previousProgress = state.run.saleStallProgressRatio;\r\n      const additionalProgress = (saleStalls * timeElapsedSec) / timePerSale;\r\n      let totalProgress = previousProgress + additionalProgress;\r\n      while (\r\n        totalProgress >= 1.0 &&\r\n        getResourceAmount(state, Resource.Coins) <\r\n          getResourceCap(state, Resource.Coins)\r\n      ) {\r\n        totalProgress -= 1.0;\r\n        state = autosellOneItem(state);\r\n      }\r\n      state.run.saleStallProgressRatio = Math.min(1.0, totalProgress);\r\n    }\r\n\r\n    return state;\r\n  });\r\n}\r\n","import { t } from \"i18next\";\r\nimport mem from \"mem\";\r\nimport { Flag } from \"../../Flag\";\r\nimport { hasEverHadFlag } from \"../../Flags\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { getSecondsPlayed } from \"../../timetick/TotalTimePlayed\";\r\nimport { getAmountOfItem, removeFromInventory } from \"../Inventory\";\r\nimport { Item, ItemAction, ItemParams } from \"../Item\";\r\nimport { ItemTagEnum } from \"../ItemTagEnum\";\r\nimport { Items } from \"../Items\";\r\nimport { TransmutationSpell } from \"../transmute/TransmutationSpell\";\r\n\r\nconst memoizedPrimary = mem(\r\n  (\r\n    enabled: boolean,\r\n    active: boolean,\r\n    familiarId: string,\r\n    requireConfirm: boolean,\r\n    id: string,\r\n    params: ItemParams,\r\n  ) => {\r\n    return {\r\n      id: \"primaryConsumable\",\r\n      description: t(\"Use\"),\r\n      isEnabled: enabled,\r\n      isActive: active,\r\n      requireConfirm: requireConfirm,\r\n      transform: (state: GameState) => {\r\n        // Re-check enabled\r\n        const item = Items.getById(id) as FamiliarItem;\r\n        const refreshedPrimary = item.getFamiliarAction(\r\n          state,\r\n          params,\r\n          familiarId,\r\n        );\r\n        if (refreshedPrimary?.isEnabled) {\r\n          state = removeFromInventory({ itemId: id, params }, 1, state);\r\n          state.run.lastItemUsedTimes[id] = getSecondsPlayed(state);\r\n          state = (Items.getById(id) as FamiliarItem).doFamiliarItemEffect(\r\n            state,\r\n            params,\r\n            familiarId,\r\n          );\r\n        }\r\n        return state;\r\n      },\r\n    };\r\n  },\r\n  { cacheKey: JSON.stringify },\r\n);\r\n\r\n/**\r\n * A consumable item that requires a familiar.\r\n */\r\nexport abstract class FamiliarItem extends Item {\r\n  abstract doFamiliarItemEffect(\r\n    state: GameState,\r\n    params: ItemParams,\r\n    familiarId: string,\r\n  ): GameState;\r\n\r\n  canUseOnFamiliar(\r\n    state: GameState,\r\n    params: ItemParams,\r\n    familiarId: string,\r\n  ): boolean {\r\n    return true;\r\n  }\r\n\r\n  getFamiliarAction(\r\n    state: GameState,\r\n    params: ItemParams,\r\n    familiarId: string,\r\n  ): ItemAction | undefined {\r\n    const numberInInventory = getAmountOfItem(\r\n      { itemId: this.getId(), params },\r\n      state,\r\n    );\r\n    const active = this.isActive(state);\r\n    const enabled =\r\n      numberInInventory > 0 && this.canUseOnFamiliar(state, params, familiarId);\r\n    return memoizedPrimary(\r\n      enabled,\r\n      active,\r\n      familiarId,\r\n      this.shouldConfirm(),\r\n      this.getId(),\r\n      params,\r\n    );\r\n  }\r\n\r\n  getTags(): ItemTagEnum[] {\r\n    return [ItemTagEnum.Familiar];\r\n  }\r\n\r\n  shouldConfirm(): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport abstract class FamiliarTransmutationSpell extends TransmutationSpell {\r\n  abstract getItem(): FamiliarItem;\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return (\r\n      hasEverHadFlag(state, Flag.FamiliarsUnlocked) && super.isVisible(state)\r\n    );\r\n  }\r\n}\r\n","import { useCallback, useMemo, useRef, useState } from \"react\";\r\nimport { ItemAction } from \"../../backend/items/Item\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { ActiveMark } from \"../utility/ActiveMark\";\r\nimport { Button } from \"../utility/Button\";\r\nimport { Markdown } from \"../utility/Markdown\";\r\nimport Styles from \"../utility/Styles\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\n\r\nexport function ItemDetailsAction(props: {\r\n  action: ItemAction;\r\n  extraOnPress?: () => void;\r\n}) {\r\n  const action = props.action;\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n  const [pressedOnce, setPressedOnce] = useState(false);\r\n  const onPressCallback = useCallback(() => {\r\n    if (action.requireConfirm && !pressedOnce) {\r\n      setPressedOnce(true);\r\n      return;\r\n    }\r\n    action.transform && stateRef.current.apply(action.transform);\r\n    props.extraOnPress && props.extraOnPress();\r\n  }, [\r\n    action.requireConfirm,\r\n    action.requireConfirm && setPressedOnce,\r\n    action.requireConfirm && pressedOnce,\r\n    action.transform,\r\n    props.extraOnPress,\r\n  ]);\r\n  return useMemo(() => {\r\n    return (\r\n      <Button\r\n        key={action.id}\r\n        icon={\r\n          action.isActive\r\n            ? () => <ActiveMark disabled={!action.isEnabled} />\r\n            : undefined\r\n        }\r\n        disabled={!action.isEnabled}\r\n        style={Styles.mr8}\r\n        enableAutoRepress={true}\r\n        autoRepressConfig={{\r\n          dropoffMultiplier: 0.8,\r\n          startingThreshold: 300,\r\n          startingRepressTime: 200,\r\n          minTimeMs: 50,\r\n        }}\r\n        compact={true}\r\n        onPress={onPressCallback}\r\n        TextComponent={Markdown}\r\n      >\r\n        {action.requireConfirm && pressedOnce\r\n          ? t(\"Press again to confirm\")\r\n          : action.description}\r\n      </Button>\r\n    );\r\n  }, [\r\n    action.id,\r\n    action.description,\r\n    action.isEnabled,\r\n    action.isActive,\r\n    action.requireConfirm,\r\n    action.requireConfirm && pressedOnce,\r\n    onPressCallback,\r\n  ]);\r\n}\r\n","import { useMemo, useRef } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { Surface } from \"react-native-paper\";\r\nimport { Familiars, getFamiliarData } from \"../../backend/familiars/Familiar\";\r\nimport { getTotalAmountOfItem } from \"../../backend/items/Inventory\";\r\nimport { FamiliarItem } from \"../../backend/items/consumable/FamiliarItem\";\r\nimport { keysOf } from \"../../utils/CoreUtils\";\r\nimport { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { Button } from \"../utility/Button\";\r\nimport Styles from \"../utility/Styles\";\r\nimport { Text } from \"../utility/Text\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\nimport { ItemDetailsAction } from \"./ItemDetailsAction\";\r\n\r\nfunction FamiliarRow(props: {\r\n  familiarId: string;\r\n  item: FamiliarItem;\r\n  params: any;\r\n}) {\r\n  const state = useGameState();\r\n  const familiarData = getFamiliarData(state, props.familiarId);\r\n  const familiar = Familiars.getById(familiarData.familiarClassId);\r\n  const familiarLevel = familiar.getLevel(state, props.familiarId);\r\n\r\n  const familiarAction = props.item.getFamiliarAction(\r\n    state,\r\n    props.params,\r\n    props.familiarId,\r\n  );\r\n  return (\r\n    <Surface mode=\"flat\" key={props.familiarId} style={styles.rowContainer}>\r\n      <View style={Styles.flexRowSpaceBetween}>\r\n        <Text h4 style={Styles.bold}>\r\n          {t(\"{{familiarName}} - Lv{{familiarLevel}}\", {\r\n            familiarName: familiar.getName(),\r\n            familiarLevel: familiarLevel,\r\n          })}\r\n        </Text>\r\n        <View style={Styles.ml16}>\r\n          <ItemDetailsAction action={familiarAction} />\r\n        </View>\r\n      </View>\r\n    </Surface>\r\n  );\r\n}\r\n\r\nexport function ItemFamiliarModalContents(props: {\r\n  onClose: () => void;\r\n  item: FamiliarItem;\r\n  params: any;\r\n}) {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const familiarIds = keysOf(state.run.familiars);\r\n  const amount = getTotalAmountOfItem(props.item, state);\r\n\r\n  return useMemo(() => {\r\n    return (\r\n      <View>\r\n        <View style={Styles.mb8}>\r\n          <Text h3>\r\n            {t(\"Use {{item}} ({{amount}} left) on...\", {\r\n              item: props.item.getName(props.params),\r\n              amount: formatNumber(amount),\r\n            })}\r\n          </Text>\r\n        </View>\r\n        {familiarIds.map((familiarId) => (\r\n          <FamiliarRow\r\n            familiarId={familiarId}\r\n            key={familiarId}\r\n            item={props.item}\r\n            params={props.params}\r\n          />\r\n        ))}\r\n        <View style={Styles.mt8}>\r\n          <Button onPress={props.onClose}>{t(\"Close\")}</Button>\r\n        </View>\r\n      </View>\r\n    );\r\n  }, [familiarIds.join(), props.item, props.params, amount]);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  rowContainer: {\r\n    marginVertical: 8,\r\n    padding: 8,\r\n    borderRadius: 8,\r\n  },\r\n});\r\n","import React, { useCallback, useMemo, useRef, useState } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { Portal, Switch } from \"react-native-paper\";\r\nimport {\r\n  isItemBeingAutosold,\r\n  toggleItemAutosold,\r\n} from \"../../backend/autocast/Market\";\r\nimport { isMarketUnlocked } from \"../../backend/buildings/SaleStall\";\r\nimport {\r\n  ItemAction,\r\n  ItemOccurrence,\r\n  ItemStack,\r\n} from \"../../backend/items/Item\";\r\nimport { Items } from \"../../backend/items/Items\";\r\nimport { FamiliarItem } from \"../../backend/items/consumable/FamiliarItem\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { FullscreenModal } from \"../utility/FullscreenModal\";\r\nimport Styles from \"../utility/Styles\";\r\nimport { Text } from \"../utility/Text\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\nimport { ItemDetailsAction } from \"./ItemDetailsAction\";\r\nimport { ItemFamiliarModalContents } from \"./ItemFamiliarModalContents\";\r\nimport { ItemInfo } from \"./ItemInfo\";\r\n\r\nexport interface ItemDetailsProps {\r\n  itemStack: ItemStack;\r\n  selectItem: (item: ItemOccurrence) => void;\r\n  disableSelling?: boolean;\r\n  showQuickbar?: boolean;\r\n}\r\n\r\nexport function ItemDetails(props: ItemDetailsProps) {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const { itemId, params } = props.itemStack.itemOccurrence;\r\n  const item = Items.getById(itemId);\r\n  const name = item.getName(params);\r\n  const description = item.getDescription(state, params);\r\n  const effect = item.getEffect(state, params);\r\n\r\n  const isFamiliarItem = item instanceof FamiliarItem;\r\n  const [familiarItemModalVisible, setFamiliarItemModalVisible] =\r\n    useState(false);\r\n  const dismissFamiliarItemModal = useCallback(\r\n    () => setFamiliarItemModalVisible(false),\r\n    [],\r\n  );\r\n  const familiarPrimaryAction = useMemo(\r\n    () => ({\r\n      id: \"familiarPrimary\",\r\n      description: t(\"Use\"),\r\n      isEnabled: true,\r\n      transform: (state) => {\r\n        setFamiliarItemModalVisible(true);\r\n        return state;\r\n      },\r\n    }),\r\n    [setFamiliarItemModalVisible],\r\n  );\r\n\r\n  const disableSelling =\r\n    props.disableSelling || item.getBaseSalePrice(state, params) == 0;\r\n\r\n  const primaryAction: ItemAction = isFamiliarItem\r\n    ? familiarPrimaryAction\r\n    : item.getPrimaryAction(state, params);\r\n  const saleActions = disableSelling\r\n    ? undefined\r\n    : item.getSaleActions(state, params);\r\n  const quickbarAction = props.showQuickbar\r\n    ? item.getQuickbarAction(state, params)\r\n    : undefined;\r\n  const combineActions = props.disableSelling\r\n    ? undefined\r\n    : item.getCombineActions(state, params);\r\n  const extraActions = item.getExtraActions(state, params);\r\n\r\n  const onCombineAllExtraPress = useCallback(() => {\r\n    const newQuality =\r\n      (props.itemStack.itemOccurrence.params.itemQuality ?? 0) + 1;\r\n    const newOccurrence = {\r\n      itemId: props.itemStack.itemOccurrence.itemId,\r\n      params: {\r\n        ...props.itemStack.itemOccurrence.params,\r\n        itemQuality: newQuality,\r\n      },\r\n    };\r\n    props.selectItem(newOccurrence);\r\n  }, [props.itemStack.itemOccurrence, props.selectItem]);\r\n\r\n  const actions = [\r\n    { action: primaryAction },\r\n    ...(saleActions?.map((saleAction) => ({ action: saleAction })) ?? []),\r\n    { action: quickbarAction },\r\n    ...(combineActions?.map((combineAction, idx) => ({\r\n      action: combineAction,\r\n      extraPress: idx == combineActions.length - 1 && onCombineAllExtraPress,\r\n    })) ?? []),\r\n    ...(extraActions?.map((action) => ({ action: action })) ?? []),\r\n  ].filter((action) => action.action != undefined) as {\r\n    action: ItemAction;\r\n    requireConfirm?: boolean;\r\n    extraPress?: () => void;\r\n  }[];\r\n\r\n  const itemInfo = useMemo(() => {\r\n    return <ItemInfo itemStack={props.itemStack} showTile={true} />;\r\n  }, [JSON.stringify(props.itemStack)]);\r\n\r\n  const onAutosoldPress = useCallback(() => {\r\n    stateRef.current.apply((s) =>\r\n      toggleItemAutosold(s, props.itemStack.itemOccurrence),\r\n    );\r\n  }, [props.itemStack.itemOccurrence]);\r\n\r\n  return (\r\n    <View style={styles.itemDetailsContainer}>\r\n      {itemInfo}\r\n      {isMarketUnlocked(state) && !disableSelling && (\r\n        <View style={[Styles.mt8, Styles.flexRowAlignCenter, Styles.flex]}>\r\n          <Text>{t(\"Sell automatically through Market Stalls\")}</Text>\r\n          <Switch\r\n            style={Styles.ml8}\r\n            value={isItemBeingAutosold(state, props.itemStack.itemOccurrence)}\r\n            onValueChange={onAutosoldPress}\r\n          />\r\n        </View>\r\n      )}\r\n      <View style={styles.actionRow}>\r\n        {actions.map((action) => (\r\n          <ItemDetailsAction\r\n            key={action.action.id}\r\n            action={action.action}\r\n            extraOnPress={action.extraPress}\r\n          />\r\n        ))}\r\n      </View>\r\n      {isFamiliarItem && (\r\n        <Portal>\r\n          <FullscreenModal\r\n            visible={familiarItemModalVisible}\r\n            onDismiss={dismissFamiliarItemModal}\r\n          >\r\n            <ItemFamiliarModalContents\r\n              item={item as FamiliarItem}\r\n              onClose={dismissFamiliarItemModal}\r\n              params={params}\r\n            />\r\n          </FullscreenModal>\r\n        </Portal>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  itemDetailsContainer: {\r\n    marginBottom: 16,\r\n  },\r\n  actionRow: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    marginTop: 8,\r\n    rowGap: 8,\r\n  },\r\n  actionButtonContainer: {\r\n    marginRight: 8,\r\n  },\r\n});\r\n","import React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { Platform, StyleSheet, View } from \"react-native\";\r\nimport { Menu } from \"react-native-paper\";\r\nimport { memoizeWithLimit } from \"sonic-memoize\";\r\nimport { disableAllAutosold } from \"../../backend/autocast/Market\";\r\nimport { isMarketUnlocked } from \"../../backend/buildings/SaleStall\";\r\nimport {\r\n  getAmountOfItem,\r\n  getItemStackFromInventory,\r\n  isItemOccurrenceEqual,\r\n} from \"../../backend/items/Inventory\";\r\nimport {\r\n  ItemOccurrence,\r\n  ItemTag,\r\n  translateItemTag,\r\n} from \"../../backend/items/Item\";\r\nimport { ItemTagEnum } from \"../../backend/items/ItemTagEnum\";\r\nimport {\r\n  Items,\r\n  combineAll,\r\n  isItemQualityUnlocked,\r\n  sellLowQualityItems,\r\n} from \"../../backend/items/Items\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { ITEM_TAG_ORDER } from \"../Transmute\";\r\nimport { Button } from \"../utility/Button\";\r\nimport { Picker as UtilityPicker } from \"../utility/Picker\";\r\nimport Styles from \"../utility/Styles\";\r\nimport { Text } from \"../utility/Text\";\r\nimport { UIContext, useUIStateFromContext } from \"../utility/UIContext\";\r\nimport { VisibilityContext } from \"../utility/VisibilityContext\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\nimport { ItemDetails } from \"./ItemDetails\";\r\nimport { ItemGrid, ItemGridElement } from \"./ItemGrid\";\r\n\r\nconst itemFilterer = (selectedTag, itemStack) =>\r\n  selectedTag === \"All\" ||\r\n  Items.getById(itemStack.itemOccurrence.itemId)\r\n    .getTags()\r\n    .includes(selectedTag);\r\n\r\nconst itemSorter = (a, b) => {\r\n  const itemA = Items.getById(a.itemOccurrence.itemId);\r\n  const itemB = Items.getById(b.itemOccurrence.itemId);\r\n  for (let tag of ITEM_TAG_ORDER) {\r\n    if (itemA.getTags().includes(tag) && !itemB.getTags().includes(tag)) {\r\n      return -1;\r\n    }\r\n    if (itemB.getTags().includes(tag) && !itemA.getTags().includes(tag)) {\r\n      return 1;\r\n    }\r\n  }\r\n  if (itemA == itemB) {\r\n    return (\r\n      (b.itemOccurrence.params.itemQuality ?? 0) -\r\n      (a.itemOccurrence.params.itemQuality ?? 0)\r\n    );\r\n  }\r\n  return (\r\n    Items.getNumericId(a.itemOccurrence.itemId) -\r\n    Items.getNumericId(b.itemOccurrence.itemId)\r\n  );\r\n};\r\n\r\nconst getItemGridElement = memoizeWithLimit(\r\n  (itemId, amount, params, disableTooltip) => ({\r\n    itemOrSpellId: itemId,\r\n    amount: amount,\r\n    params: JSON.parse(params),\r\n    disableTooltip,\r\n  }),\r\n  10000,\r\n);\r\n\r\nexport default function InventoryItems(props: {\r\n  disableSelling?: boolean;\r\n  showQuickbar?: boolean;\r\n  showExtraActions?: boolean;\r\n  isFullBleed?: boolean;\r\n  overrideMaxHeight?: number;\r\n}) {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n  const uiContext = useContext(UIContext);\r\n  const [selectedTagString, setSelectedTag] = useUIStateFromContext(\r\n    uiContext,\r\n    \"InventoryTag\",\r\n    \"All\",\r\n  );\r\n  const selectedTag = selectedTagString as ItemTagEnum | \"All\";\r\n  const [selectedItem, setSelectedItem] = useState(\r\n    null as ItemOccurrence | null,\r\n  );\r\n  const inventory = state.run.inventory;\r\n\r\n  const tagSet = new Set<string>();\r\n  inventory.forEach((itemStack) => {\r\n    const tags = Items.getById(itemStack.itemOccurrence.itemId).getTags();\r\n    tags.forEach((tag) => tagSet.add(tag));\r\n  });\r\n  const tags = Array.from(tagSet).sort((a, b) => {\r\n    const indexA = ITEM_TAG_ORDER.findIndex((tag) => tag == a);\r\n    const indexB = ITEM_TAG_ORDER.findIndex((tag) => tag == b);\r\n    return indexA - indexB;\r\n  });\r\n  useEffect(() => {\r\n    if (!tags.includes(selectedTag)) {\r\n      setSelectedTag(\"All\");\r\n    }\r\n  }, [tags.join(), selectedTag]);\r\n\r\n  const tagButtons = useMemo(() => {\r\n    return (\r\n      <UtilityPicker\r\n        onValueChange={setSelectedTag}\r\n        selectedValue={selectedTag}\r\n        data={[\"All\", ...tags].map((tag) => ({\r\n          label: tag == \"All\" ? t(\"All\") : translateItemTag(tag as ItemTag),\r\n          value: tag,\r\n          key: tag,\r\n        }))}\r\n        disablePlaceholder={true}\r\n      />\r\n    );\r\n  }, [setSelectedTag, selectedTag, JSON.stringify(tags)]);\r\n\r\n  const sortedInventory = inventory\r\n    .filter(itemFilterer.bind(null, selectedTag))\r\n    .sort(itemSorter);\r\n\r\n  useEffect(() => {\r\n    if (selectedItem != null) {\r\n      const paramsJSON = JSON.stringify(selectedItem.params);\r\n      if (\r\n        !sortedInventory.some(\r\n          (itemStack) =>\r\n            itemStack.itemOccurrence.itemId == selectedItem.itemId &&\r\n            JSON.stringify(itemStack.itemOccurrence.params) == paramsJSON,\r\n        )\r\n      ) {\r\n        setSelectedItem(null);\r\n      }\r\n    }\r\n  }, [selectedTag]);\r\n\r\n  const itemGridElements = sortedInventory.map((itemStack, index) => {\r\n    return getItemGridElement(\r\n      itemStack.itemOccurrence.itemId,\r\n      itemStack.amount,\r\n      JSON.stringify(itemStack.itemOccurrence.params),\r\n      isItemOccurrenceEqual(itemStack.itemOccurrence, selectedItem),\r\n    );\r\n  });\r\n\r\n  const visible = useContext(VisibilityContext);\r\n  useEffect(() => {\r\n    if (!visible) {\r\n      setSelectedItem(null);\r\n    }\r\n  }, [visible]);\r\n\r\n  useEffect(() => {\r\n    if (visible && selectedItem != null) {\r\n      if (getAmountOfItem(selectedItem, state) <= 0) {\r\n        setSelectedItem(null);\r\n      }\r\n    }\r\n  }, [selectedItem, visible, state]);\r\n\r\n  const itemDetails = selectedItem != null &&\r\n    getItemStackFromInventory(state, selectedItem) != null && (\r\n      <ItemDetails\r\n        disableSelling={props.disableSelling}\r\n        showQuickbar={props.showQuickbar}\r\n        itemStack={getItemStackFromInventory(state, selectedItem)}\r\n        selectItem={setSelectedItem}\r\n      />\r\n    );\r\n\r\n  const sortedInventoryRef = useRef(sortedInventory);\r\n  sortedInventoryRef.current = sortedInventory;\r\n\r\n  const onPressItem = React.useCallback(\r\n    (item: ItemGridElement) => {\r\n      setSelectedItem({ itemId: item.itemOrSpellId, params: item.params });\r\n    },\r\n    [setSelectedItem],\r\n  );\r\n\r\n  const onDoublePressItem = React.useCallback((item: ItemGridElement) => {\r\n    stateRef.current.apply((state) => {\r\n      const selectedItem = { itemId: item.itemOrSpellId, params: item.params };\r\n      if (selectedItem?.itemId != null) {\r\n        const item = Items.getById(selectedItem.itemId);\r\n        const primaryAction = item?.getPrimaryAction(\r\n          state,\r\n          selectedItem.params,\r\n        );\r\n        if (primaryAction != null && primaryAction?.isEnabled) {\r\n          const transform = primaryAction.transform;\r\n          return transform != null ? transform(state) : state;\r\n        }\r\n      }\r\n      return state;\r\n    });\r\n  }, []);\r\n\r\n  const itemGrid = useMemo(\r\n    () => (\r\n      <ItemGrid\r\n        items={itemGridElements}\r\n        onPressItem={onPressItem}\r\n        onDoublePressItem={onDoublePressItem}\r\n        overrideMaxHeight={props.overrideMaxHeight}\r\n      />\r\n    ),\r\n    [\r\n      JSON.stringify(itemGridElements),\r\n      onPressItem,\r\n      onDoublePressItem,\r\n      props.overrideMaxHeight,\r\n    ],\r\n  );\r\n\r\n  const [menuVisible, setMenuVisible] = useState(false);\r\n  const toggleMenuVisible = useCallback(\r\n    () => setMenuVisible(!menuVisible),\r\n    [menuVisible, setMenuVisible],\r\n  );\r\n\r\n  const menuButton = useMemo(\r\n    () => (\r\n      <Button compact={true} onPress={toggleMenuVisible}>\r\n        {t(\"More actions...\")}\r\n      </Button>\r\n    ),\r\n    [toggleMenuVisible],\r\n  );\r\n  const combineAllAction = useMemo(\r\n    () => (\r\n      <Menu.Item\r\n        key=\"combineAll\"\r\n        title={t(\"Combine all\")}\r\n        onPress={() => {\r\n          stateRef.current.apply(combineAll);\r\n          setMenuVisible(false);\r\n        }}\r\n      />\r\n    ),\r\n    [setMenuVisible],\r\n  );\r\n  const sellLowQualityAction = useMemo(\r\n    () => (\r\n      <Menu.Item\r\n        key=\"sellLowQuality\"\r\n        title={t(\"Sell low quality items\")}\r\n        onPress={() => {\r\n          stateRef.current.apply(sellLowQualityItems);\r\n          setMenuVisible(false);\r\n        }}\r\n      />\r\n    ),\r\n    [setMenuVisible],\r\n  );\r\n  const removeAllFromSaleStallsAction = useMemo(\r\n    () => (\r\n      <Menu.Item\r\n        key=\"removeAllFromSaleStalls\"\r\n        title={t(\"Clear market stall marks\")}\r\n        onPress={() => {\r\n          stateRef.current.apply(disableAllAutosold);\r\n          setMenuVisible(false);\r\n        }}\r\n      />\r\n    ),\r\n    [setMenuVisible],\r\n  );\r\n  const menuDismiss = useCallback(\r\n    () => setMenuVisible(false),\r\n    [setMenuVisible],\r\n  );\r\n  const menuActions = useMemo(() => {\r\n    const menuActions = [];\r\n    if (isItemQualityUnlocked(state)) {\r\n      menuActions.push(combineAllAction);\r\n      menuActions.push(sellLowQualityAction);\r\n    }\r\n    if (isMarketUnlocked(state)) {\r\n      menuActions.push(removeAllFromSaleStallsAction);\r\n    }\r\n    return menuActions;\r\n  }, [combineAllAction, sellLowQualityAction, isItemQualityUnlocked(state)]);\r\n\r\n  const menu = useMemo(\r\n    () =>\r\n      menuActions.length > 0 &&\r\n      props.showExtraActions && (\r\n        <Menu visible={menuVisible} anchor={menuButton} onDismiss={menuDismiss}>\r\n          {menuActions}\r\n        </Menu>\r\n      ),\r\n    [props.showExtraActions, menuActions, menuVisible, menuButton, menuDismiss],\r\n  );\r\n\r\n  return useMemo(() => {\r\n    if (inventory.length == 0) {\r\n      return (\r\n        <View style={Styles.p8}>\r\n          <Text style={{ fontStyle: \"italic\" }}>\r\n            {t(\"You are not holding any items yet!\")}\r\n          </Text>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <View>\r\n        <View style={[Styles.mb8, Styles.ml8, Styles.flexRowSpaceBetween]}>\r\n          <View style={styles.tagPickerContainer}>{tagButtons}</View>\r\n          {menu}\r\n        </View>\r\n        {itemGrid}\r\n        <View\r\n          style={[\r\n            styles.detailsContainer,\r\n            props.isFullBleed && styles.detailsContainerPadding,\r\n          ]}\r\n        >\r\n          {itemDetails}\r\n        </View>\r\n      </View>\r\n    );\r\n  }, [\r\n    inventory.length,\r\n    tagButtons,\r\n    menu,\r\n    itemGrid,\r\n    itemDetails,\r\n    props.isFullBleed,\r\n  ]);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  detailsContainer: {\r\n    marginTop: 18,\r\n  },\r\n  detailsContainerPadding: {\r\n    paddingHorizontal: 8,\r\n    paddingBottom: 8,\r\n  },\r\n  tagPickerContainer: {\r\n    width: 180,\r\n    ...Platform.select({\r\n      android: { backgroundColor: \"#eee\", borderRadius: 10, default: {} },\r\n    }),\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { EquipmentSetButtons } from \"./inventory/EquipmentSetButtons\";\r\nimport EquippedItems from \"./inventory/EquippedItems\";\r\nimport EquippedPouch from \"./inventory/EquippedPouch\";\r\nimport InventoryItems from \"./inventory/InventoryItems\";\r\nimport Styles from \"./utility/Styles\";\r\n\r\nexport default function Inventory() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.fullBleedPadding}>\r\n        <View style={styles.equippedItemsContainer}>\r\n          <EquippedItems />\r\n        </View>\r\n        <View style={Styles.mb16}>\r\n          <EquippedPouch />\r\n        </View>\r\n        <View style={styles.equipmentSetButtonsRow}>\r\n          <EquipmentSetButtons />\r\n        </View>\r\n      </View>\r\n      <InventoryItems isFullBleed={true} showExtraActions={true} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"flex-start\",\r\n    width: \"100%\",\r\n  },\r\n  topRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginBottom: 16,\r\n    height: 48,\r\n  },\r\n  arrowBack: {\r\n    marginRight: 8,\r\n  },\r\n  equippedItemsContainer: {\r\n    marginBottom: 8,\r\n  },\r\n  row: {\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  topButtons: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  craftButton: {\r\n    marginLeft: 16,\r\n  },\r\n  fullBleedPadding: {\r\n    paddingHorizontal: 8,\r\n    marginTop: 8,\r\n  },\r\n  equipmentSetButtonsRow: {\r\n    marginBottom: 16,\r\n  },\r\n  smallButtonTitle: {\r\n    fontSize: 12,\r\n  },\r\n});\r\n","export function OrientationLockManager() {\r\n  // Do not lock anything on web\r\n  return null;\r\n}\r\n","import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  Easing,\r\n  Platform,\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  View,\r\n} from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { t } from \"../utils/I18n\";\r\nimport { OrientationLockManager } from \"../utils/OrientationLockManager\";\r\nimport { Text } from \"./utility/Text\";\r\n\r\nexport function Loading(props: {}) {\r\n  const theme = useTheme();\r\n\r\n  const loadingAnim = useRef(new Animated.Value(0.0)).current;\r\n\r\n  useEffect(() => {\r\n    Animated.timing(loadingAnim, {\r\n      useNativeDriver: true,\r\n      toValue: 400,\r\n      duration: 60000,\r\n      easing: Easing.out(Easing.poly(5)),\r\n    }).start();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <OrientationLockManager />\r\n      <StatusBar style={theme.dark ? \"light\" : \"dark\"} />\r\n      <SafeAreaView\r\n        style={[\r\n          styles.safeAreaContainer,\r\n          {\r\n            backgroundColor: theme.colors.background,\r\n          },\r\n        ]}\r\n      >\r\n        <View style={{ alignItems: \"center\", width: \"100%\" }}>\r\n          <ActivityIndicator size=\"large\" />\r\n          {Platform.OS != \"web\" && (\r\n            <View\r\n              style={{\r\n                width: 200,\r\n                marginVertical: 8,\r\n                borderWidth: 1,\r\n                borderRadius: 3,\r\n                height: 6,\r\n                overflow: \"hidden\",\r\n                borderColor: theme.colors.primary,\r\n              }}\r\n            >\r\n              <Animated.View\r\n                style={{\r\n                  height: 4,\r\n                  width: 1,\r\n                  transform: [{ scaleX: loadingAnim }],\r\n                  backgroundColor: theme.colors.primary,\r\n                }}\r\n              />\r\n            </View>\r\n          )}\r\n          <Text\r\n            style={{\r\n              color: theme.colors.onBackground,\r\n            }}\r\n          >\r\n            {t(\"Loading game. Please wait a moment...\")}\r\n          </Text>\r\n        </View>\r\n      </SafeAreaView>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  safeAreaContainer: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n","import { useEffect } from \"react\";\r\nimport { useGameState } from \"../components/utility/useGameState\";\r\nimport { electron, isElectron } from \"./ElectronUtils\";\r\n\r\nexport const ZOOM_SUPPORTED = isElectron();\r\n\r\nexport function ZoomChecker() {\r\n  if (!isElectron()) {\r\n    return null;\r\n  }\r\n\r\n  const state = useGameState();\r\n\r\n  useEffect(() => {\r\n    electron().webFrame.setZoomFactor(state.options.zoomLevel);\r\n  }, [state.options.zoomLevel]);\r\n\r\n  return null;\r\n}\r\n","import { MaterialIcons } from \"@expo/vector-icons\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport * as Clipboard from \"expo-clipboard\";\r\nimport React, {\r\n  RefObject,\r\n  useCallback,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport {\r\n  Platform,\r\n  StyleSheet,\r\n  TouchableWithoutFeedback,\r\n  View,\r\n  useWindowDimensions,\r\n} from \"react-native\";\r\nimport DraggableFlatList, {\r\n  DragEndParams,\r\n  RenderItemParams,\r\n  ScaleDecorator,\r\n} from \"react-native-draggable-flatlist\";\r\nimport { TextInput, useTheme } from \"react-native-paper\";\r\nimport { Flag } from \"../backend/Flag\";\r\nimport { hasFlag } from \"../backend/Flags\";\r\nimport { GameStateValue, INITIAL_STATE } from \"../backend/GameState\";\r\nimport { serializeSaveData } from \"../backend/SaveData\";\r\nimport { EventTag } from \"../backend/events/GameEvent\";\r\nimport {\r\n  SpellElement,\r\n  getFullyUnlockedElements,\r\n  translateElement,\r\n} from \"../backend/spells/Elements\";\r\nimport { clone } from \"../utils/CoreUtils\";\r\nimport {\r\n  LOAD_FROM_FILE_SUPPORTED,\r\n  SAVE_TO_FILE_SUPPORTED,\r\n  loadTranslationsFromFile,\r\n  saveToFile,\r\n} from \"../utils/FilesystemSave\";\r\nimport { formatNumber } from \"../utils/FormattingUtils\";\r\nimport { t } from \"../utils/I18n\";\r\nimport { Storage } from \"../utils/Storage\";\r\nimport { ZOOM_SUPPORTED } from \"../utils/Zoom\";\r\nimport { Button } from \"./utility/Button\";\r\nimport CategoryContainer from \"./utility/CategoryContainer\";\r\nimport { CheckBox } from \"./utility/CheckBox\";\r\nimport LoadGameContainer from \"./utility/LoadGameContainer\";\r\nimport {\r\n  DEFAULT_SECTION_ORDER,\r\n  getAllMenuItems,\r\n  getSectionInfo,\r\n} from \"./utility/Miscellaneous\";\r\nimport { Picker as UtilityPicker } from \"./utility/Picker\";\r\nimport Styles from \"./utility/Styles\";\r\nimport { Text } from \"./utility/Text\";\r\nimport { GameIcon } from \"./utility/icons/GameIcon\";\r\nimport { useGameState } from \"./utility/useGameState\";\r\n\r\nconst FPS_DATA = [\"10\", \"12\", \"15\", \"20\", \"24\", \"30\", \"40\", \"50\", \"60\"].map(\r\n  (x) => ({ label: x, key: x, value: x }),\r\n);\r\n\r\nconst ZOOM_DATA = [\r\n  0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 0.98, 1.0, 1.02, 1.05, 1.1, 1.151, 1.2,\r\n  1.25, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.25, 2.5, 2.75, 3.0,\r\n].map((x) => ({\r\n  label: formatNumber(x, { showDecimals: true }) + \"x\",\r\n  key: x.toString(),\r\n  value: x.toString(),\r\n}));\r\n\r\nfunction useEventTagToggle(stateRef: RefObject<GameStateValue>, tag: EventTag) {\r\n  return useCallback(() => {\r\n    stateRef.current?.apply((oldState) => {\r\n      if (oldState.options.hideEventTags.includes(tag)) {\r\n        oldState.options.hideEventTags.splice(\r\n          oldState.options.hideEventTags.findIndex(\r\n            (innerTag) => innerTag === tag,\r\n          ),\r\n          1,\r\n        );\r\n      } else {\r\n        oldState.options.hideEventTags.push(tag);\r\n      }\r\n      return oldState;\r\n    });\r\n  }, []);\r\n}\r\n\r\nfunction useHiddenFromBottomMenuToggle(\r\n  stateRef: RefObject<GameStateValue>,\r\n  section: string,\r\n) {\r\n  return useCallback(() => {\r\n    stateRef.current?.apply((oldState) => {\r\n      if (oldState.options.hiddenFromBottomMenu.includes(section)) {\r\n        oldState.options.hiddenFromBottomMenu.splice(\r\n          oldState.options.hiddenFromBottomMenu.findIndex(\r\n            (innerSection) => innerSection === section,\r\n          ),\r\n          1,\r\n        );\r\n      } else {\r\n        oldState.options.hiddenFromBottomMenu.push(section);\r\n      }\r\n      return oldState;\r\n    });\r\n  }, []);\r\n}\r\n\r\nfunction BottomMenuToggle(props: { section: string }) {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const onPress = useHiddenFromBottomMenuToggle(stateRef, props.section);\r\n\r\n  const title = useMemo(\r\n    () => (\r\n      <View style={styles.toggleMenuRow}>\r\n        <GameIcon icon={props.section.toLowerCase()} small />\r\n        <View style={styles.toggleMenuTextContainer}>\r\n          <Text>{getSectionInfo(props.section).name}</Text>\r\n        </View>\r\n      </View>\r\n    ),\r\n    [props.section],\r\n  );\r\n\r\n  return (\r\n    <View style={[Styles.mt8, Styles.mr8]}>\r\n      <CheckBox\r\n        title={title}\r\n        checked={!state.options.hiddenFromBottomMenu.includes(props.section)}\r\n        onPress={onPress}\r\n        containerStyle={styles.toggleMenuCheckboxContainer}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction MenuSection(props: { drag: () => void; section: string }) {\r\n  const state = useGameState();\r\n  const theme = useTheme();\r\n  const sectionInfo = getSectionInfo(props.section);\r\n\r\n  const visible =\r\n    sectionInfo == null ? false : sectionInfo?.isVisible?.(state) ?? true;\r\n  const title = sectionInfo?.name;\r\n\r\n  return useMemo(\r\n    () =>\r\n      visible && (\r\n        <ScaleDecorator>\r\n          <View style={Styles.flexRowAlignCenter}>\r\n            <View\r\n              importantForAccessibility=\"no-hide-descendants\"\r\n              accessibilityElementsHidden={true}\r\n              style={styles.dragHandle}\r\n            >\r\n              <TouchableWithoutFeedback\r\n                onPressIn={props.drag}\r\n                hitSlop={{ top: 8, bottom: 8, left: 8, right: 8 }}\r\n                importantForAccessibility=\"no-hide-descendants\"\r\n                accessibilityElementsHidden={true}\r\n              >\r\n                <MaterialIcons\r\n                  name=\"drag-indicator\"\r\n                  size={24}\r\n                  color={theme.colors.onSecondaryContainer}\r\n                />\r\n              </TouchableWithoutFeedback>\r\n            </View>\r\n            <View style={[Styles.flex, Styles.flexRowAlignCenter]}>\r\n              {sectionInfo != null && (\r\n                <GameIcon icon={props.section.toLowerCase()} />\r\n              )}\r\n              <View style={[Styles.flex, Styles.ml16]}>\r\n                <Text>{title}</Text>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </ScaleDecorator>\r\n      ),\r\n    [props.drag, theme, title, visible],\r\n  );\r\n}\r\n\r\nfunction MenuSectionsOrder(props: {}) {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const renderItem = useCallback(\r\n    ({ item, getIndex, drag, isActive }: RenderItemParams<string>) => (\r\n      <MenuSection drag={drag} section={item} />\r\n    ),\r\n    [],\r\n  );\r\n  const keyExtractor = useCallback((section: string) => section, []);\r\n  const onDragEnd = useCallback((params: DragEndParams<string>) => {\r\n    stateRef.current.apply((state) => {\r\n      state.options.sectionOrder = params.data;\r\n      return state;\r\n    });\r\n  }, []);\r\n\r\n  const data =\r\n    state.options.sectionOrder.length > 0\r\n      ? state.options.sectionOrder\r\n      : DEFAULT_SECTION_ORDER;\r\n\r\n  return (\r\n    <DraggableFlatList\r\n      renderItem={renderItem}\r\n      data={data}\r\n      keyExtractor={keyExtractor}\r\n      onDragEnd={onDragEnd}\r\n      nestedScrollEnabled={true}\r\n    />\r\n  );\r\n}\r\n\r\nexport default function Options() {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const [copyToClipboardError, setCopyToClipboardError] = useState(null);\r\n\r\n  const copyToClipboard = useCallback(async () => {\r\n    const serializedData = await serializeSaveData(stateRef.current);\r\n    await Clipboard.setStringAsync(serializedData);\r\n\r\n    if (Platform.OS == \"android\" || Platform.OS == \"ios\") {\r\n      const savedData = await Clipboard.getStringAsync();\r\n      if (savedData != serializedData) {\r\n        setCopyToClipboardError(\r\n          t(\"Warning: save did not copy to clipboard correctly!\"),\r\n        );\r\n      } else {\r\n        setCopyToClipboardError(null);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const targetFpsChange = useCallback((value: string) => {\r\n    stateRef.current.apply((oldState) => {\r\n      oldState.options.targetFps = Number.parseInt(value);\r\n      return oldState;\r\n    });\r\n  }, []);\r\n\r\n  const zoomChange = useCallback((value: string) => {\r\n    stateRef.current.apply((oldState) => {\r\n      oldState.options.zoomLevel = Number.parseFloat(value);\r\n      return oldState;\r\n    });\r\n  }, []);\r\n\r\n  const elementOverrideChange = useCallback((value: string) => {\r\n    stateRef.current.apply((oldState) => {\r\n      oldState.options.overrideElementDisplay = value as SpellElement | \"no\";\r\n      return oldState;\r\n    });\r\n  }, []);\r\n\r\n  const elementOptions = [\r\n    {\r\n      label: t(\"Primary Element\"),\r\n      key: \"no\",\r\n      value: \"no\",\r\n    },\r\n    ...getFullyUnlockedElements(state).map((x) => ({\r\n      label: translateElement(x),\r\n      key: x,\r\n      value: x,\r\n    })),\r\n  ];\r\n\r\n  const hideBottomResourceViewerToggle = useCallback(() => {\r\n    stateRef.current.apply((oldState) => {\r\n      oldState.options.hideBottomResourceViewer =\r\n        !oldState.options.hideBottomResourceViewer;\r\n      return oldState;\r\n    });\r\n  }, []);\r\n\r\n  const hideChannelingSpellsFromHomeToggle = useCallback(() => {\r\n    stateRef.current.apply((oldState) => {\r\n      oldState.options.hideChannelingSpellsOnHome =\r\n        !oldState.options.hideChannelingSpellsOnHome;\r\n      return oldState;\r\n    });\r\n  }, []);\r\n\r\n  const hideDamageEffectsToggle = useCallback(() => {\r\n    stateRef.current.apply((oldState) => {\r\n      oldState.options.hideDamageEffects = !oldState.options.hideDamageEffects;\r\n      return oldState;\r\n    });\r\n  }, []);\r\n\r\n  const doNotUseNativeDriverToggle = useCallback(() => {\r\n    stateRef.current.apply((oldState) => {\r\n      oldState.options.doNotUseNativeDriver =\r\n        !oldState.options.doNotUseNativeDriver;\r\n      return oldState;\r\n    });\r\n  }, []);\r\n\r\n  const darkModeToggle = useCallback(() => {\r\n    stateRef.current.apply((oldState) => {\r\n      oldState.options.themeMode =\r\n        oldState.options.themeMode === \"dark\" ? \"light\" : \"dark\";\r\n      return oldState;\r\n    });\r\n  }, []);\r\n\r\n  const colorSpellToggle = useCallback(() => {\r\n    stateRef.current.apply((oldState) => {\r\n      oldState.options.colorSpellButtonsByElement =\r\n        !oldState.options.colorSpellButtonsByElement;\r\n      return oldState;\r\n    });\r\n  }, []);\r\n\r\n  const compactUIToggle = useCallback(() => {\r\n    stateRef.current.apply((oldState) => {\r\n      oldState.options.compactUI = !oldState.options.compactUI;\r\n      return oldState;\r\n    });\r\n  }, []);\r\n\r\n  const expandedUIToggle = useCallback(() => {\r\n    stateRef.current.apply((oldState) => {\r\n      oldState.options.saveExpandedUI = !oldState.options.saveExpandedUI;\r\n      return oldState;\r\n    });\r\n  }, []);\r\n\r\n  const hideTooltipsToggle = useCallback(() => {\r\n    stateRef.current.apply((oldState) => {\r\n      oldState.options.hideTooltips = !oldState.options.hideTooltips;\r\n      return oldState;\r\n    });\r\n  }, []);\r\n\r\n  const wakeLockCallback = useCallback(() => {\r\n    stateRef.current.apply((oldState) => {\r\n      oldState.options.wakeLock = !oldState.options.wakeLock;\r\n      return oldState;\r\n    });\r\n  }, []);\r\n\r\n  const enableBottomMenuCallback = useCallback(() => {\r\n    stateRef.current.apply((oldState) => {\r\n      oldState.options.enableBottomMenu = !oldState.options.enableBottomMenu;\r\n      return oldState;\r\n    });\r\n  }, []);\r\n\r\n  const leftHandedModeCallback = useCallback(() => {\r\n    stateRef.current.apply((oldState) => {\r\n      oldState.options.leftHandedMode = !oldState.options.leftHandedMode;\r\n      return oldState;\r\n    });\r\n  }, []);\r\n\r\n  const putCastSpellOnBottomMenuCallback = useCallback(() => {\r\n    stateRef.current.apply((oldState) => {\r\n      oldState.options.putCastSpellOnBottomMenu =\r\n        !oldState.options.putCastSpellOnBottomMenu;\r\n      return oldState;\r\n    });\r\n  }, []);\r\n\r\n  const doNotShowEventsCallback = useCallback(() => {\r\n    stateRef.current.apply((oldState) => {\r\n      oldState.options.doNotShowEventsOnWideScreens =\r\n        !oldState.options.doNotShowEventsOnWideScreens;\r\n      return oldState;\r\n    });\r\n  }, []);\r\n\r\n  const eventTagLevelUpAlreadyReachedToggle = useEventTagToggle(\r\n    stateRef,\r\n    EventTag.LEVEL_UP_ALREADY_REACHED,\r\n  );\r\n  const eventTagLevelUpEmptyToggle = useEventTagToggle(\r\n    stateRef,\r\n    EventTag.LEVEL_UP_EMPTY,\r\n  );\r\n  const eventTagLevelUpAllToggle = useEventTagToggle(\r\n    stateRef,\r\n    EventTag.LEVEL_UP,\r\n  );\r\n  const eventTagInconsequentialRandomEventsToggle = useEventTagToggle(\r\n    stateRef,\r\n    EventTag.INCONSEQUENTIAL_RANDOM_EVENT,\r\n  );\r\n  const eventTagMainQuestSeenBeforeEventsToggle = useEventTagToggle(\r\n    stateRef,\r\n    EventTag.MAIN_QUEST_SEEN_BEFORE,\r\n  );\r\n  const eventTagBossFightToggle = useCallback(() => {\r\n    stateRef.current.apply((oldState) => {\r\n      oldState.options.doNotPopupEventsDuringBossFights =\r\n        !oldState.options.doNotPopupEventsDuringBossFights;\r\n      return oldState;\r\n    });\r\n  }, []);\r\n\r\n  const [eraseText, setEraseText] = useState(\"\");\r\n  const eraseGame = useCallback(() => {\r\n    stateRef.current.overwrite((state) => {\r\n      return clone(INITIAL_STATE);\r\n    });\r\n    AsyncStorage.removeItem(\"MR2.GameState\");\r\n    AsyncStorage.removeItem(\"MR2.LastSaveSecondsPlayed\");\r\n  }, []);\r\n\r\n  const theme = useTheme();\r\n\r\n  const loadText = LOAD_FROM_FILE_SUPPORTED\r\n    ? t(\r\n        \"You may import save data by loading it from a file, or by pasting it here.\",\r\n      )\r\n    : t(\"You may import save data by pasting it here.\");\r\n\r\n  const saveToFileCallback = useCallback(async () => {\r\n    const result = await saveToFile(stateRef.current);\r\n  }, []);\r\n\r\n  const hasTranslations = Storage.getString(\"uploadedTranslationsJSON\") != null;\r\n\r\n  const [translationMessage, setTranslationMessage] = useState(\"\");\r\n\r\n  const importTranslationFileCallback = useCallback(async () => {\r\n    try {\r\n      const result = await loadTranslationsFromFile();\r\n      if (result.result === \"error\") {\r\n        setTranslationMessage(\r\n          t(\r\n            \"There was an error reading from the file. Is it a valid translation file? {{error}}\",\r\n            { error: result.error },\r\n          ),\r\n        );\r\n      }\r\n      if (result.result === \"success\") {\r\n        Storage.set(\"uploadedTranslationsJSON\", JSON.stringify(result.data));\r\n        setTranslationMessage(\r\n          t(\r\n            \"Successfully loaded translations file! Restart the app for it to take effect.\",\r\n          ),\r\n        );\r\n      }\r\n    } catch (e) {\r\n      setTranslationMessage(\r\n        t(\r\n          \"There was an error reading from the file. Is it a valid translation file?\",\r\n        ),\r\n      );\r\n    }\r\n  }, [setTranslationMessage]);\r\n\r\n  const clearTranslationFileCallback = useCallback(() => {\r\n    Storage.delete(\"uploadedTranslationsJSON\");\r\n    // Intentionally not translating the following line\r\n    setTranslationMessage(\r\n      \"Successfully deleted translations! Restart the app for it to take effect.\",\r\n    );\r\n  }, [setTranslationMessage]);\r\n\r\n  const { width, height } = useWindowDimensions();\r\n\r\n  const bottomMenuToggles = useMemo(\r\n    () =>\r\n      getAllMenuItems(state).map((section) => (\r\n        <BottomMenuToggle key={section} section={section} />\r\n      )),\r\n    [getAllMenuItems(state).join()],\r\n  );\r\n\r\n  const labelColor = useMemo(\r\n    () => ({ color: theme.colors.onBackground }),\r\n    [theme],\r\n  );\r\n\r\n  const performanceCategory = useMemo(() => {\r\n    return (\r\n      <CategoryContainer title=\"Performance\">\r\n        <View style={styles.categoryContainer}>\r\n          <Text>\r\n            {t(\r\n              `You may set your target UI updates per second (UUPS) here. Higher UUPS will make the game elements refresh quicker but it could affect battery power and CPU usage.`,\r\n            )}\r\n          </Text>\r\n          <View style={[Styles.mt8, Styles.flexRowAlignCenter]}>\r\n            <Text style={labelColor}>{t(\"Target UUPS:\")}</Text>\r\n            <View style={styles.targetFpsDropdownContainer}>\r\n              <UtilityPicker\r\n                onValueChange={targetFpsChange}\r\n                selectedValue={state.options.targetFps.toString()}\r\n                style={styles.targetFpsPicker}\r\n                data={FPS_DATA}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={styles.hideDamageEffectsContainer}>\r\n            <Text>\r\n              {t(\r\n                \"The following options may help improve performance in various screens.\",\r\n              )}\r\n            </Text>\r\n            <View>\r\n              <View>\r\n                <CheckBox\r\n                  title={t(\"Hide bottom resource viewer\")}\r\n                  checked={state.options.hideBottomResourceViewer}\r\n                  onPress={hideBottomResourceViewerToggle}\r\n                  containerStyle={styles.checkboxContainer}\r\n                />\r\n              </View>\r\n              <View>\r\n                <CheckBox\r\n                  title={t(\"Hide channeling spells on Home screen\")}\r\n                  checked={state.options.hideChannelingSpellsOnHome}\r\n                  onPress={hideChannelingSpellsFromHomeToggle}\r\n                  containerStyle={styles.checkboxContainer}\r\n                />\r\n              </View>\r\n            </View>\r\n          </View>\r\n          {hasFlag(state, Flag.ExplorationUnlocked) && (\r\n            <View style={styles.hideDamageEffectsContainer}>\r\n              <Text>\r\n                {t(\r\n                  \"If you are seeing performance problems specifically in the Exploration screen, you may turn off damage effects here, which should improve performance somewhat. The alternate animation code for the bars is less smooth, and may or may not improve performance; you may want to try both.\",\r\n                )}\r\n              </Text>\r\n              <View>\r\n                <View>\r\n                  <CheckBox\r\n                    title={t(\"Hide damage effects\")}\r\n                    checked={state.options.hideDamageEffects}\r\n                    onPress={hideDamageEffectsToggle}\r\n                    containerStyle={styles.checkboxContainer}\r\n                  />\r\n                </View>\r\n                <View>\r\n                  <CheckBox\r\n                    title={t(\"Use alternate animation code for the bars\")}\r\n                    checked={state.options.doNotUseNativeDriver}\r\n                    onPress={doNotUseNativeDriverToggle}\r\n                    containerStyle={styles.checkboxContainer}\r\n                  />\r\n                </View>\r\n              </View>\r\n            </View>\r\n          )}\r\n        </View>\r\n      </CategoryContainer>\r\n    );\r\n  }, [\r\n    hideBottomResourceViewerToggle,\r\n    state.options.hideBottomResourceViewer,\r\n    hideChannelingSpellsFromHomeToggle,\r\n    state.options.hideChannelingSpellsOnHome,\r\n    doNotUseNativeDriverToggle,\r\n    state.options.doNotUseNativeDriver,\r\n    hideDamageEffectsToggle,\r\n    state.options.hideDamageEffects,\r\n    hasFlag(state, Flag.ExplorationUnlocked),\r\n    targetFpsChange,\r\n    state.options.targetFps.toString(),\r\n    FPS_DATA,\r\n    labelColor,\r\n  ]);\r\n\r\n  const keepAwakeCategory = useMemo(\r\n    () => (\r\n      <CategoryContainer title={t(\"Keep Awake\")}>\r\n        <View style={styles.categoryContainer}>\r\n          <Text>\r\n            {t(\r\n              `By default, devices go to sleep after a period of inactivity, to save battery. You can disable this behavior while you are playing Magic Research actively in the foreground.`,\r\n            )}\r\n          </Text>\r\n          <CheckBox\r\n            title={t(\"Prevent device from sleeping\")}\r\n            checked={state.options.wakeLock}\r\n            onPress={wakeLockCallback}\r\n            containerStyle={Styles.mt8}\r\n          />\r\n        </View>\r\n      </CategoryContainer>\r\n    ),\r\n    [state.options.wakeLock, wakeLockCallback],\r\n  );\r\n\r\n  const hideEventPopupsCategory = useMemo(\r\n    () => (\r\n      <CategoryContainer title=\"Hide Event Popups\">\r\n        <View style={styles.categoryContainer}>\r\n          <Text>\r\n            {t(\r\n              \"Hide certain kinds of events, so that they don't disrupt gameplay. Hidden events will not show a popup, but will still be accessible through the Event Menu.\",\r\n            )}\r\n          </Text>\r\n          <View style={styles.eventPopupsContainer}>\r\n            {state.world.totalTimesResetted > 0 && (\r\n              <View>\r\n                <CheckBox\r\n                  title={t(\r\n                    \"Hide element level up events of levels that you have reached in previous retirements\",\r\n                  )}\r\n                  checked={state.options.hideEventTags.includes(\r\n                    EventTag.LEVEL_UP_ALREADY_REACHED,\r\n                  )}\r\n                  onPress={eventTagLevelUpAlreadyReachedToggle}\r\n                  containerStyle={styles.checkboxContainer}\r\n                />\r\n              </View>\r\n            )}\r\n            <View>\r\n              <CheckBox\r\n                title={t(\r\n                  \"Hide element level up events if nothing new is unlocked\",\r\n                )}\r\n                checked={state.options.hideEventTags.includes(\r\n                  EventTag.LEVEL_UP_EMPTY,\r\n                )}\r\n                onPress={eventTagLevelUpEmptyToggle}\r\n                containerStyle={styles.checkboxContainer}\r\n              />\r\n            </View>\r\n            <View>\r\n              <CheckBox\r\n                title={t(\"Hide all element level up events\")}\r\n                checked={state.options.hideEventTags.includes(\r\n                  EventTag.LEVEL_UP,\r\n                )}\r\n                onPress={eventTagLevelUpAllToggle}\r\n                containerStyle={styles.checkboxContainer}\r\n              />\r\n            </View>\r\n            {state.world.totalTimesResetted > 0 && (\r\n              <View>\r\n                <CheckBox\r\n                  title={t(\r\n                    \"Hide and skip main progression events that require no action and that you have seen in previous retirements\",\r\n                  )}\r\n                  checked={state.options.hideEventTags.includes(\r\n                    EventTag.MAIN_QUEST_SEEN_BEFORE,\r\n                  )}\r\n                  onPress={eventTagMainQuestSeenBeforeEventsToggle}\r\n                  containerStyle={styles.checkboxContainer}\r\n                />\r\n              </View>\r\n            )}\r\n            <View>\r\n              <CheckBox\r\n                title={t(\r\n                  \"Hide common random events (random events which are not Storylines and which appear more than once)\",\r\n                )}\r\n                checked={state.options.hideEventTags.includes(\r\n                  EventTag.INCONSEQUENTIAL_RANDOM_EVENT,\r\n                )}\r\n                onPress={eventTagInconsequentialRandomEventsToggle}\r\n                containerStyle={styles.checkboxContainer}\r\n              />\r\n            </View>\r\n            <View>\r\n              <CheckBox\r\n                title={t(\r\n                  \"Hide events when you are in the middle of a boss fight\",\r\n                )}\r\n                checked={state.options.doNotPopupEventsDuringBossFights}\r\n                onPress={eventTagBossFightToggle}\r\n                containerStyle={styles.checkboxContainer}\r\n              />\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </CategoryContainer>\r\n    ),\r\n    [\r\n      state.options.hideEventTags.join(),\r\n      eventTagInconsequentialRandomEventsToggle,\r\n      eventTagLevelUpAllToggle,\r\n      eventTagLevelUpEmptyToggle,\r\n      eventTagLevelUpAlreadyReachedToggle,\r\n      eventTagMainQuestSeenBeforeEventsToggle,\r\n      state.options.doNotPopupEventsDuringBossFights,\r\n      eventTagBossFightToggle,\r\n      state.world.totalTimesResetted,\r\n    ],\r\n  );\r\n\r\n  const bottomMenuCategory = useMemo(\r\n    () =>\r\n      width < 700 && (\r\n        <CategoryContainer title={t(\"Bottom Menu\")}>\r\n          <View style={styles.categoryContainer}>\r\n            <Text>\r\n              {t(\r\n                \"In smaller screens, there is a menu at the bottom to quickly switch between screens. You can customize the menu in this section. If you are left handed, you can swap the position of the Cast Spell button to be able to use it more easily. If you prefer to have the extra screen space instead, you can also disable this menu here.\",\r\n              )}\r\n            </Text>\r\n            <View>\r\n              <CheckBox\r\n                title={t(\"Enable bottom menu\")}\r\n                checked={state.options.enableBottomMenu}\r\n                onPress={enableBottomMenuCallback}\r\n                containerStyle={styles.checkboxContainer}\r\n              />\r\n            </View>\r\n            <View>\r\n              <CheckBox\r\n                title={t(\"Show Cast Spell button in bottom menu\")}\r\n                checked={state.options.putCastSpellOnBottomMenu}\r\n                onPress={putCastSpellOnBottomMenuCallback}\r\n                containerStyle={styles.checkboxContainer}\r\n              />\r\n            </View>\r\n            <View>\r\n              <CheckBox\r\n                title={t(\"Left handed mode\")}\r\n                checked={state.options.leftHandedMode}\r\n                onPress={leftHandedModeCallback}\r\n                containerStyle={styles.checkboxContainer}\r\n              />\r\n            </View>\r\n            <View style={Styles.mt16}>\r\n              <Text>\r\n                {t(\r\n                  \"You can also customize which screens will show up on the bottom menu. You will always be able to navigate to these screens by using the main menu on the left hand side. The bottom menu will show the following screens:\",\r\n                )}\r\n              </Text>\r\n              <View style={styles.hideBottomMenuContainer}>\r\n                {bottomMenuToggles}\r\n              </View>\r\n            </View>\r\n            <View style={Styles.mt16}>\r\n              <Text>\r\n                {t(\r\n                  \"In addition, you may re-order the screens in the bottom menu expanding the following:\",\r\n                )}\r\n              </Text>\r\n              <CategoryContainer\r\n                title={t(\"Re-order Bottom Menu Items\")}\r\n                initiallyExpanded={false}\r\n              >\r\n                <View style={Styles.mt8}>\r\n                  <MenuSectionsOrder />\r\n                </View>\r\n              </CategoryContainer>\r\n            </View>\r\n          </View>\r\n        </CategoryContainer>\r\n      ),\r\n    [\r\n      width,\r\n      state.options.enableBottomMenu,\r\n      state.options.putCastSpellOnBottomMenu,\r\n      state.options.leftHandedMode,\r\n      enableBottomMenuCallback,\r\n      putCastSpellOnBottomMenuCallback,\r\n      leftHandedModeCallback,\r\n      bottomMenuToggles,\r\n    ],\r\n  );\r\n\r\n  const themingAndUICategory = useMemo(\r\n    () => (\r\n      <CategoryContainer title=\"Theming and UI\">\r\n        <View style={styles.categoryContainer}>\r\n          <Text>{t(\"Change the colors to be easier on the eyes.\")}</Text>\r\n          <View>\r\n            <CheckBox\r\n              title={t(\"Enable dark mode\")}\r\n              checked={state.options.themeMode === \"dark\"}\r\n              onPress={darkModeToggle}\r\n              containerStyle={styles.checkboxContainer}\r\n            />\r\n          </View>\r\n          <View style={Styles.mt16}>\r\n            <Text>\r\n              {t(\r\n                \"The game remembers whether you had certain UI elements expanded or not, so that when you open the game again, they stay in the same status. You can turn off this functionality here.\",\r\n              )}\r\n            </Text>\r\n            <View>\r\n              <CheckBox\r\n                title={t(\"Remember expanded / collapsed UI status\")}\r\n                checked={state.options.saveExpandedUI}\r\n                onPress={expandedUIToggle}\r\n                containerStyle={styles.checkboxContainer}\r\n              />\r\n            </View>\r\n          </View>\r\n          {Platform.OS === \"web\" && (\r\n            <View style={Styles.mt16}>\r\n              <Text>\r\n                {t(\"You can disable tooltips if they get in the way.\")}\r\n              </Text>\r\n              <View>\r\n                <CheckBox\r\n                  title={t(\"Disable tooltips\")}\r\n                  checked={state.options.hideTooltips}\r\n                  onPress={hideTooltipsToggle}\r\n                  containerStyle={styles.checkboxContainer}\r\n                />\r\n              </View>\r\n            </View>\r\n          )}\r\n          {width >= 1350 && (\r\n            <View style={Styles.mt16}>\r\n              <Text>\r\n                {t(\r\n                  \"If you have a wide screen, you can make the Events menu collapsible in order to get more out of your screen space.\",\r\n                )}\r\n              </Text>\r\n              <View>\r\n                <CheckBox\r\n                  title={t(\"Collapse Events menu on the right\")}\r\n                  checked={state.options.doNotShowEventsOnWideScreens}\r\n                  onPress={doNotShowEventsCallback}\r\n                  containerStyle={styles.checkboxContainer}\r\n                />\r\n              </View>\r\n            </View>\r\n          )}\r\n          <View style={Styles.mt16}>\r\n            <Text>\r\n              {t(\r\n                \"By default, the game changes the colors of the buttons and interface depending on the chosen element. If you'd like, you can instead choose to always show buttons with the looks of the element of your choice.\",\r\n              )}\r\n            </Text>\r\n            <View style={[Styles.mt8, Styles.flexRowAlignCenter]}>\r\n              <Text style={labelColor}>{t(\"Game UI color:\")}</Text>\r\n              <View style={styles.targetFpsDropdownContainer}>\r\n                <UtilityPicker\r\n                  onValueChange={elementOverrideChange}\r\n                  selectedValue={state.options.overrideElementDisplay}\r\n                  style={styles.uiColorPicker}\r\n                  disablePlaceholder={true}\r\n                  data={elementOptions}\r\n                />\r\n              </View>\r\n            </View>\r\n          </View>\r\n          <View style={Styles.mt16}>\r\n            <Text>\r\n              {t(\r\n                \"Buttons to cast spells are colored by the spell's Element by default, but you can turn off this behavior.\",\r\n              )}\r\n            </Text>\r\n            <View>\r\n              <CheckBox\r\n                title={t(\"Color spell buttons by Element\")}\r\n                checked={state.options.colorSpellButtonsByElement}\r\n                onPress={colorSpellToggle}\r\n                containerStyle={styles.checkboxContainer}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={Styles.mt16}>\r\n            <Text>\r\n              {t(\r\n                \"In very small screens, you can opt for an extra-compact UI to see more on the screen, at the expense of buttons being harder to press. Not recommended for large screens. {{extra}}\",\r\n                {\r\n                  extra:\r\n                    Platform.OS != \"web\"\r\n                      ? t(\r\n                          \"Changing the device's font size (making it smaller) might also help somewhat.\",\r\n                        )\r\n                      : \"\",\r\n                },\r\n              )}\r\n            </Text>\r\n            <View>\r\n              <CheckBox\r\n                title={t(\"Compact UI (Experimental)\")}\r\n                checked={state.options.compactUI}\r\n                onPress={compactUIToggle}\r\n                containerStyle={styles.checkboxContainer}\r\n              />\r\n            </View>\r\n          </View>\r\n          {ZOOM_SUPPORTED && (\r\n            <View style={styles.elementOverrideContainer}>\r\n              <Text>\r\n                {t(\"You can also adjust the zoom level on the game.\")}\r\n              </Text>\r\n              <View style={[Styles.mt8, Styles.flexRowAlignCenter]}>\r\n                <Text style={labelColor}>{t(\"Zoom scale:\")}</Text>\r\n                <View style={styles.targetFpsDropdownContainer}>\r\n                  <UtilityPicker\r\n                    onValueChange={zoomChange}\r\n                    selectedValue={state.options.zoomLevel.toString()}\r\n                    style={styles.uiColorPicker}\r\n                    data={ZOOM_DATA}\r\n                  />\r\n                </View>\r\n              </View>\r\n            </View>\r\n          )}\r\n        </View>\r\n      </CategoryContainer>\r\n    ),\r\n    [\r\n      state.options.themeMode,\r\n      darkModeToggle,\r\n      state.options.saveExpandedUI,\r\n      expandedUIToggle,\r\n      labelColor,\r\n      state.options.overrideElementDisplay,\r\n      elementOverrideChange,\r\n      state.options.colorSpellButtonsByElement,\r\n      colorSpellToggle,\r\n      state.options.doNotShowEventsOnWideScreens,\r\n      doNotShowEventsCallback,\r\n      state.options.compactUI,\r\n      compactUIToggle,\r\n      ZOOM_SUPPORTED,\r\n      state.options.zoomLevel,\r\n      zoomChange,\r\n      ZOOM_DATA,\r\n      state.options.hideTooltips,\r\n      hideTooltipsToggle,\r\n      width,\r\n    ],\r\n  );\r\n\r\n  const saveFileCategory = useMemo(\r\n    () => (\r\n      <CategoryContainer title={t(\"Save File\")}>\r\n        <View style={styles.categoryContainer}>\r\n          <Text>\r\n            {t(\r\n              \"You may persist your save data by copying it to the clipboard and storing it anywhere you'd like.\",\r\n            )}\r\n          </Text>\r\n          <Button onPress={copyToClipboard} style={Styles.mt8}>\r\n            {t(\"Copy savefile to clipboard\")}\r\n          </Button>\r\n          {copyToClipboardError != null && (\r\n            <View style={Styles.mt8}>\r\n              <Text style={{ color: theme.colors.error }}>\r\n                {copyToClipboardError}\r\n              </Text>\r\n            </View>\r\n          )}\r\n        </View>\r\n        {SAVE_TO_FILE_SUPPORTED && (\r\n          <View style={styles.categoryContainer}>\r\n            <Text>\r\n              {t(\r\n                \"You can also save your data directly to a file or elsewhere.\",\r\n              )}\r\n            </Text>\r\n            <Button onPress={saveToFileCallback} style={Styles.mt8}>\r\n              {t(\"Save to file\")}\r\n            </Button>\r\n          </View>\r\n        )}\r\n      </CategoryContainer>\r\n    ),\r\n    [\r\n      copyToClipboard,\r\n      SAVE_TO_FILE_SUPPORTED,\r\n      saveToFileCallback,\r\n      copyToClipboardError,\r\n      theme,\r\n    ],\r\n  );\r\n\r\n  const loadFileCategory = useMemo(\r\n    () => (\r\n      <CategoryContainer title={t(\"Load File\")}>\r\n        <View style={styles.categoryContainer}>\r\n          <Text>{loadText}</Text>\r\n          <Text style={{ fontWeight: \"bold\", color: theme.colors.error }}>\r\n            {t(\r\n              `WARNING: This will erase your current save! Make sure you have backed up your data!`,\r\n            )}\r\n          </Text>\r\n          <LoadGameContainer />\r\n        </View>\r\n      </CategoryContainer>\r\n    ),\r\n    [theme.colors.error, loadText],\r\n  );\r\n\r\n  const languageCategory = useMemo(\r\n    () =>\r\n      LOAD_FROM_FILE_SUPPORTED && (\r\n        <CategoryContainer title={t(\"Language\")}>\r\n          <View style={styles.categoryContainer}>\r\n            <Text>\r\n              {t(\r\n                \"Although the game does not provide official translations, if you would rather play in a different language, the game supports loading a translations file which will replace the text in the game. If you have such a file, you can load it below.\",\r\n              )}\r\n            </Text>\r\n            <Button onPress={importTranslationFileCallback} style={Styles.mt8}>\r\n              {t(\"Load translations file\")}\r\n            </Button>\r\n            {hasTranslations && (\r\n              <Button onPress={clearTranslationFileCallback} style={Styles.mt8}>\r\n                {t(\"Clear translations\")}\r\n              </Button>\r\n            )}\r\n            {translationMessage != \"\" && (\r\n              <Text style={{ color: theme.colors.error }}>\r\n                {translationMessage}\r\n              </Text>\r\n            )}\r\n          </View>\r\n        </CategoryContainer>\r\n      ),\r\n    [\r\n      theme.colors.error,\r\n      translationMessage,\r\n      LOAD_FROM_FILE_SUPPORTED,\r\n      importTranslationFileCallback,\r\n    ],\r\n  );\r\n\r\n  const eraseSavedDataCategory = useMemo(\r\n    () => (\r\n      <CategoryContainer title=\"Erase Saved Data\">\r\n        <View style={styles.categoryContainer}>\r\n          <Text>\r\n            {t(\r\n              `If you want to start all over again and retirement isn't enough, you can delete your save data entirely.`,\r\n            )}\r\n          </Text>\r\n          <Text style={{ fontWeight: \"bold\", color: theme.colors.error }}>\r\n            {t(\r\n              `WARNING: This will erase your current save, including all your progress with Storylines and retirement! Make sure you have backed up your data! Once you have done this, there is no going back! If you are sure you want to do this, write \"erase\" in the text field below.`,\r\n            )}\r\n          </Text>\r\n          <TextInput\r\n            style={Styles.mt16}\r\n            value={eraseText}\r\n            onChangeText={setEraseText}\r\n          />\r\n          <View style={Styles.mt8}>\r\n            <Button\r\n              disabled={eraseText.toLowerCase() != \"erase\"}\r\n              buttonColor={theme.colors.errorContainer}\r\n              textColor={theme.colors.onErrorContainer}\r\n              onPress={eraseGame}\r\n            >\r\n              {t(\"Permanently erase all saved data\")}\r\n            </Button>\r\n          </View>\r\n        </View>\r\n      </CategoryContainer>\r\n    ),\r\n    [\r\n      eraseText,\r\n      eraseGame,\r\n      setEraseText,\r\n      eraseText,\r\n      theme.colors.error,\r\n      theme.colors.errorContainer,\r\n    ],\r\n  );\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View style={styles.container}>\r\n        {performanceCategory}\r\n        {keepAwakeCategory}\r\n        {hideEventPopupsCategory}\r\n        {bottomMenuCategory}\r\n        {themingAndUICategory}\r\n        {saveFileCategory}\r\n        {loadFileCategory}\r\n        {languageCategory}\r\n        {eraseSavedDataCategory}\r\n      </View>\r\n    ),\r\n    [\r\n      performanceCategory,\r\n      keepAwakeCategory,\r\n      hideEventPopupsCategory,\r\n      bottomMenuCategory,\r\n      themingAndUICategory,\r\n      saveFileCategory,\r\n      loadFileCategory,\r\n      languageCategory,\r\n      eraseSavedDataCategory,\r\n    ],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"flex-start\",\r\n    width: \"100%\",\r\n  },\r\n  headerContainer: {\r\n    marginBottom: 16,\r\n  },\r\n  categoryContainer: {\r\n    marginTop: 8,\r\n    paddingHorizontal: 8,\r\n  },\r\n  eventPopupsContainer: {\r\n    marginTop: 8,\r\n  },\r\n  targetFpsDropdownContainer: {\r\n    ...Platform.select({\r\n      android: { backgroundColor: \"#eee\", borderRadius: 10, default: {} },\r\n    }),\r\n    marginLeft: 16,\r\n  },\r\n  targetFpsPicker: {\r\n    width: 100,\r\n  },\r\n  uiColorPicker: {\r\n    width: 160,\r\n  },\r\n  sliderContainer: {\r\n    width: 200,\r\n    marginLeft: 16,\r\n  },\r\n  sliderTextContainer: {\r\n    width: 120,\r\n  },\r\n  checkboxContainer: {\r\n    marginLeft: 0,\r\n    marginTop: 8,\r\n    padding: 0,\r\n  },\r\n  checkboxText: {\r\n    fontWeight: \"normal\",\r\n  },\r\n  saveButton: {\r\n    marginTop: 8,\r\n  },\r\n  loadMessageContainer: {\r\n    marginBottom: 8,\r\n  },\r\n  inputContainer: {\r\n    borderWidth: 1,\r\n    marginTop: 16,\r\n    maxHeight: 48,\r\n  },\r\n  toggleMenuCheckboxContainer: {\r\n    padding: 0,\r\n    marginLeft: 0,\r\n  },\r\n  toggleMenuRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  hideBottomMenuContainer: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  toggleMenuTextContainer: {\r\n    paddingLeft: 4,\r\n  },\r\n  bottomMenuCustomizationContainer: {\r\n    marginTop: 8,\r\n  },\r\n  hideDamageEffectsContainer: {\r\n    marginTop: 8,\r\n  },\r\n  elementOverrideContainer: {\r\n    marginTop: 8,\r\n  },\r\n  dragHandle: {\r\n    cursor: \"grab\",\r\n    marginRight: 8,\r\n  },\r\n});\r\n","import React, { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { retire } from \"../backend/Retire\";\r\nimport { Storylines } from \"../backend/storylines/Storylines\";\r\nimport { formatNumber } from \"../utils/FormattingUtils\";\r\nimport { Markdown } from \"./utility/Markdown\";\r\nimport { Text } from \"./utility/Text\";\r\n\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { createHypotheticalState } from \"../backend/GameState\";\r\nimport { getEventMessageById } from \"../backend/events/Events\";\r\nimport {\r\n  mplIsTooHigh,\r\n  mplIsTooLow,\r\n} from \"../backend/exploration/dungeons/Dungeons\";\r\nimport {\r\n  getElementLevel,\r\n  getMaxOfMaxPrimaryElementLevels,\r\n  getPrimaryElementMaxLevelForRun,\r\n  getUnlockedElements,\r\n  grantStartingExp,\r\n  maximumElementLevelExpMultiplier,\r\n  maximumElementLevelProductionMultiplierDx,\r\n  startingExpForElement,\r\n  translateElement,\r\n} from \"../backend/spells/Elements\";\r\nimport { t } from \"../utils/I18n\";\r\nimport { Button } from \"./utility/Button\";\r\nimport { VisibilityContext } from \"./utility/VisibilityContext\";\r\nimport { useGameState } from \"./utility/useGameState\";\r\n\r\nexport default function Retirement() {\r\n  const state = useGameState();\r\n\r\n  const allElementLevels = getUnlockedElements(state).map((eachElement) =>\r\n    getElementLevel(state, eachElement),\r\n  );\r\n  const allStorylines = Storylines.getAll()\r\n    .filter((storyline) => storyline.isCompletedThisRun(state))\r\n    .map((storyline) => storyline.id)\r\n    .join();\r\n  const modifiedState = useMemo(() => {\r\n    let retiredState = retire(createHypotheticalState(state), true);\r\n    retiredState = grantStartingExp(retiredState);\r\n    return retiredState;\r\n  }, [JSON.stringify(allElementLevels), allStorylines]);\r\n  const newExpMultiplier = maximumElementLevelExpMultiplier(modifiedState);\r\n  const newProductionMultiplier =\r\n    maximumElementLevelProductionMultiplierDx(modifiedState);\r\n  const oldExpMultiplier = maximumElementLevelExpMultiplier(state);\r\n  const oldProductionMultiplier =\r\n    maximumElementLevelProductionMultiplierDx(state);\r\n  const expDeltaPct =\r\n    ((newExpMultiplier - oldExpMultiplier) * 100.0) / oldExpMultiplier;\r\n  const productionDeltaPct =\r\n    ((newProductionMultiplier - oldProductionMultiplier) * 100.0) /\r\n    oldProductionMultiplier;\r\n  const stuckOnBoss = false; //TBD isStuckOnBoss(state);\r\n\r\n  const newStorylines = Storylines.getAll().filter((storyline) => {\r\n    return storyline.isCompletedThisRun(state);\r\n  });\r\n\r\n  let storylineBonusMessage = \"\";\r\n  if (newStorylines.length > 0) {\r\n    storylineBonusMessage = t(\r\n      `\r\n      \r\nAdditionally, in this retirement, you have completed the following Storylines, which will be fully activated after retirement:\r\n    \r\n{{storylineList}}`,\r\n      {\r\n        storylineList: newStorylines\r\n          .map((storyline) =>\r\n            t(\"* **{{storylineName}}**: {{storylineBonus}}\", {\r\n              storylineName: storyline.getName(),\r\n              storylineBonus: storyline.getBonusDescription(state),\r\n            }),\r\n          )\r\n          .join(t(\"\\n\")),\r\n      },\r\n    );\r\n  }\r\n\r\n  const startingExp = startingExpForElement(\r\n    modifiedState,\r\n    state.run.primaryElement,\r\n  );\r\n  const startingLevel = getElementLevel(\r\n    modifiedState,\r\n    state.run.primaryElement,\r\n  );\r\n\r\n  const startingExpSecondary =\r\n    state.run.secondaryElement != null\r\n      ? startingExpForElement(modifiedState, state.run.secondaryElement)\r\n      : 0;\r\n  const startingLevelSecondary =\r\n    state.run.secondaryElement != null\r\n      ? getElementLevel(modifiedState, state.run.secondaryElement)\r\n      : 0;\r\n\r\n  const retirementEffects = t(\r\n    `**If you retire now, your element exp gain multiplier will become {{newExp}}x (+{{expDeltaPct}}%) and your channeling, production and loot multiplier will become {{newProduction}}x (+{{productionDeltaPct}}%). You will also begin all subsequent retirements with {{startingExp}} {{element}} exp (meaning it will start on at least Lv{{startingLevel}}){{secondaryElementText}}.**`,\r\n    {\r\n      newExp: formatNumber(newExpMultiplier, { showDecimals: true }),\r\n      expDeltaPct: formatNumber(expDeltaPct, {\r\n        showDecimals: true,\r\n      }),\r\n      newProduction: formatNumber(newProductionMultiplier, {\r\n        showDecimals: true,\r\n      }),\r\n      productionDeltaPct: formatNumber(productionDeltaPct, {\r\n        showDecimals: true,\r\n      }),\r\n      startingExp: formatNumber(startingExp),\r\n      startingLevel: formatNumber(startingLevel),\r\n      element: translateElement(state.run.primaryElement),\r\n      secondaryElementText:\r\n        state.run.secondaryElement != null\r\n          ? t(\r\n              \" and {{startingExp}} {{element}} exp (meaning it will start on at least Lv{{startingLevel}})\",\r\n              {\r\n                startingExp: formatNumber(startingExpSecondary),\r\n                startingLevel: formatNumber(startingLevelSecondary),\r\n                element: translateElement(state.run.secondaryElement),\r\n              },\r\n            )\r\n          : \"\",\r\n    },\r\n  );\r\n\r\n  const text = t(\r\n    `You have gone through a lot, even if it wasn't quite enough. You feel tired and contemplate giving up and retiring from your quest.\r\n\r\nIf you retire, **you will reset the game.** Everything will revert back to its initial state, except:\r\n* Any bonuses you obtained from \"(Storyline)\" events will remain;\r\n* You will gain a boost to exp gain, building and channeling production, and loot based on the maximum level you have ever attained on your primary element (MPL), as well as on the sum of the MPLs you have attained on each element;\r\n* You will additionally start with some exp on elements for which your MPL is higher than 1;\r\n* If you have obtained any :timepiece:Time Pieces from time spent away from the game, these will also remain.\r\n\r\nWhen you retire, you will be able to choose a new primary element.\r\n\r\n{{retirementEffects}}{{storylineBonusMessage}}\r\n\r\n*Do you want to retire?*`,\r\n    { retirementEffects, storylineBonusMessage },\r\n  );\r\n\r\n  const [hasClicked, setHasClicked] = useState(false);\r\n  const visible = useContext(VisibilityContext);\r\n  useEffect(() => {\r\n    if (!visible) {\r\n      setHasClicked(false);\r\n    }\r\n  }, [visible]);\r\n  const showOngoingEventsWarning = Object.values(\r\n    state.run.eventOccurrences,\r\n  ).some((event) => {\r\n    return (\r\n      event.currentMessageId &&\r\n      !getEventMessageById(event.currentMessageId).isTerminal()\r\n    );\r\n  });\r\n  const showMPLTooLowWarning =\r\n    mplIsTooLow(state) &&\r\n    getPrimaryElementMaxLevelForRun(state) >\r\n      getMaxOfMaxPrimaryElementLevels(state) + 4;\r\n  const showMPLTooHighWarning = mplIsTooHigh(state);\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text h1>{t(\"Retirement\")}</Text>\r\n      <View style={styles.explanation}>\r\n        <Markdown>{text}</Markdown>\r\n      </View>\r\n      {showMPLTooLowWarning && (\r\n        <View style={styles.warning}>\r\n          <Text style={{ fontStyle: \"italic\" }}>\r\n            {t(`It looks like your multipliers might be too low for your current\r\nprogression in Exploration, and your retirement bonus seems\r\nreasonably high. This might be a good time to retire!`)}\r\n          </Text>\r\n        </View>\r\n      )}\r\n      {showMPLTooHighWarning && (\r\n        <View style={styles.warning}>\r\n          <Text style={{ color: theme.colors.error }}>\r\n            {t(`Warning: Your multipliers seem to be very high for your current\r\nprogression in Exploration. You might benefit more by making more\r\nprogress in Exploration. Are you sure you want to retire?`)}\r\n          </Text>\r\n        </View>\r\n      )}\r\n      {stuckOnBoss && (\r\n        <View style={styles.warning}>\r\n          <Text style={{ color: theme.colors.error }}>\r\n            {t(`Warning: It looks like you could be stuck on a boss. If you cannot\r\ndefeat a boss, and you have already tried retiring once to defeat it\r\nwithout success, you may possibly have better results by thinking\r\nharder about how to defeat the boss rather than starting over again.\r\nAre you sure you want to retire?`)}\r\n          </Text>\r\n        </View>\r\n      )}\r\n      {showOngoingEventsWarning && (\r\n        <View style={styles.warning}>\r\n          <Text style={{ color: theme.colors.error }}>\r\n            {t(\r\n              `Warning: You still have ongoing events! Are you sure you want to retire?`,\r\n            )}\r\n          </Text>\r\n        </View>\r\n      )}\r\n      <View style={styles.buttonContainer}>\r\n        {!hasClicked && (\r\n          <Button onPress={() => setHasClicked(true)}>{t(\"Retire\")}</Button>\r\n        )}\r\n        {hasClicked && (\r\n          <Button\r\n            onPress={() => {\r\n              state.apply((state) => retire(state, false));\r\n            }}\r\n          >\r\n            {t(\"Are you sure? Press again to confirm\")}\r\n          </Button>\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"flex-start\",\r\n    width: \"100%\",\r\n  },\r\n  explanation: {\r\n    marginTop: 16,\r\n  },\r\n  buttonContainer: {\r\n    marginTop: 16,\r\n  },\r\n  warning: {\r\n    marginTop: 8,\r\n  },\r\n});\r\n","import { View } from \"react-native\";\r\nimport {\r\n  getCorruption,\r\n  getCorruptionCap,\r\n  getCorruptionExpPenaltyMultiplier,\r\n  getCorruptionHPPenaltyMultiplier,\r\n  getCorruptionTransmutePenaltyMultiplier,\r\n  isCorruptionExpPenaltyActive,\r\n  isCorruptionHPPenaltyActive,\r\n  isCorruptionTransmutePenaltyActive,\r\n} from \"../../backend/rituals/Rituals\";\r\nimport { formatMultiplier, formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { Markdown } from \"../utility/Markdown\";\r\nimport Styles from \"../utility/Styles\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\n\r\nexport function CorruptionDetails(props: {}) {\r\n  const state = useGameState();\r\n  const isHPPenaltyActive = isCorruptionHPPenaltyActive(state);\r\n  const isExpPenaltyActive = isCorruptionExpPenaltyActive(state);\r\n  const isTransmutePenaltyActive = isCorruptionTransmutePenaltyActive(state);\r\n\r\n  const corruptionAmount = getCorruption(state);\r\n  const corruptionCap = getCorruptionCap(state);\r\n\r\n  const penalties = [];\r\n\r\n  if (isHPPenaltyActive) {\r\n    penalties.push(\r\n      t(`* {{multiplier}} Max:hp:`, {\r\n        multiplier: formatMultiplier(getCorruptionHPPenaltyMultiplier(state)),\r\n      }),\r\n    );\r\n  }\r\n  if (isExpPenaltyActive) {\r\n    penalties.push(\r\n      t(`* {{multiplier}} Element Exp gained`, {\r\n        multiplier: formatMultiplier(getCorruptionExpPenaltyMultiplier(state)),\r\n      }),\r\n    );\r\n  }\r\n  if (isTransmutePenaltyActive) {\r\n    penalties.push(\r\n      t(\r\n        `* +{{multiplier}}% resources and items needed for all Transmutation (rounded up)`,\r\n        {\r\n          multiplier: formatNumber(\r\n            getCorruptionTransmutePenaltyMultiplier(state) * 100 - 100,\r\n            { showDecimals: true },\r\n          ),\r\n        },\r\n      ),\r\n    );\r\n  }\r\n\r\n  const penaltyText = penalties.length > 0 ? penalties.join(\"\\n\") : \"\";\r\n\r\n  const corruptionExplanation = t(\r\n    `Your active Rituals will give you Corruption (:corruption:). Your soul cannot take on too much :corruption: at a time; if you activate too many Rituals at once, you will grow weak.`,\r\n  );\r\n  const corruptionPenalties =\r\n    corruptionAmount <= corruptionCap\r\n      ? t(\r\n          `You currently have {{amount}}:corruption:, which is *below* your safe limit of {{cap}}:corruption:. Your soul is strong; you have no penalties.`,\r\n          {\r\n            amount: formatNumber(corruptionAmount, { showDecimals: true }),\r\n            cap: formatNumber(corruptionCap, { showDecimals: true }),\r\n          },\r\n        )\r\n      : t(\r\n          `You currently have {{amount}}:corruption:, which is *above* your safe limit of {{cap}}:corruption:. The extra Corruption is giving you the following penalties:\r\n  \r\n{{penaltyText}}`,\r\n          {\r\n            amount: formatNumber(corruptionAmount, { showDecimals: true }),\r\n            cap: formatNumber(corruptionCap, { showDecimals: true }),\r\n            penaltyText,\r\n          },\r\n        );\r\n  return (\r\n    <View>\r\n      <View>\r\n        <Markdown>{corruptionExplanation}</Markdown>\r\n      </View>\r\n      <View style={Styles.mt8}>\r\n        <Markdown>{corruptionPenalties}</Markdown>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import { Entypo } from \"@expo/vector-icons\";\r\nimport { useCallback, useMemo, useRef, useState } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { Ritual } from \"../../backend/rituals/Ritual\";\r\nimport { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { Button } from \"../utility/Button\";\r\nimport { DescriptionViewer } from \"../utility/Miscellaneous\";\r\nimport Styles from \"../utility/Styles\";\r\nimport { Text } from \"../utility/Text\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\n\r\nexport function RitualDetails(props: { ritual: Ritual }) {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  const ritual = props.ritual;\r\n  const descriptionContents = t(\r\n    `{{ritualDescription}} **{{ritualEffect}}; {{corruptionCost}}:corruption:**`,\r\n    {\r\n      ritualDescription: ritual.getDescription(state),\r\n      ritualEffect: ritual.getEffect(state),\r\n      corruptionCost: formatNumber(ritual.getCorruptionCost(state), {\r\n        showDecimals: true,\r\n      }),\r\n    },\r\n  );\r\n\r\n  const isActive = ritual.isActive(state);\r\n  const toggleRitual = useCallback(\r\n    () =>\r\n      stateRef.current.apply((state) =>\r\n        ritual.isActive(state) ? ritual.turnOff(state) : ritual.turnOn(state),\r\n      ),\r\n    [ritual],\r\n  );\r\n  const buttonRow = useMemo(() => {\r\n    if (isActive) {\r\n      return (\r\n        <View style={Styles.flexRowAlignCenter}>\r\n          <Button compact={true} onPress={toggleRitual}>\r\n            {t(\"Stop Ritual\")}\r\n          </Button>\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <View style={Styles.flexRowAlignCenter}>\r\n        <Button compact={true} onPress={toggleRitual}>\r\n          {t(\"Start Ritual\")}\r\n        </Button>\r\n      </View>\r\n    );\r\n  }, [toggleRitual, isActive]);\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View style={Styles.mv8}>\r\n        <DescriptionViewer>{descriptionContents}</DescriptionViewer>\r\n        <View style={Styles.mt8}>{buttonRow}</View>\r\n      </View>\r\n    ),\r\n    [descriptionContents, buttonRow],\r\n  );\r\n}\r\n\r\nexport function RitualView(props: { ritual: Ritual }) {\r\n  const ritual = props.ritual;\r\n  const [collapsed, setCollapsed] = useState(true);\r\n  const theme = useTheme();\r\n  const state = useGameState();\r\n  const name = ritual.getDisplayName(state);\r\n  const toggleCollapsed = useCallback(\r\n    () => setCollapsed(!collapsed),\r\n    [collapsed, setCollapsed],\r\n  );\r\n  return useMemo(\r\n    () => (\r\n      <View style={Styles.pv4}>\r\n        <TouchableWithoutFeedback\r\n          accessibilityRole=\"button\"\r\n          accessibilityHint={t(\"Expand\")}\r\n          onPress={toggleCollapsed}\r\n        >\r\n          <View style={styles.topRowContainer}>\r\n            <Text h2 accessibilityRole=\"none\" style={styles.topContainer}>\r\n              {name}\r\n            </Text>\r\n            <View style={styles.expandContainer}>\r\n              <Entypo\r\n                name={collapsed ? \"chevron-right\" : \"chevron-down\"}\r\n                size={24}\r\n                color={theme.colors.onBackground}\r\n              />\r\n            </View>\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n        {!collapsed && (\r\n          <View style={Styles.ph8}>\r\n            <RitualDetails ritual={ritual} />\r\n          </View>\r\n        )}\r\n      </View>\r\n    ),\r\n    [toggleCollapsed, name, collapsed, theme, ritual],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  topRowContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n  },\r\n  expandContainer: {\r\n    width: 40,\r\n  },\r\n  descriptionTextContainer: {\r\n    marginBottom: 8,\r\n    marginTop: 8,\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  descriptionViewer: { flex: 1, justifyContent: \"center\" },\r\n  effectContainer: {\r\n    flex: 1,\r\n  },\r\n  effectSubcontainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"flex-start\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  smallButtonTitle: {\r\n    fontSize: 12,\r\n  },\r\n  topContainer: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n  disabledStorylineText: {\r\n    color: \"#aaa\",\r\n  },\r\n});\r\n","import React, { useMemo } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { getVisibleRituals } from \"../../backend/rituals/Rituals\";\r\nimport Divider from \"../utility/Divider\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\nimport { RitualView } from \"./RitualView\";\r\n\r\nexport default function RitualsView(props: {}) {\r\n  const state = useGameState();\r\n  const rituals = getVisibleRituals(state);\r\n  const ritualsIdString = rituals.map((ritual) => ritual.getId()).join(\"\");\r\n\r\n  const ritualContainers = useMemo(\r\n    () =>\r\n      rituals.map((ritual) => {\r\n        return <RitualView key={ritual.getId()} ritual={ritual} />;\r\n      }),\r\n    [ritualsIdString],\r\n  );\r\n\r\n  return useMemo(() => {\r\n    if (rituals.length === 0) {\r\n      return null;\r\n    }\r\n    return (\r\n      <View>\r\n        <View key={rituals[0].getId()}>{ritualContainers[0]}</View>\r\n        {ritualContainers.slice(1).map((ritualContainer, idx) => {\r\n          return (\r\n            <View key={rituals[idx].getId()}>\r\n              <Divider />\r\n              {ritualContainer}\r\n            </View>\r\n          );\r\n        })}\r\n      </View>\r\n    );\r\n  }, [ritualsIdString, ritualContainers]);\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { t } from \"../utils/I18n\";\r\nimport { CorruptionDetails } from \"./rituals/CorruptionDetails\";\r\nimport RitualsView from \"./rituals/RitualsView\";\r\nimport CategoryContainer from \"./utility/CategoryContainer\";\r\nimport Styles from \"./utility/Styles\";\r\n\r\nexport function RitualsComponent() {\r\n  return useMemo(\r\n    () => (\r\n      <View style={styles.campusContainer}>\r\n        <CategoryContainer title={t(`Corruption`)}>\r\n          <View style={Styles.mt8}>\r\n            <CorruptionDetails />\r\n          </View>\r\n        </CategoryContainer>\r\n        <View style={Styles.mt8}>\r\n          <CategoryContainer title={t(`Rituals`)}>\r\n            <View style={Styles.mt8}>\r\n              <RitualsView />\r\n            </View>\r\n          </CategoryContainer>\r\n        </View>\r\n      </View>\r\n    ),\r\n    [],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  campusContainer: {\r\n    height: \"100%\",\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"flex-start\",\r\n    width: \"100%\",\r\n  },\r\n});\r\n","import { keysOf } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport {\r\n  ActionArea,\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../action/ActionAreas\";\r\nimport { GameState } from \"../GameState\";\r\nimport { Resource } from \"../Resources\";\r\nimport {\r\n  createNewVat,\r\n  isSpellcraftUnlocked,\r\n} from \"../spellcraft/SpellcraftUtils\";\r\nimport { SpellElement } from \"../spells/Elements\";\r\nimport { Building, BuildingSpell } from \"./Building\";\r\nimport { BuildingAmountListeners, getBuildingAmount } from \"./Buildings\";\r\n\r\nclass SpellcraftingVat extends Building {\r\n  getId(): string {\r\n    return \"spellcraftingVat\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Spellcrafting Vat\");\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"An oversized tube meant to hold large amounts of items, so that their power may be routed into a spell.\",\r\n    );\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\r\n      \"+1 Spellcraft slot. Note: Cannot be demolished - destroy the vat instead from the Spellcraft screen\",\r\n    );\r\n  }\r\n\r\n  getBaseLandRequired(): number {\r\n    return 15;\r\n  }\r\n\r\n  canTurnOff(): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const spellcraftingVat = new SpellcraftingVat();\r\n\r\nclass BuildSpellcraftingVat extends BuildingSpell {\r\n  getAreas(): Partial<Record<ActionArea, ActionSubcategory[]>> {\r\n    return { HOME: [ActionSubcategories.OTHER] };\r\n  }\r\n\r\n  getBuilding(): Building {\r\n    return spellcraftingVat;\r\n  }\r\n\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Coins: 10000,\r\n      AirEssence: 12000,\r\n    };\r\n  }\r\n\r\n  getBaseResourceScale(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Coins: 4.0,\r\n      AirEssence: 4.0,\r\n    };\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return isSpellcraftUnlocked(state) && super.isVisible(state);\r\n  }\r\n\r\n  shouldHideDemolish(): boolean {\r\n    return true;\r\n  }\r\n\r\n  canDemolish(state: GameState, amount: number): boolean {\r\n    return false;\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {};\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Air;\r\n  }\r\n}\r\n\r\nexport const buildSpellcraftingVat = new BuildSpellcraftingVat();\r\n\r\nfunction vatEqualizer(state: GameState) {\r\n  const buildingAmt = getBuildingAmount(state, spellcraftingVat);\r\n  const vatAmt = keysOf(state.run.spellcrafts).length;\r\n  if (vatAmt < buildingAmt) {\r\n    const buildingAmt = getBuildingAmount(state, spellcraftingVat);\r\n    let vatAmt = keysOf(state.run.spellcrafts).length;\r\n    while (vatAmt < buildingAmt) {\r\n      state = createNewVat(state);\r\n      vatAmt++;\r\n    }\r\n  }\r\n  return state;\r\n}\r\n\r\nBuildingAmountListeners.register(vatEqualizer, \"spellcraftingVats\");\r\n","import { useCallback, useMemo, useState } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { getThemeByElementAndDarkMode } from \"../../Themes\";\r\nimport { ActionArea } from \"../../backend/action/ActionAreas\";\r\nimport { SpellElement } from \"../../backend/spells/Elements\";\r\nimport { Spell } from \"../../backend/spells/Spell\";\r\nimport { Spells, getVisibleSpellsByElement } from \"../../backend/spells/Spells\";\r\nimport { keysOf, useComponentDidUpdate } from \"../../utils/CoreUtils\";\r\nimport { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { SpellElementSelector } from \"../spells/SpellElementSelector\";\r\nimport { Button } from \"./Button\";\r\nimport Styles from \"./Styles\";\r\nimport { Text } from \"./Text\";\r\nimport { GameIcon } from \"./icons/GameIcon\";\r\nimport { useGameState } from \"./useGameState\";\r\n\r\nfunction SpellSelectSpellButton(props: {\r\n  spell: Spell;\r\n  onPress: (spell: Spell) => void;\r\n  theme: any;\r\n}) {\r\n  const state = useGameState();\r\n  const spell = props.spell;\r\n  const onSpellPress = useCallback(\r\n    () => props.onPress(spell),\r\n    [props.onPress, spell],\r\n  );\r\n  const spellDisplayName = spell.getBasicDisplayName(state);\r\n  const spellCost = spell.getManaCost(state);\r\n  const theme = props.theme;\r\n  const buttonTitleStyles = useMemo(\r\n    () => [\r\n      {\r\n        color: theme.colors.onPrimary,\r\n      },\r\n      {\r\n        fontSize: 12,\r\n      },\r\n    ],\r\n    [theme],\r\n  );\r\n  return useMemo(\r\n    () => (\r\n      <Button\r\n        key={spell.getId()}\r\n        compact={true}\r\n        enableAutoRepress={true}\r\n        onPress={onSpellPress}\r\n        style={[Styles.flex]}\r\n        labelStyle={{\r\n          marginHorizontal: 16,\r\n          flex: 1,\r\n          marginVertical: 0,\r\n          height: 40,\r\n        }}\r\n        contentStyle={{ marginHorizontal: 0, flex: 1, height: 40 }}\r\n        // @ts-ignore I added this myself\r\n        TextComponent={View}\r\n        theme={theme}\r\n      >\r\n        <View style={styles.spellButtonTitleContainer}>\r\n          <View style={styles.spellButtonTitleOnlyContainer}>\r\n            <Text style={[buttonTitleStyles, Styles.flex]} numberOfLines={1}>\r\n              {spellDisplayName}\r\n            </Text>\r\n          </View>\r\n          <View\r\n            style={[styles.spellButtonCostContainer, Styles.flexRowAlignCenter]}\r\n          >\r\n            {spellCost > 0 && (\r\n              <View style={[Styles.flexRowAlignCenter, Styles.ml8]}>\r\n                <Text style={buttonTitleStyles} doNotScaleFonts={true}>\r\n                  {formatNumber(spellCost, { showDecimals: false })}\r\n                </Text>\r\n                <GameIcon icon=\"mana\" style={styles.spellManaIcon} />\r\n              </View>\r\n            )}\r\n          </View>\r\n        </View>\r\n      </Button>\r\n    ),\r\n    [spellDisplayName, buttonTitleStyles, spellCost, onSpellPress, theme],\r\n  );\r\n}\r\n\r\nexport function SpellSelect(props: {\r\n  onSelect: (spellId: string) => void;\r\n  spellId: string;\r\n}) {\r\n  const state = useGameState();\r\n\r\n  const [spellId, setSpellId] = useState(props.spellId);\r\n  const spell = Spells.getByIdNullable(spellId);\r\n\r\n  const spellsByElement = getVisibleSpellsByElement(\r\n    state,\r\n    ActionArea.SPELL_MENU,\r\n  );\r\n\r\n  const elements =\r\n    keysOf(getVisibleSpellsByElement(state, ActionArea.SPELL_MENU)) ?? [];\r\n\r\n  const [selectedSubcategory, setSelectedSubcategory] = useState<SpellElement>(\r\n    spell?.getElement?.(),\r\n  );\r\n\r\n  const spellsToShow =\r\n    spellsByElement?.[selectedSubcategory as SpellElement] ?? [];\r\n\r\n  const onSpellSelect = useCallback(\r\n    (spell: Spell) => props.onSelect(spell.getId()),\r\n    [props.onSelect],\r\n  );\r\n\r\n  useComponentDidUpdate(() => setSpellId(undefined), [selectedSubcategory]);\r\n\r\n  const subcategoryPickerComponent = useMemo(\r\n    () => (\r\n      <SpellElementSelector\r\n        selected={selectedSubcategory}\r\n        onPress={setSelectedSubcategory}\r\n        elements={elements}\r\n        style={{ width: 216 }}\r\n      />\r\n    ),\r\n    [selectedSubcategory, setSelectedSubcategory, [JSON.stringify(elements)]],\r\n  );\r\n\r\n  const theme = useTheme();\r\n  const elementTheme =\r\n    state.options.colorSpellButtonsByElement && selectedSubcategory != null\r\n      ? getThemeByElementAndDarkMode(selectedSubcategory, theme.dark)\r\n      : theme;\r\n\r\n  const spellButtons = useMemo(\r\n    () => (\r\n      <View style={Styles.mv4}>\r\n        {spellsToShow.map((spell) => (\r\n          <View key={spell.getId()} style={Styles.mv4}>\r\n            <SpellSelectSpellButton\r\n              spell={spell}\r\n              onPress={onSpellSelect}\r\n              theme={elementTheme}\r\n            />\r\n          </View>\r\n        ))}\r\n      </View>\r\n    ),\r\n    [spellsToShow, onSpellSelect, elementTheme],\r\n  );\r\n\r\n  return (\r\n    <View style={[Styles.flex, styles.topContainer]}>\r\n      <View style={Styles.flexCenter}>\r\n        {elements.length > 0 && subcategoryPickerComponent}\r\n      </View>\r\n      <View style={Styles.flex}>\r\n        <ScrollView style={[{ flexGrow: 0 }, Styles.mt8]}>\r\n          {spellButtons}\r\n        </ScrollView>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  spellButtonTitleContainer: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  spellButtonTitleOnlyContainer: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  spellButtonCostContainer: {\r\n    flexDirection: \"row\",\r\n    width: 100,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  spellManaIcon: {\r\n    height: 16,\r\n    width: 16,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    marginLeft: 2,\r\n  },\r\n  topContainer: {\r\n    minWidth: 300,\r\n  },\r\n});\r\n","import { Entypo } from \"@expo/vector-icons\";\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { StyleSheet, View, useWindowDimensions } from \"react-native\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport {\r\n  Modal,\r\n  Portal,\r\n  Surface,\r\n  ThemeProvider,\r\n  useTheme,\r\n} from \"react-native-paper\";\r\nimport { getThemeByElementAndDarkMode } from \"../Themes\";\r\nimport { buildSpellcraftingVat } from \"../backend/buildings/SpellcraftingVat\";\r\nimport { Spellcraft } from \"../backend/spellcraft/Spellcraft\";\r\nimport {\r\n  assignSpellToVat,\r\n  destroyVat,\r\n  getVisibleSpellcraftsForSpell,\r\n  removeSpellcraftFromVat,\r\n} from \"../backend/spellcraft/SpellcraftUtils\";\r\nimport { Spellcrafts } from \"../backend/spellcraft/Spellcrafts\";\r\nimport { Spells } from \"../backend/spells/Spells\";\r\nimport { keysOf } from \"../utils/CoreUtils\";\r\nimport { formatNumber } from \"../utils/FormattingUtils\";\r\nimport { t } from \"../utils/I18n\";\r\nimport {\r\n  ItemGrid,\r\n  ItemGridElement,\r\n  ItemGridElementUsage,\r\n} from \"./inventory/ItemGrid\";\r\nimport { SpellcraftDetails } from \"./spellcraft/SpellcraftDetails\";\r\nimport { Button } from \"./utility/Button\";\r\nimport CategoryContainer from \"./utility/CategoryContainer\";\r\nimport { GameStateFreezer } from \"./utility/GameStateFreezer\";\r\nimport { Markdown } from \"./utility/Markdown\";\r\nimport { SpellSelect } from \"./utility/SpellSelect\";\r\nimport Styles from \"./utility/Styles\";\r\nimport { Text } from \"./utility/Text\";\r\nimport { UIContext, useUIStateFromContext } from \"./utility/UIContext\";\r\nimport { GameIcon } from \"./utility/icons/GameIcon\";\r\nimport { useGameState } from \"./utility/useGameState\";\r\n\r\nfunction SpellcraftRow(props: { vatId: string; index: number }) {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const theme = useTheme();\r\n\r\n  const [collapsed, setCollapsed] = useState(true);\r\n  const [selectedElement, setSelectedElement] = useState(\r\n    null as ItemGridElement | null,\r\n  );\r\n\r\n  const onPressItem = React.useCallback(\r\n    (item: ItemGridElement) => {\r\n      setSelectedElement(item);\r\n    },\r\n    [setSelectedElement],\r\n  );\r\n\r\n  const selectedElementRef = useRef(selectedElement);\r\n  selectedElementRef.current = selectedElement;\r\n\r\n  const vatId = props.vatId;\r\n  const spellcraftData = state.run.spellcrafts[vatId];\r\n  const spellcraft = Spellcrafts.getByIdNullable(spellcraftData.spellcraftId);\r\n\r\n  const spellcraftName = spellcraft != null ? spellcraft.getName() : t(\"Empty\");\r\n  const spellcraftSpell =\r\n    spellcraftData.spellId != null\r\n      ? Spells.getById(spellcraftData.spellId)\r\n      : null;\r\n\r\n  const title = t(\"Vat {{index}} - {{spellcraftName}}\", {\r\n    index: formatNumber(props.index + 1),\r\n    spellcraftName,\r\n  });\r\n  const subtitle =\r\n    spellcraftSpell != null\r\n      ? t(\"On spell: {{spell}}\", { spell: spellcraftSpell.getSpellName() })\r\n      : \"\";\r\n\r\n  const uiContext = useContext(UIContext);\r\n  const [_isModalSelectorOpen, setIsModalSelectorOpen] = useUIStateFromContext(\r\n    uiContext,\r\n    \"picker_open\",\r\n    false,\r\n  );\r\n  const [showingSpellSelector, setShowingSpellSelector] = useState(false);\r\n\r\n  const showModal = useCallback(() => {\r\n    setShowingSpellSelector(true);\r\n    setIsModalSelectorOpen(true);\r\n  }, [setShowingSpellSelector, setIsModalSelectorOpen]);\r\n  const hideModal = useCallback(() => {\r\n    setShowingSpellSelector(false);\r\n    setIsModalSelectorOpen(false);\r\n  }, [setShowingSpellSelector, setIsModalSelectorOpen]);\r\n\r\n  const [confirmDestroy, setConfirmDestroy] = useState(false);\r\n  const destroyVatCallback = useCallback(() => {\r\n    if (confirmDestroy) {\r\n      stateRef.current.apply((state) => {\r\n        state = destroyVat(state, vatId);\r\n        buildSpellcraftingVat._demolishUnsafe(state, 1);\r\n        return state;\r\n      });\r\n    } else {\r\n      setConfirmDestroy(true);\r\n    }\r\n  }, [confirmDestroy]);\r\n\r\n  const setSpellCallback = useCallback(\r\n    (spellId: string) => {\r\n      stateRef.current.apply((state) =>\r\n        assignSpellToVat(state, vatId, spellId),\r\n      );\r\n      hideModal();\r\n    },\r\n    [vatId, hideModal],\r\n  );\r\n\r\n  const removeSpellcraftCallback = useCallback(() => {\r\n    stateRef.current.apply((state) => removeSpellcraftFromVat(state, vatId));\r\n  }, [vatId]);\r\n\r\n  const spellcrafts =\r\n    spellcraftSpell != null\r\n      ? getVisibleSpellcraftsForSpell(state, spellcraftSpell)\r\n      : [];\r\n\r\n  const itemGridElements = useMemo(\r\n    () =>\r\n      spellcraftSpell != null && spellcraft == null\r\n        ? spellcrafts.map((spellcraft) => ({\r\n            itemOrSpellId: spellcraft.getBaseItem().getId(),\r\n            amount: 1,\r\n            params: spellcraft.getBaseItem().getDefaultParams(),\r\n            disabled: !spellcraft.isSpellCompatible(spellcraftSpell),\r\n          }))\r\n        : [],\r\n    [\r\n      spellcrafts.map((spellcraft) => spellcraft.getId()).join(),\r\n      spellcraftSpell,\r\n      spellcraft,\r\n    ],\r\n  );\r\n\r\n  const itemGridElementsJSON = useMemo(\r\n    () => JSON.stringify(itemGridElements),\r\n    [itemGridElements],\r\n  );\r\n\r\n  useEffect(() => setSelectedElement(undefined), [itemGridElementsJSON]);\r\n\r\n  const selectedSpellcraft =\r\n    selectedElement != null\r\n      ? (Spellcrafts.getAll().find(\r\n          (spellcraft) =>\r\n            spellcraft.getBaseItem().getId() == selectedElement?.itemOrSpellId,\r\n        ) as Spellcraft)\r\n      : undefined;\r\n\r\n  const itemGrid = useMemo(\r\n    () => (\r\n      <ItemGrid\r\n        items={itemGridElements}\r\n        location={ItemGridElementUsage.SPELLCRAFT}\r\n        onPressItem={onPressItem}\r\n      />\r\n    ),\r\n    [itemGridElementsJSON, onPressItem],\r\n  );\r\n\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  const modal = useMemo(\r\n    () => (\r\n      <Modal\r\n        key=\"changeSpell\"\r\n        visible={showingSpellSelector}\r\n        onDismiss={hideModal}\r\n        contentContainerStyle={[\r\n          styles.overlay,\r\n          {\r\n            maxWidth: Math.min(width - 16, 640),\r\n            maxHeight: height - 32,\r\n            backgroundColor: theme.colors.background,\r\n          },\r\n        ]}\r\n      >\r\n        <View style={[Styles.flex, Styles.p16]}>\r\n          <SpellSelect\r\n            onSelect={setSpellCallback}\r\n            spellId={spellcraftData.spellId}\r\n          />\r\n        </View>\r\n      </Modal>\r\n    ),\r\n    [\r\n      showingSpellSelector,\r\n      hideModal,\r\n      width,\r\n      height,\r\n      theme,\r\n      setSpellCallback,\r\n      spellcraftData.spellId,\r\n    ],\r\n  );\r\n\r\n  const elementTheme =\r\n    spellcraftSpell != null\r\n      ? getThemeByElementAndDarkMode(spellcraftSpell.getElement(), theme.dark)\r\n      : theme;\r\n\r\n  const backgroundColor = elementTheme.colors.secondaryContainer;\r\n\r\n  const icon = useMemo(\r\n    () =>\r\n      spellcraft != null ? (\r\n        <View\r\n          style={[styles.tile, { borderColor: elementTheme.colors.outline }]}\r\n        >\r\n          <GameIcon icon={spellcraft.getBaseItem().getId()} />\r\n        </View>\r\n      ) : (\r\n        <View\r\n          style={[styles.tile, { borderColor: elementTheme.colors.outline }]}\r\n        ></View>\r\n      ),\r\n    [spellcraft, elementTheme],\r\n  );\r\n\r\n  return useMemo(\r\n    () => (\r\n      // @ts-ignore It works\r\n      <ThemeProvider theme={elementTheme}>\r\n        <Surface\r\n          mode=\"flat\"\r\n          key={props.vatId}\r\n          style={[styles.rowContainer, { backgroundColor }]}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => setCollapsed(!collapsed)}\r\n            style={styles.expandTouchable}\r\n          >\r\n            <View style={Styles.flexRowSpaceBetween}>\r\n              <View style={Styles.flexRowAlignCenter}>\r\n                {icon}\r\n                <View style={Styles.ml8}>\r\n                  <Text h4 style={Styles.bold}>\r\n                    {title}\r\n                  </Text>\r\n                  {subtitle != \"\" && <Text>{subtitle}</Text>}\r\n                </View>\r\n              </View>\r\n              <Entypo\r\n                name={collapsed ? \"chevron-right\" : \"chevron-down\"}\r\n                size={24}\r\n                color={elementTheme.colors.onBackground}\r\n              />\r\n            </View>\r\n          </TouchableOpacity>\r\n          <GameStateFreezer isVisible={!collapsed}>\r\n            <View style={collapsed ? { display: \"none\" } : null}>\r\n              <View style={Styles.mt16}>\r\n                <View style={Styles.flexRowSpaceBetween}>\r\n                  <Markdown>\r\n                    {t(\"Spell: **{{spell}}**\", {\r\n                      spell: spellcraftSpell?.getSpellName?.() ?? t(\"None\"),\r\n                    })}\r\n                  </Markdown>\r\n                  <Button onPress={showModal} compact={true}>\r\n                    {t(\"Select spell\")}\r\n                  </Button>\r\n                  <Portal>{modal}</Portal>\r\n                </View>\r\n              </View>\r\n              {spellcraftSpell != null && (\r\n                <View style={Styles.mt16}>\r\n                  <View style={Styles.flexRowAlignCenter}>\r\n                    <View style={[Styles.flex, Styles.mr16]}>\r\n                      <Markdown>\r\n                        {spellcraft != null\r\n                          ? t(\"Spellcraft: **{{spellcraft}} - {{effect}}**\", {\r\n                              spellcraft: spellcraftName,\r\n                              effect: spellcraft.getEffect(state),\r\n                            })\r\n                          : t(\"Spellcraft: **Empty**\")}\r\n                      </Markdown>\r\n                    </View>\r\n                    {spellcraft != null && (\r\n                      <Button onPress={removeSpellcraftCallback} compact={true}>\r\n                        {t(\"Remove\")}\r\n                      </Button>\r\n                    )}\r\n                  </View>\r\n                  {itemGridElements.length == 0 && spellcraft == null && (\r\n                    <View style={Styles.mt8}>\r\n                      <Text style={{ fontStyle: \"italic\" }}>\r\n                        {t(\r\n                          \"You have no known Spellcrafts that could affect this spell!\",\r\n                        )}\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n                  {itemGridElements.length > 0 && (\r\n                    <View style={Styles.mt8}>{itemGrid}</View>\r\n                  )}\r\n                  {selectedElement != null && (\r\n                    <View style={Styles.mt8}>\r\n                      <SpellcraftDetails\r\n                        vatId={vatId}\r\n                        spellcraftId={selectedSpellcraft.getId()}\r\n                      />\r\n                    </View>\r\n                  )}\r\n                </View>\r\n              )}\r\n              <View style={[Styles.mt16, Styles.ph8]}>\r\n                <CategoryContainer\r\n                  title={t(\"Destroy Vat\")}\r\n                  initiallyExpanded={false}\r\n                  dividerColor={elementTheme.colors.outline}\r\n                >\r\n                  <View style={Styles.mt8}>\r\n                    <Markdown>\r\n                      {t(\r\n                        \"If you want to recover the land used by a Spellcrafting Vat, you can destroy the vat here. If you have an active Spellcraft, you will regain the items you used.\",\r\n                      )}\r\n                    </Markdown>\r\n                    <View style={[Styles.mt8, Styles.flexCenter]}>\r\n                      <Button onPress={destroyVatCallback}>\r\n                        {confirmDestroy\r\n                          ? t(\"Press again to confirm\")\r\n                          : t(\"Destroy Vat\")}\r\n                      </Button>\r\n                    </View>\r\n                  </View>\r\n                </CategoryContainer>\r\n              </View>\r\n            </View>\r\n          </GameStateFreezer>\r\n        </Surface>\r\n      </ThemeProvider>\r\n    ),\r\n    [\r\n      collapsed,\r\n      setCollapsed,\r\n      elementTheme,\r\n      title,\r\n      subtitle,\r\n      icon,\r\n      !collapsed && spellcraftSpell,\r\n      !collapsed && hideModal,\r\n      !collapsed && spellcraft?.getEffect?.(state),\r\n      !collapsed && spellcraftName,\r\n      !collapsed && selectedElement,\r\n      !collapsed && JSON.stringify(spellcraftData),\r\n      !collapsed && destroyVatCallback,\r\n      !collapsed && removeSpellcraftCallback,\r\n      !collapsed && confirmDestroy,\r\n      elementTheme,\r\n      modal,\r\n    ],\r\n  );\r\n}\r\n\r\nexport function SpellcraftsComponent() {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const vatIds = keysOf(state.run.spellcrafts);\r\n\r\n  return useMemo(() => {\r\n    return (\r\n      <View style={styles.topContainer}>\r\n        {vatIds.length > 0 ? (\r\n          <View>\r\n            {vatIds.map((vatId, index) => (\r\n              <View key={vatId} style={Styles.pv4}>\r\n                <SpellcraftRow index={index} vatId={vatId} key={vatId} />\r\n              </View>\r\n            ))}\r\n          </View>\r\n        ) : (\r\n          <Markdown>\r\n            {t(\r\n              \"In this screen, you can do Spellcrafting to modify the effects of your spells. However, you have no vats right now, which are needed to do so. Build a Spellcrafting Vat in your Home to get one!\",\r\n            )}\r\n          </Markdown>\r\n        )}\r\n      </View>\r\n    );\r\n  }, [vatIds.join()]);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n  },\r\n  contentContainer: {\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 4,\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  hintProgress: {\r\n    marginTop: 4,\r\n  },\r\n  loadoutsContainer: {\r\n    borderTopWidth: 1,\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 4,\r\n  },\r\n  categoryTitle: {\r\n    marginLeft: 8,\r\n  },\r\n  categoryContainer: {\r\n    paddingTop: 4,\r\n    marginBottom: 8,\r\n  },\r\n  campusContainer: {\r\n    flex: 1,\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  campusHintWarning: {\r\n    marginTop: 16,\r\n  },\r\n  optionRow: {\r\n    marginTop: 8,\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    gap: 8,\r\n    justifyContent: \"space-around\",\r\n  },\r\n  overlay: {\r\n    alignSelf: \"center\",\r\n    marginHorizontal: 16,\r\n    maxWidth: 640,\r\n  },\r\n  messageLogContainer: {\r\n    padding: 8,\r\n    borderColor: \"#444\",\r\n    borderWidth: 1,\r\n    maxHeight: 320,\r\n  },\r\n  rowContainer: {\r\n    padding: 8,\r\n    borderRadius: 8,\r\n  },\r\n  topContainer: {\r\n    gap: 8,\r\n  },\r\n  expandTouchable: {\r\n    // @ts-ignore This is a valid property\r\n    cursor: \"pointer\",\r\n  },\r\n  tile: {\r\n    borderWidth: 0.5,\r\n    height: 32,\r\n    width: 32,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { Flag } from \"../../../Flag\";\r\nimport { setFlag } from \"../../../Flags\";\r\nimport { addGameStateListener } from \"../../../GameStateListeners\";\r\nimport { registerPostRetirementListener } from \"../../../Retire\";\r\nimport { Storyline } from \"../../../storylines/Storyline\";\r\nimport { Storylines } from \"../../../storylines/Storylines\";\r\nimport { buildEvent } from \"../../EventMessageBuilder\";\r\nimport { triggerEvent } from \"../../Events\";\r\nimport { EventTag } from \"../../GameEvent\";\r\n\r\nexport const convenienceStoryline = new Storyline(\r\n  \"convenience\",\r\n  t(\"Convenience\"),\r\n  327,\r\n  10,\r\n  (state) => t(\"Expand your home at least 20 times\"),\r\n  (state) =>\r\n    t('Unlock \"Auto purchase max\" option for furniture and \"Expand Home\"'),\r\n  (state) => true,\r\n);\r\n\r\nexport function loadConvenience() {\r\n  Storylines.register(convenienceStoryline);\r\n  const eventBuilder = buildEvent(\"convenience\", t(\"(Storyline) Convenience\"), [\r\n    EventTag.STORYLINE,\r\n  ]).setStorylineIds(convenienceStoryline.getId());\r\n\r\n  eventBuilder.message(\r\n    t(`Your home has come a long way since you started working towards obtaining the Philosopher's Stone. It is now much, much bigger than it initially was - you think it is at least five times larger!\r\n    \r\nAnd yet, even with all the furniture you have, it feels almost as if you could never have enough...`),\r\n  );\r\n  eventBuilder\r\n    .message(\r\n      t(`The process of building furniture and expanding your home has left you frankly quite tired. If only there was a way to make it at least a little easier...\r\n    \r\n...even if just a little...\r\n\r\n...*wait*, you think there *might* be a way!`),\r\n    )\r\n    .option(\r\n      t(\"Continue\"),\r\n      {\r\n        transform: (state) => {\r\n          state = convenienceStoryline.complete(state);\r\n          state = convenienceStoryline.activateBonus(state);\r\n          state = setFlag(Flag.AutoPurchaseUnlocked)(state);\r\n          return state;\r\n        },\r\n      },\r\n      \"end\",\r\n    );\r\n  eventBuilder\r\n    .message(\r\n      t(`Of course. Magic spells are difficult, but... you could definitely make building furniture and expanding your home *happen automatically*! Why didn't you think of this before?\r\n      \r\nYou write down the idea in your diary. You can't wait to apply it... right away.\r\n\r\n**You have completed the \"Convenience\" Storyline! You have permanently unlocked a feature to automatically build furniture, expand your home or purchase Enhancements (and a few other things) once you can afford to. You can toggle this feature for each individual furniture in the Home screen, by expanding its details. Tip: this is especially useful for Catalysts!**`),\r\n    )\r\n    .tag(\"end\");\r\n\r\n  const event = eventBuilder.build();\r\n\r\n  addGameStateListener(event.getId(), (state) => {\r\n    if (\r\n      !event.hasTriggered(state) &&\r\n      !convenienceStoryline.isCompleted(state) &&\r\n      state.run.landPurchaseCount >= 20\r\n    ) {\r\n      return triggerEvent(event);\r\n    }\r\n  });\r\n\r\n  registerPostRetirementListener(\r\n    convenienceStoryline.getId(),\r\n    (state, isMock) => {\r\n      if (convenienceStoryline.isBonusActive(state)) {\r\n        state = setFlag(Flag.AutoPurchaseUnlocked)(state);\r\n      }\r\n      return state;\r\n    },\r\n  );\r\n}\r\n","import memoize from \"sonic-memoize\";\r\nimport { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { Flag } from \"../../Flag\";\r\nimport { hasFlag } from \"../../Flags\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport {\r\n  ActionArea,\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { SpellElement } from \"../../spells/Elements\";\r\nimport { registerSpell } from \"../../spells/Spells\";\r\nimport {\r\n  TransformationType,\r\n  applyTransformations,\r\n  explainTransformationsText,\r\n  registerTransformation,\r\n} from \"../../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../transformation/TransformationTags\";\r\nimport { Building, BuildingSpell } from \"../Building\";\r\nimport { Buildings, getBuildingAmount } from \"../Buildings\";\r\n\r\nclass EssenceCatalyst extends Building {\r\n  getId(): string {\r\n    return \"essenceCatalyst\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Essence Catalyst\");\r\n  }\r\n\r\n  catalystTags = memoize(() => [\r\n    TransformationTags.CatalystEffectivity,\r\n    this.getId(),\r\n  ]);\r\n\r\n  getPerCatalystBonusMultiplier(state: GameState): number {\r\n    return 1.0 + applyTransformations(this.catalystTags(), state, 0.15);\r\n  }\r\n\r\n  catalystEffectivityParams = {\r\n    valueType: TransformationValueType.Percent,\r\n  };\r\n\r\n  getPerCatalystBonusMultiplierExplanation(state: GameState): string {\r\n    return explainTransformationsText(\r\n      this.catalystTags(),\r\n      state,\r\n      0.15,\r\n      this.catalystEffectivityParams,\r\n    );\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"A catalyst for channeling. Greatly empowers channeling strength for all elements.\",\r\n    );\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effectPct = (this.getPerCatalystBonusMultiplier(state) - 1.0) * 100;\r\n    return t(\"^+{{effectPct}}%^<{{explanation}}> production from Channeling\", {\r\n      effectPct: formatNumber(effectPct),\r\n      explanation: this.getPerCatalystBonusMultiplierExplanation(state),\r\n    });\r\n  }\r\n\r\n  getBaseLandRequired(): number {\r\n    return 10;\r\n  }\r\n\r\n  canTurnOff(): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nconst essenceCatalyst = new EssenceCatalyst();\r\n\r\nclass BuildEssenceCatalyst extends BuildingSpell {\r\n  getAreas(): Partial<Record<ActionArea, ActionSubcategory[]>> {\r\n    return { HOME: [ActionSubcategories.CATALYSTS] };\r\n  }\r\n\r\n  getBuilding(): EssenceCatalyst {\r\n    return essenceCatalyst;\r\n  }\r\n\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      FireEssence: 200,\r\n    };\r\n  }\r\n\r\n  getBaseResourceScale(): Partial<Record<Resource, number>> {\r\n    return {\r\n      FireEssence: 2.0,\r\n    };\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 20;\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return hasFlag(state, Flag.CatalystsUnlocked) && super.isVisible(state);\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {};\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Fire;\r\n  }\r\n}\r\n\r\nconst buildEssenceCatalyst = new BuildEssenceCatalyst();\r\n\r\nexport function loadEssenceCatalysts() {\r\n  Buildings.register(essenceCatalyst);\r\n  registerSpell(buildEssenceCatalyst);\r\n\r\n  registerTransformation(\r\n    [[TransformationTags.ChannelingEfficiency]],\r\n    \"essenceCatalyst\",\r\n    t(\"Essence Catalyst\"),\r\n    TransformationType.Multiplier,\r\n    (state, params) => {\r\n      const building = Buildings.getById(\"essenceCatalyst\") as EssenceCatalyst;\r\n      return Math.pow(\r\n        building.getPerCatalystBonusMultiplier(state),\r\n        getBuildingAmount(state, building),\r\n      );\r\n    },\r\n  );\r\n}\r\n\r\nexport { buildEssenceCatalyst, essenceCatalyst };\r\n","import memoize from \"sonic-memoize\";\r\nimport { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { Flag } from \"../../Flag\";\r\nimport { hasFlag } from \"../../Flags\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport {\r\n  ActionArea,\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { SpellElement } from \"../../spells/Elements\";\r\nimport {\r\n  IncomeOverTimeProducer,\r\n  IncomeOverTimeProducers,\r\n  clearCalculatedIncomeCache,\r\n} from \"../../timetick/IncomeOverTime\";\r\nimport {\r\n  applyTransformations,\r\n  explainTransformationsText,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Building, BuildingSpell } from \"../Building\";\r\nimport { BuildingAmountListeners, getBuildingAmount } from \"../Buildings\";\r\n\r\nconst BASE_REGEN = 0.75;\r\nconst productionTags = [\r\n  TransformationTags.Production,\r\n  Resource.Mana,\r\n  \"manaSpout\",\r\n];\r\nfunction getManaRegenPerSec(state: GameState): number {\r\n  return applyTransformations(productionTags, state, BASE_REGEN);\r\n}\r\n\r\nclass ManaSpout extends Building {\r\n  getId(): string {\r\n    return \"manaSpout\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Mana Spout\");\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"A small piece of furniture that automatically produces Mana. Key for any wizard.\",\r\n    );\r\n  }\r\n\r\n  effectUnit = memoize(() => ({ unit: t(\":mana:/sec\") }));\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\"^+{{manaRegenPerSec}}^<{{explanation}}>:mana:/sec\", {\r\n      manaRegenPerSec: formatNumber(getManaRegenPerSec(state), {\r\n        showDecimals: true,\r\n      }),\r\n      explanation: explainTransformationsText(\r\n        productionTags,\r\n        state,\r\n        BASE_REGEN,\r\n        this.effectUnit(),\r\n      ),\r\n    });\r\n  }\r\n\r\n  getBaseLandRequired(): number {\r\n    return 2;\r\n  }\r\n\r\n  canTurnOff(): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nconst manaSpout = new ManaSpout();\r\n\r\nclass BuildManaSpout extends BuildingSpell {\r\n  getAreas(): Partial<Record<ActionArea, ActionSubcategory[]>> {\r\n    return { HOME: [ActionSubcategories.MANA] };\r\n  }\r\n\r\n  getBuilding(): Building {\r\n    return manaSpout;\r\n  }\r\n\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      WaterEssence: 10,\r\n      AirEssence: 5,\r\n    };\r\n  }\r\n\r\n  getBaseResourceScale(): Partial<Record<Resource, number>> {\r\n    return {\r\n      WaterEssence: 1.25,\r\n      AirEssence: 1.25,\r\n    };\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 10;\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return hasFlag(state, Flag.ManaSpoutsUnlocked) && super.isVisible(state);\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {};\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Water;\r\n  }\r\n}\r\n\r\nconst buildManaSpout = new BuildManaSpout();\r\n\r\nIncomeOverTimeProducers.register(\r\n  new IncomeOverTimeProducer(\r\n    manaSpout.getId(),\r\n    manaSpout.getName(),\r\n    (state) => ({\r\n      Mana: getManaRegenPerSec(state) * getBuildingAmount(state, manaSpout),\r\n    }),\r\n  ),\r\n);\r\n\r\nBuildingAmountListeners.register((state, building) => {\r\n  if (building == manaSpout) {\r\n    state = clearCalculatedIncomeCache(state);\r\n  }\r\n  return state;\r\n});\r\n\r\nexport { buildManaSpout as BuildManaSpout, manaSpout as ManaSpout };\r\n","import memoize from \"sonic-memoize\";\r\nimport { valuesOf } from \"../../../utils/CoreUtils\";\r\nimport { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { cacheByArbitraryVersion } from \"../../Caching\";\r\nimport { Flag } from \"../../Flag\";\r\nimport { hasFlag } from \"../../Flags\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource, clearResourceCapCache } from \"../../Resources\";\r\nimport {\r\n  ActionArea,\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { SpellElement, getUnlockedElements } from \"../../spells/Elements\";\r\nimport { registerSpell } from \"../../spells/Spells\";\r\nimport { RESOURCE_FOR_ELEMENT } from \"../../spells/channeling/ChannelingResources\";\r\nimport {\r\n  TransformationType,\r\n  applyTransformationsCached,\r\n  explainTransformationsText,\r\n  registerTransformation,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Building, BuildingSpell } from \"../Building\";\r\nimport {\r\n  BuildingAmountListeners,\r\n  Buildings,\r\n  getBuildingAmount,\r\n} from \"../Buildings\";\r\n\r\nclass EssenceStorage extends Building {\r\n  getId(): string {\r\n    return \"essenceStorage\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Essence Storage\");\r\n  }\r\n\r\n  perBuildingCapTags = memoize((resource) => [\r\n    TransformationTags.PerBuildingCap,\r\n    resource,\r\n    this.getId(),\r\n  ]);\r\n\r\n  perBuildingCapParams = memoize((resource) => ({ resource }));\r\n\r\n  getPerStorageBonusCap(state: GameState, resource: Resource): number {\r\n    return applyTransformationsCached(\r\n      this.perBuildingCapTags(resource),\r\n      state,\r\n      400,\r\n      this.perBuildingCapParams(resource),\r\n    );\r\n  }\r\n\r\n  perBuildingCapExplanationParams = memoize((resource) => ({\r\n    resource,\r\n    unit: t(\" Max{{resourceIcon}}\", {\r\n      resourceIcon: `:${resource.toLowerCase()}:`,\r\n    }),\r\n  }));\r\n\r\n  getPerStorageBonusCapExplanation(\r\n    state: GameState,\r\n    resource: Resource,\r\n  ): string {\r\n    return explainTransformationsText(\r\n      this.perBuildingCapTags(resource),\r\n      state,\r\n      400,\r\n      this.perBuildingCapExplanationParams(resource),\r\n    );\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"A magical storage that allows you to accumulate more elemental Essence.\",\r\n    );\r\n  }\r\n\r\n  _getDisplayEffectUncached(state: GameState): string {\r\n    return getUnlockedElements(state)\r\n      .map((element) => {\r\n        return t(\"^+{{amount}}^<{{explanation}}> Max{{resourceIcon}}\", {\r\n          amount: formatNumber(\r\n            this.getPerStorageBonusCap(state, RESOURCE_FOR_ELEMENT[element]),\r\n          ),\r\n          resourceIcon: `:${RESOURCE_FOR_ELEMENT[element].toLowerCase()}:`,\r\n          explanation: this.getPerStorageBonusCapExplanation(\r\n            state,\r\n            RESOURCE_FOR_ELEMENT[element],\r\n          ),\r\n        });\r\n      })\r\n      .join(t(\", \"));\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    return cacheByArbitraryVersion(\r\n      state,\r\n      \"essenceStoragesEffect\",\r\n      (state) => this._getDisplayEffectUncached(state),\r\n      (state) =>\r\n        JSON.stringify(\r\n          getUnlockedElements(state).map((element) => {\r\n            return this.getPerStorageBonusCap(\r\n              state,\r\n              RESOURCE_FOR_ELEMENT[element],\r\n            );\r\n          }),\r\n        ),\r\n    );\r\n  }\r\n\r\n  getBaseLandRequired(): number {\r\n    return 5;\r\n  }\r\n\r\n  canTurnOff(): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nconst essenceStorage = new EssenceStorage();\r\n\r\nclass BuildEssenceStorage extends BuildingSpell {\r\n  getAreas(): Partial<Record<ActionArea, ActionSubcategory[]>> {\r\n    return { HOME: [ActionSubcategories.STORAGE] };\r\n  }\r\n\r\n  getBuilding(): EssenceStorage {\r\n    return essenceStorage;\r\n  }\r\n\r\n  shouldNeverHaveDemolishBlockers(): boolean {\r\n    return false;\r\n  }\r\n\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return { EarthEssence: 60 };\r\n  }\r\n\r\n  getBaseResourceScale(): Partial<Record<Resource, number>> {\r\n    return {\r\n      EarthEssence: 1.4,\r\n    };\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 20;\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return hasFlag(state, Flag.StoragesUnlocked) && super.isVisible(state);\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {};\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Earth;\r\n  }\r\n}\r\n\r\nconst buildEssenceStorage = new BuildEssenceStorage();\r\n\r\nexport function loadEssenceStorages() {\r\n  Buildings.register(essenceStorage);\r\n  registerSpell(buildEssenceStorage);\r\n\r\n  for (let element of valuesOf(SpellElement)) {\r\n    registerTransformation(\r\n      [[TransformationTags.Cap, RESOURCE_FOR_ELEMENT[element]]],\r\n      \"essenceStorage\" + element,\r\n      t(\"Essence Storage\"),\r\n      TransformationType.Addition,\r\n      (state, params) => {\r\n        return (\r\n          getBuildingAmount(state, essenceStorage) *\r\n          essenceStorage.getPerStorageBonusCap(\r\n            state,\r\n            RESOURCE_FOR_ELEMENT[element],\r\n          )\r\n        );\r\n      },\r\n    );\r\n  }\r\n\r\n  BuildingAmountListeners.register((state, building) => {\r\n    if (building == essenceStorage) {\r\n      state = clearResourceCapCache(state);\r\n    }\r\n    return state;\r\n  }, essenceStorage.getId());\r\n}\r\n\r\nexport { buildEssenceStorage, essenceStorage };\r\n","import memoize from \"sonic-memoize\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { Flag } from \"../../Flag\";\r\nimport { hasFlag } from \"../../Flags\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource, clearResourceCapCache } from \"../../Resources\";\r\nimport {\r\n  ActionArea,\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { SpellElement } from \"../../spells/Elements\";\r\nimport { clearManaCostCache } from \"../../spells/Spells\";\r\nimport {\r\n  TransformationType,\r\n  applyTransformations,\r\n  explainTransformationsText,\r\n  registerTransformation,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Building, BuildingSpell } from \"../Building\";\r\nimport { BuildingAmountListeners, getBuildingAmount } from \"../Buildings\";\r\n\r\nconst BASE_BONUS = 100;\r\nconst perBuildingCapTags = [\r\n  TransformationTags.PerBuildingCap,\r\n  Resource.Mana,\r\n  \"manaShard\",\r\n];\r\nfunction getMaxManaBonus(state: GameState): number {\r\n  return applyTransformations(perBuildingCapTags, state, BASE_BONUS, {\r\n    resource: Resource.Mana,\r\n  });\r\n}\r\nconst explanationParams = memoize(() => ({\r\n  resource: Resource.Mana,\r\n  unit: t(\" Max:mana:\"),\r\n}));\r\nfunction getMaxManaBonusExplanation(state: GameState): string {\r\n  return explainTransformationsText(\r\n    perBuildingCapTags,\r\n    state,\r\n    BASE_BONUS,\r\n    explanationParams(),\r\n  );\r\n}\r\n\r\nclass ManaShard extends Building {\r\n  getId(): string {\r\n    return \"manaShard\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Mana Shard\");\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"A small furniture that allows you to accumulate more Mana, to cast more powerful spells.\",\r\n    );\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\"^+{{maxMana}}^<{{explanation}}> Max:mana:\", {\r\n      maxMana: getMaxManaBonus(state),\r\n      explanation: getMaxManaBonusExplanation(state),\r\n    });\r\n  }\r\n\r\n  getBaseLandRequired(): number {\r\n    return 2;\r\n  }\r\n\r\n  canTurnOff(): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nconst manaShard = new ManaShard();\r\n\r\nclass BuildManaShard extends BuildingSpell {\r\n  getAreas(): Partial<Record<ActionArea, ActionSubcategory[]>> {\r\n    return { HOME: [ActionSubcategories.MANA] };\r\n  }\r\n\r\n  getBuilding(): Building {\r\n    return manaShard;\r\n  }\r\n\r\n  shouldNeverHaveDemolishBlockers(): boolean {\r\n    return false;\r\n  }\r\n\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      EarthEssence: 40,\r\n      WaterEssence: 20,\r\n    };\r\n  }\r\n\r\n  getBaseResourceScale(): Partial<Record<Resource, number>> {\r\n    return {\r\n      EarthEssence: 1.25,\r\n      WaterEssence: 1.25,\r\n    };\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 10;\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return hasFlag(state, Flag.ManaShardsUnlocked) && super.isVisible(state);\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {};\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Earth;\r\n  }\r\n}\r\n\r\nconst buildManaShard = new BuildManaShard();\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.Cap, Resource.Mana]],\r\n  \"manaShards\",\r\n  t(\"Mana Shards\"),\r\n  TransformationType.Addition,\r\n  (state, params) =>\r\n    getBuildingAmount(state, manaShard) * getMaxManaBonus(state),\r\n);\r\n\r\nBuildingAmountListeners.register((state, building) => {\r\n  if (building == manaShard) {\r\n    state = clearResourceCapCache(state);\r\n    state = clearManaCostCache(state);\r\n  }\r\n  return state;\r\n}, manaShard.getId());\r\n\r\nexport { buildManaShard as BuildManaShard, manaShard as ManaShard };\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { Resource } from \"../../../Resources\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport { Item, ItemParams } from \"../../Item\";\r\nimport { ItemTagEnum } from \"../../ItemTagEnum\";\r\nimport { TransmutationSpell } from \"../TransmutationSpell\";\r\n\r\nclass CopperOre extends Item {\r\n  getId(): string {\r\n    return \"copperOre\";\r\n  }\r\n\r\n  getTags(): ItemTagEnum[] {\r\n    return [ItemTagEnum.Material];\r\n  }\r\n\r\n  getPicture() {\r\n    return require(\"./copperOre.png\");\r\n  }\r\n\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Copper Ore\");\r\n  }\r\n\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\"Ore. Needs to be processed to be able to actually utilize it.\");\r\n  }\r\n\r\n  getEffect(state: GameState, params: ItemParams): string | undefined {\r\n    return undefined;\r\n  }\r\n\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 36;\r\n  }\r\n}\r\n\r\nexport const copperOre = new CopperOre();\r\n\r\nclass TransmuteCopperOre extends TransmutationSpell {\r\n  getItem(): Item {\r\n    return copperOre;\r\n  }\r\n\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Earth: 24,\r\n    };\r\n  }\r\n\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 300,\r\n        EarthEssence: 10000,\r\n      },\r\n      items: {},\r\n    };\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Earth;\r\n  }\r\n}\r\n\r\nexport const transmuteCopperOre = new TransmuteCopperOre();\r\n","import memoize from \"sonic-memoize\";\r\nimport { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport {\r\n  modifyCompanionCurrentHP,\r\n  modifyEnemyCurrentHP,\r\n  modifyPlayerCurrentHP,\r\n} from \"../exploration/Exploration\";\r\nimport { GameState } from \"../GameState\";\r\nimport { registerTimeTickListener } from \"../timetick/TimeTick\";\r\nimport { getSecondsPlayed } from \"../timetick/TotalTimePlayed\";\r\nimport { applyTransformations } from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport {\r\n  getTemporaryEffects,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"./TemporaryEffects\";\r\n\r\nclass Poison extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"poison\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Poison\");\r\n  }\r\n  getIcon() {\r\n    return require(\"./poison.png\");\r\n  }\r\n  isBeneficial(): boolean {\r\n    return false;\r\n  }\r\n  poisonDoTAmountTags = memoize((target) => [\r\n    this.getId(),\r\n    TransformationTags.PoisonDoTAmount,\r\n    target,\r\n  ]);\r\n  getDamagePerSec(state: GameState, temporaryEffectData: TemporaryEffectData) {\r\n    return applyTransformations(\r\n      this.poisonDoTAmountTags(temporaryEffectData.target),\r\n      state,\r\n      temporaryEffectData.params.magnitude ?? 0,\r\n      { target: temporaryEffectData.target },\r\n    );\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"-{{amount}}:hp:/sec\", {\r\n      amount: formatNumber(this.getDamagePerSec(state, temporaryEffectData), {\r\n        showDecimals: true,\r\n      }),\r\n    });\r\n  }\r\n  // For Poison, if the damage per sec is different, keep the one with the\r\n  // higher total damage left\r\n  mergeData(\r\n    state: GameState,\r\n    oldData: TemporaryEffectData,\r\n    newData: TemporaryEffectData,\r\n    mode: \"add\" | \"replace\",\r\n  ): TemporaryEffectData {\r\n    if (oldData.params.magnitude == newData.params.magnitude) {\r\n      return super.mergeData(state, oldData, newData, mode);\r\n    }\r\n    const now = getSecondsPlayed(state);\r\n    const totalDamageOld = (oldData.endTime - now) * oldData.params.magnitude;\r\n    const totalDamageNew = (newData.endTime - now) * newData.params.magnitude;\r\n    if (totalDamageNew < totalDamageOld) {\r\n      return oldData;\r\n    }\r\n    return newData;\r\n  }\r\n}\r\n\r\nexport const poison = new Poison();\r\n\r\nexport function loadPoison() {\r\n  TemporaryEffects.register(poison);\r\n\r\n  registerTimeTickListener(\"PoisonDoT\", (state, timeElapsedSec) => {\r\n    const temporaryEffects = getTemporaryEffects(\r\n      state,\r\n      (state, effect) => effect.id == poison.getId(),\r\n    );\r\n    temporaryEffects.forEach((effect) => {\r\n      if (effect.target === AttackTarget.Enemy) {\r\n        state = modifyEnemyCurrentHP(\r\n          state,\r\n          -poison.getDamagePerSec(state, effect) * timeElapsedSec,\r\n        );\r\n      } else if (effect.target === AttackTarget.Familiar) {\r\n        state = modifyCompanionCurrentHP(\r\n          state,\r\n          -poison.getDamagePerSec(state, effect) * timeElapsedSec,\r\n          poison.getDisplayName(),\r\n        );\r\n      } else {\r\n        state = modifyPlayerCurrentHP(\r\n          state,\r\n          -poison.getDamagePerSec(state, effect) * timeElapsedSec,\r\n          poison.getDisplayName(),\r\n        );\r\n      }\r\n    });\r\n    return state;\r\n  });\r\n}\r\n","import { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport { CombatActionResultListeners } from \"../exploration/ExplorationActionResult\";\r\nimport { GameState } from \"../GameState\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { poison } from \"./Poison\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport {\r\n  getTemporaryEffectData,\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"./TemporaryEffects\";\r\n\r\nclass NoxiousCloak extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"noxiousCloak\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Noxious Cloak\");\r\n  }\r\n  getIcon() {\r\n    return require(\"./noxiousCloak.png\");\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\r\n      \"Applies Poison (-{{magnitude}}:hp:/sec for {{duration}} sec) when hit\",\r\n      {\r\n        magnitude: formatNumber(temporaryEffectData.params.magnitude, {\r\n          showDecimals: true,\r\n        }),\r\n        duration: formatNumber(temporaryEffectData.params.duration),\r\n      },\r\n    );\r\n  }\r\n}\r\n\r\nexport const noxiousCloak = new NoxiousCloak();\r\n\r\nexport function loadNoxiousCloak() {\r\n  TemporaryEffects.register(noxiousCloak);\r\n\r\n  CombatActionResultListeners.register((state, result) => {\r\n    if (\r\n      (result.tags.includes(TransformationTags.AutoAttack) ||\r\n        result.source == AttackTarget.Enemy ||\r\n        result.source == AttackTarget.Familiar) &&\r\n      hasTemporaryEffect(state, noxiousCloak.getId(), result.target)\r\n    ) {\r\n      const temporaryEffectData = getTemporaryEffectData(\r\n        state,\r\n        noxiousCloak.getId(),\r\n        result.target,\r\n      );\r\n      state = grantTemporaryEffect(\r\n        poison.getId(),\r\n        temporaryEffectData.params.duration,\r\n        {\r\n          target: result.source,\r\n          params: { magnitude: temporaryEffectData.params.magnitude },\r\n        },\r\n      )(state);\r\n    }\r\n    return state;\r\n  });\r\n}\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport SlimeDrop from \"../../../items/material/SlimeDrop\";\r\nimport Wildgrass from \"../../../items/material/Wildgrass\";\r\nimport { copperOre } from \"../../../items/transmute/materials/CopperOre\";\r\nimport { noxiousCloak } from \"../../../temporaryeffects/NoxiousCloak\";\r\nimport {\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../../temporaryeffects/TemporaryEffects\";\r\nimport { AttackTarget } from \"../../AttackTarget\";\r\nimport { BattlerAction, BattlerStats, Enemy, EnemyLoot } from \"../Enemy\";\r\n\r\nclass EvolvedSlime extends Enemy {\r\n  getId(): string {\r\n    return \"evolvedSlime\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Evolved Slime\");\r\n  }\r\n\r\n  getBaseStats(): BattlerStats {\r\n    return {\r\n      maxHP: 550,\r\n      attack: 32,\r\n      defense: 10,\r\n      attackDelay: 2.5,\r\n      accuracy: 100,\r\n      dodge: 100,\r\n      crit: 0,\r\n    };\r\n  }\r\n\r\n  getPicture(state: GameState) {\r\n    return require(\"./evolvedSlime.png\");\r\n  }\r\n\r\n  getLevel(): number {\r\n    return 9;\r\n  }\r\n\r\n  getCoinsAwardedBase(state: GameState): number {\r\n    return 48;\r\n  }\r\n\r\n  getMonstiumAwardedBase(state: GameState): number {\r\n    return 15;\r\n  }\r\n\r\n  getNextAction(state: GameState): BattlerAction {\r\n    if (!hasTemporaryEffect(state, noxiousCloak.getId(), AttackTarget.Enemy)) {\r\n      return {\r\n        name: t(\"Noxious Cloak\"),\r\n        delay: this.getAttackDelay(state),\r\n        transform: (state) =>\r\n          grantTemporaryEffect(noxiousCloak.getId(), 60, {\r\n            target: AttackTarget.Enemy,\r\n            params: {\r\n              magnitude: this.getAttack(state) / 8,\r\n              duration: 1,\r\n            },\r\n          })(state),\r\n      };\r\n    }\r\n    return super.getNextAction(state);\r\n  }\r\n\r\n  getItemsAwardedBase(state: GameState): EnemyLoot[] {\r\n    return [\r\n      {\r\n        itemId: SlimeDrop.getId(),\r\n        amount: 1,\r\n        chance: 1.0,\r\n      },\r\n      {\r\n        itemId: Wildgrass.getId(),\r\n        amount: 1,\r\n        chance: 0.35,\r\n      },\r\n      {\r\n        itemId: copperOre.getId(),\r\n        amount: 1,\r\n        chance: 0.4,\r\n      },\r\n    ];\r\n  }\r\n}\r\n\r\nexport default new EvolvedSlime();\r\n","import { valuesOf } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport { CombatStat } from \"../exploration/CombatStats\";\r\nimport { GameState } from \"../GameState\";\r\nimport { SpellElement } from \"../spells/Elements\";\r\nimport { getSecondsPlayed } from \"../timetick/TotalTimePlayed\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport {\r\n  hasTemporaryEffect,\r\n  registerTemporaryEffectCombatStatCacheClearer,\r\n  registerTemporaryEffectListener,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"./TemporaryEffects\";\r\n\r\nclass Airborne extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"airborne\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Airborne\");\r\n  }\r\n  isBeneficial(): boolean {\r\n    return false;\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t('-20:accuracy:; immune to Earth damage and to \"Grounded\"');\r\n  }\r\n}\r\n\r\nexport const airborne = new Airborne();\r\n\r\nexport function loadAirborne() {\r\n  TemporaryEffects.register(airborne);\r\n\r\n  registerTransformation(\r\n    [[TransformationTags.AttackDamageReceived]],\r\n    \"airborneDamage\",\r\n    airborne.getDisplayName(),\r\n    TransformationType.Multiplier,\r\n    (state, params) => {\r\n      return hasTemporaryEffect(state, airborne.getId(), params.target) &&\r\n        (params.tags ?? []).includes(SpellElement.Earth)\r\n        ? 0\r\n        : 1.0;\r\n    },\r\n  );\r\n\r\n  for (let target of valuesOf(AttackTarget)) {\r\n    registerTransformation(\r\n      [[CombatStat.Accuracy, target]],\r\n      \"airborne\" + target,\r\n      airborne.getDisplayName(),\r\n      TransformationType.Addition,\r\n      (state, params) => {\r\n        return hasTemporaryEffect(state, airborne.getId(), target) ? -20 : 0;\r\n      },\r\n    );\r\n  }\r\n\r\n  registerTemporaryEffectCombatStatCacheClearer(\r\n    airborne.getId(),\r\n    CombatStat.Accuracy,\r\n  );\r\n\r\n  registerTemporaryEffectListener(\r\n    \"airborneGroundedPrevention\",\r\n    (state, temporaryEffect) => {\r\n      if (\r\n        !hasTemporaryEffect(state, airborne.getId(), temporaryEffect.target)\r\n      ) {\r\n        return temporaryEffect;\r\n      }\r\n      if (temporaryEffect.id != \"grounded\") {\r\n        return temporaryEffect;\r\n      }\r\n      // Prevent!\r\n      temporaryEffect.endTime = getSecondsPlayed(state) - 1.0;\r\n      return temporaryEffect;\r\n    },\r\n  );\r\n}\r\n","import { formatMultiplier } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { GameState } from \"../GameState\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport {\r\n  getTemporaryEffectData,\r\n  hasTemporaryEffect,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"./TemporaryEffects\";\r\n\r\nclass ResistAttackSpell extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"attackSpellProtection\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Spell Barrier\");\r\n  }\r\n  isBeneficial(): boolean {\r\n    return true;\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"{{amount}} damage received from attack spells\", {\r\n      amount: formatMultiplier(temporaryEffectData.params.damageMultiplier),\r\n    });\r\n  }\r\n}\r\n\r\nexport const resistAttackSpell = new ResistAttackSpell();\r\n\r\nexport function loadResistAttackSpell() {\r\n  TemporaryEffects.register(resistAttackSpell);\r\n\r\n  registerTransformation(\r\n    [[TransformationTags.AttackDamageReceived]],\r\n    \"attackSpellProtection\",\r\n    t(\"Resist Attack Spells\"),\r\n    TransformationType.Multiplier,\r\n    (state, params) => {\r\n      return hasTemporaryEffect(\r\n        state,\r\n        resistAttackSpell.getId(),\r\n        params.target,\r\n      ) && (params.tags ?? []).includes(TransformationTags.AttackSpell)\r\n        ? getTemporaryEffectData(\r\n            state,\r\n            resistAttackSpell.getId(),\r\n            params.target,\r\n          ).params.damageMultiplier\r\n        : 1.0;\r\n    },\r\n  );\r\n}\r\n","import { formatMultiplier } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { GameState } from \"../GameState\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport {\r\n  getTemporaryEffectData,\r\n  hasTemporaryEffect,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"./TemporaryEffects\";\r\n\r\nclass ResistAutoAttack extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"autoAttackProtection\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Physical Barrier\");\r\n  }\r\n  isBeneficial(): boolean {\r\n    return true;\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\r\n      \"{{amount}} damage received from physical attacks (auto-attacks)\",\r\n      {\r\n        amount: formatMultiplier(temporaryEffectData.params.damageMultiplier),\r\n      },\r\n    );\r\n  }\r\n}\r\n\r\nexport const resistAutoAttack = new ResistAutoAttack();\r\n\r\nexport function loadResistAutoAttack() {\r\n  TemporaryEffects.register(resistAutoAttack);\r\n\r\n  registerTransformation(\r\n    [[TransformationTags.AttackDamageReceived]],\r\n    \"autoAttackProtection\",\r\n    t(\"Physical Barrier\"),\r\n    TransformationType.Multiplier,\r\n    (state, params) => {\r\n      return hasTemporaryEffect(\r\n        state,\r\n        resistAutoAttack.getId(),\r\n        params.target,\r\n      ) && (params.tags ?? []).includes(TransformationTags.AutoAttack)\r\n        ? getTemporaryEffectData(state, resistAutoAttack.getId(), params.target)\r\n            .params.damageMultiplier\r\n        : 1.0;\r\n    },\r\n  );\r\n}\r\n","import { valuesOf } from \"../../utils/CoreUtils\";\r\nimport { formatMultiplier, formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport { CombatStat } from \"../exploration/CombatStats\";\r\nimport {\r\n  getStatFromTarget,\r\n  modifyTargetCurrentHP,\r\n} from \"../exploration/Exploration\";\r\nimport { ExplorationStatus } from \"../exploration/ExplorationStatus\";\r\nimport { getExplorationStatus } from \"../exploration/ExplorationUtils\";\r\nimport { GameState } from \"../GameState\";\r\nimport { registerTimeTickListener } from \"../timetick/TimeTick\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport {\r\n  getTemporaryEffectData,\r\n  getTemporaryEffects,\r\n  hasTemporaryEffect,\r\n  registerTemporaryEffectCombatStatCacheClearer,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"./TemporaryEffects\";\r\n\r\nclass Berserk extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"berserk\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Berserk\");\r\n  }\r\n  isBeneficial(): boolean {\r\n    return true;\r\n  }\r\n  getDamagePerSec(state: GameState, temporaryEffectData: TemporaryEffectData) {\r\n    const target = temporaryEffectData.target;\r\n    const maxHP = getStatFromTarget(state, target, CombatStat.MaxHP);\r\n    const fraction = temporaryEffectData.params.damageMagnitude;\r\n    return maxHP * fraction;\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"{{multiplier}}:attack:; -{{amount}}:hp:/sec while in combat\", {\r\n      multiplier: formatMultiplier(temporaryEffectData.params.attackMultiplier),\r\n      amount: formatNumber(this.getDamagePerSec(state, temporaryEffectData), {\r\n        showDecimals: true,\r\n      }),\r\n    });\r\n  }\r\n}\r\n\r\nexport const berserk = new Berserk();\r\n\r\nexport function loadBerserk() {\r\n  TemporaryEffects.register(berserk);\r\n\r\n  registerTimeTickListener(\"BerserkDoT\", (state, timeElapsedSec) => {\r\n    const temporaryEffects = getTemporaryEffects(\r\n      state,\r\n      (state, effect) => effect.id == berserk.getId(),\r\n    );\r\n    temporaryEffects.forEach((effect) => {\r\n      if (getExplorationStatus(state) == ExplorationStatus.Combat) {\r\n        state = modifyTargetCurrentHP(\r\n          state,\r\n          effect.target,\r\n          -berserk.getDamagePerSec(state, effect) * timeElapsedSec,\r\n          t(\"Berserk\"),\r\n        );\r\n      }\r\n    });\r\n    return state;\r\n  });\r\n\r\n  for (let target of valuesOf(AttackTarget)) {\r\n    registerTransformation(\r\n      [[target, CombatStat.Attack]],\r\n      \"berserk\" + target,\r\n      berserk.getDisplayName(),\r\n      TransformationType.Multiplier,\r\n      (state) => {\r\n        if (!hasTemporaryEffect(state, berserk.getId(), target)) {\r\n          return 1.0;\r\n        }\r\n        return getTemporaryEffectData(state, berserk.getId(), target).params\r\n          .attackMultiplier;\r\n      },\r\n    );\r\n  }\r\n\r\n  registerTemporaryEffectCombatStatCacheClearer(\r\n    berserk.getId(),\r\n    CombatStat.Attack,\r\n  );\r\n}\r\n","import { valuesOf } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport { CombatStat } from \"../exploration/CombatStats\";\r\nimport { CombatActionResultListeners } from \"../exploration/ExplorationActionResult\";\r\nimport { GameState } from \"../GameState\";\r\nimport { SpellElement } from \"../spells/Elements\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport {\r\n  clearTemporaryEffect,\r\n  hasTemporaryEffect,\r\n  registerTemporaryEffectCombatStatCacheClearer,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"./TemporaryEffects\";\r\n\r\nclass Wet extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"wet\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Wet\");\r\n  }\r\n  isBeneficial(): boolean {\r\n    return false;\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\r\n      \"+10%:attackDelay:; next Fire attack received is halved in damage\",\r\n    );\r\n  }\r\n}\r\n\r\nconst wet = new Wet();\r\n\r\nexport { wet as Wet };\r\n\r\nexport function loadWet() {\r\n  TemporaryEffects.register(wet);\r\n\r\n  registerTransformation(\r\n    [[TransformationTags.AttackDamageReceived]],\r\n    \"wet\",\r\n    wet.getDisplayName(),\r\n    TransformationType.Multiplier,\r\n    (state, params) => {\r\n      return hasTemporaryEffect(state, wet.getId(), params.target) &&\r\n        (params.tags ?? []).includes(SpellElement.Fire)\r\n        ? 0.5\r\n        : 1.0;\r\n    },\r\n  );\r\n\r\n  for (let target of valuesOf(AttackTarget)) {\r\n    registerTransformation(\r\n      [[CombatStat.AttackDelay, target]],\r\n      \"wet\" + target,\r\n      wet.getDisplayName(),\r\n      TransformationType.Multiplier,\r\n      (state, params) => {\r\n        return hasTemporaryEffect(state, wet.getId(), target) ? 1.1 : 1.0;\r\n      },\r\n    );\r\n  }\r\n\r\n  registerTemporaryEffectCombatStatCacheClearer(\r\n    wet.getId(),\r\n    CombatStat.AttackDelay,\r\n  );\r\n\r\n  CombatActionResultListeners.register((state, result) => {\r\n    if (\r\n      result.tags.includes(SpellElement.Fire) &&\r\n      result.isHit &&\r\n      hasTemporaryEffect(state, wet.getId(), result.target)\r\n    ) {\r\n      state = clearTemporaryEffect(wet.getId(), result.target)(state);\r\n    }\r\n    return state;\r\n  });\r\n}\r\n","import { valuesOf } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport { CombatStat } from \"../exploration/CombatStats\";\r\nimport { CombatActionResultListeners } from \"../exploration/ExplorationActionResult\";\r\nimport { GameState } from \"../GameState\";\r\nimport { addGameStateListener } from \"../GameStateListeners\";\r\nimport { SpellElement } from \"../spells/Elements\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport {\r\n  clearTemporaryEffect,\r\n  hasTemporaryEffect,\r\n  registerTemporaryEffectCombatStatCacheClearer,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"./TemporaryEffects\";\r\nimport { Wet } from \"./Wet\";\r\n\r\nclass Chilled extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"chilled\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Chilled\");\r\n  }\r\n  isBeneficial(): boolean {\r\n    return false;\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\r\n      \"+25%:attackDelay:; next Fire attack received is halved in damage\",\r\n    );\r\n  }\r\n}\r\n\r\nconst chilled = new Chilled();\r\n\r\nexport { chilled as Chilled };\r\n\r\nexport function loadChilled() {\r\n  TemporaryEffects.register(chilled);\r\n\r\n  registerTransformation(\r\n    [[TransformationTags.AttackDamageReceived]],\r\n    \"chilled\",\r\n    chilled.getDisplayName(),\r\n    TransformationType.Multiplier,\r\n    (state, params) => {\r\n      return hasTemporaryEffect(state, chilled.getId(), params.target) &&\r\n        (params.tags ?? []).includes(SpellElement.Fire)\r\n        ? 0.5\r\n        : 1.0;\r\n    },\r\n  );\r\n\r\n  for (let target of valuesOf(AttackTarget)) {\r\n    registerTransformation(\r\n      [[CombatStat.AttackDelay, target]],\r\n      \"chilled\" + target,\r\n      chilled.getDisplayName(),\r\n      TransformationType.Multiplier,\r\n      (state, params) => {\r\n        return hasTemporaryEffect(state, chilled.getId(), target) ? 1.25 : 1.0;\r\n      },\r\n    );\r\n  }\r\n\r\n  registerTemporaryEffectCombatStatCacheClearer(\r\n    chilled.getId(),\r\n    CombatStat.AttackDelay,\r\n  );\r\n\r\n  CombatActionResultListeners.register((state, result) => {\r\n    if (\r\n      result.tags.includes(SpellElement.Fire) &&\r\n      result.isHit &&\r\n      hasTemporaryEffect(state, chilled.getId(), result.target)\r\n    ) {\r\n      state = clearTemporaryEffect(chilled.getId(), result.target)(state);\r\n    }\r\n    return state;\r\n  });\r\n\r\n  addGameStateListener(\"wetClearerIfChilled\", (state) => {\r\n    for (let target of valuesOf(AttackTarget)) {\r\n      if (\r\n        hasTemporaryEffect(state, chilled.getId(), target) &&\r\n        hasTemporaryEffect(state, Wet.getId(), target)\r\n      ) {\r\n        return clearTemporaryEffect(Wet.getId(), target);\r\n      }\r\n    }\r\n  });\r\n}\r\n","import { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { modifyTargetCurrentHP } from \"../exploration/Exploration\";\r\nimport {\r\n  CombatActionResult,\r\n  CombatActionResultListeners,\r\n  pushCombatActionResult,\r\n} from \"../exploration/ExplorationActionResult\";\r\nimport { GameState } from \"../GameState\";\r\nimport { SpellElement } from \"../spells/Elements\";\r\nimport { getSecondsPlayed } from \"../timetick/TotalTimePlayed\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport {\r\n  getTemporaryEffectData,\r\n  hasTemporaryEffect,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"./TemporaryEffects\";\r\n\r\nclass CloakOfFlames extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"cloakOfFlames\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Cloak of Flames\");\r\n  }\r\n  isBeneficial(): boolean {\r\n    return true;\r\n  }\r\n  getIcon() {\r\n    return require(\"./cloakOfFlames.png\");\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\r\n      \"Reflects back {{multiplier}}x of the damage received as Fire damage\",\r\n      {\r\n        multiplier: formatNumber(temporaryEffectData.params.magnitude, {\r\n          showDecimals: true,\r\n        }),\r\n      },\r\n    );\r\n  }\r\n}\r\n\r\nexport const cloakOfFlames = new CloakOfFlames();\r\n\r\nexport function loadCloakOfFlames() {\r\n  TemporaryEffects.register(cloakOfFlames);\r\n\r\n  CombatActionResultListeners.register((state, result) => {\r\n    if (!hasTemporaryEffect(state, cloakOfFlames.getId(), result.target)) {\r\n      return state;\r\n    }\r\n\r\n    if (\r\n      !result.isHit ||\r\n      result.damage <= 0 ||\r\n      result.tags.includes(TransformationTags.Reflected) ||\r\n      result.source == result.target\r\n    ) {\r\n      return state;\r\n    }\r\n\r\n    const data = getTemporaryEffectData(\r\n      state,\r\n      cloakOfFlames.getId(),\r\n      result.target,\r\n    );\r\n    const magnitude = data.params.magnitude;\r\n\r\n    const damageReflected = result.damage * magnitude;\r\n    state = modifyTargetCurrentHP(\r\n      state,\r\n      result.source,\r\n      -damageReflected,\r\n      cloakOfFlames.getDisplayName(),\r\n    );\r\n\r\n    const actionResult: CombatActionResult = {\r\n      id: Math.random().toString(),\r\n      damage: damageReflected,\r\n      isHit: true,\r\n      isCrit: false,\r\n      source: result.target,\r\n      time: getSecondsPlayed(state),\r\n      target: result.source,\r\n      tags: [SpellElement.Fire, TransformationTags.Reflected],\r\n    };\r\n    state = pushCombatActionResult(state, actionResult);\r\n\r\n    return state;\r\n  });\r\n}\r\n","import memoize from \"sonic-memoize\";\r\nimport { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport {\r\n  modifyCompanionCurrentHP,\r\n  modifyEnemyCurrentHP,\r\n  modifyPlayerCurrentHP,\r\n} from \"../exploration/Exploration\";\r\nimport { GameState } from \"../GameState\";\r\nimport { registerTimeTickListener } from \"../timetick/TimeTick\";\r\nimport { getSecondsPlayed } from \"../timetick/TotalTimePlayed\";\r\nimport { applyTransformations } from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport {\r\n  getTemporaryEffects,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"./TemporaryEffects\";\r\n\r\nclass Corrosion extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"corrosion\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Corrosion\");\r\n  }\r\n  getIcon() {\r\n    return require(\"./corrosion.png\");\r\n  }\r\n  isBeneficial(): boolean {\r\n    return false;\r\n  }\r\n  corrosionDoTAmountTags = memoize((target) => [\r\n    this.getId(),\r\n    TransformationTags.CorrosionDoTAmount,\r\n    target,\r\n  ]);\r\n  getDamagePerSec(state: GameState, temporaryEffectData: TemporaryEffectData) {\r\n    return applyTransformations(\r\n      this.corrosionDoTAmountTags(temporaryEffectData.target),\r\n      state,\r\n      temporaryEffectData.params.magnitude,\r\n      { target: temporaryEffectData.target },\r\n    );\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"-{{amount}}:hp:/sec\", {\r\n      amount: formatNumber(this.getDamagePerSec(state, temporaryEffectData), {\r\n        showDecimals: true,\r\n      }),\r\n    });\r\n  }\r\n  // For Corrosion, if the damage per sec is different, keep the one with the\r\n  // higher total damage left\r\n  mergeData(\r\n    state: GameState,\r\n    oldData: TemporaryEffectData,\r\n    newData: TemporaryEffectData,\r\n    mode: \"add\" | \"replace\",\r\n  ): TemporaryEffectData {\r\n    if (oldData.params.magnitude == newData.params.magnitude) {\r\n      return super.mergeData(state, oldData, newData, mode);\r\n    }\r\n    const now = getSecondsPlayed(state);\r\n    const totalDamageOld = (oldData.endTime - now) * oldData.params.magnitude;\r\n    const totalDamageNew = (newData.endTime - now) * newData.params.magnitude;\r\n    if (totalDamageNew < totalDamageOld) {\r\n      return oldData;\r\n    }\r\n    return newData;\r\n  }\r\n}\r\n\r\nexport const corrosion = new Corrosion();\r\n\r\nexport function loadCorrosion() {\r\n  TemporaryEffects.register(corrosion);\r\n\r\n  registerTimeTickListener(\"CorrosionDoT\", (state, timeElapsedSec) => {\r\n    const temporaryEffects = getTemporaryEffects(\r\n      state,\r\n      (state, effect) => effect.id == corrosion.getId(),\r\n    );\r\n    temporaryEffects.forEach((effect) => {\r\n      if (effect.target === AttackTarget.Enemy) {\r\n        state = modifyEnemyCurrentHP(\r\n          state,\r\n          -corrosion.getDamagePerSec(state, effect) * timeElapsedSec,\r\n        );\r\n      } else if (effect.target === AttackTarget.Familiar) {\r\n        state = modifyCompanionCurrentHP(\r\n          state,\r\n          -corrosion.getDamagePerSec(state, effect) * timeElapsedSec,\r\n          corrosion.getDisplayName(),\r\n        );\r\n      } else {\r\n        state = modifyPlayerCurrentHP(\r\n          state,\r\n          -corrosion.getDamagePerSec(state, effect) * timeElapsedSec,\r\n          corrosion.getDisplayName(),\r\n        );\r\n      }\r\n    });\r\n    return state;\r\n  });\r\n}\r\n","import { t } from \"../../utils/I18n\";\r\nimport { modifyTargetCurrentHP } from \"../exploration/Exploration\";\r\nimport {\r\n  CombatActionResultListeners,\r\n  pushCombatActionResult,\r\n} from \"../exploration/ExplorationActionResult\";\r\nimport { GameState } from \"../GameState\";\r\nimport { getSecondsPlayed } from \"../timetick/TotalTimePlayed\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport {\r\n  hasTemporaryEffect,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"./TemporaryEffects\";\r\n\r\nclass Cursed extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"cursed\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Cursed\");\r\n  }\r\n  getIcon() {\r\n    return require(\"./cursed.png\");\r\n  }\r\n  isBeneficial(): boolean {\r\n    return false;\r\n  }\r\n  isCombatOnly(): boolean {\r\n    return true;\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\r\n      \"Explicit healing effects, in addition to the healing, cause damage of the same amount\",\r\n    );\r\n  }\r\n}\r\n\r\nexport const cursed = new Cursed();\r\n\r\nexport function loadCursed() {\r\n  TemporaryEffects.register(cursed);\r\n\r\n  CombatActionResultListeners.register((state, result) => {\r\n    if (\r\n      result.damage < 0 &&\r\n      hasTemporaryEffect(state, cursed.getId(), result.target)\r\n    ) {\r\n      state = modifyTargetCurrentHP(\r\n        state,\r\n        result.target,\r\n        result.damage,\r\n        cursed.getDisplayName(),\r\n      );\r\n      const actionResult = {\r\n        id: Math.random().toString(),\r\n        damage: -result.damage,\r\n        isCrit: false,\r\n        isHit: true,\r\n        time: getSecondsPlayed(state),\r\n        source: result.target,\r\n        target: result.target,\r\n        tags: [cursed.getId()],\r\n      };\r\n      state = pushCombatActionResult(state, actionResult);\r\n    }\r\n    return state;\r\n  });\r\n}\r\n","import { valuesOf } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport { clearCombatStatCache, CombatStat } from \"../exploration/CombatStats\";\r\nimport { getCurrentHPFromTarget } from \"../exploration/Exploration\";\r\nimport { GameState } from \"../GameState\";\r\nimport { registerTimeTickListener } from \"../timetick/TimeTick\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport {\r\n  hasTemporaryEffect,\r\n  registerTemporaryEffectCombatStatCacheClearer,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"./TemporaryEffects\";\r\n\r\nclass Disease extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"disease\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Disease\");\r\n  }\r\n  isBeneficial(): boolean {\r\n    return false;\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"Lowers Max HP to the current HP\");\r\n  }\r\n}\r\n\r\nexport const disease = new Disease();\r\n\r\nexport function loadDisease() {\r\n  TemporaryEffects.register(disease);\r\n\r\n  for (let target of valuesOf(AttackTarget)) {\r\n    registerTransformation(\r\n      [[target, CombatStat.MaxHP]],\r\n      target + \"disease\",\r\n      disease.getDisplayName(),\r\n      TransformationType.Override,\r\n      (state) => {\r\n        if (hasTemporaryEffect(state, disease.getId(), target)) {\r\n          return Math.max(getCurrentHPFromTarget(state, target), 1);\r\n        }\r\n        return null;\r\n      },\r\n    );\r\n    registerTimeTickListener(\r\n      \"diseaseCacheClearerHP\" + target,\r\n      (state, timeElapsedSec) => {\r\n        if (hasTemporaryEffect(state, disease.getId(), target)) {\r\n          return clearCombatStatCache(state, target, CombatStat.MaxHP);\r\n        }\r\n        return state;\r\n      },\r\n    );\r\n  }\r\n  registerTemporaryEffectCombatStatCacheClearer(\r\n    disease.getId(),\r\n    CombatStat.MaxHP,\r\n  );\r\n}\r\n","import { valuesOf } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport { GameState } from \"../GameState\";\r\nimport { getSecondsPlayed } from \"../timetick/TotalTimePlayed\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport {\r\n  hasTemporaryEffect,\r\n  registerTemporaryEffectListener,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"./TemporaryEffects\";\r\n\r\nclass DivineImmunityTemporaryEffect extends TemporaryEffect {\r\n  getId() {\r\n    return \"divineImmunity\";\r\n  }\r\n\r\n  getDisplayName(): string {\r\n    return t(\"Divine Immunity\");\r\n  }\r\n\r\n  isCombatOnly(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getIcon() {\r\n    return require(\"./divineImmunity.png\");\r\n  }\r\n\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"Immune to all damage and debuffs\");\r\n  }\r\n}\r\n\r\nexport const divineImmunityTemporaryEffect =\r\n  new DivineImmunityTemporaryEffect();\r\n\r\nexport function loadDivineImmunity() {\r\n  TemporaryEffects.register(divineImmunityTemporaryEffect);\r\n\r\n  for (let target of valuesOf(AttackTarget)) {\r\n    registerTransformation(\r\n      [[TransformationTags.AttackDamageReceived, target]],\r\n      \"DivineImmunityDamage\" + target,\r\n      divineImmunityTemporaryEffect.getDisplayName(),\r\n      TransformationType.Multiplier,\r\n      (state) => {\r\n        if (\r\n          !hasTemporaryEffect(\r\n            state,\r\n            divineImmunityTemporaryEffect.getId(),\r\n            target,\r\n          )\r\n        ) {\r\n          return 1.0;\r\n        }\r\n        return 0;\r\n      },\r\n    );\r\n\r\n    registerTemporaryEffectListener(\r\n      \"divineImmunityDebuffPrevention\",\r\n      (state, temporaryEffect) => {\r\n        if (\r\n          !hasTemporaryEffect(\r\n            state,\r\n            divineImmunityTemporaryEffect.getId(),\r\n            temporaryEffect.target,\r\n          )\r\n        ) {\r\n          return temporaryEffect;\r\n        }\r\n        const effect = TemporaryEffects.getById(temporaryEffect.id);\r\n        if (effect.isBeneficial()) {\r\n          return temporaryEffect;\r\n        }\r\n        // Prevent!\r\n        temporaryEffect.endTime = getSecondsPlayed(state) - 1.0;\r\n        return temporaryEffect;\r\n      },\r\n    );\r\n  }\r\n}\r\n","import { valuesOf } from \"../../utils/CoreUtils\";\r\nimport { formatMultiplier } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { GameState } from \"../GameState\";\r\nimport { SpellElement, translateElement } from \"../spells/Elements\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport {\r\n  getTemporaryEffectData,\r\n  hasTemporaryEffect,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"./TemporaryEffects\";\r\n\r\nclass ResistElementBase extends TemporaryEffect {\r\n  constructor(element: SpellElement) {\r\n    super();\r\n    this.element = element;\r\n  }\r\n  element: SpellElement;\r\n  getId(): string {\r\n    return \"elementalProtection\" + this.element;\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Resist {{element}}\", { element: translateElement(this.element) });\r\n  }\r\n  isBeneficial(): boolean {\r\n    return true;\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"{{amount}} {{element}} damage received\", {\r\n      amount: formatMultiplier(temporaryEffectData.params.damageMultiplier),\r\n      element: translateElement(this.element),\r\n    });\r\n  }\r\n}\r\n\r\nexport function resistElementTemporaryEffect(\r\n  element: SpellElement,\r\n): ResistElementBase {\r\n  return TemporaryEffects.getById(\r\n    \"elementalProtection\" + element,\r\n  ) as ResistElementBase;\r\n}\r\n\r\nexport function loadElementalProtection() {\r\n  for (let element of valuesOf(SpellElement)) {\r\n    TemporaryEffects.register(new ResistElementBase(element));\r\n    registerTransformation(\r\n      [[TransformationTags.AttackDamageReceived]],\r\n      \"elementalProtection\" + element,\r\n      t(\"Resist {{element}}\", { element: translateElement(element) }),\r\n      TransformationType.Multiplier,\r\n      (state, params) => {\r\n        return hasTemporaryEffect(\r\n          state,\r\n          \"elementalProtection\" + element,\r\n          params.target,\r\n        ) && (params.tags ?? []).includes(element)\r\n          ? getTemporaryEffectData(\r\n              state,\r\n              \"elementalProtection\" + element,\r\n              params.target,\r\n            ).params.damageMultiplier\r\n          : 1.0;\r\n      },\r\n    );\r\n  }\r\n  registerTransformation(\r\n    [\r\n      [TransformationTags.PoisonDoTAmount],\r\n      [TransformationTags.CorrosionDoTAmount],\r\n    ],\r\n    \"poisonResistanceFromElementalProtection\",\r\n    t(\"Resist Poison\"),\r\n    TransformationType.Multiplier,\r\n    (state, params) => {\r\n      return hasTemporaryEffect(\r\n        state,\r\n        \"elementalProtectionPoison\",\r\n        params.target,\r\n      )\r\n        ? getTemporaryEffectData(\r\n            state,\r\n            \"elementalProtectionPoison\",\r\n            params.target,\r\n          ).params.damageMultiplier\r\n        : 1.0;\r\n    },\r\n  );\r\n}\r\n","import { valuesOf } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport { GameState } from \"../GameState\";\r\nimport { SpellElement, translateElement } from \"../spells/Elements\";\r\nimport { registerCanCastSpellClearer } from \"../spells/Spells\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport {\r\n  hasTemporaryEffect,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"./TemporaryEffects\";\r\n\r\nclass SilenceElementBase extends TemporaryEffect {\r\n  constructor(element: SpellElement) {\r\n    super();\r\n    this.element = element;\r\n  }\r\n  element: SpellElement;\r\n  getId(): string {\r\n    return \"elementalSilence\" + this.element;\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Silence {{element}}\", {\r\n      element: translateElement(this.element),\r\n    });\r\n  }\r\n  isBeneficial(): boolean {\r\n    return false;\r\n  }\r\n  isCombatOnly(): boolean {\r\n    return true;\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"Prevented from using {{element}} elemental spells\", {\r\n      element: translateElement(this.element),\r\n    });\r\n  }\r\n}\r\n\r\nexport function silenceElementTemporaryEffect(\r\n  element: SpellElement,\r\n): SilenceElementBase {\r\n  return TemporaryEffects.getById(\r\n    \"elementalSilence\" + element,\r\n  ) as SilenceElementBase;\r\n}\r\n\r\nexport function loadElementalSilence() {\r\n  for (let element of valuesOf(SpellElement)) {\r\n    TemporaryEffects.register(new SilenceElementBase(element));\r\n    registerTransformation(\r\n      [[TransformationTags.CanCastSpell, element]],\r\n      \"elementalSilence\" + element,\r\n      t(\"Silence {{element}}\", { element: translateElement(element) }),\r\n      TransformationType.Override,\r\n      (state, params) => {\r\n        return hasTemporaryEffect(\r\n          state,\r\n          \"elementalSilence\" + element,\r\n          AttackTarget.Player,\r\n        )\r\n          ? 0\r\n          : undefined;\r\n      },\r\n    );\r\n    registerCanCastSpellClearer(\"elementalSilence\" + element, (state) =>\r\n      hasTemporaryEffect(\r\n        state,\r\n        \"elementalSilence\" + element,\r\n        AttackTarget.Player,\r\n      ),\r\n    );\r\n  }\r\n}\r\n","import { valuesOf } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport { CombatStat } from \"../exploration/CombatStats\";\r\nimport { GameState } from \"../GameState\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { poison } from \"./Poison\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport {\r\n  hasTemporaryEffect,\r\n  registerTemporaryEffectCombatStatCacheClearer,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"./TemporaryEffects\";\r\n\r\nclass Frail extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"frail\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Frail\");\r\n  }\r\n  getIcon() {\r\n    return require(\"./frail.png\");\r\n  }\r\n  isBeneficial(): boolean {\r\n    return false;\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"-10%:defense:; takes double damage from Poison effect\");\r\n  }\r\n}\r\n\r\nexport const frail = new Frail();\r\n\r\nexport function loadFrail() {\r\n  TemporaryEffects.register(frail);\r\n\r\n  registerTransformation(\r\n    [[poison.getId(), TransformationTags.PoisonDoTAmount]],\r\n    frail.getId() + \"poison\",\r\n    frail.getDisplayName(),\r\n    TransformationType.Multiplier,\r\n    (state, params) =>\r\n      hasTemporaryEffect(state, frail.getId(), params.target) ? 2.0 : 1.0,\r\n  );\r\n\r\n  for (let target of valuesOf(AttackTarget)) {\r\n    registerTransformation(\r\n      [[target, CombatStat.Defense]],\r\n      frail.getId() + \"defense\",\r\n      frail.getDisplayName(),\r\n      TransformationType.Multiplier,\r\n      (state, params) =>\r\n        hasTemporaryEffect(state, frail.getId(), target) ? 0.9 : 1.0,\r\n    );\r\n  }\r\n\r\n  registerTemporaryEffectCombatStatCacheClearer(\r\n    frail.getId(),\r\n    CombatStat.Defense,\r\n  );\r\n}\r\n","import memoize from \"sonic-memoize\";\r\nimport { valuesOf } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport { CombatStat } from \"../exploration/CombatStats\";\r\nimport { CombatActionResultListeners } from \"../exploration/ExplorationActionResult\";\r\nimport { GameState } from \"../GameState\";\r\nimport { SpellElement } from \"../spells/Elements\";\r\nimport { getSecondsPlayed } from \"../timetick/TotalTimePlayed\";\r\nimport {\r\n  applyTransformations,\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport {\r\n  clearTemporaryEffect,\r\n  getTemporaryEffectEndTime,\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n  registerTemporaryEffectCombatStatCacheClearer,\r\n  registerTemporaryEffectListener,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"./TemporaryEffects\";\r\n\r\nclass Frozen extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"frozen\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Frozen\");\r\n  }\r\n  isBeneficial(): boolean {\r\n    return false;\r\n  }\r\n  getIcon() {\r\n    return require(\"./frozen.png\");\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\r\n      \"Attack gauge does not increase; next Fire attack received is reduced to 0\",\r\n    );\r\n  }\r\n}\r\n\r\nexport const frozen = new Frozen();\r\n\r\nclass FrozenProtection extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"frozenProtection\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Frozen Protection\");\r\n  }\r\n  isBeneficial(): boolean {\r\n    return true;\r\n  }\r\n  getIcon() {\r\n    return require(\"./frozenProtection.png\");\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t('Immune to \"Frozen\"');\r\n  }\r\n}\r\n\r\nexport const frozenProtection = new FrozenProtection();\r\n\r\nconst postFrozenProtectionDurationTags = memoize((target) => [\r\n  target,\r\n  TransformationTags.PostFrozenProtectionDuration,\r\n]);\r\n\r\nexport function loadFrozen() {\r\n  TemporaryEffects.register(frozen);\r\n  TemporaryEffects.register(frozenProtection);\r\n\r\n  registerTransformation(\r\n    [[TransformationTags.AttackDamageReceived]],\r\n    \"frozen\",\r\n    frozen.getDisplayName(),\r\n    TransformationType.Override,\r\n    (state, params) => {\r\n      return hasTemporaryEffect(state, frozen.getId(), params.target) &&\r\n        (params.tags ?? []).includes(SpellElement.Fire)\r\n        ? 0\r\n        : undefined;\r\n    },\r\n  );\r\n\r\n  for (let target of valuesOf(AttackTarget)) {\r\n    registerTransformation(\r\n      [[CombatStat.AttackDelay, target]],\r\n      \"frozen\" + target,\r\n      frozen.getDisplayName(),\r\n      TransformationType.Override,\r\n      (state, params) => {\r\n        return hasTemporaryEffect(state, frozen.getId(), target)\r\n          ? Infinity\r\n          : undefined;\r\n      },\r\n    );\r\n  }\r\n\r\n  registerTemporaryEffectCombatStatCacheClearer(\r\n    frozen.getId(),\r\n    CombatStat.AttackDelay,\r\n  );\r\n\r\n  CombatActionResultListeners.register((state, result) => {\r\n    if (\r\n      result.tags.includes(SpellElement.Fire) &&\r\n      hasTemporaryEffect(state, frozen.getId(), result.target)\r\n    ) {\r\n      state = clearTemporaryEffect(frozen.getId(), result.target)(state);\r\n    }\r\n    return state;\r\n  });\r\n\r\n  registerTemporaryEffectListener(\r\n    \"frozenClearer\",\r\n    (newState, temporaryEffect) => {\r\n      if (\r\n        temporaryEffect.id === frozen.getId() &&\r\n        temporaryEffect.endTime > temporaryEffect.setTime\r\n      ) {\r\n        // Someone's been frozen, but does it have temporary immunity?\r\n        if (\r\n          hasTemporaryEffect(\r\n            newState,\r\n            frozenProtection.getId(),\r\n            temporaryEffect.target,\r\n          )\r\n        ) {\r\n          temporaryEffect.endTime = getTemporaryEffectEndTime(\r\n            newState,\r\n            frozen.getId(),\r\n            temporaryEffect.target,\r\n          );\r\n          return temporaryEffect;\r\n        }\r\n\r\n        // If no immunity, we should grant the immunity\r\n        newState = grantTemporaryEffect(\r\n          frozenProtection.getId(),\r\n          applyTransformations(\r\n            postFrozenProtectionDurationTags(temporaryEffect.target),\r\n            newState,\r\n            3.0,\r\n          ) +\r\n            temporaryEffect.endTime -\r\n            getSecondsPlayed(newState),\r\n          { mode: \"add\", target: temporaryEffect.target },\r\n        )(newState);\r\n      }\r\n      return temporaryEffect;\r\n    },\r\n    true,\r\n  );\r\n}\r\n","import { valuesOf } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport { CombatStat } from \"../exploration/CombatStats\";\r\nimport { GameState } from \"../GameState\";\r\nimport { getSecondsPlayed } from \"../timetick/TotalTimePlayed\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport {\r\n  hasTemporaryEffect,\r\n  registerTemporaryEffectCombatStatCacheClearer,\r\n  registerTemporaryEffectListener,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"./TemporaryEffects\";\r\n\r\nclass Grounded extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"grounded\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Grounded\");\r\n  }\r\n  isBeneficial(): boolean {\r\n    return false;\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t('-40:dodge:; immune to \"Airborne\"');\r\n  }\r\n}\r\n\r\nexport const grounded = new Grounded();\r\n\r\nexport function loadGrounded() {\r\n  TemporaryEffects.register(grounded);\r\n\r\n  for (let target of valuesOf(AttackTarget)) {\r\n    registerTransformation(\r\n      [[CombatStat.Dodge, target]],\r\n      \"grounded\" + target,\r\n      grounded.getDisplayName(),\r\n      TransformationType.Addition,\r\n      (state, params) => {\r\n        return hasTemporaryEffect(state, grounded.getId(), target) ? -40 : 0;\r\n      },\r\n    );\r\n  }\r\n\r\n  registerTemporaryEffectCombatStatCacheClearer(\r\n    grounded.getId(),\r\n    CombatStat.Dodge,\r\n  );\r\n\r\n  registerTemporaryEffectListener(\r\n    \"groundedAirbornePrevention\",\r\n    (state, temporaryEffect) => {\r\n      if (\r\n        !hasTemporaryEffect(state, grounded.getId(), temporaryEffect.target)\r\n      ) {\r\n        return temporaryEffect;\r\n      }\r\n      if (temporaryEffect.id != \"airborne\") {\r\n        return temporaryEffect;\r\n      }\r\n      // Prevent!\r\n      temporaryEffect.endTime = getSecondsPlayed(state) - 1.0;\r\n      return temporaryEffect;\r\n    },\r\n  );\r\n}\r\n","import { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { CombatActionResultListeners } from \"../exploration/ExplorationActionResult\";\r\nimport { GameState } from \"../GameState\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport {\r\n  clearTemporaryEffect,\r\n  getTemporaryEffectData,\r\n  hasTemporaryEffect,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"./TemporaryEffects\";\r\n\r\nclass Guard extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"guard\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Guard\");\r\n  }\r\n  isBeneficial(): boolean {\r\n    return true;\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"-{{amount}}% damage received from next attack\", {\r\n      amount: formatNumber(100 * (1.0 - temporaryEffectData.params.multiplier)),\r\n    });\r\n  }\r\n}\r\n\r\nconst guard = new Guard();\r\n\r\nexport { guard as GuardTemporaryEffect };\r\n\r\nexport function loadGuard() {\r\n  TemporaryEffects.register(guard);\r\n\r\n  registerTransformation(\r\n    [[TransformationTags.AttackDamageReceived]],\r\n    \"guard\",\r\n    guard.getDisplayName(),\r\n    TransformationType.Multiplier,\r\n    (state, params) => {\r\n      return hasTemporaryEffect(state, guard.getId(), params.target)\r\n        ? getTemporaryEffectData(state, guard.getId(), params.target).params\r\n            .multiplier\r\n        : 1.0;\r\n    },\r\n  );\r\n\r\n  CombatActionResultListeners.register((state, result) => {\r\n    if (\r\n      result.isHit &&\r\n      result.damage >= 0 &&\r\n      hasTemporaryEffect(state, guard.getId(), result.target)\r\n    ) {\r\n      state = clearTemporaryEffect(guard.getId(), result.target)(state);\r\n    }\r\n    return state;\r\n  });\r\n}\r\n","import { valuesOf } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport { CombatStat } from \"../exploration/CombatStats\";\r\nimport { GameState } from \"../GameState\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport {\r\n  hasTemporaryEffect,\r\n  registerTemporaryEffectCombatStatCacheClearer,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"./TemporaryEffects\";\r\n\r\nclass Paralyzed extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"paralyzed\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Paralyzed\");\r\n  }\r\n  isBeneficial(): boolean {\r\n    return false;\r\n  }\r\n  getIcon() {\r\n    return require(\"./paralyzed.png\");\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"+300%:attackDelay:\");\r\n  }\r\n}\r\n\r\nexport const paralyzed = new Paralyzed();\r\n\r\nexport function loadParalyzed() {\r\n  TemporaryEffects.register(paralyzed);\r\n\r\n  for (let target of valuesOf(AttackTarget)) {\r\n    registerTransformation(\r\n      [[CombatStat.AttackDelay, target]],\r\n      \"paralyzed\" + target,\r\n      paralyzed.getDisplayName(),\r\n      TransformationType.Multiplier,\r\n      (state, params) => {\r\n        return hasTemporaryEffect(state, paralyzed.getId(), target) ? 4.0 : 1.0;\r\n      },\r\n    );\r\n  }\r\n\r\n  registerTemporaryEffectCombatStatCacheClearer(\r\n    paralyzed.getId(),\r\n    CombatStat.AttackDelay,\r\n  );\r\n}\r\n","import { valuesOf } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport { CombatStat } from \"../exploration/CombatStats\";\r\nimport { GameState } from \"../GameState\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport {\r\n  hasTemporaryEffect,\r\n  registerTemporaryEffectCombatStatCacheClearer,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"./TemporaryEffects\";\r\n\r\nclass Petrified extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"petrified\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Petrified\");\r\n  }\r\n  isBeneficial(): boolean {\r\n    return false;\r\n  }\r\n  getIcon() {\r\n    return require(\"./petrified.png\");\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\r\n      \"All explicit attack damage received is reduced to 0; Attack gauge does not increase\",\r\n    );\r\n  }\r\n}\r\n\r\nexport const petrified = new Petrified();\r\n\r\nexport function loadPetrified() {\r\n  TemporaryEffects.register(petrified);\r\n\r\n  registerTransformation(\r\n    [[TransformationTags.AttackDamageReceived]],\r\n    \"petrified\",\r\n    petrified.getDisplayName(),\r\n    TransformationType.Override,\r\n    (state, params) => {\r\n      return hasTemporaryEffect(state, petrified.getId(), params.target)\r\n        ? 0\r\n        : undefined;\r\n    },\r\n  );\r\n\r\n  for (let target of valuesOf(AttackTarget)) {\r\n    registerTransformation(\r\n      [[CombatStat.AttackDelay, target]],\r\n      \"petrified\" + target,\r\n      petrified.getDisplayName(),\r\n      TransformationType.Override,\r\n      (state, params) => {\r\n        return hasTemporaryEffect(state, petrified.getId(), target)\r\n          ? Infinity\r\n          : undefined;\r\n      },\r\n    );\r\n  }\r\n\r\n  registerTemporaryEffectCombatStatCacheClearer(\r\n    petrified.getId(),\r\n    CombatStat.AttackDelay,\r\n  );\r\n}\r\n","import { t } from \"../../utils/I18n\";\r\nimport { GameState } from \"../GameState\";\r\nimport { getSecondsPlayed } from \"../timetick/TotalTimePlayed\";\r\nimport { poison } from \"./Poison\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport {\r\n  hasTemporaryEffect,\r\n  registerTemporaryEffectListener,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"./TemporaryEffects\";\r\n\r\nclass PoisonImmunity extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"poisonImmunity\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Poison Immunity\");\r\n  }\r\n  getIcon() {\r\n    return require(\"./poisonImmunity.png\");\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t('Immune to \"Poison\" debuff');\r\n  }\r\n}\r\n\r\nexport const poisonImmunity = new PoisonImmunity();\r\n\r\nexport function loadPoisonImmunity() {\r\n  TemporaryEffects.register(poisonImmunity);\r\n\r\n  registerTemporaryEffectListener(\r\n    \"poisonImmunityPoisonPrevention\",\r\n    (state, temporaryEffect) => {\r\n      if (temporaryEffect.id != poison.getId()) {\r\n        return temporaryEffect;\r\n      }\r\n      if (\r\n        !hasTemporaryEffect(\r\n          state,\r\n          poisonImmunity.getId(),\r\n          temporaryEffect.target,\r\n        )\r\n      ) {\r\n        return temporaryEffect;\r\n      }\r\n      // Prevent!\r\n      temporaryEffect.endTime = getSecondsPlayed(state) - 1.0;\r\n      return temporaryEffect;\r\n    },\r\n  );\r\n}\r\n","import { valuesOf } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport { CombatStat } from \"../exploration/CombatStats\";\r\nimport { GameState } from \"../GameState\";\r\nimport { addGameStateListener } from \"../GameStateListeners\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport {\r\n  clearTemporaryEffect,\r\n  hasTemporaryEffect,\r\n  registerTemporaryEffectCombatStatCacheClearer,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"./TemporaryEffects\";\r\nimport { Wet } from \"./Wet\";\r\n\r\nclass Seared extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"seared\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Seared\");\r\n  }\r\n  isBeneficial(): boolean {\r\n    return false;\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"-30%:defense:\");\r\n  }\r\n}\r\n\r\nconst seared = new Seared();\r\n\r\nexport { seared as Seared };\r\n\r\nexport function loadSeared() {\r\n  TemporaryEffects.register(seared);\r\n\r\n  for (let target of valuesOf(AttackTarget)) {\r\n    registerTransformation(\r\n      [[CombatStat.Defense, target]],\r\n      \"seared\" + target,\r\n      seared.getDisplayName(),\r\n      TransformationType.Multiplier,\r\n      (state, params) => {\r\n        return hasTemporaryEffect(state, seared.getId(), target) ? 0.7 : 1.0;\r\n      },\r\n    );\r\n  }\r\n\r\n  registerTemporaryEffectCombatStatCacheClearer(\r\n    seared.getId(),\r\n    CombatStat.Defense,\r\n  );\r\n\r\n  addGameStateListener(\"searedClearerIfWet\", (state) => {\r\n    for (let target of valuesOf(AttackTarget)) {\r\n      if (\r\n        hasTemporaryEffect(state, Wet.getId(), target) &&\r\n        hasTemporaryEffect(state, seared.getId(), target)\r\n      ) {\r\n        return clearTemporaryEffect(seared.getId(), target);\r\n      }\r\n    }\r\n  });\r\n}\r\n","import { valuesOf } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { CombatStat } from \"../exploration/CombatStats\";\r\nimport { GameState } from \"../GameState\";\r\nimport { TransformationType } from \"../transformation/Transformation\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport { TemporaryEffectData, TemporaryEffects } from \"./TemporaryEffects\";\r\n\r\nclass Shapeshifted extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"shapeshifted\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Shapeshifted\");\r\n  }\r\n  getIcon() {\r\n    return require(\"./shapeshifted.png\");\r\n  }\r\n  isBeneficial(): boolean {\r\n    return true;\r\n  }\r\n  isCommonBuffEnabled(): { stat: CombatStat; type: TransformationType }[] {\r\n    return valuesOf(CombatStat)\r\n      .map((stat) => [\r\n        { stat, type: TransformationType.Addition },\r\n        { stat, type: TransformationType.Multiplier },\r\n      ])\r\n      .flat();\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"Temporarily shapeshifted into {{what}}. Various stats altered.\", {\r\n      what: temporaryEffectData.params.what,\r\n    });\r\n  }\r\n}\r\n\r\nexport const shapeshifted = new Shapeshifted();\r\n\r\nexport function loadShapeshifted() {\r\n  TemporaryEffects.register(shapeshifted);\r\n}\r\n","import { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { CombatStat } from \"../exploration/CombatStats\";\r\nimport { GameState } from \"../GameState\";\r\nimport { TransformationType } from \"../transformation/Transformation\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport { TemporaryEffectData, TemporaryEffects } from \"./TemporaryEffects\";\r\n\r\nclass Shrunken extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"shrunken\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Shrunken\");\r\n  }\r\n  getIcon() {\r\n    return require(\"./shrunken.png\");\r\n  }\r\n  isBeneficial(): boolean {\r\n    return true;\r\n  }\r\n  isCommonBuffEnabled(): { stat: CombatStat; type: TransformationType }[] {\r\n    return [{ stat: CombatStat.Dodge, type: TransformationType.Addition }];\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"+{{amount}}:dodge:\", {\r\n      amount: formatNumber(temporaryEffectData.params.commonBuff.Dodge),\r\n    });\r\n  }\r\n}\r\n\r\nexport const shrunken = new Shrunken();\r\n\r\nexport function loadShrunken() {\r\n  TemporaryEffects.register(shrunken);\r\n}\r\n","import { t } from \"../../utils/I18n\";\r\nimport { GameState } from \"../GameState\";\r\nimport { getSecondsPlayed } from \"../timetick/TotalTimePlayed\";\r\nimport { cursed } from \"./Cursed\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport {\r\n  clearTemporaryEffect,\r\n  hasTemporaryEffect,\r\n  registerTemporaryEffectListener,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"./TemporaryEffects\";\r\n\r\nclass StatusImmunityBase extends TemporaryEffect {\r\n  constructor(effect: TemporaryEffect) {\r\n    super();\r\n    this.effect = effect;\r\n  }\r\n  effect: TemporaryEffect;\r\n  getId(): string {\r\n    return \"statusImmunity\" + this.effect.getId();\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Protection from {{status}}\", {\r\n      status: this.effect.getDisplayName(),\r\n    });\r\n  }\r\n  isBeneficial(): boolean {\r\n    return true;\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"Immunity to {{status}}\", {\r\n      status: this.effect.getDisplayName(),\r\n    });\r\n  }\r\n}\r\n\r\n// Status immunity only works for these temporary effects\r\nconst ALLOWED_STATUS_IMMUNITY_EFFECTS = [cursed];\r\n\r\nexport function specificStatusImmunityTemporaryEffect(\r\n  effect: TemporaryEffect,\r\n): StatusImmunityBase {\r\n  return TemporaryEffects.getById(\r\n    \"statusImmunity\" + effect.getId(),\r\n  ) as StatusImmunityBase;\r\n}\r\n\r\nexport function loadSpecificStatusImmunity() {\r\n  for (let effect of ALLOWED_STATUS_IMMUNITY_EFFECTS) {\r\n    const statusImmunity = new StatusImmunityBase(effect);\r\n    TemporaryEffects.register(statusImmunity);\r\n    registerTemporaryEffectListener(\r\n      \"statusImmunityDebuffPrevention\" + effect.getId(),\r\n      (state, temporaryEffect) => {\r\n        if (\r\n          !hasTemporaryEffect(\r\n            state,\r\n            statusImmunity.getId(),\r\n            temporaryEffect.target,\r\n          ) ||\r\n          temporaryEffect.id != effect.getId()\r\n        ) {\r\n          return temporaryEffect;\r\n        }\r\n        // Prevent!\r\n        temporaryEffect.endTime = getSecondsPlayed(state) - 1.0;\r\n        return temporaryEffect;\r\n      },\r\n    );\r\n    // On grant, dispel the effect\r\n    registerTemporaryEffectListener(\r\n      \"statusImmunityDispelling\" + effect.getId(),\r\n      (state, temporaryEffect) => {\r\n        if (\r\n          temporaryEffect.id == statusImmunity.getId() &&\r\n          temporaryEffect.endTime > getSecondsPlayed(state)\r\n        ) {\r\n          state = clearTemporaryEffect(\r\n            effect.getId(),\r\n            temporaryEffect.target,\r\n          )(state);\r\n        }\r\n        return temporaryEffect;\r\n      },\r\n    );\r\n  }\r\n}\r\n","import { t } from \"../../utils/I18n\";\r\nimport { GameState } from \"../GameState\";\r\nimport { getSecondsPlayed } from \"../timetick/TotalTimePlayed\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport {\r\n  hasTemporaryEffect,\r\n  registerTemporaryEffectListener,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"./TemporaryEffects\";\r\n\r\nclass StatusImmunity extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"statusImmunity\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Status Immunity\");\r\n  }\r\n  getIcon() {\r\n    return require(\"./statusImmunity.png\");\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"Immune to all debuffs\");\r\n  }\r\n}\r\n\r\nexport const statusImmunity = new StatusImmunity();\r\n\r\nexport function loadStatusImmunity() {\r\n  TemporaryEffects.register(statusImmunity);\r\n\r\n  registerTemporaryEffectListener(\r\n    \"statusImmunityDebuffPrevention\",\r\n    (state, temporaryEffect) => {\r\n      if (\r\n        !hasTemporaryEffect(\r\n          state,\r\n          statusImmunity.getId(),\r\n          temporaryEffect.target,\r\n        )\r\n      ) {\r\n        return temporaryEffect;\r\n      }\r\n      const effect = TemporaryEffects.getById(temporaryEffect.id);\r\n      if (effect.isBeneficial()) {\r\n        return temporaryEffect;\r\n      }\r\n      // Prevent!\r\n      temporaryEffect.endTime = getSecondsPlayed(state) - 1.0;\r\n      return temporaryEffect;\r\n    },\r\n  );\r\n}\r\n","import { t } from \"../../utils/I18n\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport { CombatStat } from \"../exploration/CombatStats\";\r\nimport {\r\n  getEnemyTurnCounter,\r\n  resetEnemyNextAction,\r\n  resetFamiliarNextAction,\r\n} from \"../exploration/Exploration\";\r\nimport { ExplorationStatus } from \"../exploration/ExplorationStatus\";\r\nimport { getExplorationStatus } from \"../exploration/ExplorationUtils\";\r\nimport { setCombatVariable } from \"../Flags\";\r\nimport { GameState } from \"../GameState\";\r\nimport { addGameStateListener } from \"../GameStateListeners\";\r\nimport { getSecondsPlayed } from \"../timetick/TotalTimePlayed\";\r\nimport {\r\n  applyTransformations,\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport {\r\n  getTemporaryEffectEndTime,\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n  registerTemporaryEffectCombatStatCacheClearer,\r\n  registerTemporaryEffectListener,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"./TemporaryEffects\";\r\n\r\nclass Stunned extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"stun\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Stunned!\");\r\n  }\r\n  isBeneficial(): boolean {\r\n    return false;\r\n  }\r\n  getIcon() {\r\n    return require(\"./stunned.png\");\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"Cannot use spells or attack; Current attack is canceled\");\r\n  }\r\n}\r\n\r\nexport const stunned = new Stunned();\r\n\r\nclass StunProtection extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"stunProtection\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Stun Protection\");\r\n  }\r\n  isBeneficial(): boolean {\r\n    return true;\r\n  }\r\n  getIcon() {\r\n    return require(\"./stunProtection.png\");\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t('Immune to \"Stunned!\"');\r\n  }\r\n}\r\n\r\nexport const stunProtection = new StunProtection();\r\n\r\nexport function loadStunning() {\r\n  TemporaryEffects.register(stunned);\r\n  TemporaryEffects.register(stunProtection);\r\n\r\n  // While stunned, enemies and players both have a giant attack delay\r\n  registerTransformation(\r\n    [[AttackTarget.Player, CombatStat.AttackDelay]],\r\n    \"PlayerStunAttackDelay\",\r\n    t(\"Stunned!\"),\r\n    TransformationType.Override,\r\n    (state) =>\r\n      hasTemporaryEffect(state, stunned.getId(), AttackTarget.Player)\r\n        ? +Infinity\r\n        : null,\r\n  );\r\n  registerTransformation(\r\n    [[AttackTarget.Familiar, CombatStat.AttackDelay]],\r\n    \"FamiliarStunAttackDelay\",\r\n    t(\"Stunned!\"),\r\n    TransformationType.Override,\r\n    (state) =>\r\n      hasTemporaryEffect(state, stunned.getId(), AttackTarget.Familiar)\r\n        ? +Infinity\r\n        : null,\r\n  );\r\n  registerTransformation(\r\n    [[AttackTarget.Enemy, CombatStat.AttackDelay]],\r\n    \"EnemyStunAttackDelay\",\r\n    t(\"Stunned!\"),\r\n    TransformationType.Override,\r\n    (state) =>\r\n      hasTemporaryEffect(state, stunned.getId(), AttackTarget.Enemy)\r\n        ? +Infinity\r\n        : null,\r\n  );\r\n\r\n  registerTemporaryEffectCombatStatCacheClearer(\r\n    stunned.getId(),\r\n    CombatStat.AttackDelay,\r\n  );\r\n\r\n  registerTemporaryEffectListener(\"stunning\", (newState, temporaryEffect) => {\r\n    if (\r\n      temporaryEffect.id === stunned.getId() &&\r\n      temporaryEffect.endTime > temporaryEffect.setTime\r\n    ) {\r\n      // Someone's been stunned, but does it have temporary immunity?\r\n      if (\r\n        hasTemporaryEffect(\r\n          newState,\r\n          stunProtection.getId(),\r\n          temporaryEffect.target,\r\n        )\r\n      ) {\r\n        temporaryEffect.endTime = getTemporaryEffectEndTime(\r\n          newState,\r\n          stunned.getId(),\r\n          temporaryEffect.target,\r\n        );\r\n        return temporaryEffect;\r\n      }\r\n    }\r\n    return temporaryEffect;\r\n  });\r\n\r\n  addGameStateListener(\r\n    \"PlayerStunning\",\r\n    (newState) => {\r\n      if (hasTemporaryEffect(newState, stunned.getId(), AttackTarget.Player)) {\r\n        const stunDuration =\r\n          getTemporaryEffectEndTime(\r\n            newState,\r\n            stunned.getId(),\r\n            AttackTarget.Player,\r\n          ) - getSecondsPlayed(newState);\r\n\r\n        // Player's stun has been set. Set attack timer start time to estimated stun end\r\n        // so that on heal we don't immediately attack. Also give stun protection.\r\n        return (state) => {\r\n          state.run.exploration.playerActionProgress = 0.0;\r\n          state = grantTemporaryEffect(\r\n            stunProtection.getId(),\r\n            applyTransformations(\r\n              [\r\n                AttackTarget.Player,\r\n                TransformationTags.PostStunProtectionDuration,\r\n              ],\r\n              newState,\r\n              6.0,\r\n            ) + stunDuration,\r\n            { mode: \"add\", target: AttackTarget.Player },\r\n          )(state);\r\n          return state;\r\n        };\r\n      }\r\n    },\r\n    (state) =>\r\n      getTemporaryEffectEndTime(state, stunned.getId(), AttackTarget.Player),\r\n  );\r\n\r\n  addGameStateListener(\r\n    \"PlayerStunningRecovery\",\r\n    (newState) => {\r\n      if (!hasTemporaryEffect(newState, stunned.getId(), AttackTarget.Player)) {\r\n        // Player's stun has run out, so restart the attack timer\r\n        return (state) => {\r\n          state.run.exploration.playerActionProgress = 0.0;\r\n          return state;\r\n        };\r\n      }\r\n    },\r\n    (state) => hasTemporaryEffect(state, stunned.getId(), AttackTarget.Player),\r\n  );\r\n\r\n  addGameStateListener(\r\n    \"FamiliarStunning\",\r\n    (newState) => {\r\n      if (\r\n        hasTemporaryEffect(newState, stunned.getId(), AttackTarget.Familiar)\r\n      ) {\r\n        const stunDuration =\r\n          getTemporaryEffectEndTime(\r\n            newState,\r\n            stunned.getId(),\r\n            AttackTarget.Familiar,\r\n          ) - getSecondsPlayed(newState);\r\n\r\n        // Player's stun has been set. Set attack timer start time to estimated stun end\r\n        // so that on heal we don't immediately attack. Also give stun protection.\r\n        return (state) => {\r\n          state.run.exploration.familiarActionProgress = 0.0;\r\n          state = grantTemporaryEffect(\r\n            stunProtection.getId(),\r\n            applyTransformations(\r\n              [\r\n                AttackTarget.Familiar,\r\n                TransformationTags.PostStunProtectionDuration,\r\n              ],\r\n              newState,\r\n              6.0,\r\n            ) + stunDuration,\r\n            { mode: \"add\", target: AttackTarget.Familiar },\r\n          )(state);\r\n          return state;\r\n        };\r\n      }\r\n    },\r\n    (state) =>\r\n      getTemporaryEffectEndTime(state, stunned.getId(), AttackTarget.Familiar),\r\n  );\r\n\r\n  addGameStateListener(\r\n    \"FamiliarStunningRecovery\",\r\n    (newState) => {\r\n      if (\r\n        !hasTemporaryEffect(newState, stunned.getId(), AttackTarget.Familiar)\r\n      ) {\r\n        // Player's stun has run out, so restart the attack timer\r\n        return (state) => {\r\n          resetFamiliarNextAction();\r\n          state.run.exploration.familiarActionProgress = 0.0;\r\n          return state;\r\n        };\r\n      }\r\n    },\r\n    (state) =>\r\n      hasTemporaryEffect(state, stunned.getId(), AttackTarget.Familiar),\r\n  );\r\n\r\n  addGameStateListener(\r\n    \"EnemyStunning\",\r\n    (newState) => {\r\n      if (hasTemporaryEffect(newState, stunned.getId(), AttackTarget.Enemy)) {\r\n        const stunDuration =\r\n          getTemporaryEffectEndTime(\r\n            newState,\r\n            stunned.getId(),\r\n            AttackTarget.Enemy,\r\n          ) - getSecondsPlayed(newState);\r\n\r\n        // Enemy's stun has been set. Set attack timer start time to estimated stun end\r\n        // so that on heal we don't immediately attack. Also give stun protection.\r\n        // Also advance turn counter by 1.\r\n        return (state) => {\r\n          state.run.exploration.enemyActionProgress = 0.0;\r\n          state = setCombatVariable(\r\n            \"enemyTurnCounter\",\r\n            getEnemyTurnCounter(state) + 1,\r\n          )(state);\r\n          if (getExplorationStatus(state) === ExplorationStatus.Combat) {\r\n            state = grantTemporaryEffect(\r\n              stunProtection.getId(),\r\n              applyTransformations(\r\n                [\r\n                  AttackTarget.Enemy,\r\n                  TransformationTags.PostStunProtectionDuration,\r\n                ],\r\n                newState,\r\n                6.0,\r\n              ) + stunDuration,\r\n              { mode: \"add\", target: AttackTarget.Enemy },\r\n            )(state);\r\n          }\r\n          return state;\r\n        };\r\n      }\r\n    },\r\n    (state) =>\r\n      getTemporaryEffectEndTime(state, stunned.getId(), AttackTarget.Enemy),\r\n  );\r\n\r\n  addGameStateListener(\r\n    \"EnemyStunningRecovery\",\r\n    (newState) => {\r\n      if (!hasTemporaryEffect(newState, stunned.getId(), AttackTarget.Enemy)) {\r\n        // Enemy's stun has run out, so restart the attack timer\r\n        return (state) => {\r\n          resetEnemyNextAction();\r\n          state.run.exploration.enemyActionProgress = 0.0;\r\n          return state;\r\n        };\r\n      }\r\n    },\r\n    (state) => hasTemporaryEffect(state, stunned.getId(), AttackTarget.Enemy),\r\n  );\r\n}\r\n","import { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { CombatStat } from \"../exploration/CombatStats\";\r\nimport { GameState } from \"../GameState\";\r\nimport { TransformationType } from \"../transformation/Transformation\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport { TemporaryEffectData, TemporaryEffects } from \"./TemporaryEffects\";\r\n\r\nclass Weakened extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"weakened\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Weakened\");\r\n  }\r\n  getIcon() {\r\n    return require(\"./weakened.png\");\r\n  }\r\n  isBeneficial(): boolean {\r\n    return false;\r\n  }\r\n  isCommonBuffEnabled(): { stat: CombatStat; type: TransformationType }[] {\r\n    return [{ stat: CombatStat.Attack, type: TransformationType.Multiplier }];\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"-{{amount}}%:attack:\", {\r\n      amount: formatNumber(\r\n        100 * (1.0 - temporaryEffectData.params.commonBuff.AttackMultiplier),\r\n      ),\r\n    });\r\n  }\r\n}\r\n\r\nexport const weakened = new Weakened();\r\n\r\nexport function loadWeakened() {\r\n  TemporaryEffects.register(weakened);\r\n}\r\n","import { formatMultiplier } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport { GameState } from \"../GameState\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { TemporaryEffect } from \"./TemporaryEffect\";\r\nimport {\r\n  getTemporaryEffectData,\r\n  hasTemporaryEffect,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"./TemporaryEffects\";\r\n\r\nclass WizardDisarray extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"wizardDisarray\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Wizard Disarray\");\r\n  }\r\n  getIcon() {\r\n    return require(\"./wizardDisarray.png\");\r\n  }\r\n  isBeneficial(): boolean {\r\n    return false;\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"{{amount}}:wizardpower: production\", {\r\n      amount: formatMultiplier(temporaryEffectData.params.multiplier),\r\n    });\r\n  }\r\n}\r\n\r\nexport const wizardDisarray = new WizardDisarray();\r\n\r\nexport function loadWizardDisarray() {\r\n  TemporaryEffects.register(wizardDisarray);\r\n\r\n  registerTransformation(\r\n    [[TransformationTags.AutocastPointsProduction]],\r\n    wizardDisarray.getId(),\r\n    wizardDisarray.getDisplayName(),\r\n    TransformationType.Multiplier,\r\n    (state, params) => {\r\n      return hasTemporaryEffect(\r\n        state,\r\n        wizardDisarray.getId(),\r\n        AttackTarget.Player,\r\n      )\r\n        ? getTemporaryEffectData(\r\n            state,\r\n            wizardDisarray.getId(),\r\n            AttackTarget.Player,\r\n          ).params.multiplier\r\n        : 1.0;\r\n    },\r\n  );\r\n}\r\n","import { valuesOf } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport { clearCombatStatCache, CombatStat } from \"../exploration/CombatStats\";\r\nimport {\r\n  getCurrentEnemyHP,\r\n  getCurrentFamiliarHP,\r\n  getCurrentHPFromTarget,\r\n  getCurrentPlayerHP,\r\n  modifyCompanionCurrentHP,\r\n  modifyEnemyCurrentHP,\r\n  modifyPlayerCurrentHP,\r\n} from \"../exploration/Exploration\";\r\nimport { GameState } from \"../GameState\";\r\nimport { registerTimeTickListener } from \"../timetick/TimeTick\";\r\nimport { getSecondsPlayed } from \"../timetick/TotalTimePlayed\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { loadAirborne } from \"./Airborne\";\r\nimport { loadResistAttackSpell } from \"./AttackSpellProtection\";\r\nimport { loadResistAutoAttack } from \"./AutoAttackProtection\";\r\nimport { loadBerserk } from \"./Berserk\";\r\nimport { loadChilled } from \"./Chilled\";\r\nimport { loadCloakOfFlames } from \"./CloakOfFlames\";\r\nimport { loadCorrosion } from \"./Corrosion\";\r\nimport { cursed, loadCursed } from \"./Cursed\";\r\nimport { loadDisease } from \"./Disease\";\r\nimport { loadDivineImmunity } from \"./DivineImmunity\";\r\nimport { loadElementalProtection } from \"./ElementalProtection\";\r\nimport { loadElementalSilence } from \"./ElementalSilence\";\r\nimport { loadFrail } from \"./Frail\";\r\nimport { loadFrozen } from \"./Frozen\";\r\nimport { loadGrounded } from \"./Grounded\";\r\nimport { loadGuard } from \"./Guard\";\r\nimport { loadNoxiousCloak } from \"./NoxiousCloak\";\r\nimport { loadParalyzed } from \"./Paralyzed\";\r\nimport { loadPetrified } from \"./Petrified\";\r\nimport { loadPoison } from \"./Poison\";\r\nimport { loadPoisonImmunity } from \"./PoisonImmunity\";\r\nimport { loadSeared } from \"./Seared\";\r\nimport { loadShapeshifted } from \"./Shapeshifted\";\r\nimport { loadShrunken } from \"./Shrunken\";\r\nimport { loadSpecificStatusImmunity } from \"./SpecificStatusImmunity\";\r\nimport { loadStatusImmunity } from \"./StatusImmunity\";\r\nimport { loadStunning } from \"./Stunning\";\r\nimport {\r\n  getTemporaryEffectData,\r\n  getTemporaryEffects,\r\n  getTemporaryEffectsForCommonBuff,\r\n  hasTemporaryEffect,\r\n  registerTemporaryEffectListener,\r\n  TemporaryEffectExpirationListeners,\r\n  TemporaryEffects,\r\n} from \"./TemporaryEffects\";\r\nimport { loadWeakened } from \"./Weakened\";\r\nimport { loadWet } from \"./Wet\";\r\nimport { loadWizardDisarray } from \"./WizardDisarray\";\r\n\r\nexport function isHealingPossible(\r\n  state: GameState,\r\n  target: AttackTarget,\r\n): boolean {\r\n  return (\r\n    !hasTemporaryEffect(state, cursed.getId(), target) &&\r\n    getCurrentHPFromTarget(state, target) > 0\r\n  );\r\n}\r\n\r\nexport function loadCommonTemporaryEffects() {\r\n  registerTimeTickListener(\"CommonDoT\", (state, timeElapsedSec) => {\r\n    const temporaryEffects = getTemporaryEffects(\r\n      state,\r\n      (state, effect) => effect.params?.commonDoTAmount != null,\r\n    );\r\n    temporaryEffects.forEach((effect) => {\r\n      const effectObject = TemporaryEffects.getById(effect.id);\r\n      if (effect.target === AttackTarget.Enemy) {\r\n        if (\r\n          effect.params.commonDoTAmount < 0 &&\r\n          getCurrentEnemyHP(state) <= 0\r\n        ) {\r\n          return state;\r\n        }\r\n        state = modifyEnemyCurrentHP(\r\n          state,\r\n          -effect.params.commonDoTAmount * timeElapsedSec,\r\n        );\r\n      } else if (effect.target === AttackTarget.Familiar) {\r\n        if (\r\n          effect.params.commonDoTAmount < 0 &&\r\n          getCurrentFamiliarHP(state) <= 0\r\n        ) {\r\n          return state;\r\n        }\r\n        state = modifyCompanionCurrentHP(\r\n          state,\r\n          -effect.params.commonDoTAmount * timeElapsedSec,\r\n          effectObject.getDisplayName(),\r\n        );\r\n      } else {\r\n        if (\r\n          effect.params.commonDoTAmount < 0 &&\r\n          getCurrentPlayerHP(state) <= 0\r\n        ) {\r\n          return state;\r\n        }\r\n        state = modifyPlayerCurrentHP(\r\n          state,\r\n          -effect.params.commonDoTAmount * timeElapsedSec,\r\n          effectObject.getDisplayName(),\r\n        );\r\n      }\r\n    });\r\n    return state;\r\n  });\r\n\r\n  valuesOf(AttackTarget).forEach((target) => {\r\n    valuesOf(CombatStat).forEach((stat) => {\r\n      registerTransformation(\r\n        [[target, stat]],\r\n        \"CommonBuff\" + target + stat,\r\n        t(\"Buffs and debuffs\"),\r\n        TransformationType.Addition,\r\n        (state) => {\r\n          let totalValue = 0;\r\n          const temporaryEffectList = getTemporaryEffectsForCommonBuff(\r\n            stat,\r\n            TransformationType.Addition,\r\n          );\r\n          temporaryEffectList.forEach((effect) => {\r\n            const data = getTemporaryEffectData(state, effect.getId(), target);\r\n            totalValue += data?.params?.commonBuff?.[stat] ?? 0;\r\n          });\r\n          return totalValue;\r\n        },\r\n      );\r\n      registerTransformation(\r\n        [[target, stat]],\r\n        \"CommonBuffMultiplication\" + target + stat,\r\n        t(\"Buffs and debuffs\"),\r\n        TransformationType.Multiplier,\r\n        (state) => {\r\n          let totalValue = 1.0;\r\n          const multiplierStr = stat + \"Multiplier\";\r\n          const temporaryEffectList = getTemporaryEffectsForCommonBuff(\r\n            stat,\r\n            TransformationType.Multiplier,\r\n          );\r\n          temporaryEffectList.forEach((effect) => {\r\n            const data = getTemporaryEffectData(state, effect.getId(), target);\r\n            totalValue *= data?.params?.commonBuff?.[multiplierStr] ?? 1.0;\r\n          });\r\n          return totalValue;\r\n        },\r\n      );\r\n    });\r\n  });\r\n\r\n  registerTemporaryEffectListener(\r\n    \"TemporaryEffectCombatStatCacheClearer\",\r\n    (state, effect) => {\r\n      // Blanket clear cache to save work\r\n      const temporaryEffect = TemporaryEffects.getById(effect.id);\r\n      const commonBuffs = temporaryEffect.isCommonBuffEnabled();\r\n      if (commonBuffs.length > 0) {\r\n        for (let commonBuff of commonBuffs) {\r\n          state = clearCombatStatCache(state, effect.target, commonBuff.stat);\r\n        }\r\n      }\r\n      return effect;\r\n    },\r\n  );\r\n\r\n  // This deletes stray temporary effects at the end of each time tick, keeping things trimmed down\r\n  registerTimeTickListener(\r\n    \"TemporaryEffectDeleterAndCacheCleaerer\",\r\n    (state, timeElapsedSec, isWarp) => {\r\n      const secondsPlayed = getSecondsPlayed(state);\r\n      const notClearedEffects = valuesOf(state.run.temporaryEffects).filter(\r\n        (effect) => !effect.registeredClear && effect.endTime < secondsPlayed,\r\n      );\r\n      if (notClearedEffects.length > 0) {\r\n        for (let effect of notClearedEffects) {\r\n          effect.registeredClear = true;\r\n          // Clear cache if an effect expired!\r\n          state = clearCombatStatCache(state, effect.target);\r\n          TemporaryEffectExpirationListeners.getAll().forEach((listener) =>\r\n            listener(state, effect),\r\n          );\r\n        }\r\n      }\r\n      return state;\r\n    },\r\n    100000,\r\n  );\r\n\r\n  loadWet();\r\n  loadChilled();\r\n  loadFrozen();\r\n  loadSeared();\r\n  loadGuard();\r\n  loadPoison();\r\n  loadNoxiousCloak();\r\n  loadShrunken();\r\n  loadDisease();\r\n  loadWeakened();\r\n  loadGrounded();\r\n  loadAirborne();\r\n  loadCloakOfFlames();\r\n  loadStunning();\r\n  loadWizardDisarray();\r\n  loadFrail();\r\n  loadBerserk();\r\n  loadPetrified();\r\n  loadShapeshifted();\r\n  loadPoisonImmunity();\r\n  loadCorrosion();\r\n  loadElementalProtection();\r\n  loadCursed();\r\n  loadStatusImmunity();\r\n  loadParalyzed();\r\n  loadResistAttackSpell();\r\n  loadElementalSilence();\r\n  loadSpecificStatusImmunity();\r\n  loadDivineImmunity();\r\n  loadResistAutoAttack();\r\n\r\n  // Need to redo reflect\r\n  // addGameStateListener(\r\n  //   \"EnemyReflect\",\r\n  //   (newState) => {\r\n  //     if (!hasTemporaryEffect(newState, \"EnemyReflect\")) {\r\n  //       return;\r\n  //     }\r\n  //     const isSpellAttack =\r\n  //       newState.run.exploration.lastPlayerActionResult?.tags?.includes(\r\n  //         TransformationTags.Spell,\r\n  //       );\r\n  //     const damage =\r\n  //       newState.run.exploration.lastPlayerActionResult?.damage || 0;\r\n  //     if (isSpellAttack && damage > 0) {\r\n  //       return (state) => {\r\n  //         state = modifyPlayerCurrentHP(state, -damage, \"Spell Mirror\");\r\n\r\n  //         const actionResult = {\r\n  //           id: Math.random().toString(),\r\n  //           damage: damage,\r\n  //           isHit: true,\r\n  //           isCrit: false,\r\n  //           time: getSecondsPlayed(state),\r\n  //           target: AttackTarget.Player,\r\n  //           tags: [],\r\n  //         };\r\n  //         state.run.exploration.lastEnemyActionResult = actionResult;\r\n  //         state.run.exploration.actionResultQueue.push(actionResult);\r\n  //         return state;\r\n  //       };\r\n  //     }\r\n  //   },\r\n  //   (state) => state.run.exploration.lastPlayerActionResult?.id ?? \"none\",\r\n  // );\r\n}\r\n","import { Flag } from \"../../Flag\";\r\nimport { hasFlag } from \"../../Flags\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { EquippableItem } from \"../equipment/EquippableItem\";\r\nimport { isItemQualityUnlocked } from \"../Items\";\r\nimport { TransmutationSpell } from \"./TransmutationSpell\";\r\n\r\nexport abstract class EquipmentTransmutationSpell extends TransmutationSpell {\r\n  abstract getItem(): EquippableItem;\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return hasFlag(state, Flag.ExplorationUnlocked) && super.isVisible(state);\r\n  }\r\n\r\n  timesCraftable(state: GameState): number {\r\n    return isItemQualityUnlocked(state)\r\n      ? Math.min(9999, super.timesCraftable(state))\r\n      : 1;\r\n  }\r\n\r\n  simplifyCrafting(): boolean {\r\n    return false;\r\n  }\r\n}\r\n","import { formatNumber } from \"../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../utils/I18n\";\r\nimport { ActionEffect } from \"../../../action/Action\";\r\nimport { AttackTarget } from \"../../../exploration/AttackTarget\";\r\nimport { calculatePlayerMaxHP } from \"../../../exploration/CombatStats\";\r\nimport {\r\n  getCurrentPlayerHP,\r\n  modifyPlayerCurrentHP,\r\n} from \"../../../exploration/Exploration\";\r\nimport { pushCombatActionResult } from \"../../../exploration/ExplorationActionResult\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { Resource } from \"../../../Resources\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport { isHealingPossible } from \"../../../temporaryeffects/CommonTemporaryEffects\";\r\nimport { getSecondsPlayed } from \"../../../timetick/TotalTimePlayed\";\r\nimport { ItemParams } from \"../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../EquippableItem\";\r\nimport { PouchItem } from \"../PouchItem\";\r\n\r\nclass HealthPotion extends PouchItem {\r\n  getId(): string {\r\n    return \"healthPotion\";\r\n  }\r\n\r\n  getPicture() {\r\n    return require(\"./healthPotion.png\");\r\n  }\r\n\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Health Potion\");\r\n  }\r\n\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\"A basic potion that cures minor wounds.\");\r\n  }\r\n\r\n  hpHealTags = [];\r\n  protected getBaseExtraItemEffects(\r\n    params: ItemParams,\r\n  ): Record<string, ActionEffect> {\r\n    return {\r\n      hpHeal: {\r\n        value: 25,\r\n        tags: this.hpHealTags,\r\n        unit: \":hp:\",\r\n      },\r\n    };\r\n  }\r\n\r\n  getHPHealAmount(state: GameState, params: ItemParams): number {\r\n    return this.getItemEffects(state, params, \"hpHeal\").hpHeal;\r\n  }\r\n\r\n  getEffect(state: GameState, params: ItemParams): string {\r\n    return t(\"^+{{amount}}^<{{explanation}}>:hp:\", {\r\n      amount: formatNumber(this.getHPHealAmount(state, params)),\r\n      explanation: this.getItemEffectExplanations(state, params, \"hpHeal\")\r\n        .hpHeal,\r\n    });\r\n  }\r\n\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 150;\r\n  }\r\n\r\n  doPouchItemEffect(state: GameState, params: ItemParams): GameState {\r\n    const healAmt = this.getHPHealAmount(state, params);\r\n    state = modifyPlayerCurrentHP(state, healAmt, this.getBaseName(params));\r\n    const actionResult = {\r\n      id: Math.random().toString(),\r\n      damage: -healAmt,\r\n      isCrit: false,\r\n      isHit: true,\r\n      time: getSecondsPlayed(state),\r\n      source: AttackTarget.Player,\r\n      target: AttackTarget.Player,\r\n      tags: this.getTags(),\r\n    };\r\n    state = pushCombatActionResult(state, actionResult);\r\n    return state;\r\n  }\r\n\r\n  shouldAutoUse(state: GameState, params: ItemParams): boolean {\r\n    const maxHP = calculatePlayerMaxHP(state);\r\n    const currentHP = getCurrentPlayerHP(state);\r\n    return (\r\n      (maxHP - currentHP > this.getHPHealAmount(state, params) ||\r\n        currentHP / maxHP < 0.3) &&\r\n      isHealingPossible(state, AttackTarget.Player)\r\n    );\r\n  }\r\n\r\n  getUsesPerCombatBase(params: ItemParams): number {\r\n    return 3;\r\n  }\r\n}\r\n\r\nconst healthPotion = new HealthPotion();\r\n\r\nclass TransmuteHealthPotion extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return healthPotion;\r\n  }\r\n\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Water: 6,\r\n    };\r\n  }\r\n\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 200,\r\n        WaterEssence: 2000,\r\n      },\r\n      items: {\r\n        elementalShardWater: 5,\r\n        wildgrass: 10,\r\n      },\r\n    };\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Water;\r\n  }\r\n}\r\n\r\nconst transmuteHealthPotion = new TransmuteHealthPotion();\r\n\r\nexport {\r\n  healthPotion as HealthPotion,\r\n  transmuteHealthPotion as TransmuteHealthPotion,\r\n};\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { Resource } from \"../../../Resources\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport { Item, ItemParams } from \"../../Item\";\r\nimport { ItemTagEnum } from \"../../ItemTagEnum\";\r\nimport { TransmutationSpell } from \"../TransmutationSpell\";\r\n\r\nclass Cotton extends Item {\r\n  getId(): string {\r\n    return \"cotton\";\r\n  }\r\n\r\n  getTags(): ItemTagEnum[] {\r\n    return [ItemTagEnum.Material];\r\n  }\r\n\r\n  getPicture() {\r\n    return require(\"./cotton.png\");\r\n  }\r\n\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Cotton\");\r\n  }\r\n\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"A thread of cotton. Strong and durable, useful for making many kinds of clothing.\",\r\n    );\r\n  }\r\n\r\n  getEffect(state: GameState, params: ItemParams): string | undefined {\r\n    return undefined;\r\n  }\r\n\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 80;\r\n  }\r\n}\r\n\r\nexport const cotton = new Cotton();\r\n\r\nclass TransmuteCotton extends TransmutationSpell {\r\n  getItem(): Item {\r\n    return cotton;\r\n  }\r\n\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Air: 22,\r\n    };\r\n  }\r\n\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 600,\r\n        AirEssence: 18000,\r\n      },\r\n      items: {},\r\n    };\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Air;\r\n  }\r\n}\r\n\r\nexport const transmuteCotton = new TransmuteCotton();\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { incrementAccumulatorVariable } from \"../../../AccumulatorVariables\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { HealthPotion } from \"../../../items/equipment/pouch/HealthPotion\";\r\nimport Wildgrass from \"../../../items/material/Wildgrass\";\r\nimport { copperOre } from \"../../../items/transmute/materials/CopperOre\";\r\nimport { cotton } from \"../../../items/transmute/materials/Cotton\";\r\nimport { getResourceAmount, grantResource, Resource } from \"../../../Resources\";\r\nimport { standardEnemyAttackEffect } from \"../../Exploration\";\r\nimport { BattlerAction, BattlerStats, Enemy, EnemyLoot } from \"../Enemy\";\r\n\r\nclass Goblin extends Enemy {\r\n  getId(): string {\r\n    return \"goblin\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Goblin\");\r\n  }\r\n\r\n  getBaseStats(): BattlerStats {\r\n    return {\r\n      maxHP: 799,\r\n      attack: 39,\r\n      defense: 25,\r\n      attackDelay: 1.8,\r\n      accuracy: 100,\r\n      dodge: 100,\r\n      crit: 0,\r\n    };\r\n  }\r\n\r\n  getPicture(state: GameState) {\r\n    return require(\"./goblin.png\");\r\n  }\r\n\r\n  getLevel(): number {\r\n    return 13;\r\n  }\r\n\r\n  getCoinsAwardedBase(state: GameState): number {\r\n    return 46;\r\n  }\r\n\r\n  getMonstiumAwardedBase(state: GameState): number {\r\n    return 23;\r\n  }\r\n\r\n  getNextAction(state: GameState): BattlerAction {\r\n    if (\r\n      getResourceAmount(state, Resource.Coins) >= 250 &&\r\n      Math.random() < 0.1\r\n    ) {\r\n      return {\r\n        name: t(\"Steal Coins\"),\r\n        delay: this.getAttackDelay(state),\r\n        transform: (state) =>\r\n          grantResource(Resource.Coins, -(50 + 200 * Math.random()))(state),\r\n      };\r\n    }\r\n    if (Math.random() < 0.7) {\r\n      return {\r\n        name: t(\"Double Attack\"),\r\n        delay: this.getAttackDelay(state) * 1.0,\r\n        transform: (state) => {\r\n          state = standardEnemyAttackEffect(state, this.getAttack(state) * 0.8);\r\n          state = standardEnemyAttackEffect(state, this.getAttack(state) * 0.8);\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n    return super.getNextAction(state);\r\n  }\r\n\r\n  getItemsAwardedBase(state: GameState): EnemyLoot[] {\r\n    return [\r\n      {\r\n        itemId: copperOre.getId(),\r\n        amount: 2,\r\n        chance: 0.45,\r\n      },\r\n      {\r\n        itemId: cotton.getId(),\r\n        amount: 1,\r\n        chance: 0.12,\r\n      },\r\n      {\r\n        itemId: Wildgrass.getId(),\r\n        amount: 1,\r\n        chance: 0.25,\r\n      },\r\n      {\r\n        itemId: HealthPotion.getId(),\r\n        amount: 1,\r\n        chance: 0.01,\r\n      },\r\n    ];\r\n  }\r\n\r\n  onDeath(\r\n    state: GameState,\r\n    isFromCreatures: boolean,\r\n    familiarId?: string,\r\n  ): GameState {\r\n    state = super.onDeath(state, isFromCreatures, familiarId);\r\n    if (!isFromCreatures) {\r\n      state = incrementAccumulatorVariable(state, \"goblinKills\", 1);\r\n    }\r\n    return state;\r\n  }\r\n}\r\n\r\nexport default new Goblin();\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { copperOre } from \"../../../items/transmute/materials/CopperOre\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport { Chilled } from \"../../../temporaryeffects/Chilled\";\r\nimport { poison } from \"../../../temporaryeffects/Poison\";\r\nimport {\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../../temporaryeffects/TemporaryEffects\";\r\nimport { Wet } from \"../../../temporaryeffects/Wet\";\r\nimport { getSecondsPlayed } from \"../../../timetick/TotalTimePlayed\";\r\nimport { AttackTarget } from \"../../AttackTarget\";\r\nimport { setDungeonFloorCompleted } from \"../../dungeons/Dungeons\";\r\nimport {\r\n  getEnemyTurnCounter,\r\n  modifyEnemyCurrentHP,\r\n  standardEnemyAttackEffect,\r\n} from \"../../Exploration\";\r\nimport { pushCombatActionResult } from \"../../ExplorationActionResult\";\r\nimport { BattlerAction, BattlerStats, Enemy, EnemyLoot } from \"../Enemy\";\r\n\r\nclass MutatedFish extends Enemy {\r\n  getId(): string {\r\n    return \"mutatedFish\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Mutated Fish\");\r\n  }\r\n\r\n  getBaseStats(): BattlerStats {\r\n    return {\r\n      maxHP: 3000,\r\n      attack: 40,\r\n      defense: 30,\r\n      attackDelay: 2.5,\r\n      accuracy: 100,\r\n      dodge: 100,\r\n      crit: 0,\r\n    };\r\n  }\r\n\r\n  getPicture(state: GameState) {\r\n    return require(\"./mutatedFish.png\");\r\n  }\r\n\r\n  isBoss(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getLevel(): number {\r\n    return 13;\r\n  }\r\n\r\n  getCoinsAwardedBase(state: GameState): number {\r\n    return 99;\r\n  }\r\n\r\n  getMonstiumAwardedBase(state: GameState): number {\r\n    return 60;\r\n  }\r\n\r\n  getNextAction(state: GameState): BattlerAction {\r\n    if (getEnemyTurnCounter(state) % 12 == 0) {\r\n      return {\r\n        name: t(\"Tsunami\"),\r\n        delay: this.getAttackDelay(state) * 3,\r\n        transform: (state) => {\r\n          state = grantTemporaryEffect(Wet.getId(), 60, {\r\n            target: AttackTarget.Enemy,\r\n          })(state);\r\n          state = grantTemporaryEffect(Wet.getId(), 60, {\r\n            target: AttackTarget.Player,\r\n          })(state);\r\n          state = standardEnemyAttackEffect(state, this.getAttack(state) * 3, {\r\n            tags: [SpellElement.Water],\r\n          });\r\n          state = modifyEnemyCurrentHP(state, -300);\r\n          state = pushCombatActionResult(state, {\r\n            id: Math.random().toString(),\r\n            damage: 300,\r\n            isCrit: false,\r\n            isHit: true,\r\n            source: AttackTarget.Enemy,\r\n            target: AttackTarget.Enemy,\r\n            tags: [],\r\n            time: getSecondsPlayed(state),\r\n          });\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n    if (\r\n      (!hasTemporaryEffect(state, Wet.getId(), AttackTarget.Enemy) &&\r\n        !hasTemporaryEffect(state, Chilled.getId(), AttackTarget.Enemy)) ||\r\n      Math.random() < 0.5\r\n    ) {\r\n      return {\r\n        name: t(\"Ripple\"),\r\n        delay: this.getAttackDelay(state),\r\n        transform: (state) => {\r\n          state = grantTemporaryEffect(Wet.getId(), 60, {\r\n            target: AttackTarget.Enemy,\r\n          })(state);\r\n          state = grantTemporaryEffect(Wet.getId(), 60, {\r\n            target: AttackTarget.Player,\r\n          })(state);\r\n          state = standardEnemyAttackEffect(state, this.getAttack(state), {\r\n            tags: [SpellElement.Water],\r\n          });\r\n          state = modifyEnemyCurrentHP(state, -30);\r\n          state = pushCombatActionResult(state, {\r\n            id: Math.random().toString(),\r\n            damage: 30,\r\n            isCrit: false,\r\n            isHit: true,\r\n            source: AttackTarget.Enemy,\r\n            target: AttackTarget.Enemy,\r\n            tags: [],\r\n            time: getSecondsPlayed(state),\r\n          });\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n    if (\r\n      Math.random() < 0.05 &&\r\n      !hasTemporaryEffect(state, poison.getId(), AttackTarget.Player)\r\n    ) {\r\n      return {\r\n        name: t(\"Poisonous Bite\"),\r\n        delay: this.getAttackDelay(state),\r\n        transform: (state) => {\r\n          state = standardEnemyAttackEffect(state, this.getAttack(state) * 0.6);\r\n          state = grantTemporaryEffect(poison.getId(), 15, {\r\n            target: AttackTarget.Player,\r\n            params: {\r\n              magnitude: this.getAttack(state) / 20,\r\n            },\r\n          })(state);\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n    if (Math.random() < 0.4) {\r\n      return {\r\n        name: t(\"Fast Attack\"),\r\n        delay: this.getAttackDelay(state) * 0.5,\r\n        transform: (state) =>\r\n          standardEnemyAttackEffect(state, this.getAttack(state) * 0.8),\r\n      };\r\n    }\r\n    return super.getNextAction(state);\r\n  }\r\n\r\n  getItemsAwardedBase(state: GameState): EnemyLoot[] {\r\n    return [\r\n      {\r\n        itemId: copperOre.getId(),\r\n        amount: 4,\r\n        chance: 1.0,\r\n      },\r\n    ];\r\n  }\r\n\r\n  getTips(): string {\r\n    return t(\r\n      `This might have used to be a Sewer Fish, but something odd has happened to it! It is strong. It will use Water attacks that also hit itself. This will make them Wet, which will reduce the effectivity of your Fire attacks. It also seems to have a really strong Tsunami attack... watch out! The Guard skill might come in handy, if your Earth is Lv12 or higher.`,\r\n    );\r\n  }\r\n\r\n  onDeath(\r\n    state: GameState,\r\n    isFromCreatures: boolean,\r\n    familiarId?: string,\r\n  ): GameState {\r\n    state = super.onDeath(state, isFromCreatures, familiarId);\r\n    state = setDungeonFloorCompleted(state, \"sewerEntrance\");\r\n    return state;\r\n  }\r\n}\r\n\r\nexport default new MutatedFish();\r\n","import { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Item, ItemParams } from \"../Item\";\r\nimport { ItemTagEnum } from \"../ItemTagEnum\";\r\n\r\nclass VenomPowder extends Item {\r\n  getId(): string {\r\n    return \"venomPowder\";\r\n  }\r\n\r\n  getTags(): ItemTagEnum[] {\r\n    return [ItemTagEnum.Material];\r\n  }\r\n\r\n  getPicture() {\r\n    return require(\"./venomPowder.png\");\r\n  }\r\n\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Venom Powder\");\r\n  }\r\n\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\"A toxic extract. Useful for making equally toxic items.\");\r\n  }\r\n\r\n  getEffect(state: GameState, params: ItemParams): string | undefined {\r\n    return undefined;\r\n  }\r\n\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 30;\r\n  }\r\n}\r\n\r\nexport default new VenomPowder();\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport VenomPowder from \"../../../items/material/VenomPowder\";\r\nimport { copperOre } from \"../../../items/transmute/materials/CopperOre\";\r\nimport { poison } from \"../../../temporaryeffects/Poison\";\r\nimport { shrunken } from \"../../../temporaryeffects/Shrunken\";\r\nimport {\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../../temporaryeffects/TemporaryEffects\";\r\nimport { AttackTarget } from \"../../AttackTarget\";\r\nimport { BattlerAction, BattlerStats, Enemy, EnemyLoot } from \"../Enemy\";\r\n\r\nclass PoisonousToad extends Enemy {\r\n  getId(): string {\r\n    return \"poisonousToad\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Poisonous Toad\");\r\n  }\r\n\r\n  getBaseStats(): BattlerStats {\r\n    return {\r\n      maxHP: 450,\r\n      attack: 34,\r\n      defense: 12,\r\n      attackDelay: 1.8,\r\n      accuracy: 100,\r\n      dodge: 100,\r\n      crit: 0,\r\n    };\r\n  }\r\n\r\n  getPicture(state: GameState) {\r\n    return require(\"./poisonousToad.png\");\r\n  }\r\n\r\n  getLevel(): number {\r\n    return 9;\r\n  }\r\n\r\n  getCoinsAwardedBase(state: GameState): number {\r\n    return 50;\r\n  }\r\n\r\n  getMonstiumAwardedBase(state: GameState): number {\r\n    return 16;\r\n  }\r\n\r\n  getNextAction(state: GameState): BattlerAction {\r\n    if (\r\n      !hasTemporaryEffect(state, poison.getId(), AttackTarget.Player) &&\r\n      Math.random() < 0.2\r\n    ) {\r\n      return {\r\n        name: t(\"Poisonous Spit\"),\r\n        delay: this.getAttackDelay(state),\r\n        transform: (state) =>\r\n          grantTemporaryEffect(poison.getId(), 15, {\r\n            target: AttackTarget.Player,\r\n            params: {\r\n              magnitude: this.getAttack(state) / 12,\r\n            },\r\n          })(state),\r\n      };\r\n    }\r\n    if (\r\n      !hasTemporaryEffect(state, shrunken.getId(), AttackTarget.Enemy) &&\r\n      Math.random() < 0.1\r\n    ) {\r\n      return {\r\n        name: t(\"Shrink!\"),\r\n        delay: this.getAttackDelay(state) * 1.15,\r\n        transform: (state) =>\r\n          grantTemporaryEffect(shrunken.getId(), 15, {\r\n            target: AttackTarget.Enemy,\r\n            params: {\r\n              commonBuff: { Dodge: 100 },\r\n            },\r\n          })(state),\r\n      };\r\n    }\r\n    return super.getNextAction(state);\r\n  }\r\n\r\n  getItemsAwardedBase(state: GameState): EnemyLoot[] {\r\n    return [\r\n      {\r\n        itemId: copperOre.getId(),\r\n        amount: 1,\r\n        chance: 0.25,\r\n      },\r\n      {\r\n        itemId: VenomPowder.getId(),\r\n        amount: 2,\r\n        chance: 0.15,\r\n      },\r\n    ];\r\n  }\r\n}\r\n\r\nexport default new PoisonousToad();\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { copperOre } from \"../../../items/transmute/materials/CopperOre\";\r\nimport { cotton } from \"../../../items/transmute/materials/Cotton\";\r\nimport { Chilled } from \"../../../temporaryeffects/Chilled\";\r\nimport {\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../../temporaryeffects/TemporaryEffects\";\r\nimport { Wet } from \"../../../temporaryeffects/Wet\";\r\nimport { AttackTarget } from \"../../AttackTarget\";\r\nimport { standardEnemyAttackEffect } from \"../../Exploration\";\r\nimport { BattlerAction, BattlerStats, Enemy, EnemyLoot } from \"../Enemy\";\r\n\r\nclass SewerFish extends Enemy {\r\n  getId(): string {\r\n    return \"sewerFish\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Sewer Fish\");\r\n  }\r\n\r\n  getBaseStats(): BattlerStats {\r\n    return {\r\n      maxHP: 640,\r\n      attack: 35,\r\n      defense: 16,\r\n      attackDelay: 2.0,\r\n      accuracy: 100,\r\n      dodge: 100,\r\n      crit: 0,\r\n    };\r\n  }\r\n\r\n  getPicture(state: GameState) {\r\n    return require(\"./sewerFish.png\");\r\n  }\r\n\r\n  getLevel(): number {\r\n    return 11;\r\n  }\r\n\r\n  getCoinsAwardedBase(state: GameState): number {\r\n    return 65;\r\n  }\r\n\r\n  getMonstiumAwardedBase(state: GameState): number {\r\n    return 22;\r\n  }\r\n\r\n  getNextAction(state: GameState): BattlerAction {\r\n    if (\r\n      !hasTemporaryEffect(state, Wet.getId(), AttackTarget.Enemy) &&\r\n      !hasTemporaryEffect(state, Chilled.getId(), AttackTarget.Enemy)\r\n    ) {\r\n      return {\r\n        name: t(\"Soak\"),\r\n        delay: this.getAttackDelay(state) * 0.2,\r\n        transform: (state) =>\r\n          grantTemporaryEffect(Wet.getId(), 60, {\r\n            target: AttackTarget.Enemy,\r\n          })(state),\r\n      };\r\n    }\r\n    if (Math.random() < 0.4) {\r\n      return {\r\n        name: t(\"Fast Attack\"),\r\n        delay: this.getAttackDelay(state) * 0.5,\r\n        transform: (state) =>\r\n          standardEnemyAttackEffect(state, this.getAttack(state) * 0.8),\r\n      };\r\n    }\r\n    return super.getNextAction(state);\r\n  }\r\n\r\n  getItemsAwardedBase(state: GameState): EnemyLoot[] {\r\n    return [\r\n      {\r\n        itemId: copperOre.getId(),\r\n        amount: 2,\r\n        chance: 0.55,\r\n      },\r\n      {\r\n        itemId: cotton.getId(),\r\n        amount: 1,\r\n        chance: 0.15,\r\n      },\r\n    ];\r\n  }\r\n}\r\n\r\nexport default new SewerFish();\r\n","import memoize from \"sonic-memoize\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { cacheBooleanTrueOnly, cacheByTickCount } from \"../../Caching\";\r\nimport { GameState, GameStateTransform } from \"../../GameState\";\r\nimport {\r\n  Familiars,\r\n  getFamiliarData,\r\n  pushToFamiliarMessageLog,\r\n} from \"../../familiars/Familiar\";\r\nimport { Identifiable } from \"../../generic/Identifiable\";\r\nimport { applyTransformations } from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { getSuccessfulExplorationsForFloor, startCombat } from \"../Exploration\";\r\nimport { Enemy } from \"../enemies/Enemy\";\r\nimport { isDungeonFloorCompletedThisRun } from \"./Dungeons\";\r\n\r\nexport interface ExplorationPossibility {\r\n  weight: number;\r\n  transforms: ExplorationOutcome;\r\n}\r\n\r\nexport interface ExplorationOutcome {\r\n  enemy?: Enemy;\r\n  normal: GameStateTransform;\r\n  familiar: (state: GameState, familiarId: string) => GameState;\r\n}\r\n\r\nexport function encounterEnemy(enemy: Enemy): ExplorationOutcome {\r\n  return {\r\n    enemy: enemy,\r\n    normal: startCombat(enemy),\r\n    familiar: (state, familiarId) => {\r\n      // Determine success rate\r\n      const familiarData = getFamiliarData(state, familiarId);\r\n      const familiar = Familiars.getById(familiarData.familiarClassId);\r\n      const familiarLevel = familiar.getLevel(state, familiarId);\r\n      const enemyLevel = enemy.getLevel();\r\n      let successRate = 1.0;\r\n      if (familiarLevel < enemyLevel) {\r\n        successRate = Math.pow(0.5, enemyLevel - familiarLevel);\r\n      }\r\n      if (Math.random() < successRate) {\r\n        state = pushToFamiliarMessageLog(\r\n          state,\r\n          familiarId,\r\n          t(`Your familiar defeated {{enemy}}!`, { enemy: enemy.getName() }),\r\n        );\r\n        state = enemy.onDeath(state, true, familiarId);\r\n      } else {\r\n        state = pushToFamiliarMessageLog(\r\n          state,\r\n          familiarId,\r\n          t(`Your familiar faced {{enemy}}, but was defeated!`, {\r\n            enemy: enemy.getName(),\r\n          }),\r\n        );\r\n      }\r\n      return state;\r\n    },\r\n  };\r\n}\r\n\r\nconst explorationBossRequirementTags = [\r\n  TransformationTags.ExplorationBossRequirement,\r\n];\r\n\r\nexport abstract class DungeonFloor implements Identifiable {\r\n  abstract getId(): string;\r\n  abstract getFloorName(): string;\r\n\r\n  getIdForTallyingClears(): string {\r\n    return this.getId();\r\n  }\r\n\r\n  getExplorationRequiredTimeSecBase(): number {\r\n    return 5.0;\r\n  }\r\n\r\n  _getExplorationSuccessesForBossBase(): number {\r\n    return 50;\r\n  }\r\n\r\n  getExplorationSuccessesForBoss(state: GameState): number {\r\n    return Math.max(\r\n      Math.ceil(\r\n        applyTransformations(\r\n          explorationBossRequirementTags,\r\n          state,\r\n          this._getExplorationSuccessesForBossBase(),\r\n          { floor: this },\r\n        ),\r\n      ),\r\n      1,\r\n    );\r\n  }\r\n\r\n  doExplore(\r\n    state: GameState,\r\n    isFromFamiliars: boolean,\r\n    forcedRoll?: number | undefined,\r\n  ): ExplorationOutcome | null {\r\n    const possibilities = cacheByTickCount(\r\n      state,\r\n      this.getId() + \"ExplorationPossibilities\" + isFromFamiliars,\r\n      (state) => {\r\n        const possibilities = this.getExplorationPossibilities(\r\n          state,\r\n          isFromFamiliars,\r\n        );\r\n        return possibilities;\r\n      },\r\n    );\r\n    const totalWeight = possibilities.reduce(\r\n      (sumToNow, possibility) => sumToNow + possibility.weight,\r\n      0,\r\n    );\r\n    let explorationRoll = (forcedRoll ?? Math.random()) * totalWeight;\r\n    for (let idx in possibilities) {\r\n      const possibility = possibilities[idx];\r\n      const weight = possibility.weight;\r\n      explorationRoll -= weight;\r\n      if (explorationRoll < 0) {\r\n        return possibility.transforms;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  abstract getBoss(state: GameState): Enemy | undefined;\r\n\r\n  abstract getBreedingLevel(): number;\r\n\r\n  doFightBoss(state: GameState): GameStateTransform | undefined {\r\n    const boss = this.getBoss(state);\r\n    if (boss) {\r\n      return startCombat(boss);\r\n    }\r\n  }\r\n\r\n  canFightBoss(state: GameState): boolean {\r\n    return cacheBooleanTrueOnly(\r\n      state,\r\n      \"dungeonFloorFightBoss.\" + this.getId(),\r\n      (state) => {\r\n        const couldFightBoss =\r\n          (getSuccessfulExplorationsForFloor(state, this.getId()) >=\r\n            this.getExplorationSuccessesForBoss(state) ||\r\n            isDungeonFloorCompletedThisRun(state, this)) &&\r\n          this.getBoss(state) != undefined;\r\n        return couldFightBoss;\r\n      },\r\n    );\r\n  }\r\n\r\n  isUnlocked(state: GameState): boolean {\r\n    return false;\r\n  }\r\n\r\n  getNextFloor(state: GameState): DungeonFloor | undefined {\r\n    return undefined;\r\n  }\r\n\r\n  abstract isMainStoryDungeonFloor(): boolean;\r\n\r\n  getMinimumMPLRecommendation(): number | undefined {\r\n    return undefined;\r\n  }\r\n\r\n  getMaximumMPLRecommendation(): number | undefined {\r\n    return undefined;\r\n  }\r\n\r\n  abstract getBaseExplorationPossibilities(\r\n    state: GameState,\r\n  ): ExplorationPossibility[];\r\n\r\n  getExplorationPossibilities(\r\n    state: GameState,\r\n    isFromFamiliars: boolean,\r\n  ): ExplorationPossibility[] {\r\n    const basePossibilities = this.getBaseExplorationPossibilities(state);\r\n    return basePossibilities.map((possibility) => ({\r\n      weight: applyTransformations(\r\n        getExplorationPossibilityTags(\r\n          this.getId(),\r\n          possibility.transforms.enemy?.getId(),\r\n          isFromFamiliars,\r\n        ),\r\n        state,\r\n        possibility.weight,\r\n      ),\r\n      transforms: possibility.transforms,\r\n    }));\r\n  }\r\n\r\n  isDangerousForFamiliar(state: GameState, familiarId: string): boolean {\r\n    const familiarData = getFamiliarData(state, familiarId);\r\n    const familiar = Familiars.getById(familiarData.familiarClassId);\r\n    const familiarLevel = familiar.getLevel(state, familiarId);\r\n    const explorationPossibilities = this.getExplorationPossibilities(\r\n      state,\r\n      true,\r\n    );\r\n\r\n    let succeedWeight = 0,\r\n      failWeight = 0;\r\n    for (let possibility of explorationPossibilities) {\r\n      const weight = possibility.weight;\r\n      const enemy = possibility.transforms.enemy;\r\n      const enemyLevel = enemy.getLevel();\r\n      let successRate = 1.0;\r\n      if (familiarLevel < enemyLevel) {\r\n        successRate = Math.pow(0.5, enemyLevel - familiarLevel);\r\n      }\r\n      succeedWeight += weight * successRate;\r\n      failWeight += weight * (1 - successRate);\r\n    }\r\n\r\n    const succeedPercent = succeedWeight / (succeedWeight + failWeight);\r\n    return succeedPercent < 0.8;\r\n  }\r\n\r\n  calculateAverageEnemyLevelForFamiliars(state: GameState): number {\r\n    const explorationPossibilities = this.getExplorationPossibilities(\r\n      state,\r\n      true,\r\n    );\r\n\r\n    let totalWeight = 0,\r\n      levelSum = 0;\r\n\r\n    for (let possibility of explorationPossibilities) {\r\n      const weight = possibility.weight;\r\n      const enemy = possibility.transforms.enemy;\r\n      const enemyLevel = enemy.getLevel();\r\n      totalWeight += weight;\r\n      levelSum += enemyLevel * weight;\r\n    }\r\n\r\n    return levelSum / totalWeight;\r\n  }\r\n}\r\n\r\nconst getExplorationPossibilityTags = memoize(\r\n  (floorId: string, enemyId: string | undefined, isFromFamiliars: boolean) => [\r\n    floorId,\r\n    enemyId,\r\n    TransformationTags.ExplorationWeight,\r\n    isFromFamiliars\r\n      ? TransformationTags.FromFamiliarExploration\r\n      : TransformationTags.FromExploration,\r\n  ],\r\n);\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { AttackTarget } from \"../../../exploration/AttackTarget\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { Resource } from \"../../../Resources\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport { poison } from \"../../../temporaryeffects/Poison\";\r\nimport {\r\n  clearTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../../temporaryeffects/TemporaryEffects\";\r\nimport { ItemParams } from \"../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../EquippableItem\";\r\nimport { PouchItem } from \"../PouchItem\";\r\n\r\nclass AntidotePotion extends PouchItem {\r\n  getId(): string {\r\n    return \"antidotePotion\";\r\n  }\r\n\r\n  getPicture() {\r\n    return require(\"./antidotePotion.png\");\r\n  }\r\n\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Antidote Potion\");\r\n  }\r\n\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\"Although built from extracted venom, it neutralizes it instead.\");\r\n  }\r\n\r\n  getEffect(state: GameState, params: ItemParams): string | undefined {\r\n    return t('Cures \"Poison\"');\r\n  }\r\n\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 250;\r\n  }\r\n\r\n  doPouchItemEffect(state: GameState, params: ItemParams): GameState {\r\n    return clearTemporaryEffect(poison.getId(), AttackTarget.Player)(state);\r\n  }\r\n\r\n  shouldAutoUse(state: GameState, params: ItemParams): boolean {\r\n    return hasTemporaryEffect(state, poison.getId(), AttackTarget.Player);\r\n  }\r\n\r\n  getUsesPerCombatBase(params: ItemParams): number {\r\n    return 8;\r\n  }\r\n}\r\n\r\nexport const antidotePotion = new AntidotePotion();\r\n\r\nclass TransmuteAntidotePotion extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return antidotePotion;\r\n  }\r\n\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Poison: 15,\r\n    };\r\n  }\r\n\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 400,\r\n        PoisonEssence: 1000,\r\n      },\r\n      items: {\r\n        elementalShardWater: 5,\r\n        elementalShardPoison: 5,\r\n        venomPowder: 5,\r\n      },\r\n    };\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Poison;\r\n  }\r\n}\r\n\r\nexport const transmuteAntidotePotion = new TransmuteAntidotePotion();\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { incrementAccumulatorVariable } from \"../../../AccumulatorVariables\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { antidotePotion } from \"../../../items/equipment/pouch/AntidotePotion\";\r\nimport Wildgrass from \"../../../items/material/Wildgrass\";\r\nimport { copperOre } from \"../../../items/transmute/materials/CopperOre\";\r\nimport { cotton } from \"../../../items/transmute/materials/Cotton\";\r\nimport { getResourceAmount, grantResource, Resource } from \"../../../Resources\";\r\nimport { poison } from \"../../../temporaryeffects/Poison\";\r\nimport {\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../../temporaryeffects/TemporaryEffects\";\r\nimport {\r\n  calculateAttackTarget,\r\n  standardEnemyAttackEffect,\r\n} from \"../../Exploration\";\r\nimport { getLastQueuedActionResult } from \"../../ExplorationUtils\";\r\nimport { BattlerAction, BattlerStats, Enemy, EnemyLoot } from \"../Enemy\";\r\n\r\nclass GoblinSharpshooter extends Enemy {\r\n  getId(): string {\r\n    return \"goblinSharpshooter\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Goblin Sharpshooter\");\r\n  }\r\n\r\n  getBaseStats(): BattlerStats {\r\n    return {\r\n      maxHP: 899,\r\n      attack: 60,\r\n      defense: 25,\r\n      attackDelay: 1.9,\r\n      accuracy: 70,\r\n      dodge: 100,\r\n      crit: 0,\r\n    };\r\n  }\r\n\r\n  getPicture(state: GameState) {\r\n    return require(\"./goblinSharpshooter.png\");\r\n  }\r\n\r\n  getLevel(): number {\r\n    return 15;\r\n  }\r\n\r\n  getCoinsAwardedBase(state: GameState): number {\r\n    return 68;\r\n  }\r\n\r\n  getMonstiumAwardedBase(state: GameState): number {\r\n    return 29;\r\n  }\r\n\r\n  getNextAction(state: GameState): BattlerAction {\r\n    const target = calculateAttackTarget(state);\r\n    if (\r\n      getResourceAmount(state, Resource.Coins) >= 250 &&\r\n      Math.random() < 0.1\r\n    ) {\r\n      return {\r\n        name: t(\"Steal Coins\"),\r\n        delay: this.getAttackDelay(state),\r\n        transform: (state) =>\r\n          grantResource(Resource.Coins, -(50 + 200 * Math.random()))(state),\r\n      };\r\n    }\r\n    if (\r\n      !hasTemporaryEffect(state, poison.getId(), target) &&\r\n      Math.random() < 0.2\r\n    ) {\r\n      return {\r\n        name: t(\"Poisonous Arrow\"),\r\n        delay: this.getAttackDelay(state) * 1.0,\r\n        transform: (state) => {\r\n          state = standardEnemyAttackEffect(state, this.getAttack(state) * 1.0);\r\n          const lastActionResult = getLastQueuedActionResult(state);\r\n          if (lastActionResult.isHit) {\r\n            state = grantTemporaryEffect(poison.getId(), 15, {\r\n              target: lastActionResult.target,\r\n              params: {\r\n                magnitude: this.getAttack(state) / 19,\r\n              },\r\n            })(state);\r\n          }\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n    if (Math.random() < 0.2) {\r\n      return {\r\n        name: t(\"Barrage\"),\r\n        delay: this.getAttackDelay(state) * 2.0,\r\n        transform: (state) => {\r\n          state = standardEnemyAttackEffect(state, this.getAttack(state) * 0.6);\r\n          state = standardEnemyAttackEffect(state, this.getAttack(state) * 0.6);\r\n          state = standardEnemyAttackEffect(state, this.getAttack(state) * 0.6);\r\n          state = standardEnemyAttackEffect(state, this.getAttack(state) * 0.6);\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n    return super.getNextAction(state);\r\n  }\r\n\r\n  getItemsAwardedBase(state: GameState): EnemyLoot[] {\r\n    return [\r\n      {\r\n        itemId: copperOre.getId(),\r\n        amount: 2,\r\n        chance: 0.5,\r\n      },\r\n      {\r\n        itemId: cotton.getId(),\r\n        amount: 1,\r\n        chance: 0.25,\r\n      },\r\n      {\r\n        itemId: Wildgrass.getId(),\r\n        amount: 1,\r\n        chance: 0.5,\r\n      },\r\n      {\r\n        itemId: antidotePotion.getId(),\r\n        amount: 1,\r\n        chance: 0.01,\r\n      },\r\n    ];\r\n  }\r\n\r\n  onDeath(\r\n    state: GameState,\r\n    isFromCreatures: boolean,\r\n    familiarId?: string,\r\n  ): GameState {\r\n    state = super.onDeath(state, isFromCreatures, familiarId);\r\n    if (!isFromCreatures) {\r\n      state = incrementAccumulatorVariable(state, \"goblinKills\", 1);\r\n    }\r\n    return state;\r\n  }\r\n}\r\n\r\nexport default new GoblinSharpshooter();\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport VenomPowder from \"../../../items/material/VenomPowder\";\r\nimport { copperOre } from \"../../../items/transmute/materials/CopperOre\";\r\nimport { cotton } from \"../../../items/transmute/materials/Cotton\";\r\nimport { disease } from \"../../../temporaryeffects/Disease\";\r\nimport {\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../../temporaryeffects/TemporaryEffects\";\r\nimport {\r\n  calculateAttackTarget,\r\n  drainingEnemyAttackEffect,\r\n} from \"../../Exploration\";\r\nimport { BattlerAction, BattlerStats, Enemy, EnemyLoot } from \"../Enemy\";\r\n\r\nclass SewerFly extends Enemy {\r\n  getId(): string {\r\n    return \"sewerFly\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Sewer Fly\");\r\n  }\r\n\r\n  getBaseStats(): BattlerStats {\r\n    return {\r\n      maxHP: 420,\r\n      attack: 37,\r\n      defense: 10,\r\n      attackDelay: 1.1,\r\n      accuracy: 100,\r\n      dodge: 120,\r\n      crit: 0,\r\n    };\r\n  }\r\n\r\n  getPicture(state: GameState) {\r\n    return require(\"./sewerFly.png\");\r\n  }\r\n\r\n  getLevel(): number {\r\n    return 14;\r\n  }\r\n\r\n  getCoinsAwardedBase(state: GameState): number {\r\n    return 30;\r\n  }\r\n\r\n  getMonstiumAwardedBase(state: GameState): number {\r\n    return 24;\r\n  }\r\n\r\n  getNextAction(state: GameState): BattlerAction {\r\n    const target = calculateAttackTarget(state);\r\n    if (\r\n      !hasTemporaryEffect(state, disease.getId(), target) &&\r\n      Math.random() < 0.1\r\n    ) {\r\n      return {\r\n        name: t(\"Diseased Leech\"),\r\n        delay: this.getAttackDelay(state) * 1.3,\r\n        transform: (state: GameState) => {\r\n          state = drainingEnemyAttackEffect(state, this.getAttack(state));\r\n          state = grantTemporaryEffect(disease.getId(), 12, { target: target })(\r\n            state,\r\n          );\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n    if (Math.random() < 0.5) {\r\n      return {\r\n        name: t(\"Leech\"),\r\n        delay: this.getAttackDelay(state),\r\n        transform: (state: GameState) => {\r\n          state = drainingEnemyAttackEffect(state, this.getAttack(state));\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n    return super.getNextAction(state);\r\n  }\r\n\r\n  getItemsAwardedBase(state: GameState): EnemyLoot[] {\r\n    return [\r\n      {\r\n        itemId: copperOre.getId(),\r\n        amount: 1,\r\n        chance: 0.55,\r\n      },\r\n      {\r\n        itemId: cotton.getId(),\r\n        amount: 1,\r\n        chance: 0.13,\r\n      },\r\n      {\r\n        itemId: VenomPowder.getId(),\r\n        amount: 1,\r\n        chance: 0.35,\r\n      },\r\n    ];\r\n  }\r\n}\r\n\r\nexport default new SewerFly();\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { copperOre } from \"../../../items/transmute/materials/CopperOre\";\r\nimport { cotton } from \"../../../items/transmute/materials/Cotton\";\r\nimport { Chilled } from \"../../../temporaryeffects/Chilled\";\r\nimport {\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../../temporaryeffects/TemporaryEffects\";\r\nimport { Wet } from \"../../../temporaryeffects/Wet\";\r\nimport { AttackTarget } from \"../../AttackTarget\";\r\nimport {\r\n  getEnemyTurnCounter,\r\n  standardEnemyAttackEffect,\r\n} from \"../../Exploration\";\r\nimport { BattlerAction, BattlerStats, Enemy, EnemyLoot } from \"../Enemy\";\r\n\r\nclass Sicklefish extends Enemy {\r\n  getId(): string {\r\n    return \"sicklefish\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Sicklefish\");\r\n  }\r\n\r\n  getBaseStats(): BattlerStats {\r\n    return {\r\n      maxHP: 900,\r\n      attack: 52,\r\n      defense: 30,\r\n      attackDelay: 2.1,\r\n      accuracy: 100,\r\n      dodge: 100,\r\n      crit: 0,\r\n    };\r\n  }\r\n\r\n  getPicture(state: GameState) {\r\n    return require(\"./sicklefish.png\");\r\n  }\r\n\r\n  getLevel(): number {\r\n    return 15;\r\n  }\r\n\r\n  getCoinsAwardedBase(state: GameState): number {\r\n    return 54;\r\n  }\r\n\r\n  getMonstiumAwardedBase(state: GameState): number {\r\n    return 31;\r\n  }\r\n\r\n  getNextAction(state: GameState): BattlerAction {\r\n    if (getEnemyTurnCounter(state) % 4 == 0) {\r\n      return {\r\n        name: t(\"Strong Attack\"),\r\n        delay: this.getAttackDelay(state) * 1.0,\r\n        transform: (state) => {\r\n          state = standardEnemyAttackEffect(state, this.getAttack(state) * 2.0);\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n    if (getEnemyTurnCounter(state) % 4 == 3) {\r\n      return {\r\n        name: t(\"Charging...\"),\r\n        delay: this.getAttackDelay(state) * 1.5,\r\n        transform: (state) => state,\r\n      };\r\n    }\r\n    if (\r\n      !hasTemporaryEffect(state, Wet.getId(), AttackTarget.Enemy) &&\r\n      !hasTemporaryEffect(state, Chilled.getId(), AttackTarget.Enemy)\r\n    ) {\r\n      return {\r\n        name: t(\"Soak\"),\r\n        delay: this.getAttackDelay(state) * 0.2,\r\n        transform: (state) =>\r\n          grantTemporaryEffect(Wet.getId(), 60, {\r\n            target: AttackTarget.Enemy,\r\n          })(state),\r\n      };\r\n    }\r\n    return super.getNextAction(state);\r\n  }\r\n\r\n  getItemsAwardedBase(state: GameState): EnemyLoot[] {\r\n    return [\r\n      {\r\n        itemId: copperOre.getId(),\r\n        amount: 4,\r\n        chance: 0.2,\r\n      },\r\n      {\r\n        itemId: cotton.getId(),\r\n        amount: 1,\r\n        chance: 0.3,\r\n      },\r\n    ];\r\n  }\r\n}\r\n\r\nexport default new Sicklefish();\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport VenomPowder from \"../../../items/material/VenomPowder\";\r\nimport { disease } from \"../../../temporaryeffects/Disease\";\r\nimport { poison } from \"../../../temporaryeffects/Poison\";\r\nimport {\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../../temporaryeffects/TemporaryEffects\";\r\nimport { setDungeonFloorCompleted } from \"../../dungeons/Dungeons\";\r\nimport { calculateAttackTarget } from \"../../Exploration\";\r\nimport { BattlerAction, BattlerStats, Enemy, EnemyLoot } from \"../Enemy\";\r\n\r\nclass SludgeMass extends Enemy {\r\n  getId(): string {\r\n    return \"sludgeMass\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Sludge Mass\");\r\n  }\r\n\r\n  getBaseStats(): BattlerStats {\r\n    return {\r\n      maxHP: 6500,\r\n      attack: 47,\r\n      defense: 10,\r\n      attackDelay: 4.5,\r\n      accuracy: 100,\r\n      dodge: 100,\r\n      crit: 0,\r\n    };\r\n  }\r\n\r\n  getPicture(state: GameState) {\r\n    return require(\"./sludgeMass.png\");\r\n  }\r\n\r\n  isBoss(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getLevel(): number {\r\n    return 17;\r\n  }\r\n\r\n  getCoinsAwardedBase(state: GameState): number {\r\n    return 199;\r\n  }\r\n\r\n  getMonstiumAwardedBase(state: GameState): number {\r\n    return 110;\r\n  }\r\n\r\n  getNextAction(state: GameState): BattlerAction {\r\n    const target = calculateAttackTarget(state);\r\n    if (!hasTemporaryEffect(state, disease.getId(), target)) {\r\n      return {\r\n        name: t(\"Plague\"),\r\n        delay: this.getAttackDelay(state),\r\n        transform: (state) => {\r\n          const target = calculateAttackTarget(state);\r\n          state = grantTemporaryEffect(disease.getId(), 25, {\r\n            target,\r\n          })(state);\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n    if (\r\n      !hasTemporaryEffect(state, poison.getId(), target) &&\r\n      Math.random() < 0.5\r\n    ) {\r\n      return {\r\n        name: t(\"Poison\"),\r\n        delay: this.getAttackDelay(state),\r\n        transform: (state) => {\r\n          const target = calculateAttackTarget(state);\r\n          state = grantTemporaryEffect(poison.getId(), 12, {\r\n            target,\r\n            params: {\r\n              magnitude: this.getAttack(state) / 7,\r\n            },\r\n          })(state);\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n    return super.getNextAction(state);\r\n  }\r\n\r\n  getItemsAwardedBase(state: GameState): EnemyLoot[] {\r\n    return [\r\n      {\r\n        itemId: VenomPowder.getId(),\r\n        amount: 2,\r\n        chance: 1.0,\r\n      },\r\n    ];\r\n  }\r\n\r\n  getTips(): string {\r\n    return t(\r\n      `What is this *monstrosity*?! It really, *really* stinks! It is so powerful that it's leaving us sick, making us unable to get healthy again! On top of that, it is also highly poisonous! But, at least, we can try and prevent that. Let's make sure we go prepared with something to counter the poison, like with a Charm of Poison Resistance (requires Poison Lv4), and ready to heal as soon as the disease subsides.`,\r\n    );\r\n  }\r\n\r\n  onDeath(\r\n    state: GameState,\r\n    isFromCreatures: boolean,\r\n    familiarId?: string,\r\n  ): GameState {\r\n    state = super.onDeath(state, isFromCreatures, familiarId);\r\n    state = setDungeonFloorCompleted(state, \"sewerHazardousSector\");\r\n    return state;\r\n  }\r\n}\r\n\r\nexport default new SludgeMass();\r\n","import { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Item, ItemParams } from \"../Item\";\r\nimport { ItemTagEnum } from \"../ItemTagEnum\";\r\n\r\nclass EtherealEelExtract extends Item {\r\n  getId(): string {\r\n    return \"etherealEelExtract\";\r\n  }\r\n\r\n  getTags(): ItemTagEnum[] {\r\n    return [ItemTagEnum.QuestItem];\r\n  }\r\n\r\n  getPicture() {\r\n    return require(\"./etherealEelExtract.png\");\r\n  }\r\n\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Ethereal Eel Extract\");\r\n  }\r\n\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\"A substance obtained from an Ethereal Eel. Proof of its defeat.\");\r\n  }\r\n\r\n  getEffect(state: GameState, params: ItemParams): string | undefined {\r\n    return undefined;\r\n  }\r\n\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 100000;\r\n  }\r\n}\r\n\r\nexport default new EtherealEelExtract();\r\n","import { ActionArea, ActionSubcategory } from \"../action/ActionAreas\";\r\nimport { ExplorationStatus } from \"../exploration/ExplorationStatus\";\r\nimport { getExplorationStatus } from \"../exploration/ExplorationUtils\";\r\nimport { Flag } from \"../Flag\";\r\nimport { hasEverHadFlag } from \"../Flags\";\r\nimport { GameState } from \"../GameState\";\r\nimport { Spell } from \"./Spell\";\r\n\r\nexport abstract class CombatSpellBase extends Spell {\r\n  getAreas(): Partial<Record<ActionArea, ActionSubcategory[]>> {\r\n    return {\r\n      SPELL_MENU: [this.getElement()],\r\n      EXPLORATION: [this.getElement()],\r\n    };\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return (\r\n      hasEverHadFlag(state, Flag.ExplorationUnlocked) && super.isVisible(state)\r\n    );\r\n  }\r\n\r\n  canUseOutsideOfCombat(): boolean {\r\n    return false;\r\n  }\r\n\r\n  isEnabled(state: GameState, skipAffordabilityChecks?: boolean): boolean {\r\n    return (\r\n      (this.canUseOutsideOfCombat() ||\r\n        getExplorationStatus(state) == ExplorationStatus.Combat) &&\r\n      super.isEnabled(state, skipAffordabilityChecks)\r\n    );\r\n  }\r\n}\r\n","import { formatMultiplier, formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport { ActionEffect, DoActionArgs } from \"../../action/Action\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { CombatStat } from \"../../exploration/CombatStats\";\r\nimport { TemporaryEffect } from \"../../temporaryeffects/TemporaryEffect\";\r\nimport {\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n  grantTemporaryEffect,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport { TransformationType } from \"../../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../transformation/TransformationTags\";\r\nimport { CombatSpellBase } from \"../CombatSpellBase\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport { registerEmpowerEffects } from \"../Spells\";\r\n\r\nclass HasteTemporaryEffect extends TemporaryEffect {\r\n  getId() {\r\n    return \"haste\";\r\n  }\r\n\r\n  getDisplayName(): string {\r\n    return t(\"Haste\");\r\n  }\r\n\r\n  getIcon() {\r\n    return require(\"./haste.png\");\r\n  }\r\n\r\n  isCommonBuffEnabled(): { stat: CombatStat; type: TransformationType }[] {\r\n    return [\r\n      { stat: CombatStat.AttackDelay, type: TransformationType.Multiplier },\r\n    ];\r\n  }\r\n\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    const attackDelayRatio =\r\n      temporaryEffectData.params.commonBuff.AttackDelayMultiplier;\r\n    return t(\"{{ratio}}:attackDelay:\", {\r\n      ratio: formatMultiplier(attackDelayRatio),\r\n    });\r\n  }\r\n}\r\n\r\nconst temporaryEffect = new HasteTemporaryEffect();\r\nTemporaryEffects.register(temporaryEffect);\r\n\r\nconst BASE = 0.13637;\r\n\r\nclass Haste extends CombatSpellBase {\r\n  getId(): string {\r\n    return \"haste\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Haste\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Air;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.COMBAT_BUFF;\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 700;\r\n  }\r\n\r\n  canUseOutsideOfCombat(): boolean {\r\n    return true;\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 2.0,\r\n        tags: [TransformationTags.TemporaryEffectMagnitude],\r\n        valueType: TransformationValueType.Log2Divisor,\r\n        base: BASE,\r\n      },\r\n      duration: {\r\n        value: 60.0,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n        unit: t(\" sec\"),\r\n      },\r\n    };\r\n  }\r\n\r\n  doSpellAction(state: GameState, args: DoActionArgs): GameState {\r\n    const effects = this.getActionEffects(state);\r\n    return grantTemporaryEffect(temporaryEffect.getId(), effects.duration, {\r\n      params: {\r\n        commonBuff: {\r\n          AttackDelayMultiplier:\r\n            1.0 / (1 + BASE * Math.max(0, Math.log2(effects.magnitude))),\r\n        },\r\n      },\r\n    })(state);\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\"Enchant your body to be able to move faster.\");\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanations = this.getActionEffectExplanations(state);\r\n    return t(\r\n      \"^{{magnitude}}^<{{magnitudeExplanation}}>:attackDelay: for ^{{duration}}^<{{durationExplanation}}> sec\",\r\n      {\r\n        magnitude: formatMultiplier(\r\n          1.0 / (1 + BASE * Math.max(Math.log2(effects.magnitude))),\r\n        ),\r\n        magnitudeExplanation: explanations.magnitude,\r\n        duration: formatNumber(effects.duration),\r\n        durationExplanation: explanations.duration,\r\n      },\r\n    );\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Air: 8 };\r\n  }\r\n\r\n  protected isEmpowerable(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getEmpoweringLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Air: 52 };\r\n  }\r\n}\r\n\r\nconst haste = new Haste();\r\n\r\nregisterEmpowerEffects(haste, [TransformationTags.Cost, Resource.Mana], 10);\r\nregisterEmpowerEffects(haste, [TransformationTags.TemporaryEffectMagnitude], 2);\r\n\r\nexport { haste as Haste, temporaryEffect as HasteTemporaryEffect };\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport EtherealEelExtract from \"../../../items/quest/EtherealEelExtract\";\r\nimport { copperOre } from \"../../../items/transmute/materials/CopperOre\";\r\nimport { HasteTemporaryEffect } from \"../../../spells/air/Haste\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport { Chilled } from \"../../../temporaryeffects/Chilled\";\r\nimport {\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../../temporaryeffects/TemporaryEffects\";\r\nimport { Wet } from \"../../../temporaryeffects/Wet\";\r\nimport { getSecondsPlayed } from \"../../../timetick/TotalTimePlayed\";\r\nimport { AttackTarget } from \"../../AttackTarget\";\r\nimport {\r\n  aoeEnemyAttackEffect,\r\n  calculateAttackTarget,\r\n  getCurrentEnemyHPFraction,\r\n  getEnemyTurnCounter,\r\n  modifyEnemyCurrentHP,\r\n  standardEnemyAttackEffect,\r\n} from \"../../Exploration\";\r\nimport { pushCombatActionResult } from \"../../ExplorationActionResult\";\r\nimport { hasCurrentActiveCompanion } from \"../../Summoning\";\r\nimport { BattlerAction, BattlerStats, Enemy, EnemyLoot } from \"../Enemy\";\r\n\r\nclass EtherealEel extends Enemy {\r\n  getId(): string {\r\n    return \"etherealEel\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Ethereal Eel\");\r\n  }\r\n\r\n  getBaseStats(): BattlerStats {\r\n    return {\r\n      maxHP: 150000,\r\n      attack: 400,\r\n      defense: 250,\r\n      attackDelay: 1.5,\r\n      accuracy: 160,\r\n      dodge: 400,\r\n      crit: 0,\r\n    };\r\n  }\r\n\r\n  getPicture(state: GameState) {\r\n    return require(\"./etherealEel.png\");\r\n  }\r\n\r\n  getLevel(): number {\r\n    return 55;\r\n  }\r\n\r\n  getCoinsAwardedBase(state: GameState): number {\r\n    return 99999;\r\n  }\r\n\r\n  getMonstiumAwardedBase(state: GameState): number {\r\n    return 9999;\r\n  }\r\n\r\n  getNextAction(state: GameState): BattlerAction {\r\n    const target = calculateAttackTarget(state);\r\n    if (getEnemyTurnCounter(state) % 5 == 0 && Math.random() < 0.5) {\r\n      return {\r\n        name: t(\"Wide Tsunami\"),\r\n        delay: this.getAttackDelay(state) * 3,\r\n        transform: (state) => {\r\n          state = grantTemporaryEffect(Wet.getId(), 60, {\r\n            target: AttackTarget.Enemy,\r\n          })(state);\r\n          state = grantTemporaryEffect(Wet.getId(), 60, {\r\n            target: AttackTarget.Player,\r\n          })(state);\r\n          if (hasCurrentActiveCompanion(state)) {\r\n            state = grantTemporaryEffect(Wet.getId(), 60, {\r\n              target: AttackTarget.Familiar,\r\n            })(state);\r\n          }\r\n          state = aoeEnemyAttackEffect(state, this.getAttack(state) * 3, {\r\n            tags: [SpellElement.Water],\r\n          });\r\n          state = modifyEnemyCurrentHP(state, -300);\r\n          state = pushCombatActionResult(state, {\r\n            id: Math.random().toString(),\r\n            damage: 300,\r\n            isCrit: false,\r\n            isHit: true,\r\n            source: AttackTarget.Enemy,\r\n            target: AttackTarget.Enemy,\r\n            tags: [],\r\n            time: getSecondsPlayed(state),\r\n          });\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n    if (\r\n      !hasTemporaryEffect(state, Wet.getId(), AttackTarget.Enemy) &&\r\n      !hasTemporaryEffect(state, Chilled.getId(), AttackTarget.Enemy)\r\n    ) {\r\n      return {\r\n        name: t(\"Soak\"),\r\n        delay: this.getAttackDelay(state) * 0.2,\r\n        transform: (state) =>\r\n          grantTemporaryEffect(Wet.getId(), 60, {\r\n            target: AttackTarget.Enemy,\r\n          })(state),\r\n      };\r\n    }\r\n    if (\r\n      !hasTemporaryEffect(\r\n        state,\r\n        HasteTemporaryEffect.getId(),\r\n        AttackTarget.Enemy,\r\n      ) &&\r\n      getCurrentEnemyHPFraction(state) < 0.5\r\n    ) {\r\n      return {\r\n        name: t(\"Haste\"),\r\n        delay: this.getAttackDelay(state) * 1.0,\r\n        transform: grantTemporaryEffect(HasteTemporaryEffect.getId(), 30, {\r\n          target: AttackTarget.Enemy,\r\n          params: { commonBuff: { AttackDelayMultiplier: 0.75 } },\r\n        }),\r\n      };\r\n    }\r\n    if (Math.random() < 0.5) {\r\n      return {\r\n        name: t(\"Splash\"),\r\n        delay: this.getAttackDelay(state) * 1.1,\r\n        transform: (state) => {\r\n          state = standardEnemyAttackEffect(\r\n            state,\r\n            this.getAttack(state) * 1.1,\r\n            {\r\n              tags: [SpellElement.Water],\r\n              cause: t(\"Splash\"),\r\n              onHit: (state, result) => {\r\n                if (result.isHit) {\r\n                  state = grantTemporaryEffect(Wet.getId(), 15, {\r\n                    target: result.target,\r\n                  })(state);\r\n                }\r\n                return state;\r\n              },\r\n            },\r\n          );\r\n\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n    return super.getNextAction(state);\r\n  }\r\n\r\n  getItemsAwardedBase(state: GameState): EnemyLoot[] {\r\n    return [\r\n      {\r\n        itemId: copperOre.getId(),\r\n        amount: 24,\r\n        chance: 1.0,\r\n      },\r\n      {\r\n        itemId: EtherealEelExtract.getId(),\r\n        amount: 1,\r\n        chance: 1.0,\r\n      },\r\n    ];\r\n  }\r\n\r\n  isBoss(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getTips(): string {\r\n    return t(\r\n      \"This eel is... it's almost as if it *wasn't there*! It is very hard to find, and it is mighty strong. **If we're not actively looking for it, we probably will not stand a chance!** That said, if we somehow ARE hunting for this enemy in particular, then we probably ARE strong enough; and in that case, this fight might not be THAT difficult... Just watch out for Wide Tsunami and avoid using Fire spells - and it'll be OK!\",\r\n    );\r\n  }\r\n}\r\n\r\nexport default new EtherealEel();\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { incrementAccumulatorVariable } from \"../../../AccumulatorVariables\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport Wildgrass from \"../../../items/material/Wildgrass\";\r\nimport { copperOre } from \"../../../items/transmute/materials/CopperOre\";\r\nimport { cotton } from \"../../../items/transmute/materials/Cotton\";\r\nimport { getResourceAmount, grantResource, Resource } from \"../../../Resources\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport { poison } from \"../../../temporaryeffects/Poison\";\r\nimport { Seared } from \"../../../temporaryeffects/Seared\";\r\nimport {\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../../temporaryeffects/TemporaryEffects\";\r\nimport { getSecondsPlayed } from \"../../../timetick/TotalTimePlayed\";\r\nimport { AttackTarget } from \"../../AttackTarget\";\r\nimport {\r\n  calculateAttackTarget,\r\n  getCurrentEnemyHPFraction,\r\n  modifyEnemyCurrentHP,\r\n  standardEnemyAttackEffect,\r\n} from \"../../Exploration\";\r\nimport { pushCombatActionResult } from \"../../ExplorationActionResult\";\r\nimport { getLastQueuedActionResult } from \"../../ExplorationUtils\";\r\nimport { BattlerAction, BattlerStats, Enemy, EnemyLoot } from \"../Enemy\";\r\n\r\nclass GoblinDoctor extends Enemy {\r\n  getId(): string {\r\n    return \"goblinDoctor\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Goblin Doctor\");\r\n  }\r\n\r\n  getBaseStats(): BattlerStats {\r\n    return {\r\n      maxHP: 1199,\r\n      attack: 60,\r\n      defense: 25,\r\n      attackDelay: 2.3,\r\n      accuracy: 100,\r\n      dodge: 100,\r\n      crit: 0,\r\n    };\r\n  }\r\n\r\n  getPicture(state: GameState) {\r\n    return require(\"./goblinDoctor.png\");\r\n  }\r\n\r\n  getLevel(): number {\r\n    return 18;\r\n  }\r\n\r\n  getCoinsAwardedBase(state: GameState): number {\r\n    return 62;\r\n  }\r\n\r\n  getMonstiumAwardedBase(state: GameState): number {\r\n    return 45;\r\n  }\r\n\r\n  getNextAction(state: GameState): BattlerAction {\r\n    const target = calculateAttackTarget(state);\r\n    if (\r\n      getResourceAmount(state, Resource.Coins) >= 250 &&\r\n      Math.random() < 0.1\r\n    ) {\r\n      return {\r\n        name: t(\"Steal Coins\"),\r\n        delay: this.getAttackDelay(state),\r\n        transform: (state) =>\r\n          grantResource(Resource.Coins, -(50 + 200 * Math.random()))(state),\r\n      };\r\n    }\r\n    if (\r\n      !hasTemporaryEffect(state, poison.getId(), target) &&\r\n      Math.random() < 0.2\r\n    ) {\r\n      return {\r\n        name: t(\"Sting\"),\r\n        delay: this.getAttackDelay(state) * 1.0,\r\n        transform: (state) => {\r\n          state = standardEnemyAttackEffect(\r\n            state,\r\n            this.getAttack(state) * 1.0,\r\n            { tags: [SpellElement.Poison] },\r\n          );\r\n          const lastActionResult = getLastQueuedActionResult(state);\r\n          if (lastActionResult.isHit) {\r\n            state = grantTemporaryEffect(poison.getId(), 12, {\r\n              target: lastActionResult.target,\r\n              params: {\r\n                magnitude: this.getAttack(state) / 16,\r\n              },\r\n            })(state);\r\n          }\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n    if (Math.random() < 0.1) {\r\n      return {\r\n        name: t(\"Sear\"),\r\n        delay: this.getAttackDelay(state) * 2.0,\r\n        transform: (state) => {\r\n          state = standardEnemyAttackEffect(\r\n            state,\r\n            this.getAttack(state) * 2.0,\r\n            { tags: [SpellElement.Fire] },\r\n          );\r\n          const lastActionResult = getLastQueuedActionResult(state);\r\n          if (lastActionResult.isHit) {\r\n            state = grantTemporaryEffect(Seared.getId(), 12, {\r\n              target: lastActionResult.target,\r\n            })(state);\r\n          }\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n    if (\r\n      hasTemporaryEffect(state, Seared.getId(), target) &&\r\n      Math.random() < 0.8\r\n    ) {\r\n      return {\r\n        name: t(\"Air Blast\"),\r\n        delay: this.getAttackDelay(state) * 0.5,\r\n        transform: (state) => {\r\n          state = standardEnemyAttackEffect(\r\n            state,\r\n            this.getAttack(state) * 0.7,\r\n            { tags: [SpellElement.Air] },\r\n          );\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n    if (Math.random() < 0.2) {\r\n      return {\r\n        name: t(\"Fireball\"),\r\n        delay: this.getAttackDelay(state) * 1.5,\r\n        transform: (state) => {\r\n          state = standardEnemyAttackEffect(\r\n            state,\r\n            this.getAttack(state) * 1.5,\r\n            { tags: [SpellElement.Fire] },\r\n          );\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n    if (Math.random() < 0.2 && getCurrentEnemyHPFraction(state) < 1.0) {\r\n      return {\r\n        name: t(\"Droplet of Healing\"),\r\n        delay: this.getAttackDelay(state) * 1.0,\r\n        transform: (state) => {\r\n          const healAmt = this.getMaxHP(state) * (0.05 + Math.random() * 0.025);\r\n          state = modifyEnemyCurrentHP(state, healAmt);\r\n          const actionResult = {\r\n            id: Math.random().toString(),\r\n            damage: -healAmt,\r\n            isCrit: false,\r\n            isHit: true,\r\n            time: getSecondsPlayed(state),\r\n            source: AttackTarget.Enemy,\r\n            target: AttackTarget.Enemy,\r\n            tags: [],\r\n          };\r\n          state = pushCombatActionResult(state, actionResult);\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n    return super.getNextAction(state);\r\n  }\r\n\r\n  getItemsAwardedBase(state: GameState): EnemyLoot[] {\r\n    return [\r\n      {\r\n        itemId: copperOre.getId(),\r\n        amount: 2,\r\n        chance: 1.0,\r\n      },\r\n      {\r\n        itemId: cotton.getId(),\r\n        amount: 2,\r\n        chance: 0.2,\r\n      },\r\n      {\r\n        itemId: Wildgrass.getId(),\r\n        amount: 1,\r\n        chance: 0.8,\r\n      },\r\n    ];\r\n  }\r\n\r\n  onDeath(\r\n    state: GameState,\r\n    isFromCreatures: boolean,\r\n    familiarId?: string,\r\n  ): GameState {\r\n    state = super.onDeath(state, isFromCreatures, familiarId);\r\n    if (!isFromCreatures) {\r\n      state = incrementAccumulatorVariable(state, \"goblinKills\", 1);\r\n    }\r\n    return state;\r\n  }\r\n}\r\n\r\nexport default new GoblinDoctor();\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { poison } from \"../../../temporaryeffects/Poison\";\r\nimport { TemporaryEffect } from \"../../../temporaryeffects/TemporaryEffect\";\r\nimport {\r\n  clearTemporaryEffect,\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"../../../temporaryeffects/TemporaryEffects\";\r\nimport { getSecondsPlayed } from \"../../../timetick/TotalTimePlayed\";\r\nimport { AttackTarget } from \"../../AttackTarget\";\r\nimport { setDungeonFloorCompleted } from \"../../dungeons/Dungeons\";\r\nimport {\r\n  calculateAttackTarget,\r\n  drainingEnemyAttackEffect,\r\n  getCurrentEnemyHPFraction,\r\n  modifyEnemyCurrentHP,\r\n  standardEnemyAttackEffect,\r\n} from \"../../Exploration\";\r\nimport { pushCombatActionResult } from \"../../ExplorationActionResult\";\r\nimport { Enemies, getCurrentEnemy } from \"../Enemies\";\r\nimport { BattlerAction, BattlerStats, Enemy, EnemyLoot } from \"../Enemy\";\r\n\r\nclass DoubleTroubleTemporaryEffect extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"doubleTrouble\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Double Trouble\");\r\n  }\r\n  isDispellable(): boolean {\r\n    return false;\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"Transforms into a different form\");\r\n  }\r\n}\r\n\r\nclass BotanicalSwarmTemporaryEffect extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"botanicalSwarm\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Botanical Swarm\");\r\n  }\r\n  isDispellable(): boolean {\r\n    return false;\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"Transforms into a different form\");\r\n  }\r\n}\r\n\r\nconst doubleTroubleTemporaryEffect = new DoubleTroubleTemporaryEffect();\r\nconst botanicalSwarmTemporaryEffect = new BotanicalSwarmTemporaryEffect();\r\n\r\nclass ManEatingPlant extends Enemy {\r\n  getId(): string {\r\n    return \"manEatingPlant\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Man-Eating Plant\");\r\n  }\r\n\r\n  getBaseStats(): BattlerStats {\r\n    return {\r\n      maxHP: 8000,\r\n      attack: 60,\r\n      defense: 50,\r\n      attackDelay: 2.8,\r\n      accuracy: 100,\r\n      dodge: 100,\r\n      crit: 0,\r\n    };\r\n  }\r\n\r\n  getPhase(state: GameState): number {\r\n    if (getCurrentEnemy(state) != this) {\r\n      return 1;\r\n    }\r\n    if (\r\n      hasTemporaryEffect(\r\n        state,\r\n        botanicalSwarmTemporaryEffect.getId(),\r\n        AttackTarget.Enemy,\r\n      )\r\n    ) {\r\n      return 3;\r\n    }\r\n    if (\r\n      hasTemporaryEffect(\r\n        state,\r\n        doubleTroubleTemporaryEffect.getId(),\r\n        AttackTarget.Enemy,\r\n      )\r\n    ) {\r\n      return 2;\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  getPicture(state: GameState) {\r\n    switch (this.getPhase(state)) {\r\n      case 3:\r\n        return require(\"./manEatingPlant3.png\");\r\n      case 2:\r\n        return require(\"./manEatingPlant2.png\");\r\n      default:\r\n        return require(\"./manEatingPlant.png\");\r\n    }\r\n  }\r\n\r\n  getLevel(): number {\r\n    return 20;\r\n  }\r\n\r\n  getCoinsAwardedBase(state: GameState): number {\r\n    return 500;\r\n  }\r\n\r\n  getMonstiumAwardedBase(state: GameState): number {\r\n    return 200;\r\n  }\r\n\r\n  getNextActionPhase3(state: GameState): BattlerAction {\r\n    if (Math.random() < 0.4) {\r\n      return {\r\n        name: t(\"Triple Absorb\"),\r\n        delay: this.getAttackDelay(state) * 1.5,\r\n        transform: (state: GameState) => {\r\n          state = drainingEnemyAttackEffect(state, this.getAttack(state) * 0.7);\r\n          state = drainingEnemyAttackEffect(state, this.getAttack(state) * 0.7);\r\n          state = drainingEnemyAttackEffect(state, this.getAttack(state) * 0.7);\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n\r\n    return {\r\n      name: t(\"Triple Attack\"),\r\n      delay: this.getAttackDelay(state) * 1.2,\r\n      transform: (state) => {\r\n        state = standardEnemyAttackEffect(state, this.getAttack(state) * 0.7);\r\n        state = standardEnemyAttackEffect(state, this.getAttack(state) * 0.7);\r\n        state = standardEnemyAttackEffect(state, this.getAttack(state) * 0.7);\r\n        return state;\r\n      },\r\n    };\r\n  }\r\n\r\n  getNextActionPhase2(state: GameState): BattlerAction {\r\n    const target = calculateAttackTarget(state);\r\n    if (\r\n      !hasTemporaryEffect(state, poison.getId(), target) &&\r\n      Math.random() < 0.1\r\n    ) {\r\n      return {\r\n        name: t(\"Slow-Acting Poison\"),\r\n        delay: this.getAttackDelay(state) * 1.4,\r\n        transform: (state) => {\r\n          const target = calculateAttackTarget(state);\r\n          state = grantTemporaryEffect(poison.getId(), 60, {\r\n            target,\r\n            params: {\r\n              magnitude: this.getAttack(state) / 20,\r\n            },\r\n          })(state);\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n\r\n    if (Math.random() < 0.4) {\r\n      return {\r\n        name: t(\"Double Absorb\"),\r\n        delay: this.getAttackDelay(state) * 1.3,\r\n        transform: (state: GameState) => {\r\n          state = drainingEnemyAttackEffect(state, this.getAttack(state) * 0.8);\r\n          state = drainingEnemyAttackEffect(state, this.getAttack(state) * 0.8);\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n\r\n    return {\r\n      name: t(\"Double Attack\"),\r\n      delay: this.getAttackDelay(state) * 1.1,\r\n      transform: (state) => {\r\n        state = standardEnemyAttackEffect(state, this.getAttack(state) * 0.8);\r\n        state = standardEnemyAttackEffect(state, this.getAttack(state) * 0.8);\r\n        return state;\r\n      },\r\n    };\r\n  }\r\n\r\n  getNextAction(state: GameState): BattlerAction {\r\n    const phase = this.getPhase(state);\r\n    if (getCurrentEnemyHPFraction(state) < 0.2 && phase < 3) {\r\n      // Switch to phase 3\r\n      return {\r\n        name: t(\"Mutate\"),\r\n        delay: this.getAttackDelay(state) * 2.0,\r\n        transform: (state) => {\r\n          state = grantTemporaryEffect(\r\n            botanicalSwarmTemporaryEffect.getId(),\r\n            600,\r\n            {\r\n              target: AttackTarget.Enemy,\r\n            },\r\n          )(state);\r\n          state = clearTemporaryEffect(\r\n            doubleTroubleTemporaryEffect.getId(),\r\n            AttackTarget.Enemy,\r\n          )(state);\r\n          const healAmt = this.getMaxHP(state) * 0.2;\r\n          state = modifyEnemyCurrentHP(state, healAmt);\r\n          const actionResult = {\r\n            id: Math.random().toString(),\r\n            damage: -healAmt,\r\n            isCrit: false,\r\n            isHit: true,\r\n            time: getSecondsPlayed(state),\r\n            source: AttackTarget.Enemy,\r\n            target: AttackTarget.Enemy,\r\n            tags: [],\r\n          };\r\n          state = pushCombatActionResult(state, actionResult);\r\n          return state;\r\n        },\r\n      };\r\n    } else if (getCurrentEnemyHPFraction(state) < 0.6 && phase < 2) {\r\n      // Switch to phase 2\r\n      return {\r\n        name: t(\"Mutate\"),\r\n        delay: this.getAttackDelay(state) * 1.5,\r\n        transform: (state) => {\r\n          state = grantTemporaryEffect(\r\n            doubleTroubleTemporaryEffect.getId(),\r\n            600,\r\n            {\r\n              target: AttackTarget.Enemy,\r\n            },\r\n          )(state);\r\n          state = clearTemporaryEffect(\r\n            botanicalSwarmTemporaryEffect.getId(),\r\n            AttackTarget.Enemy,\r\n          )(state);\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n\r\n    if (phase == 3) {\r\n      return this.getNextActionPhase3(state);\r\n    } else if (phase == 2) {\r\n      return this.getNextActionPhase2(state);\r\n    }\r\n\r\n    const target = calculateAttackTarget(state);\r\n\r\n    if (\r\n      !hasTemporaryEffect(state, poison.getId(), target) &&\r\n      Math.random() < 0.2\r\n    ) {\r\n      return {\r\n        name: t(\"Deadly Poison\"),\r\n        delay: this.getAttackDelay(state) * 1.2,\r\n        transform: (state) => {\r\n          const target = calculateAttackTarget(state);\r\n          state = grantTemporaryEffect(poison.getId(), 12, {\r\n            target,\r\n            params: {\r\n              magnitude: this.getAttack(state) / 6,\r\n            },\r\n          })(state);\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n\r\n    if (Math.random() < 0.4) {\r\n      return {\r\n        name: t(\"Absorb\"),\r\n        delay: this.getAttackDelay(state) * 1.1,\r\n        transform: (state: GameState) => {\r\n          state = drainingEnemyAttackEffect(state, this.getAttack(state));\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n\r\n    return {\r\n      name: t(\"Attack\"),\r\n      delay: this.getAttackDelay(state),\r\n      transform: (state) =>\r\n        standardEnemyAttackEffect(state, this.getAttack(state)),\r\n    };\r\n  }\r\n\r\n  isBoss(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getBackdropColor(): string {\r\n    return \"#84a\";\r\n  }\r\n\r\n  getItemsAwardedBase(state: GameState): EnemyLoot[] {\r\n    return [];\r\n  }\r\n\r\n  onDeath(\r\n    state: GameState,\r\n    isFromCreatures: boolean,\r\n    familiarId?: string,\r\n  ): GameState {\r\n    state = super.onDeath(state, isFromCreatures, familiarId);\r\n    state = setDungeonFloorCompleted(state, \"sewerHideout\");\r\n    return state;\r\n  }\r\n\r\n  getTips(): string {\r\n    return t(\r\n      \"This giant plant is unbelievably strong. It might be the hardest fight we have done so far. Very strong attacks, very strong poison. Using Antidote (needs Poison Lv7) can certainly help us here, too, as we can neutralize the very strong poison it has. But the worst part is that it mutates into even more dangerous forms eventually! I wonder if higher :defense: would help us on the later forms...\",\r\n    );\r\n  }\r\n}\r\n\r\nexport const manEatingPlant = new ManEatingPlant();\r\n\r\nexport function loadManEatingPlant() {\r\n  TemporaryEffects.register(doubleTroubleTemporaryEffect);\r\n  TemporaryEffects.register(botanicalSwarmTemporaryEffect);\r\n  Enemies.register(manEatingPlant);\r\n}\r\n","import { AttackTarget } from \"../../../exploration/AttackTarget\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { TemporaryEffect } from \"../../../temporaryeffects/TemporaryEffect\";\r\nimport {\r\n  clearTemporaryEffect,\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../../temporaryeffects/TemporaryEffects\";\r\nimport { ItemParams } from \"../../Item\";\r\nimport { PouchItem } from \"../PouchItem\";\r\n\r\n// Note: This class expects an action effect called \"duration\"\r\n// It will pass all other item effects as params to the temporary effect\r\nexport abstract class BuffingPouchItem extends PouchItem {\r\n  abstract getTemporaryEffect(): TemporaryEffect;\r\n\r\n  getId(): string {\r\n    return this.getTemporaryEffect().getId();\r\n  }\r\n\r\n  getPicture() {\r\n    return this.getTemporaryEffect().getIcon();\r\n  }\r\n\r\n  getBaseName(params: ItemParams): string {\r\n    return this.getTemporaryEffect().getDisplayName();\r\n  }\r\n\r\n  getTarget() {\r\n    return AttackTarget.Player;\r\n  }\r\n\r\n  doPouchItemEffect(state: GameState, params: ItemParams): GameState {\r\n    const { duration, ...other } = this.getItemEffects(state, params);\r\n    state = grantTemporaryEffect(this.getTemporaryEffect().getId(), duration, {\r\n      target: this.getTarget(),\r\n      params: other,\r\n    })(state);\r\n    return state;\r\n  }\r\n\r\n  doCleanup(state: GameState, params: ItemParams): GameState {\r\n    state = super.doCleanup(state, params);\r\n    state = clearTemporaryEffect(\r\n      this.getTemporaryEffect().getId(),\r\n      this.getTarget(),\r\n    )(state);\r\n    return state;\r\n  }\r\n\r\n  shouldAutoUse(state: GameState, params: ItemParams): boolean {\r\n    return !hasTemporaryEffect(\r\n      state,\r\n      this.getTemporaryEffect().getId(),\r\n      this.getTarget(),\r\n    );\r\n  }\r\n}\r\n","import { formatNumber } from \"../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../utils/I18n\";\r\nimport { ActionEffect } from \"../../../action/Action\";\r\nimport { AttackTarget } from \"../../../exploration/AttackTarget\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { Resource } from \"../../../Resources\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport { poison } from \"../../../temporaryeffects/Poison\";\r\nimport { TemporaryEffect } from \"../../../temporaryeffects/TemporaryEffect\";\r\nimport { TransformationTags } from \"../../../transformation/TransformationTags\";\r\nimport { ItemParams } from \"../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../EquippableItem\";\r\nimport { BuffingPouchItem } from \"./BuffingPouchItem\";\r\n\r\nclass VenomousBrew extends BuffingPouchItem {\r\n  getId(): string {\r\n    return \"venomousBrew\";\r\n  }\r\n\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Venomous Brew\");\r\n  }\r\n\r\n  getPicture() {\r\n    return require(\"./venomousBrew.png\");\r\n  }\r\n\r\n  getTemporaryEffect(): TemporaryEffect {\r\n    return poison;\r\n  }\r\n\r\n  getTarget(): AttackTarget {\r\n    return AttackTarget.Enemy;\r\n  }\r\n\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\"A toxic compound. Holds a potent poison.\");\r\n  }\r\n\r\n  protected getBaseItemEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 30,\r\n        tags: [TransformationTags.TemporaryEffectMagnitude],\r\n      },\r\n      duration: {\r\n        value: 30,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n      },\r\n    };\r\n  }\r\n\r\n  getEffect(state: GameState, params: ItemParams): string | undefined {\r\n    const effects = this.getItemEffects(state, params);\r\n    const explanations = this.getItemEffectExplanations(state, params);\r\n\r\n    return t(\r\n      'Apply ^-{{magnitude}}^<{{explanation}}>:hp:/sec \"Poison\" for ^{{duration}}^<{{durationExplanation}}> sec',\r\n      {\r\n        magnitude: formatNumber(effects.magnitude),\r\n        explanation: explanations?.magnitude,\r\n        duration: formatNumber(Math.floor(effects.duration)),\r\n        durationExplanation: explanations?.duration,\r\n      },\r\n    );\r\n  }\r\n\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 700;\r\n  }\r\n\r\n  getUsesPerCombatBase(params: ItemParams): number {\r\n    return 3;\r\n  }\r\n}\r\n\r\nexport const venomousBrew = new VenomousBrew();\r\n\r\nclass TransmuteVenomousBrew extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return venomousBrew;\r\n  }\r\n\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Poison: 10,\r\n    };\r\n  }\r\n\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 300,\r\n        PoisonEssence: 3500,\r\n      },\r\n      items: {\r\n        elementalShardWater: 5,\r\n        venomPowder: 10,\r\n      },\r\n    };\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Poison;\r\n  }\r\n}\r\n\r\nexport const transmuteVenomousBrew = new TransmuteVenomousBrew();\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { venomousBrew } from \"../../../items/equipment/pouch/VenomousBrew\";\r\nimport VenomPowder from \"../../../items/material/VenomPowder\";\r\nimport { cotton } from \"../../../items/transmute/materials/Cotton\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport { poison } from \"../../../temporaryeffects/Poison\";\r\nimport {\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../../temporaryeffects/TemporaryEffects\";\r\nimport { weakened } from \"../../../temporaryeffects/Weakened\";\r\nimport {\r\n  calculateAttackTarget,\r\n  standardEnemyAttackEffect,\r\n} from \"../../Exploration\";\r\nimport { getLastQueuedActionResult } from \"../../ExplorationUtils\";\r\nimport { BattlerAction, BattlerStats, Enemy, EnemyLoot } from \"../Enemy\";\r\n\r\nclass VenomousSpider extends Enemy {\r\n  getId(): string {\r\n    return \"venomousSpider\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Venomous Spider\");\r\n  }\r\n\r\n  getBaseStats(): BattlerStats {\r\n    return {\r\n      maxHP: 1100,\r\n      attack: 57,\r\n      defense: 10,\r\n      attackDelay: 1.5,\r\n      accuracy: 100,\r\n      dodge: 100,\r\n      crit: 0,\r\n    };\r\n  }\r\n\r\n  getPicture(state: GameState) {\r\n    return require(\"./venomousSpider.png\");\r\n  }\r\n\r\n  getLevel(): number {\r\n    return 17;\r\n  }\r\n\r\n  getCoinsAwardedBase(state: GameState): number {\r\n    return 72;\r\n  }\r\n\r\n  getMonstiumAwardedBase(state: GameState): number {\r\n    return 38;\r\n  }\r\n\r\n  getNextAction(state: GameState): BattlerAction {\r\n    const target = calculateAttackTarget(state);\r\n    if (\r\n      !hasTemporaryEffect(state, weakened.getId(), target) &&\r\n      Math.random() < 0.3\r\n    ) {\r\n      return {\r\n        name: t(\"Debilitating Venom\"),\r\n        delay: this.getAttackDelay(state) * 1.0,\r\n        transform: (state) => {\r\n          state = standardEnemyAttackEffect(\r\n            state,\r\n            this.getAttack(state) * 1.0,\r\n            { tags: [SpellElement.Poison] },\r\n          );\r\n          const lastActionResult = getLastQueuedActionResult(state);\r\n          if (lastActionResult.isHit) {\r\n            state = grantTemporaryEffect(weakened.getId(), 18, {\r\n              target: lastActionResult.target,\r\n              params: {\r\n                commonBuff: { AttackMultiplier: 0.7 },\r\n              },\r\n            })(state);\r\n          }\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n    if (\r\n      !hasTemporaryEffect(state, poison.getId(), target) &&\r\n      Math.random() < 0.2\r\n    ) {\r\n      return {\r\n        name: t(\"Sting\"),\r\n        delay: this.getAttackDelay(state) * 1.0,\r\n        transform: (state) => {\r\n          state = standardEnemyAttackEffect(\r\n            state,\r\n            this.getAttack(state) * 1.0,\r\n            { tags: [SpellElement.Poison] },\r\n          );\r\n          const lastActionResult = getLastQueuedActionResult(state);\r\n          if (lastActionResult.isHit) {\r\n            state = grantTemporaryEffect(poison.getId(), 12, {\r\n              target: lastActionResult.target,\r\n              params: {\r\n                magnitude: this.getAttack(state) / 12,\r\n              },\r\n            })(state);\r\n          }\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n    if (Math.random() < 0.1) {\r\n      return {\r\n        name: t(\"Hop\"),\r\n        delay: this.getAttackDelay(state),\r\n        transform: (state) => state,\r\n      };\r\n    }\r\n    return super.getNextAction(state);\r\n  }\r\n\r\n  getItemsAwardedBase(state: GameState): EnemyLoot[] {\r\n    return [\r\n      {\r\n        itemId: VenomPowder.getId(),\r\n        amount: 1,\r\n        chance: 0.5,\r\n      },\r\n      {\r\n        itemId: cotton.getId(),\r\n        amount: 2,\r\n        chance: 0.35,\r\n      },\r\n      {\r\n        itemId: venomousBrew.getId(),\r\n        amount: 1,\r\n        chance: 0.01,\r\n      },\r\n    ];\r\n  }\r\n}\r\n\r\nexport default new VenomousSpider();\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { Enemy } from \"../../enemies/Enemy\";\r\nimport EtherealEel from \"../../enemies/sewers/EtherealEel\";\r\nimport GoblinDoctor from \"../../enemies/sewers/GoblinDoctor\";\r\nimport GoblinSharpshooter from \"../../enemies/sewers/GoblinSharpshooter\";\r\nimport { manEatingPlant } from \"../../enemies/sewers/ManEatingPlant\";\r\nimport Sicklefish from \"../../enemies/sewers/Sicklefish\";\r\nimport VenomousSpider from \"../../enemies/sewers/VenomousSpider\";\r\nimport {\r\n  DungeonFloor,\r\n  ExplorationPossibility,\r\n  encounterEnemy,\r\n} from \"../DungeonFloor\";\r\nimport { DungeonFloors, isDungeonFloorCompletedThisRun } from \"../Dungeons\";\r\n\r\nconst EXPLORATION_POSSIBILITIES = [\r\n  {\r\n    weight: 30,\r\n    transforms: encounterEnemy(GoblinSharpshooter),\r\n  },\r\n  {\r\n    weight: 100,\r\n    transforms: encounterEnemy(GoblinDoctor),\r\n  },\r\n  {\r\n    weight: 20,\r\n    transforms: encounterEnemy(Sicklefish),\r\n  },\r\n  {\r\n    weight: 100,\r\n    transforms: encounterEnemy(VenomousSpider),\r\n  },\r\n  {\r\n    weight: 1,\r\n    transforms: encounterEnemy(EtherealEel),\r\n  },\r\n];\r\nclass SewerHideout extends DungeonFloor {\r\n  getId(): string {\r\n    return \"sewerHideout\";\r\n  }\r\n  getFloorName(): string {\r\n    return t(\"Sewer Hideout\");\r\n  }\r\n  getBoss(state: GameState): Enemy {\r\n    return manEatingPlant;\r\n  }\r\n  getBreedingLevel(): number {\r\n    return 16;\r\n  }\r\n  isMainStoryDungeonFloor(): boolean {\r\n    return true;\r\n  }\r\n  getExplorationRequiredTimeSecBase(): number {\r\n    return 5.5;\r\n  }\r\n  _getExplorationSuccessesForBossBase(): number {\r\n    return 30;\r\n  }\r\n  getBaseExplorationPossibilities(state: GameState): ExplorationPossibility[] {\r\n    return EXPLORATION_POSSIBILITIES;\r\n  }\r\n  isUnlocked(state: GameState): boolean {\r\n    return isDungeonFloorCompletedThisRun(state, \"sewerHazardousSector\");\r\n  }\r\n  getNextFloor(state: GameState): DungeonFloor {\r\n    // Indirect reference due to demo\r\n    return DungeonFloors.getByIdNullable(\"vastDesertFloor\");\r\n  }\r\n}\r\n\r\nexport default new SewerHideout();\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { Enemy } from \"../../enemies/Enemy\";\r\nimport Goblin from \"../../enemies/sewers/Goblin\";\r\nimport GoblinSharpshooter from \"../../enemies/sewers/GoblinSharpshooter\";\r\nimport SewerFly from \"../../enemies/sewers/SewerFly\";\r\nimport Sicklefish from \"../../enemies/sewers/Sicklefish\";\r\nimport SludgeMass from \"../../enemies/sewers/SludgeMass\";\r\nimport {\r\n  DungeonFloor,\r\n  encounterEnemy,\r\n  ExplorationPossibility,\r\n} from \"../DungeonFloor\";\r\nimport { isDungeonFloorCompletedThisRun } from \"../Dungeons\";\r\nimport SewerHideout from \"./SewerHideout\";\r\n\r\nconst EXPLORATION_POSSIBILITIES = [\r\n  {\r\n    weight: 70,\r\n    transforms: encounterEnemy(Goblin),\r\n  },\r\n  {\r\n    weight: 60,\r\n    transforms: encounterEnemy(GoblinSharpshooter),\r\n  },\r\n  {\r\n    weight: 80,\r\n    transforms: encounterEnemy(Sicklefish),\r\n  },\r\n  {\r\n    weight: 80,\r\n    transforms: encounterEnemy(SewerFly),\r\n  },\r\n];\r\nclass SewerHazardousSector extends DungeonFloor {\r\n  getId(): string {\r\n    return \"sewerHazardousSector\";\r\n  }\r\n  getFloorName(): string {\r\n    return t(\"Hazardous Sector\");\r\n  }\r\n  getBoss(state: GameState): Enemy {\r\n    return SludgeMass;\r\n  }\r\n  getBreedingLevel(): number {\r\n    return 13;\r\n  }\r\n  isMainStoryDungeonFloor(): boolean {\r\n    return true;\r\n  }\r\n  getExplorationRequiredTimeSecBase(): number {\r\n    return 5.25;\r\n  }\r\n  _getExplorationSuccessesForBossBase(): number {\r\n    return 30;\r\n  }\r\n  getBaseExplorationPossibilities(state: GameState): ExplorationPossibility[] {\r\n    return EXPLORATION_POSSIBILITIES;\r\n  }\r\n  getNextFloor(state: GameState): DungeonFloor {\r\n    return SewerHideout;\r\n  }\r\n  isUnlocked(state: GameState): boolean {\r\n    return isDungeonFloorCompletedThisRun(state, \"sewerEntrance\");\r\n  }\r\n}\r\n\r\nexport default new SewerHazardousSector();\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { Flag } from \"../../../Flag\";\r\nimport { hasFlag } from \"../../../Flags\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { Enemy } from \"../../enemies/Enemy\";\r\nimport EvolvedSlime from \"../../enemies/sewers/EvolvedSlime\";\r\nimport Goblin from \"../../enemies/sewers/Goblin\";\r\nimport MutatedFish from \"../../enemies/sewers/MutatedFish\";\r\nimport PoisonousToad from \"../../enemies/sewers/PoisonousToad\";\r\nimport SewerFish from \"../../enemies/sewers/SewerFish\";\r\nimport {\r\n  DungeonFloor,\r\n  encounterEnemy,\r\n  ExplorationPossibility,\r\n} from \"../DungeonFloor\";\r\nimport SewerHazardousSector from \"./SewerHazardousSector\";\r\n\r\nconst EXPLORATION_POSSIBILITIES = [\r\n  {\r\n    weight: 100,\r\n    transforms: encounterEnemy(EvolvedSlime),\r\n  },\r\n  {\r\n    weight: 70,\r\n    transforms: encounterEnemy(PoisonousToad),\r\n  },\r\n  {\r\n    weight: 70,\r\n    transforms: encounterEnemy(SewerFish),\r\n  },\r\n  {\r\n    weight: 10,\r\n    transforms: encounterEnemy(Goblin),\r\n  },\r\n];\r\nclass SewerEntrance extends DungeonFloor {\r\n  getId(): string {\r\n    return \"sewerEntrance\";\r\n  }\r\n  getFloorName(): string {\r\n    return t(\"Sewer Entrance\");\r\n  }\r\n  getBoss(state: GameState): Enemy {\r\n    return MutatedFish;\r\n  }\r\n  getBreedingLevel(): number {\r\n    return 10;\r\n  }\r\n  isMainStoryDungeonFloor(): boolean {\r\n    return true;\r\n  }\r\n  getExplorationRequiredTimeSecBase(): number {\r\n    return 5.0;\r\n  }\r\n  _getExplorationSuccessesForBossBase(): number {\r\n    return 30;\r\n  }\r\n  getBaseExplorationPossibilities(state: GameState): ExplorationPossibility[] {\r\n    return EXPLORATION_POSSIBILITIES;\r\n  }\r\n  getNextFloor(state: GameState): DungeonFloor {\r\n    return SewerHazardousSector;\r\n  }\r\n  isUnlocked(state: GameState): boolean {\r\n    return hasFlag(state, Flag.SewersUnlocked);\r\n  }\r\n}\r\n\r\nexport default new SewerEntrance();\r\n","import { formatNumber } from \"../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../utils/I18n\";\r\nimport { Building } from \"../../../buildings/Building\";\r\nimport { getBuildingAmount } from \"../../../buildings/Buildings\";\r\nimport { essenceCatalyst } from \"../../../buildings/catalysts/EssenceCatalyst\";\r\nimport { ManaSpout } from \"../../../buildings/mana/ManaSpout\";\r\nimport { SaleStall } from \"../../../buildings/SaleStall\";\r\nimport { essenceStorage } from \"../../../buildings/storages/EssenceStorage\";\r\nimport { ManaShard } from \"../../../buildings/storages/ManaShard\";\r\nimport SewerEntrance from \"../../../exploration/dungeons/sewers/SewerEntrance\";\r\nimport {\r\n  addEnemyDeathListener,\r\n  getSuccessfulExplorationsForFloor,\r\n} from \"../../../exploration/Exploration\";\r\nimport { Flag } from \"../../../Flag\";\r\nimport { setFlag } from \"../../../Flags\";\r\nimport { registerPostRetirementListener } from \"../../../Retire\";\r\nimport { Storyline } from \"../../../storylines/Storyline\";\r\nimport { Storylines } from \"../../../storylines/Storylines\";\r\nimport { buildEvent } from \"../../EventMessageBuilder\";\r\nimport { triggerEvent } from \"../../Events\";\r\nimport { EventTag } from \"../../GameEvent\";\r\n\r\nexport const FURNITURE_PRESERVATION_OPTIONS: {\r\n  furniture: Building;\r\n  amount: number;\r\n}[] = [\r\n  { furniture: ManaSpout, amount: 12 }, // 24 land\r\n  { furniture: ManaShard, amount: 8 }, // 16 land\r\n  { furniture: essenceStorage, amount: 5 }, // 25 land\r\n  { furniture: essenceCatalyst, amount: 2 }, // 20 land\r\n  { furniture: SaleStall, amount: 3 }, // 12 land\r\n];\r\n\r\nexport function loadFurniturePreservation() {\r\n  function createStorylineForOption(option: {\r\n    furniture: Building;\r\n    amount: number;\r\n  }) {\r\n    const { furniture, amount } = option;\r\n    return new Storyline(\r\n      \"furniturePreservation-\" + furniture.getId(),\r\n      t(\"Furniture Preservation ({{furniture}})\", {\r\n        furniture: furniture.getName(),\r\n      }),\r\n      210 + FURNITURE_PRESERVATION_OPTIONS.indexOf(option),\r\n      20,\r\n      (state) =>\r\n        !furniturePreservationEvent.hasTriggered(state)\r\n          ? t(\"Explore the Sewer Entrance\", {\r\n              amount: formatNumber(amount),\r\n              furniture: furniture.getName(),\r\n            })\r\n          : t(\r\n              \"This Storyline can be found in the Sewers, but you cannot get it this run\",\r\n            ),\r\n      t(\"Begin with {{amount}} {{furniture}} after retirement\", {\r\n        amount: formatNumber(amount),\r\n        furniture: furniture.getName(),\r\n      }),\r\n      (_state) => true,\r\n    );\r\n  }\r\n\r\n  const furniturePreservationStorylines: Storyline[] =\r\n    FURNITURE_PRESERVATION_OPTIONS.map((option) =>\r\n      createStorylineForOption(option),\r\n    );\r\n\r\n  const furniturePreservationEventBuilder = buildEvent(\r\n    \"furniturePreservation\",\r\n    t(\"(Storyline) Furniture Preservation\"),\r\n    [EventTag.STORYLINE],\r\n  ).setStorylineIds(\r\n    furniturePreservationStorylines.map((storyline) => storyline.getId()),\r\n  );\r\n\r\n  furniturePreservationEventBuilder.message(\r\n    t(\r\n      `While traversing the Sewers, you find a curious item on the floor: a container of some kind of... substance? Gel? Cream? You are not sure exactly what it is. There is a label, however: \"Furniture Preserver\". You decide to bring it home.\r\n      \r\nBut when you show your hired wizard, she exclaims, really excited: \"*Furniture Preserver*?! I've been wanting some of that for a very long time! It is so rare and yet so useful! Can I have it? Pretty please...?\" She proceeds to look at you with a puppy face.\r\n\r\nShe then explains herself: like the label says, this substance can be applied to furniture for it to last very, very long, almost indefinitely long.`,\r\n    ),\r\n  );\r\n\r\n  const messageBuilder = furniturePreservationEventBuilder.message(\r\n    t(\r\n      `You think about the furniture you already own. There isn't so much of this preserver. You tell your hired wizard that you are planning to use half of it, and that she can have the rest. She bursts in happiness and thanks you, full of joy.\r\n      \r\nAnd then, you have to think of how you are going to use your half...`,\r\n    ),\r\n  );\r\n\r\n  for (let idx in FURNITURE_PRESERVATION_OPTIONS) {\r\n    const option = FURNITURE_PRESERVATION_OPTIONS[idx];\r\n    const storyline = furniturePreservationStorylines[idx];\r\n    const tParams = {\r\n      amount: formatNumber(option.amount),\r\n      furniture: option.furniture.getName(),\r\n    };\r\n    messageBuilder.option(\r\n      t(\"Preserve {{amount}} {{furniture}}\", tParams),\r\n      {\r\n        transform: (state) => storyline.complete(state),\r\n        isVisible: (state) => !storyline.isCompleted(state),\r\n        isEnabled: (state) =>\r\n          getBuildingAmount(state, option.furniture) >= option.amount,\r\n      },\r\n      \"end-\" + option.furniture.getId(),\r\n    );\r\n    furniturePreservationEventBuilder\r\n      .message(\r\n        t(\r\n          `You carefully apply the preserver to your furniture. As you do, it begins to glow with a strange, yet gentle blue light. It was actually a *magical* product?\r\n      \r\nFinishing up, you give the remaining preserver to your hired wizard. She thanks you, and proceeds to quickly apply it *on herself*. You try to tell her that it's probably not going to work, but she quickly says it's none of your business...\r\n\r\n**You have completed the Storyline \"Furniture Preservation ({{furniture}})\"! In future retirements, you will begin with {{amount}} {{furniture}} already in your Home!**`,\r\n          tParams,\r\n        ),\r\n      )\r\n      .tag(\"end-\" + option.furniture.getId())\r\n      .end();\r\n  }\r\n\r\n  messageBuilder.option(t(\"Decide later\")).end();\r\n\r\n  for (let idx in FURNITURE_PRESERVATION_OPTIONS) {\r\n    Storylines.register(furniturePreservationStorylines[idx]);\r\n  }\r\n\r\n  const furniturePreservationEvent = furniturePreservationEventBuilder.build();\r\n\r\n  addEnemyDeathListener(\r\n    furniturePreservationEvent.getId() + \"Triggerer\",\r\n    (state) => {\r\n      if (\r\n        !furniturePreservationEvent.hasTriggered(state) &&\r\n        furniturePreservationStorylines.some(\r\n          (storyline) => !storyline.isCompleted(state),\r\n        ) &&\r\n        (getSuccessfulExplorationsForFloor(state, \"sewerEntrance\") >= 8 ||\r\n          SewerEntrance.canFightBoss(state))\r\n      ) {\r\n        return triggerEvent(furniturePreservationEvent)(state);\r\n      }\r\n      return state;\r\n    },\r\n  );\r\n\r\n  FURNITURE_PRESERVATION_OPTIONS.forEach((option, idx) => {\r\n    const id = option.furniture.getId();\r\n    const storyline = furniturePreservationStorylines[idx];\r\n    registerPostRetirementListener(\"furniturePreservation\" + id, (state) => {\r\n      if (storyline.isBonusActive(state)) {\r\n        state.run.buildings[id] = {\r\n          current: option.amount,\r\n          turnedOn: option.amount,\r\n        };\r\n      }\r\n\r\n      return state;\r\n    });\r\n  });\r\n\r\n  registerPostRetirementListener(\r\n    \"furniturePreservationAutoUnlockStuff\",\r\n    (state) => {\r\n      // Mana Spouts\r\n      if (furniturePreservationStorylines[0].isBonusActive(state)) {\r\n        state = setFlag(Flag.ManaSpoutsUnlocked)(state);\r\n      }\r\n      // Mana Shards\r\n      if (furniturePreservationStorylines[1].isBonusActive(state)) {\r\n        state = setFlag(Flag.ManaShardsUnlocked)(state);\r\n      }\r\n      // Essence Storages\r\n      if (furniturePreservationStorylines[2].isBonusActive(state)) {\r\n        state = setFlag(Flag.StoragesUnlocked)(state);\r\n      }\r\n      // Essence Catalysts\r\n      if (furniturePreservationStorylines[3].isBonusActive(state)) {\r\n        state = setFlag(Flag.CatalystsUnlocked)(state);\r\n      }\r\n      // Market Stalls\r\n      if (furniturePreservationStorylines[4].isBonusActive(state)) {\r\n        state = setFlag(Flag.SaleStallsUnlocked)(state);\r\n      }\r\n\r\n      return state;\r\n    },\r\n  );\r\n}\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport {\r\n  getAutocastStatusByRule,\r\n  getCurrentAutocastStrategy,\r\n} from \"../../../autocast/Autocast\";\r\nimport { Flag } from \"../../../Flag\";\r\nimport { setFlag } from \"../../../Flags\";\r\nimport { addGameStateListener } from \"../../../GameStateListeners\";\r\nimport { registerPostRetirementListener } from \"../../../Retire\";\r\nimport { Storyline } from \"../../../storylines/Storyline\";\r\nimport { Storylines } from \"../../../storylines/Storylines\";\r\nimport { buildEvent } from \"../../EventMessageBuilder\";\r\nimport { triggerEvent } from \"../../Events\";\r\nimport { EventTag } from \"../../GameEvent\";\r\n\r\nexport const permacastStoryline = new Storyline(\r\n  \"permaCast\",\r\n  t(\"Perma-Cast\"),\r\n  295,\r\n  10,\r\n  (state) =>\r\n    t(\r\n      \"Have at least 15 rules in your Wizards' current strategy that each have at least 1 Wizard assigned\",\r\n    ),\r\n  (state) => t('Unlock \"Perma-Cast\" option for spells'),\r\n  (state) => true,\r\n);\r\n\r\nexport function loadPermaCast() {\r\n  Storylines.register(permacastStoryline);\r\n  const eventBuilder = buildEvent(\"permaCast\", t(\"(Storyline) Perma-Cast\"), [\r\n    EventTag.STORYLINE,\r\n  ]).setStorylineIds(permacastStoryline.getId());\r\n\r\n  eventBuilder\r\n    .message(\r\n      t(`One more spell to be cast by Wizards! You watch as your :mana: reserves empty with each spell cast, only to quickly recover and go down again.\r\n    \r\nYour set of instructions is growing more and more complicated, and yet, you are starting to realize that many of them are simply: \"cast this spell as often as necessary or possible\".`),\r\n    )\r\n    .option(\r\n      t(\"Continue\"),\r\n      {\r\n        transform: (state) => {\r\n          state = permacastStoryline.complete(state);\r\n          state = permacastStoryline.activateBonus(state);\r\n          state = setFlag(Flag.PermaCastUnlocked)(state);\r\n          return state;\r\n        },\r\n      },\r\n      \"end\",\r\n    );\r\n  eventBuilder\r\n    .message(\r\n      t(`Those are much simpler instructions. You realize it should be a lot easier to give these instructions and quickly come up with a method. And you're just about ready to try it out...\r\n\r\n**You have completed the \"Perma-Cast\" Storyline! You have permanently unlocked a feature to \"Perma-Cast\" many spells, including things like buffs, or anything with a cooldown. You may set spells to \"Perma-Cast\" by expanding the spell's details in the Spell menu, and otherwise manage these spells in the Wizards screen!**`),\r\n    )\r\n    .tag(\"end\");\r\n\r\n  const event = eventBuilder.build();\r\n\r\n  addGameStateListener(event.getId(), (state) => {\r\n    if (\r\n      !event.hasTriggered(state) &&\r\n      !permacastStoryline.isCompleted(state) &&\r\n      getCurrentAutocastStrategy(state).rules.filter(\r\n        (rule) => getAutocastStatusByRule(state, rule)?.wizardsAssigned > 0,\r\n      ).length >= 15\r\n    ) {\r\n      return triggerEvent(event);\r\n    }\r\n  });\r\n\r\n  registerPostRetirementListener(\r\n    permacastStoryline.getId(),\r\n    (state, isMock) => {\r\n      if (permacastStoryline.isBonusActive(state)) {\r\n        state = setFlag(Flag.PermaCastUnlocked)(state);\r\n      }\r\n      return state;\r\n    },\r\n  );\r\n}\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { Storyline } from \"../../../storylines/Storyline\";\r\n\r\nconst storyline = new Storyline(\r\n  \"tictactoe\",\r\n  t(\"Tic-Tac-Toe\"),\r\n  225,\r\n  10,\r\n  t(\"Defeat the Sludge Mass in the Hazardous Sewers\"),\r\n  t(\"Unlock the Synchro screen\"),\r\n  (state) => true,\r\n);\r\n\r\nexport { storyline as TicTacToeStoryline };\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { Storyline } from \"../../../storylines/Storyline\";\r\n\r\nconst storyline = new Storyline(\r\n  \"tomeOfToxicKnowledge\",\r\n  t(\"Tome of Toxic Knowledge\"),\r\n  299,\r\n  20,\r\n  t('Clear the area \"The Hideout\" in the Sewers'),\r\n  t(\r\n    \"Unlock the Poison element and begin new retirements with Monstruariums and Monstium Catalysts unlocked\",\r\n  ),\r\n  (state) => true,\r\n);\r\n\r\nexport { storyline as TomeOfToxicKnowledge };\r\n","import { clone, valuesOfCached } from \"../utils/CoreUtils\";\r\nimport { t } from \"../utils/I18n\";\r\nimport { CombatClassesStoryline } from \"./classes/CombatClassesStoryline\";\r\nimport { hasEverTriggeredEnding } from \"./ending/Endings\";\r\nimport { convenienceStoryline } from \"./events/storyline/desert/Convenience\";\r\nimport { FURNITURE_PRESERVATION_OPTIONS } from \"./events/storyline/sewers/FurniturePreservation\";\r\nimport { permacastStoryline } from \"./events/storyline/sewers/PermaCast\";\r\nimport { TicTacToeStoryline } from \"./events/storyline/sewers/TicTacToeStoryline\";\r\nimport { TomeOfToxicKnowledge } from \"./events/storyline/sewers/TomeOfToxicKnowledgeStoryline\";\r\nimport { AttackTarget } from \"./exploration/AttackTarget\";\r\nimport { CombatStat } from \"./exploration/CombatStats\";\r\nimport { GameState, RUN_INITIAL_STATE, WORLD_INITIAL_STATE } from \"./GameState\";\r\nimport { Resource } from \"./Resources\";\r\nimport { retire } from \"./Retire\";\r\nimport { SpellElement } from \"./spells/Elements\";\r\nimport { Storyline } from \"./storylines/Storyline\";\r\nimport { Storylines } from \"./storylines/Storylines\";\r\nimport {\r\n  applyTransformations,\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"./transformation/Transformation\";\r\nimport { TransformationTags } from \"./transformation/TransformationTags\";\r\n\r\nfunction newGamePlusReset(state: GameState): GameState {\r\n  state = retire(state, false);\r\n\r\n  state.world.totalTimesResetted = 0;\r\n  return state;\r\n}\r\n\r\nexport const MAX_DIFFICULTY_LEVEL = 11;\r\nexport const MAX_BOON_LEVEL = 10;\r\n\r\nexport function getMaxPossibleDifficultyLevel(state: GameState): number {\r\n  return Math.min(\r\n    state.global.newGamePlusMax +\r\n      (hasEverTriggeredEnding(state, \"ending_1\") &&\r\n      (state.world.worldDifficultyLevel >= 10 ||\r\n        state.global.newGamePlusMax < 10)\r\n        ? 1\r\n        : 0),\r\n    MAX_DIFFICULTY_LEVEL,\r\n  );\r\n}\r\n\r\nexport const BASE_BOON_POINTS_PER_WORLD = 15;\r\nconst BOON_POINTS_TAGS = [TransformationTags.BoonPointsEarned];\r\n\r\nexport function getTotalAvailableBoonPoints(state: GameState): number {\r\n  return getNewBoonPointsAvailable(state) + state.global.totalBoonPointsEarned;\r\n}\r\n\r\nexport function getNewBoonPointsAvailable(state: GameState): number {\r\n  return applyTransformations(\r\n    BOON_POINTS_TAGS,\r\n    state,\r\n    BASE_BOON_POINTS_PER_WORLD,\r\n  );\r\n}\r\n\r\nexport function triggerNewGamePlus(\r\n  state: GameState,\r\n  sheerPowerLevel: number,\r\n  storylineOracleLevel: number,\r\n  blazingSpeedLevel: number,\r\n  worldDifficultyLevel: number,\r\n): GameState {\r\n  // First, validate the parameters\r\n  if (\r\n    worldDifficultyLevel > getMaxPossibleDifficultyLevel(state) ||\r\n    getTotalAvailableBoonPoints(state) <\r\n      getPointsRequiredForConfiguration(\r\n        sheerPowerLevel,\r\n        storylineOracleLevel,\r\n        blazingSpeedLevel,\r\n      ) ||\r\n    sheerPowerLevel > MAX_BOON_LEVEL ||\r\n    storylineOracleLevel > MAX_BOON_LEVEL ||\r\n    blazingSpeedLevel > MAX_BOON_LEVEL\r\n  ) {\r\n    // Do nothing\r\n    return state;\r\n  }\r\n\r\n  state.global.newGamePlusCount++;\r\n  state.global.newGamePlusMax = getMaxPossibleDifficultyLevel(state);\r\n  state.global.totalBoonPointsEarned += getNewBoonPointsAvailable(state);\r\n  state.world = clone(WORLD_INITIAL_STATE);\r\n  state.world.startTimestamp = Date.now();\r\n  state.world.sheerPowerLevel = sheerPowerLevel;\r\n  state.world.storylineOracleLevel = storylineOracleLevel;\r\n  state.world.blazingSpeedLevel = blazingSpeedLevel;\r\n  state.world.worldDifficultyLevel = worldDifficultyLevel;\r\n  state.run = clone(RUN_INITIAL_STATE);\r\n\r\n  // Must apply all the Storylines for the Oracle\r\n  let storylinesToGrant: Storyline[] = [];\r\n  if (storylineOracleLevel >= 10) {\r\n    const storylinesToAvoid = getStorylinesToAvoidForOracle10();\r\n    storylinesToGrant = Storylines.getAll().filter(\r\n      (storyline) => !storylinesToAvoid.includes(storyline),\r\n    );\r\n  } else {\r\n    let oracleLevel = storylineOracleLevel;\r\n    while (oracleLevel > 0) {\r\n      storylinesToGrant = storylinesToGrant.concat(\r\n        getStorylinesToUnlockForSpecificOracleLevel(oracleLevel),\r\n      );\r\n      oracleLevel--;\r\n    }\r\n  }\r\n  for (let storyline of storylinesToGrant) {\r\n    state = storyline.complete(state);\r\n    state = storyline.activateBonus(state);\r\n  }\r\n\r\n  state = newGamePlusReset(state);\r\n  return state;\r\n}\r\n\r\nfunction fibonacci(n: number) {\r\n  if (n <= 1) {\r\n    return 1;\r\n  }\r\n  return fibonacci(n - 1) + fibonacci(n - 2);\r\n}\r\n\r\nexport function getIncrementalPointsRequiredForLevel(level: number): number {\r\n  return fibonacci(3 + level);\r\n}\r\n\r\nexport function getTotalPointsRequiredForLevel(level: number): number {\r\n  let points = 0;\r\n  for (let l = 1; l <= level; l++) {\r\n    points += getIncrementalPointsRequiredForLevel(l);\r\n  }\r\n  return points;\r\n}\r\n\r\nexport function getPointsRequiredForConfiguration(\r\n  sheerPowerLevel: number,\r\n  storylineOracleLevel: number,\r\n  blazingSpeedLevel: number,\r\n): number {\r\n  return (\r\n    getTotalPointsRequiredForLevel(sheerPowerLevel) +\r\n    getTotalPointsRequiredForLevel(storylineOracleLevel) +\r\n    getTotalPointsRequiredForLevel(blazingSpeedLevel)\r\n  );\r\n}\r\n\r\nexport function getNewGamePlusCount(state: GameState): number {\r\n  return state.global.newGamePlusCount;\r\n}\r\n\r\nexport function getSheerPowerLevel(state: GameState): number {\r\n  return state.world.sheerPowerLevel;\r\n}\r\n\r\nexport function getStorylineOracleLevel(state: GameState): number {\r\n  return state.world.storylineOracleLevel;\r\n}\r\n\r\nexport function getBlazingSpeedLevel(state: GameState): number {\r\n  return state.world.blazingSpeedLevel;\r\n}\r\n\r\nexport function getWorldDifficultyLevel(state: GameState): number {\r\n  return state.world.worldDifficultyLevel;\r\n}\r\n\r\nexport function getNewGamePlusElementMaxLevelBonus(\r\n  sheerPowerLevel: number,\r\n): number {\r\n  if (sheerPowerLevel < 8) {\r\n    return Math.ceil(sheerPowerLevel / 2.0) * 10;\r\n  }\r\n  return Math.floor(sheerPowerLevel / 2.0) * 10;\r\n}\r\n\r\nexport function getNewGamePlusFamiliarMaxLevelBonus(\r\n  sheerPowerLevel: number,\r\n): number {\r\n  return sheerPowerLevel * 4;\r\n}\r\n\r\nexport function getNewGamePlusItemQualityMaxBonus(\r\n  sheerPowerLevel: number,\r\n): number {\r\n  return sheerPowerLevel * 1;\r\n}\r\n\r\nexport function getNewGamePlusStorageMultiplier(\r\n  sheerPowerLevel: number,\r\n): number {\r\n  return Math.pow(1.5, sheerPowerLevel);\r\n}\r\n\r\nexport function getNewGamePlusProductionMultiplier(\r\n  sheerPowerLevel: number,\r\n): number {\r\n  return Math.pow(1.1, sheerPowerLevel);\r\n}\r\n\r\nexport function getNewGamePlusChannelingAndSalePriceMultiplier(\r\n  blazingSpeedLevel: number,\r\n): number {\r\n  return Math.pow(1.8, blazingSpeedLevel);\r\n}\r\n\r\nexport function getNewGamePlusExpGainMultiplier(\r\n  blazingSpeedLevel: number,\r\n): number {\r\n  return Math.pow(1.6, blazingSpeedLevel);\r\n}\r\n\r\nexport function getNewGamePlusLootMultiplier(\r\n  blazingSpeedLevel: number,\r\n): number {\r\n  return Math.pow(1.3, blazingSpeedLevel);\r\n}\r\n\r\nexport function getNewGamePlusHpMultiplier(difficultyLevel: number): number {\r\n  return difficultyLevel > 10 ? 200 : Math.pow(1.6, difficultyLevel);\r\n}\r\n\r\nexport function getNewGamePlusAttackDelayMultiplier(\r\n  difficultyLevel: number,\r\n): number {\r\n  return difficultyLevel > 10 ? 0.25 : Math.pow(0.9, difficultyLevel);\r\n}\r\n\r\nexport function getNewGamePlusAccuracyAndDodgeMultiplier(\r\n  difficultyLevel: number,\r\n): number {\r\n  return difficultyLevel > 10 ? 4.0 : Math.pow(1.1, difficultyLevel);\r\n}\r\n\r\nexport function getNewGamePlusOtherStatMultiplier(\r\n  difficultyLevel: number,\r\n): number {\r\n  return difficultyLevel > 10 ? 25 : Math.pow(1.3, difficultyLevel);\r\n}\r\n\r\nexport function getNewGamePlusBoonPointsEarnedMultiplier(\r\n  difficultyLevel: number,\r\n): number {\r\n  return Math.pow(1.6, difficultyLevel);\r\n}\r\n\r\nexport function getStorylinesToUnlockForSpecificOracleLevel(\r\n  storylineOracleLevel: number,\r\n): Storyline[] {\r\n  switch (storylineOracleLevel) {\r\n    case 1:\r\n      return [\r\n        permacastStoryline,\r\n        convenienceStoryline,\r\n        Storylines.getById(\"terrainAdvantage\"),\r\n      ];\r\n    case 2:\r\n      return [\r\n        TomeOfToxicKnowledge,\r\n        Storylines.getById(\"tomeOfMentalKnowledge\"),\r\n        Storylines.getById(\"tomeOfLivingKnowledge\"),\r\n        Storylines.getById(\"tomeOfElectricalKnowledge\"),\r\n      ];\r\n    case 3:\r\n      return FURNITURE_PRESERVATION_OPTIONS.map((option) =>\r\n        Storylines.getById(\"furniturePreservation-\" + option.furniture.getId()),\r\n      ).concat([Storylines.getById(\"theBigPurchase\")]);\r\n    case 4:\r\n      return [\r\n        Storylines.getById(\"schematics\"),\r\n        Storylines.getById(\"transmutationPrayer1\"),\r\n        TicTacToeStoryline,\r\n      ];\r\n    case 5:\r\n      return [\r\n        Storylines.getById(\"tomeOfDeathlyKnowledge\"),\r\n        Storylines.getById(\"tomeOfDivineKnowledge\"),\r\n        Storylines.getById(\"mysteriousBox\"),\r\n        Storylines.getById(\"starryNight\"),\r\n      ];\r\n    case 6:\r\n      return [\r\n        Storylines.getById(\"varietyCollector\"),\r\n        Storylines.getById(\"boostingMachine\"),\r\n        Storylines.getById(\"transmutationPrayer2\"),\r\n        Storylines.getById(\"artisanOfMagic\"),\r\n      ];\r\n    case 7:\r\n      return valuesOfCached(SpellElement).map((element) =>\r\n        Storylines.getById(\"masteryOf\" + element),\r\n      );\r\n    case 8:\r\n      return [\r\n        CombatClassesStoryline,\r\n        Storylines.getById(\"ritualistsSecret\"),\r\n        Storylines.getById(\"etherealTruthWeapon\"),\r\n        Storylines.getById(\"etherealTruthGarment\"),\r\n        Storylines.getById(\"etherealTruthFootwear\"),\r\n      ];\r\n    case 9:\r\n      return [\r\n        Storylines.getById(\"blessedLand\"),\r\n        Storylines.getById(\"divineCombination\"),\r\n      ];\r\n  }\r\n  return [];\r\n}\r\n\r\nexport function getStorylinesToAvoidForOracle10() {\r\n  // Avoid any \"ending\" or \"challenge\"\r\n  return Storylines.getAll().filter(\r\n    (storyline) =>\r\n      storyline.getId().startsWith(\"ending\") ||\r\n      storyline.getId().startsWith(\"challenge\"),\r\n  );\r\n}\r\n\r\nexport function loadNewGamePlus() {\r\n  // Backend transformations related to New Game Plus\r\n  // Grant extra Boon Points if completed ending_4\r\n  registerTransformation(\r\n    [[TransformationTags.BoonPointsEarned]],\r\n    \"ending1BoonPointsEarned\",\r\n    t(\"World Not Cleared\"),\r\n    TransformationType.Multiplier,\r\n    (state) => (!hasEverTriggeredEnding(state, \"ending_1\") ? 0 : 1.0),\r\n  );\r\n\r\n  registerTransformation(\r\n    [[TransformationTags.BoonPointsEarned]],\r\n    \"ending4BoonPointsEarned\",\r\n    t(\"Transcended Humanity\"),\r\n    TransformationType.Multiplier,\r\n    (state) => (hasEverTriggeredEnding(state, \"ending_4\") ? 2.0 : 1.0),\r\n  );\r\n\r\n  // Sheer Power\r\n  registerTransformation(\r\n    [[TransformationTags.MaxElementLevel]],\r\n    \"newGamePlusMaxLevel\",\r\n    t(\"Sheer Power level\"),\r\n    TransformationType.Addition,\r\n    (state) => getNewGamePlusElementMaxLevelBonus(getSheerPowerLevel(state)),\r\n  );\r\n  registerTransformation(\r\n    [[TransformationTags.MaxFamiliarLevel]],\r\n    \"newGamePlusMaxFamiliarLevel\",\r\n    t(\"Sheer Power level\"),\r\n    TransformationType.Addition,\r\n    (state) => getNewGamePlusFamiliarMaxLevelBonus(getSheerPowerLevel(state)),\r\n  );\r\n  registerTransformation(\r\n    [[TransformationTags.ItemQualityMax]],\r\n    \"newGamePlusMaxQuality\",\r\n    t(\"Sheer Power level\"),\r\n    TransformationType.Addition,\r\n    (state) => getNewGamePlusItemQualityMaxBonus(getSheerPowerLevel(state)),\r\n  );\r\n  for (let resource in Resource) {\r\n    if (resource != Resource.Mana && resource != Resource.TimePiece) {\r\n      registerTransformation(\r\n        [[resource, TransformationTags.Cap]],\r\n        resource + \"NewGamePlusStorage\",\r\n        t(\"Sheer Power level\"),\r\n        TransformationType.Multiplier,\r\n        (state) => getNewGamePlusStorageMultiplier(getSheerPowerLevel(state)),\r\n      );\r\n    }\r\n  }\r\n  registerTransformation(\r\n    [[TransformationTags.Production]],\r\n    \"newGamePlusProduction\",\r\n    t(\"Sheer Power level\"),\r\n    TransformationType.Multiplier,\r\n    (state) => getNewGamePlusProductionMultiplier(getSheerPowerLevel(state)),\r\n  );\r\n\r\n  // Blazing Speed\r\n  registerTransformation(\r\n    [[TransformationTags.ExpGain], [TransformationTags.FamiliarExp]],\r\n    \"newGamePlusExpGain\",\r\n    t(\"Blazing Speed level\"),\r\n    TransformationType.Multiplier,\r\n    (state) => getNewGamePlusExpGainMultiplier(getBlazingSpeedLevel(state)),\r\n  );\r\n  registerTransformation(\r\n    [\r\n      [TransformationTags.ChannelingEfficiency],\r\n      [TransformationTags.ItemSalePrice],\r\n    ],\r\n    \"newGamePlusChannelingAndSalePriceGain\",\r\n    t(\"Blazing Speed level\"),\r\n    TransformationType.Multiplier,\r\n    (state) =>\r\n      getNewGamePlusChannelingAndSalePriceMultiplier(\r\n        getBlazingSpeedLevel(state),\r\n      ),\r\n  );\r\n  registerTransformation(\r\n    [[TransformationTags.Loot], [TransformationTags.LootChance]],\r\n    \"newGamePlusLootGain\",\r\n    t(\"Blazing Speed level\"),\r\n    TransformationType.Multiplier,\r\n    (state) => getNewGamePlusLootMultiplier(getBlazingSpeedLevel(state)),\r\n  );\r\n\r\n  // World Difficulty\r\n  registerTransformation(\r\n    [[AttackTarget.Enemy, CombatStat.MaxHP]],\r\n    \"newGamePlusDifficultyHP\",\r\n    t(\"World Difficulty level\"),\r\n    TransformationType.Multiplier,\r\n    (state) => getNewGamePlusHpMultiplier(getWorldDifficultyLevel(state)),\r\n  );\r\n  registerTransformation(\r\n    [[AttackTarget.Enemy, CombatStat.AttackDelay]],\r\n    \"newGamePlusDifficultyAttackDelay\",\r\n    t(\"World Difficulty level\"),\r\n    TransformationType.Multiplier,\r\n    (state) =>\r\n      getNewGamePlusAttackDelayMultiplier(getWorldDifficultyLevel(state)),\r\n  );\r\n  registerTransformation(\r\n    [\r\n      [AttackTarget.Enemy, CombatStat.Attack],\r\n      [AttackTarget.Enemy, CombatStat.Defense],\r\n    ],\r\n    \"newGamePlusEnemyStats\",\r\n    t(\"World Difficulty level\"),\r\n    TransformationType.Multiplier,\r\n    (state) =>\r\n      getNewGamePlusOtherStatMultiplier(getWorldDifficultyLevel(state)),\r\n  );\r\n  registerTransformation(\r\n    [\r\n      [AttackTarget.Enemy, CombatStat.Accuracy],\r\n      [AttackTarget.Enemy, CombatStat.Dodge],\r\n    ],\r\n    \"newGamePlusEnemyStats\",\r\n    t(\"World Difficulty level\"),\r\n    TransformationType.Multiplier,\r\n    (state) =>\r\n      getNewGamePlusAccuracyAndDodgeMultiplier(getWorldDifficultyLevel(state)),\r\n  );\r\n  registerTransformation(\r\n    [[TransformationTags.BoonPointsEarned]],\r\n    \"newGamePlusBoonPointsEarned\",\r\n    t(\"World Difficulty level\"),\r\n    TransformationType.Multiplier,\r\n    (state) =>\r\n      getNewGamePlusBoonPointsEarnedMultiplier(getWorldDifficultyLevel(state)),\r\n  );\r\n}\r\n","import moment from \"moment\";\r\nimport React, { useCallback, useMemo, useRef } from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { FlatList } from \"react-native-gesture-handler\";\r\nimport { List } from \"react-native-paper\";\r\nimport { EndingStats } from \"../../backend/GameState\";\r\nimport { addUICommand } from \"../../backend/UICommands\";\r\nimport { Challenges } from \"../../backend/challenges/Challenges\";\r\nimport { Endings } from \"../../backend/ending/Endings\";\r\nimport { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { useGameState } from \"./useGameState\";\r\n\r\nfunction EndingHistoryRow(props: {\r\n  endingData: EndingStats;\r\n  onPress: () => void;\r\n}) {\r\n  const endingData = props.endingData;\r\n  const ending = Endings.getById(endingData.endingId);\r\n  const timestamp = moment(endingData.timestamp).format(\"Y-MM-DD h:mm A\");\r\n  const worldStats =\r\n    endingData.worldsCreated > 0\r\n      ? t(\r\n          \"{{sheerPower}}/{{storylineOracle}}/{{blazingSpeed}} - D{{worldDifficulty}}\",\r\n          {\r\n            sheerPower: formatNumber(endingData.sheerPowerLevel),\r\n            storylineOracle: formatNumber(endingData.storylineOracleLevel),\r\n            blazingSpeed: formatNumber(endingData.blazingSpeedLevel),\r\n            worldDifficulty: formatNumber(endingData.worldDifficultyLevel),\r\n          },\r\n        )\r\n      : \"\";\r\n  const challengeStats =\r\n    endingData.challengeId != null\r\n      ? Challenges.getById(endingData.challengeId).getName()\r\n      : \"\";\r\n  const extraStats =\r\n    worldStats != \"\" || challengeStats != \"\"\r\n      ? t(\" ({{extraStatsText}})\", {\r\n          extraStatsText: [worldStats, challengeStats]\r\n            .filter((text) => text != \"\")\r\n            .join(t(\"; \")),\r\n        })\r\n      : \"\";\r\n  const title = t(\"{{ending}}{{extraStats}}\", {\r\n    ending: ending.title,\r\n    extraStats,\r\n  });\r\n  const description = timestamp;\r\n  return (\r\n    <List.Item\r\n      title={title}\r\n      description={description}\r\n      onPress={props.onPress}\r\n      right={() => <List.Icon icon=\"chevron-right\" />}\r\n    />\r\n  );\r\n}\r\n\r\nexport default function EndingHistoryContainer(props: {}) {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n  const endings = state.global.endingsHistory ?? [];\r\n\r\n  const renderItem = useCallback(\r\n    (params: { item: EndingStats; index: number }) => (\r\n      <EndingHistoryRow\r\n        endingData={params.item}\r\n        onPress={() =>\r\n          stateRef.current.apply((s) => {\r\n            s = addUICommand(\r\n              s,\r\n              \"endingHistoryOverride:\" +\r\n                (endings.length - 1 - params.index).toString(),\r\n            );\r\n            s = addUICommand(s, \"goToEnding\");\r\n            return s;\r\n          })\r\n        }\r\n      />\r\n    ),\r\n    [],\r\n  );\r\n\r\n  return useMemo(() => {\r\n    if (endings.length === 0) {\r\n      return null;\r\n    }\r\n    return (\r\n      <FlatList data={endings?.toReversed?.() ?? []} renderItem={renderItem} />\r\n    );\r\n  }, [endings.length]);\r\n}\r\n\r\nconst styles = StyleSheet.create({});\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { Storyline } from \"../../../storylines/Storyline\";\r\n\r\nconst storyline = new Storyline(\r\n  \"diviningTheWorld\",\r\n  t(\"Divining the World\"),\r\n  310,\r\n  30,\r\n  t(\"Reach Mind Lv10\"),\r\n  t(\r\n    \"Permanently reveal hints for Storylines depending on your Mind element level and your progression through the game\",\r\n  ),\r\n  (state) => true,\r\n);\r\n\r\nexport { storyline as DiviningTheWorld };\r\n","import {\r\n  Entypo,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n} from \"@expo/vector-icons\";\r\nimport React, { useMemo } from \"react\";\r\nimport { StyleSheet, TouchableWithoutFeedback, View } from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { DiviningTheWorld } from \"../../backend/events/storyline/desert/DiviningTheWorldStoryline\";\r\nimport { SpellElement, getElementLevel } from \"../../backend/spells/Elements\";\r\nimport { Storyline } from \"../../backend/storylines/Storyline\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { Markdown } from \"./Markdown\";\r\nimport { DescriptionViewer } from \"./Miscellaneous\";\r\nimport { Text } from \"./Text\";\r\nimport { useGameState } from \"./useGameState\";\r\n\r\nexport function StorylineContainer(props: {\r\n  storyline: Storyline;\r\n  collapsed?: boolean;\r\n  onPressExpand?: () => void;\r\n}) {\r\n  const state = useGameState();\r\n  const storyline = props.storyline;\r\n\r\n  const isCompleted = storyline.isCompleted(state);\r\n  const isBonusActive = storyline.isBonusActive(state);\r\n  const isHintRevealed = storyline.isHintRevealed(state);\r\n  const isHintUnlockable =\r\n    storyline.isHintUnlockable(state) && DiviningTheWorld.isBonusActive(state);\r\n\r\n  const isEnabled =\r\n    isCompleted || isBonusActive || isHintRevealed || isHintUnlockable;\r\n\r\n  const descriptionContainer = useMemo(() => {\r\n    let descriptionContents = t(\"???\");\r\n    if (isHintUnlockable) {\r\n      descriptionContents = t(\r\n        \"You may learn more about this Storyline if your Mind is Lv{{level}} or higher...\",\r\n        { level: storyline.mindRequirementForHint },\r\n      );\r\n    }\r\n    if (isHintRevealed) {\r\n      descriptionContents = t(\"Hint to unlock: *{{hint}}*\", {\r\n        hint: storyline.hintDescription(state),\r\n      });\r\n    }\r\n    if (isCompleted) {\r\n      descriptionContents = t(\r\n        \"You have completed this Storyline, but not all of its bonuses are active. Retire to obtain the rest!\",\r\n      );\r\n    }\r\n    if (isBonusActive) {\r\n      descriptionContents = storyline.getBonusDescription(state);\r\n    }\r\n    return (\r\n      <View style={styles.descriptionTextContainer}>\r\n        {isBonusActive ? (\r\n          <View style={styles.effectContainer}>\r\n            <Text>{t(\"Storyline completed!\")}</Text>\r\n            <Markdown>\r\n              {t(\"Bonus: **{{description}}**\", {\r\n                description: descriptionContents,\r\n              })}\r\n            </Markdown>\r\n          </View>\r\n        ) : (\r\n          <DescriptionViewer style={styles.descriptionViewer}>\r\n            {descriptionContents}\r\n          </DescriptionViewer>\r\n        )}\r\n      </View>\r\n    );\r\n  }, [\r\n    storyline.getBonusDescription(state),\r\n    isCompleted,\r\n    isBonusActive,\r\n    getElementLevel(state, SpellElement.Mind),\r\n    isHintUnlockable,\r\n    isHintRevealed,\r\n    storyline.hintDescription(state),\r\n  ]);\r\n\r\n  const theme = useTheme();\r\n\r\n  const icon = useMemo(() => {\r\n    let icon = (\r\n      <MaterialIcons\r\n        accessibilityLabel=\"Locked\"\r\n        name=\"lock\"\r\n        size={20}\r\n        color={theme.colors.onSurfaceDisabled}\r\n      />\r\n    );\r\n    if (isHintUnlockable) {\r\n      icon = (\r\n        <MaterialCommunityIcons\r\n          accessibilityLabel=\"Discoverable\"\r\n          name=\"lock-open-variant\"\r\n          size={20}\r\n          color={theme.colors.onBackground}\r\n        />\r\n      );\r\n    }\r\n    if (isHintRevealed) {\r\n      icon = (\r\n        <MaterialIcons\r\n          accessibilityLabel=\"Discovered\"\r\n          name=\"more-horiz\"\r\n          size={20}\r\n          color={theme.colors.onBackground}\r\n        />\r\n      );\r\n    }\r\n    if (isCompleted) {\r\n      icon = (\r\n        <MaterialIcons\r\n          accessibilityLabel=\"Completed but Inactive\"\r\n          name=\"error-outline\"\r\n          size={21}\r\n          color={theme.colors.onBackground}\r\n        />\r\n      );\r\n    }\r\n    if (isBonusActive) {\r\n      icon = (\r\n        <MaterialIcons\r\n          accessibilityLabel=\"Completed\"\r\n          name=\"check\"\r\n          size={20}\r\n          color={theme.colors.onBackground}\r\n        />\r\n      );\r\n    }\r\n    return icon;\r\n  }, [isHintUnlockable, isHintRevealed, isCompleted, isBonusActive, theme]);\r\n\r\n  return useMemo(() => {\r\n    return (\r\n      <View style={styles.storylineContainer} key={storyline.name}>\r\n        <TouchableWithoutFeedback\r\n          accessibilityRole=\"button\"\r\n          accessibilityHint=\"Expand\"\r\n          onPress={props.onPressExpand}\r\n        >\r\n          <View style={styles.topRowContainer}>\r\n            {icon}\r\n            <Text\r\n              h3\r\n              accessibilityRole=\"none\"\r\n              key={storyline.name}\r\n              onPress={props.onPressExpand}\r\n              style={[\r\n                styles.topContainer,\r\n                !isEnabled && styles.disabledStorylineText,\r\n              ]}\r\n            >\r\n              {isCompleted || isBonusActive\r\n                ? storyline.name\r\n                : isHintRevealed\r\n                ? t(\"{{storylineTeaser}}...\", {\r\n                    storylineTeaser: storyline.name.substring(0, 3),\r\n                  })\r\n                : t(\"???\")}\r\n            </Text>\r\n            <View style={styles.expandContainer}>\r\n              <Entypo\r\n                name={props.collapsed ? \"chevron-right\" : \"chevron-down\"}\r\n                size={24}\r\n                color={theme.colors.onBackground}\r\n              />\r\n            </View>\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n        {!props.collapsed && <View>{descriptionContainer}</View>}\r\n      </View>\r\n    );\r\n  }, [\r\n    storyline.name,\r\n    isEnabled,\r\n    isCompleted,\r\n    isBonusActive,\r\n    icon,\r\n    theme,\r\n    !props.collapsed && descriptionContainer,\r\n    props.collapsed,\r\n    props.onPressExpand,\r\n  ]);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  storylineContainer: { marginVertical: 8 },\r\n  topRowContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n  },\r\n  expandContainer: {\r\n    width: 40,\r\n  },\r\n  descriptionTextContainer: {\r\n    marginBottom: 8,\r\n    marginTop: 8,\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  descriptionViewer: { flex: 1, justifyContent: \"center\" },\r\n  effectContainer: {\r\n    flex: 1,\r\n  },\r\n  effectSubcontainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"flex-start\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  smallButtonTitle: {\r\n    fontSize: 12,\r\n  },\r\n  topContainer: {\r\n    flex: 1,\r\n    marginLeft: 8,\r\n  },\r\n  disabledStorylineText: {\r\n    color: \"#aaa\",\r\n  },\r\n});\r\n","import React, { useCallback, useMemo, useState } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { StorylineStatus } from \"../../backend/storylines/Storyline\";\r\nimport { getSortedStorylines } from \"../../backend/storylines/Storylines\";\r\nimport Divider from \"./Divider\";\r\nimport { StorylineContainer } from \"./StorylineContainer\";\r\nimport { useGameState } from \"./useGameState\";\r\n\r\ntype StorylinesContainerProps = {\r\n  onlyStorylineStatus?: StorylineStatus;\r\n};\r\n\r\nexport default function StorylinesContainer(props: StorylinesContainerProps) {\r\n  const [expandedStoryline, setExpandedStoryline] = useState(\"\");\r\n  const state = useGameState();\r\n  const onlyStorylineStatus = props.onlyStorylineStatus;\r\n  const setStorylineCallback = useCallback(\r\n    (storylineName: string) => {\r\n      if (expandedStoryline == storylineName) {\r\n        setExpandedStoryline(\"\");\r\n      } else {\r\n        setExpandedStoryline(storylineName);\r\n      }\r\n    },\r\n    [expandedStoryline],\r\n  );\r\n\r\n  const storylines = getSortedStorylines().filter(\r\n    (storyline) =>\r\n      !storyline.isHidden(state) &&\r\n      (onlyStorylineStatus == null ||\r\n        onlyStorylineStatus == storyline.getStatus(state)),\r\n  );\r\n  const storylineNameString = storylines\r\n    .map((storyline) => storyline.name)\r\n    .join(\",\");\r\n\r\n  const storylineContainers = useMemo(\r\n    () =>\r\n      storylines.map((storyline) => {\r\n        return (\r\n          <StorylineContainer\r\n            key={storyline.name}\r\n            storyline={storyline}\r\n            collapsed={expandedStoryline != storyline.name}\r\n            onPressExpand={setStorylineCallback.bind(null, storyline.name)}\r\n          />\r\n        );\r\n      }),\r\n    [storylineNameString, expandedStoryline, setExpandedStoryline],\r\n  );\r\n\r\n  return useMemo(() => {\r\n    if (storylines.length === 0) {\r\n      return null;\r\n    }\r\n    return (\r\n      <View>\r\n        <View key={storylines[0].name}>{storylineContainers[0]}</View>\r\n        {storylineContainers.slice(1).map((storylineContainer, idx) => {\r\n          return (\r\n            <View key={storylines[idx].name}>\r\n              <Divider />\r\n              {storylineContainer}\r\n            </View>\r\n          );\r\n        })}\r\n      </View>\r\n    );\r\n  }, [storylineNameString, storylineContainers]);\r\n}\r\n\r\nconst styles = StyleSheet.create({});\r\n","import moment from \"moment\";\r\nimport React, { useMemo, useState } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { Card, List } from \"react-native-paper\";\r\nimport { clearAllCaches } from \"../backend/Caching\";\r\nimport { createHypotheticalState } from \"../backend/GameState\";\r\nimport {\r\n  getBlazingSpeedLevel,\r\n  getNewGamePlusCount,\r\n  getSheerPowerLevel,\r\n  getStorylineOracleLevel,\r\n  getWorldDifficultyLevel,\r\n} from \"../backend/NewGamePlus\";\r\nimport { ActionArea } from \"../backend/action/ActionAreas\";\r\nimport { getCurrentChallenge } from \"../backend/challenges/Challenges\";\r\nimport { getCurrentCombatClass } from \"../backend/classes/CombatClasses\";\r\nimport {\r\n  getMarkdownTextForSpell,\r\n  getMarkdownTextForSpellEmpowerment,\r\n  getMarkdownTextForTransmutationSpell,\r\n} from \"../backend/events/progression/LevelUp\";\r\nimport { getVisibleTransmutationSpells } from \"../backend/items/transmute/TransmutationSpell\";\r\nimport {\r\n  SpellElement,\r\n  getElementExp,\r\n  getElementLevel,\r\n  getMaxElementLevel,\r\n  getMaxPrimaryElementLevel,\r\n  getPrimaryElements,\r\n  getRankForLevel,\r\n  getTotalExpRequiredForLevel,\r\n  getUnlockedElements,\r\n  maximumElementLevelExpMultiplier,\r\n  maximumElementLevelProductionMultiplierDx,\r\n  translateElement,\r\n} from \"../backend/spells/Elements\";\r\nimport { Spell } from \"../backend/spells/Spell\";\r\nimport { getVisibleSpellsForElement } from \"../backend/spells/Spells\";\r\nimport {\r\n  STORYLINE_STATUS_ORDER,\r\n  StorylineStatus,\r\n  translateStorylineStatus,\r\n} from \"../backend/storylines/Storyline\";\r\nimport {\r\n  getSortedStorylines,\r\n  getTotalStorylineCount,\r\n} from \"../backend/storylines/Storylines\";\r\nimport { getResearcherExpPerSecForElements } from \"../backend/study/Study\";\r\nimport { fromEntries, keysOf } from \"../utils/CoreUtils\";\r\nimport { formatNumber, formatTimeLong } from \"../utils/FormattingUtils\";\r\nimport { t } from \"../utils/I18n\";\r\nimport { Card as UtilityCard } from \"./utility/Card\";\r\nimport EndingHistoryContainer from \"./utility/EndingHistoryContainer\";\r\nimport { GameStateFreezer } from \"./utility/GameStateFreezer\";\r\nimport { Markdown } from \"./utility/Markdown\";\r\nimport { Picker } from \"./utility/Picker\";\r\nimport StorylinesContainer from \"./utility/StorylinesContainer\";\r\nimport Styles from \"./utility/Styles\";\r\nimport { Text } from \"./utility/Text\";\r\nimport { useGameState } from \"./utility/useGameState\";\r\n\r\nfunction StatsSingleElement(props: { element: SpellElement }) {\r\n  const element = props.element;\r\n  const state = useGameState();\r\n  const allElementLevels = fromEntries(\r\n    getUnlockedElements(state).map((eachElement) => [\r\n      eachElement,\r\n      getElementLevel(state, eachElement),\r\n    ]),\r\n  );\r\n\r\n  const researchEstimate = getResearcherExpPerSecForElements(state);\r\n\r\n  const currentRank = getRankForLevel(allElementLevels[element]);\r\n  const newSpellsText = useMemo(() => {\r\n    const thisLevelSpells = getVisibleSpellsForElement(\r\n      state,\r\n      element,\r\n      ActionArea.SPELL_MENU,\r\n    );\r\n    const thisLevelCrafts = getVisibleTransmutationSpells(state);\r\n    const thisLevelEmpowerments = thisLevelSpells.filter((spell) =>\r\n      spell.isEmpoweringPossible(state),\r\n    );\r\n    const currentElementLevel = getElementLevel(state, element);\r\n    let nextUnlockLevelAdd = 0;\r\n    let foundNewSpellsOrItems = false;\r\n    let extraSpells: Spell[] = [];\r\n    let extraCrafts: Spell[] = [];\r\n    let extraEmpowerments: Spell[] = [];\r\n    let fakeState = createHypotheticalState(state);\r\n    while (\r\n      !foundNewSpellsOrItems &&\r\n      currentElementLevel + nextUnlockLevelAdd < getMaxElementLevel(state)\r\n    ) {\r\n      nextUnlockLevelAdd += 1;\r\n      fakeState.run.elementExperience[element] = getTotalExpRequiredForLevel(\r\n        fakeState,\r\n        getElementLevel(state, element) + nextUnlockLevelAdd,\r\n        element,\r\n      );\r\n      fakeState = clearAllCaches(fakeState);\r\n      const nextLevelSpells = getVisibleSpellsForElement(\r\n        fakeState,\r\n        element,\r\n        ActionArea.SPELL_MENU,\r\n      );\r\n      const nextLevelTransmutations = getVisibleTransmutationSpells(fakeState);\r\n      const nextLevelEmpowerments = nextLevelSpells.filter((spell) =>\r\n        spell.isEmpoweringPossible(fakeState),\r\n      );\r\n      extraSpells = nextLevelSpells.filter(\r\n        (spell) => !thisLevelSpells.includes(spell),\r\n      );\r\n      extraCrafts = nextLevelTransmutations.filter(\r\n        (item) => !thisLevelCrafts.includes(item),\r\n      );\r\n      extraEmpowerments = nextLevelEmpowerments.filter(\r\n        (spell) => !thisLevelEmpowerments.includes(spell),\r\n      );\r\n      if (\r\n        extraSpells.length > 0 ||\r\n        extraCrafts.length > 0 ||\r\n        extraEmpowerments.length > 0\r\n      ) {\r\n        foundNewSpellsOrItems = true;\r\n      }\r\n    }\r\n    const newSpells = extraSpells.map(getMarkdownTextForSpell);\r\n    const newTransmutations = extraCrafts.map(\r\n      getMarkdownTextForTransmutationSpell.bind(null, state),\r\n    );\r\n    const newEmpowerments = extraEmpowerments.map(\r\n      getMarkdownTextForSpellEmpowerment,\r\n    );\r\n    const newUnlocks = [...newSpells, ...newEmpowerments, ...newTransmutations];\r\n\r\n    return newUnlocks.length > 0\r\n      ? t(\r\n          `Your next unlock is at level {{level}}:\r\n      \r\n{{unlocks}}`,\r\n          {\r\n            level: nextUnlockLevelAdd + currentElementLevel,\r\n            unlocks: newUnlocks.join(t(\"\\n\")),\r\n          },\r\n        )\r\n      : t(\r\n          `If you only level up this element, you will not unlock anything new!`,\r\n        );\r\n  }, [JSON.stringify(allElementLevels)]);\r\n\r\n  const nextLevelRequiredExp =\r\n    getTotalExpRequiredForLevel(\r\n      state,\r\n      getElementLevel(state, element) + 1,\r\n      element,\r\n    ) - getElementExp(state, element);\r\n\r\n  return (\r\n    <View>\r\n      <View style={styles.row}>\r\n        <Text>{t(\"Rank:\")}</Text>\r\n        <Text style={styles.valueText}>{currentRank}</Text>\r\n      </View>\r\n      <View style={styles.row}>\r\n        <Text>{t(\"Level:\")}</Text>\r\n        <Text style={styles.valueText}>{getElementLevel(state, element)}</Text>\r\n      </View>\r\n      <View style={styles.row}>\r\n        <Text>{t(\"To Next Level:\")}</Text>\r\n        <Text style={styles.valueText}>\r\n          {formatNumber(nextLevelRequiredExp)}\r\n        </Text>\r\n      </View>\r\n      <View style={styles.row}>\r\n        <Text>{t(\"To Next Level (Time):\")}</Text>\r\n        <Text style={styles.valueText}>\r\n          {(researchEstimate?.[element] ?? 0) == 0 ||\r\n          nextLevelRequiredExp == Infinity\r\n            ? \"∞\"\r\n            : formatTimeLong(\r\n                moment.duration(\r\n                  (1000 * nextLevelRequiredExp) /\r\n                    (researchEstimate?.[element] ?? 0),\r\n                ),\r\n              )}\r\n        </Text>\r\n      </View>\r\n      <View style={styles.row}>\r\n        <Text style={{ flex: 1 }}>\r\n          {t(\"Maximum Primary Level in previous runs (MPL):\")}\r\n        </Text>\r\n        <Text style={styles.valueText}>\r\n          {formatNumber(getMaxPrimaryElementLevel(state, element))}\r\n        </Text>\r\n      </View>\r\n      <View style={styles.insideBlock}>\r\n        <Markdown>{newSpellsText}</Markdown>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst StatsElementViewerElement = React.memo(\r\n  (props: { element: SpellElement }) => {\r\n    const state = useGameState();\r\n\r\n    const element = props.element;\r\n    const level = getElementLevel(state, element);\r\n    const title = t(\"{{element}} Lv{{level}}{{primary}} - {{rank}}\", {\r\n      element: translateElement(element),\r\n      level: formatNumber(level),\r\n      primary: getPrimaryElements(state).includes(element)\r\n        ? t(\" (Primary)\")\r\n        : \"\",\r\n      rank: getRankForLevel(level),\r\n    });\r\n\r\n    return useMemo(\r\n      () => (\r\n        <View key={element}>\r\n          <List.Accordion title={title}>\r\n            <View style={styles.elementElementContainer}>\r\n              <StatsSingleElement element={element} />\r\n            </View>\r\n          </List.Accordion>\r\n        </View>\r\n      ),\r\n      [title, element],\r\n    );\r\n  },\r\n);\r\n\r\nfunction StatsElementViewer() {\r\n  const state = useGameState();\r\n\r\n  const elements = getUnlockedElements(state);\r\n\r\n  const perElement = elements.map((element, index) => {\r\n    return <StatsElementViewerElement key={element} element={element} />;\r\n  });\r\n\r\n  return <View>{perElement}</View>;\r\n}\r\n\r\nfunction StorylineViewer() {\r\n  const state = useGameState();\r\n  const allStorylines = getSortedStorylines();\r\n  const completedStorylines = allStorylines.filter((storyline) =>\r\n    storyline.isCompleted(state),\r\n  );\r\n  const storylineCount = getTotalStorylineCount();\r\n\r\n  const storylineStatusMap: Partial<Record<StorylineStatus, number>> = {};\r\n  for (let storyline of allStorylines) {\r\n    const status = storyline.getStatus(state);\r\n    storylineStatusMap[status] = (storylineStatusMap[status] ?? 0) + 1;\r\n  }\r\n\r\n  const storylineStatusSet = new Set(keysOf(storylineStatusMap));\r\n\r\n  const [storylineStatus, setStorylineStatus] = useState<string>(\r\n    storylineStatusSet.has(StorylineStatus.HINT_REVEALED)\r\n      ? StorylineStatus.HINT_REVEALED\r\n      : storylineStatusSet.has(StorylineStatus.UNLOCKED)\r\n      ? StorylineStatus.UNLOCKED\r\n      : storylineStatusSet.has(StorylineStatus.COMPLETED)\r\n      ? StorylineStatus.COMPLETED\r\n      : StorylineStatus.BONUS_ACTIVE,\r\n  );\r\n\r\n  const storylineStatuses = Array.from(storylineStatusSet)\r\n    .sort((a, b) => {\r\n      const indexA = STORYLINE_STATUS_ORDER.findIndex((status) => status == a);\r\n      const indexB = STORYLINE_STATUS_ORDER.findIndex((status) => status == b);\r\n      return indexA - indexB;\r\n    })\r\n    .filter((status) => status != StorylineStatus.HIDDEN);\r\n\r\n  const statusPicker = useMemo(() => {\r\n    return (\r\n      <Picker\r\n        onValueChange={setStorylineStatus}\r\n        selectedValue={storylineStatus}\r\n        data={[...storylineStatuses].map((status: string) => ({\r\n          label: t(\"{{storylineStatus}} ({{amount}})\", {\r\n            storylineStatus: translateStorylineStatus(\r\n              status as StorylineStatus,\r\n            ),\r\n            amount: formatNumber(storylineStatusMap[status] ?? 0),\r\n          }),\r\n          value: status,\r\n          key: status,\r\n        }))}\r\n      />\r\n    );\r\n  }, [\r\n    setStorylineStatus,\r\n    storylineStatus,\r\n    JSON.stringify(storylineStatuses),\r\n    JSON.stringify(storylineStatusMap),\r\n  ]);\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View>\r\n        <View style={styles.row}>\r\n          <Text>{t(\"Total Completed Storylines:\")}</Text>\r\n          <Text style={styles.valueText}>\r\n            {t(\"{{completedStorylines}} / {{allStorylines}}\", {\r\n              completedStorylines: formatNumber(completedStorylines.length),\r\n              allStorylines: formatNumber(storylineCount),\r\n            })}\r\n          </Text>\r\n        </View>\r\n        <View style={styles.row}>\r\n          <Text>{t(\"Completion Percentage:\")}</Text>\r\n          <Text style={styles.valueText}>\r\n            {t(\"{{completedStorylinesPct}}%\", {\r\n              completedStorylinesPct: formatNumber(\r\n                completedStorylines.length > storylineCount\r\n                  ? 100 + (completedStorylines.length - storylineCount)\r\n                  : (100 * completedStorylines.length) / storylineCount,\r\n              ),\r\n            })}\r\n          </Text>\r\n        </View>\r\n        <View style={[Styles.mt16, Styles.flexRowAlignCenter]}>\r\n          <Text>{t(\"Filter Storylines:\")}</Text>\r\n          <View style={[Styles.ml8, { width: 180 }]}>{statusPicker}</View>\r\n        </View>\r\n        <View style={Styles.mt8}>\r\n          {STORYLINE_STATUS_ORDER.map((status) => (\r\n            <View\r\n              style={storylineStatus != status && { display: \"none\" }}\r\n              key={status}\r\n            >\r\n              <GameStateFreezer isVisible={storylineStatus == status}>\r\n                <StorylinesContainer onlyStorylineStatus={status} />\r\n              </GameStateFreezer>\r\n            </View>\r\n          ))}\r\n        </View>\r\n      </View>\r\n    ),\r\n    [\r\n      completedStorylines.length,\r\n      allStorylines.length,\r\n      statusPicker,\r\n      storylineStatus,\r\n    ],\r\n  );\r\n}\r\n\r\nfunction StatsOtherViewer() {\r\n  const state = useGameState();\r\n  const thisRunDuration = moment.duration(state.run.secondsPlayed, \"seconds\");\r\n  const thisWorldDuration = moment.duration(\r\n    state.world.secondsPlayed,\r\n    \"seconds\",\r\n  );\r\n  const totalDuration = moment.duration(state.global?.secondsPlayed, \"seconds\");\r\n  const thisRunActiveDuration = formatTimeLong(\r\n    moment.duration(state.run.activeSecondsPlayed, \"seconds\"),\r\n  );\r\n  const thisWorldActiveDuration = formatTimeLong(\r\n    moment.duration(state.world.activeSecondsPlayed, \"seconds\"),\r\n  );\r\n  const totalActiveDuration = formatTimeLong(\r\n    moment.duration(state.global.activeSecondsPlayed, \"seconds\"),\r\n  );\r\n  const thisRunTimePieces = state.run.timePiecesConsumed;\r\n  const thisWorldTimePieces = state.world.timePiecesConsumed;\r\n  const totalTimePieces = state.global.timePiecesConsumed;\r\n  const thisRunRealWorldDuration = moment.duration(\r\n    Date.now() - state.run.startTimestamp ?? 0,\r\n  );\r\n  const thisWorldRealWorldDuration = moment.duration(\r\n    Date.now() - state.world.startTimestamp ?? 0,\r\n  );\r\n  const totalRealWorldDuration = moment.duration(\r\n    Date.now() - state.global.startTimestamp ?? 0,\r\n  );\r\n\r\n  const newGamePlusCount = getNewGamePlusCount(state);\r\n  const sheerPowerLevel = getSheerPowerLevel(state);\r\n  const storylineOracleLevel = getStorylineOracleLevel(state);\r\n  const blazingSpeedLevel = getBlazingSpeedLevel(state);\r\n  const worldDifficultyLevel = getWorldDifficultyLevel(state);\r\n\r\n  const expMultiplier = maximumElementLevelExpMultiplier(state);\r\n  const productionMultiplier = maximumElementLevelProductionMultiplierDx(state);\r\n\r\n  const currentChallenge = getCurrentChallenge(state);\r\n\r\n  const primaryElement = getPrimaryElements(state)\r\n    .map((element) => translateElement(element))\r\n    .join(t(\", \"));\r\n\r\n  const primaryElementRow = useMemo(\r\n    () => (\r\n      <View style={styles.row}>\r\n        <Text style={styles.captionText} numberOfLines={2}>\r\n          {t(\"Primary element:\")}\r\n        </Text>\r\n        <Text style={[styles.valueText, styles.valueTextLong]}>\r\n          {primaryElement}\r\n        </Text>\r\n      </View>\r\n    ),\r\n    [primaryElement],\r\n  );\r\n\r\n  const inGameTimeTotalRow = useMemo(\r\n    () => (\r\n      <View style={styles.row}>\r\n        <Text style={styles.captionText} numberOfLines={2}>\r\n          {t(\"In-game time played (total):\")}\r\n        </Text>\r\n        <Text\r\n          style={[styles.valueText, styles.valueTextLong]}\r\n          numberOfLines={3}\r\n        >\r\n          {formatTimeLong(totalDuration)}\r\n        </Text>\r\n      </View>\r\n    ),\r\n    [formatTimeLong(totalDuration)],\r\n  );\r\n\r\n  const inGameTimeThisWorldRow = useMemo(\r\n    () =>\r\n      newGamePlusCount > 0 && (\r\n        <View style={styles.row}>\r\n          <Text style={styles.captionText} numberOfLines={3}>\r\n            {t(\"In-game time played (this World):\")}\r\n          </Text>\r\n          <Text style={[styles.valueText, styles.valueTextLong]}>\r\n            {formatTimeLong(thisWorldDuration)}\r\n          </Text>\r\n        </View>\r\n      ),\r\n    [newGamePlusCount, formatTimeLong(thisWorldDuration)],\r\n  );\r\n\r\n  const inGameTimeThisRunRow = useMemo(\r\n    () => (\r\n      <View style={styles.row}>\r\n        <Text style={styles.captionText} numberOfLines={3}>\r\n          {t(\"In-game time played (this run):\")}\r\n        </Text>\r\n        <Text style={[styles.valueText, styles.valueTextLong]}>\r\n          {formatTimeLong(thisRunDuration)}\r\n        </Text>\r\n      </View>\r\n    ),\r\n    [formatTimeLong(thisRunDuration)],\r\n  );\r\n\r\n  const activeDurationTotalRow = useMemo(\r\n    () =>\r\n      totalActiveDuration != null && (\r\n        <View style={styles.row}>\r\n          <Text style={styles.captionText} numberOfLines={3}>\r\n            {t(\"Real world time played (total):\")}\r\n          </Text>\r\n          <Text style={[styles.valueText, styles.valueTextLong]}>\r\n            {totalActiveDuration}\r\n          </Text>\r\n        </View>\r\n      ),\r\n    [totalActiveDuration],\r\n  );\r\n\r\n  const activeDurationThisWorldRow = useMemo(\r\n    () =>\r\n      newGamePlusCount > 0 && (\r\n        <View style={styles.row}>\r\n          <Text style={styles.captionText} numberOfLines={3}>\r\n            {t(\"Real world time played (this World):\")}\r\n          </Text>\r\n          <Text style={[styles.valueText, styles.valueTextLong]}>\r\n            {thisWorldActiveDuration}\r\n          </Text>\r\n        </View>\r\n      ),\r\n    [newGamePlusCount, thisWorldActiveDuration],\r\n  );\r\n\r\n  const timePiecesThisRunRow = useMemo(\r\n    () =>\r\n      thisRunTimePieces > 0 && (\r\n        <View style={styles.row}>\r\n          <Text style={styles.captionText} numberOfLines={3}>\r\n            {t(\"Time Pieces consumed (this run):\")}\r\n          </Text>\r\n          <Text style={[styles.valueText, styles.valueTextLong]}>\r\n            {formatNumber(thisRunTimePieces)}\r\n          </Text>\r\n        </View>\r\n      ),\r\n    [thisRunTimePieces],\r\n  );\r\n\r\n  const timePiecesTotalRow = useMemo(\r\n    () =>\r\n      totalTimePieces > 0 && (\r\n        <View style={styles.row}>\r\n          <Text style={styles.captionText} numberOfLines={3}>\r\n            {t(\"Time Pieces consumed (total):\")}\r\n          </Text>\r\n          <Text style={[styles.valueText, styles.valueTextLong]}>\r\n            {formatNumber(totalTimePieces)}\r\n          </Text>\r\n        </View>\r\n      ),\r\n    [totalTimePieces],\r\n  );\r\n\r\n  const timePiecesThisWorldRow = useMemo(\r\n    () =>\r\n      newGamePlusCount > 0 &&\r\n      thisWorldTimePieces > 0 && (\r\n        <View style={styles.row}>\r\n          <Text style={styles.captionText} numberOfLines={3}>\r\n            {t(\"Time Pieces consumed (this World):\")}\r\n          </Text>\r\n          <Text style={[styles.valueText, styles.valueTextLong]}>\r\n            {formatNumber(thisWorldTimePieces)}\r\n          </Text>\r\n        </View>\r\n      ),\r\n    [newGamePlusCount, thisWorldTimePieces],\r\n  );\r\n\r\n  const activeDurationThisRunRow = useMemo(\r\n    () => (\r\n      <View style={styles.row}>\r\n        <Text style={styles.captionText} numberOfLines={3}>\r\n          {t(\"Real world time played (this run):\")}\r\n        </Text>\r\n        <Text style={[styles.valueText, styles.valueTextLong]}>\r\n          {thisRunActiveDuration}\r\n        </Text>\r\n      </View>\r\n    ),\r\n    [thisRunActiveDuration],\r\n  );\r\n\r\n  const realWorldDurationTotalRow = useMemo(\r\n    () => (\r\n      <View style={styles.row}>\r\n        <Text style={styles.captionText} numberOfLines={3}>\r\n          {t(\"Real world time since starting the game:\")}\r\n        </Text>\r\n        <Text style={[styles.valueText, styles.valueTextLong]}>\r\n          {formatTimeLong(totalRealWorldDuration)}\r\n        </Text>\r\n      </View>\r\n    ),\r\n    [formatTimeLong(totalRealWorldDuration)],\r\n  );\r\n\r\n  const realWorldDurationThisWorldRow = useMemo(\r\n    () =>\r\n      newGamePlusCount > 0 && (\r\n        <View style={styles.row}>\r\n          <Text style={styles.captionText} numberOfLines={3}>\r\n            {t(\"Real world time since starting this World:\")}\r\n          </Text>\r\n          <Text style={[styles.valueText, styles.valueTextLong]}>\r\n            {formatTimeLong(thisWorldRealWorldDuration)}\r\n          </Text>\r\n        </View>\r\n      ),\r\n    [newGamePlusCount, formatTimeLong(thisWorldRealWorldDuration)],\r\n  );\r\n\r\n  const realWorldDurationThisRunRow = useMemo(\r\n    () => (\r\n      <View style={styles.row}>\r\n        <Text style={styles.captionText} numberOfLines={3}>\r\n          {t(\"Real world time since starting this run:\")}\r\n        </Text>\r\n        <Text style={[styles.valueText, styles.valueTextLong]}>\r\n          {formatTimeLong(thisRunRealWorldDuration)}\r\n        </Text>\r\n      </View>\r\n    ),\r\n    [formatTimeLong(thisRunRealWorldDuration)],\r\n  );\r\n\r\n  const combatClassRow = useMemo(\r\n    () =>\r\n      getCurrentCombatClass(state) != null && (\r\n        <View style={styles.row}>\r\n          <Text style={styles.captionText} numberOfLines={3}>\r\n            {t(\"Class:\")}\r\n          </Text>\r\n          <Text style={styles.valueText}>\r\n            {getCurrentCombatClass(state).getDisplayName()}\r\n          </Text>\r\n        </View>\r\n      ),\r\n    [getCurrentCombatClass(state)],\r\n  );\r\n\r\n  const challengeRow = useMemo(\r\n    () =>\r\n      getCurrentChallenge(state) != null && (\r\n        <View style={styles.row}>\r\n          <Text style={styles.captionText} numberOfLines={3}>\r\n            {t(\"Challenge:\")}\r\n          </Text>\r\n          <Text style={[styles.valueText]}>\r\n            {getCurrentChallenge(state).getName()}\r\n          </Text>\r\n        </View>\r\n      ),\r\n    [getCurrentChallenge(state)],\r\n  );\r\n\r\n  const newGamePlusRows = useMemo(\r\n    () =>\r\n      newGamePlusCount > 0 && (\r\n        <>\r\n          <View style={styles.row}>\r\n            <Text style={styles.captionText} numberOfLines={2}>\r\n              {t(\"Other Worlds visited:\")}\r\n            </Text>\r\n            <Text style={[styles.valueText, styles.valueTextLong]}>\r\n              {formatNumber(newGamePlusCount)}\r\n            </Text>\r\n          </View>\r\n          <View style={styles.row}>\r\n            <Text style={styles.captionText} numberOfLines={2}>\r\n              {t(\"World modifiers:\")}\r\n            </Text>\r\n            <Text style={[styles.valueText, styles.valueTextLong]}>\r\n              {t(\r\n                \"{{sheerPower}}/{{storylineOracle}}/{{blazingSpeed}} - D{{worldDifficulty}}\",\r\n                {\r\n                  sheerPower: formatNumber(sheerPowerLevel),\r\n                  storylineOracle: formatNumber(storylineOracleLevel),\r\n                  blazingSpeed: formatNumber(blazingSpeedLevel),\r\n                  worldDifficulty: formatNumber(worldDifficultyLevel),\r\n                },\r\n              )}\r\n            </Text>\r\n          </View>\r\n        </>\r\n      ),\r\n    [\r\n      newGamePlusCount,\r\n      sheerPowerLevel,\r\n      storylineOracleLevel,\r\n      blazingSpeedLevel,\r\n      worldDifficultyLevel,\r\n    ],\r\n  );\r\n\r\n  const retirementRows = useMemo(\r\n    () => (\r\n      <>\r\n        <View style={styles.row}>\r\n          <Text>{t(\"Total times retired:\")}</Text>\r\n          <Text style={styles.valueText}>{state.world.totalTimesResetted}</Text>\r\n        </View>\r\n        <View style={styles.row}>\r\n          <Text>{t(\"Global experience multiplier:\")}</Text>\r\n          <Text style={styles.valueText}>\r\n            {formatNumber(expMultiplier, { showDecimals: true })}x\r\n          </Text>\r\n        </View>\r\n        <View style={styles.row}>\r\n          <Text>{t(\"Global production multiplier:\")}</Text>\r\n          <Text style={styles.valueText}>\r\n            {formatNumber(productionMultiplier, { showDecimals: true })}x\r\n          </Text>\r\n        </View>\r\n      </>\r\n    ),\r\n    [state.world.totalTimesResetted, expMultiplier, productionMultiplier],\r\n  );\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View>\r\n        {challengeRow}\r\n        {primaryElementRow}\r\n        {combatClassRow}\r\n        {inGameTimeTotalRow}\r\n        {inGameTimeThisWorldRow}\r\n        {inGameTimeThisRunRow}\r\n        {activeDurationTotalRow}\r\n        {activeDurationThisWorldRow}\r\n        {activeDurationThisRunRow}\r\n        {timePiecesThisRunRow}\r\n        {timePiecesThisWorldRow}\r\n        {timePiecesTotalRow}\r\n        {realWorldDurationTotalRow}\r\n        {realWorldDurationThisWorldRow}\r\n        {realWorldDurationThisRunRow}\r\n        {newGamePlusRows}\r\n        {retirementRows}\r\n      </View>\r\n    ),\r\n    [\r\n      challengeRow,\r\n      primaryElementRow,\r\n      combatClassRow,\r\n      inGameTimeTotalRow,\r\n      inGameTimeThisWorldRow,\r\n      inGameTimeThisRunRow,\r\n      activeDurationTotalRow,\r\n      activeDurationThisWorldRow,\r\n      activeDurationThisRunRow,\r\n      timePiecesTotalRow,\r\n      timePiecesThisWorldRow,\r\n      timePiecesThisRunRow,\r\n      realWorldDurationTotalRow,\r\n      realWorldDurationThisWorldRow,\r\n      realWorldDurationThisRunRow,\r\n      newGamePlusRows,\r\n      retirementRows,\r\n    ],\r\n  );\r\n}\r\n\r\nexport default function Stats() {\r\n  const state = useGameState();\r\n  const showEndings = state.global.endingsHistory.length > 0;\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View style={styles.container}>\r\n        <UtilityCard>\r\n          <Card.Title title={t(\"Stats\")} accessibilityRole=\"header\" />\r\n          <Card.Content>\r\n            <StatsOtherViewer />\r\n          </Card.Content>\r\n        </UtilityCard>\r\n        <UtilityCard style={Styles.mt16}>\r\n          <Card.Title title={t(\"Elements\")} accessibilityRole=\"header\" />\r\n          <Card.Content>\r\n            <StatsElementViewer />\r\n          </Card.Content>\r\n        </UtilityCard>\r\n        <UtilityCard style={Styles.mt16}>\r\n          <Card.Title title={t(\"Storylines\")} accessibilityRole=\"header\" />\r\n          <Card.Content>\r\n            <StorylineViewer />\r\n          </Card.Content>\r\n        </UtilityCard>\r\n        {showEndings && (\r\n          <UtilityCard style={Styles.mt16}>\r\n            <Card.Title\r\n              title={t(\"Ending History\")}\r\n              accessibilityRole=\"header\"\r\n            />\r\n            <Card.Content>\r\n              <EndingHistoryContainer />\r\n            </Card.Content>\r\n          </UtilityCard>\r\n        )}\r\n        {/* {hasSecrets && (\r\n          <Card>\r\n            <RNECard.Title accessibilityRole=\"header\">Secrets</RNECard.Title>\r\n            <SecretsContainer secretType={SecretType.Basic} />\r\n          </Card>\r\n        )} */}\r\n      </View>\r\n    ),\r\n    [showEndings],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"flex-start\",\r\n    width: \"100%\",\r\n  },\r\n  elementElementContainer: {\r\n    margin: 8,\r\n    marginBottom: 24,\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginBottom: 4,\r\n  },\r\n  insideBlock: {\r\n    marginTop: 16,\r\n  },\r\n  valueText: {\r\n    minWidth: 60,\r\n    textAlign: \"right\",\r\n    marginLeft: 8,\r\n  },\r\n  valueTextLong: {\r\n    minWidth: 112,\r\n  },\r\n  captionText: {\r\n    flex: 1,\r\n  },\r\n});\r\n","import { Entypo } from \"@expo/vector-icons\";\r\nimport color from \"color\";\r\nimport moment from \"moment\";\r\nimport React, { useCallback, useContext, useMemo, useRef } from \"react\";\r\nimport { StyleSheet, TouchableWithoutFeedback, View } from \"react-native\";\r\nimport { Card, useTheme } from \"react-native-paper\";\r\nimport { clearAllCaches } from \"../backend/Caching\";\r\nimport {\r\n  ResearcherAutoAssignStrategy,\r\n  createHypotheticalState,\r\n} from \"../backend/GameState\";\r\nimport { ActionArea } from \"../backend/action/ActionAreas\";\r\nimport {\r\n  TransmutationSpell,\r\n  getVisibleTransmutationSpells,\r\n} from \"../backend/items/transmute/TransmutationSpell\";\r\nimport { Ritual } from \"../backend/rituals/Ritual\";\r\nimport { getVisibleRituals } from \"../backend/rituals/Rituals\";\r\nimport {\r\n  SpellElement,\r\n  getElementExp,\r\n  getElementLevel,\r\n  getMaxElementLevel,\r\n  getPrimaryElements,\r\n  getTotalExpRequiredForLevel,\r\n  getUnlockedElements,\r\n  translateElement,\r\n} from \"../backend/spells/Elements\";\r\nimport { Spell } from \"../backend/spells/Spell\";\r\nimport { getVisibleSpellsForElement } from \"../backend/spells/Spells\";\r\nimport { translateResearcherAutoAssignStrategy } from \"../backend/study/ResearcherAutoAssignStrategy\";\r\nimport {\r\n  allocateResearchersToElement,\r\n  explainBaseResearchRate,\r\n  getBaseResearchRate,\r\n  getFreeResearchers,\r\n  getResearcherExpPerSecForElements,\r\n  getTotalResearchers,\r\n} from \"../backend/study/Study\";\r\nimport { keysOf, valuesOfCached } from \"../utils/CoreUtils\";\r\nimport { formatNumber, formatTimeLong } from \"../utils/FormattingUtils\";\r\nimport { t } from \"../utils/I18n\";\r\nimport ActionsContainer from \"./utility/ActionsContainer\";\r\nimport { Card as UtilityCard } from \"./utility/Card\";\r\nimport { CheckBox } from \"./utility/CheckBox\";\r\nimport { Markdown } from \"./utility/Markdown\";\r\nimport { Picker } from \"./utility/Picker\";\r\nimport { PlusMinusAllocator } from \"./utility/PlusMinusAllocator\";\r\nimport { useExpandedUIFromContext } from \"./utility/StatePersistedExpandedUI\";\r\nimport Styles from \"./utility/Styles\";\r\nimport { Text } from \"./utility/Text\";\r\nimport { UIContext, useUIStateFromContext } from \"./utility/UIContext\";\r\nimport Tooltip from \"./utility/tooltip/PaperTooltip\";\r\nimport { useGameState } from \"./utility/useGameState\";\r\n\r\nfunction StudyRowDetails(props: { element: SpellElement }) {\r\n  const element = props.element;\r\n  const state = useGameState();\r\n\r\n  const allElementLevels = getUnlockedElements(state).map((eachElement) =>\r\n    getElementLevel(state, eachElement),\r\n  );\r\n\r\n  const researchEstimate = getResearcherExpPerSecForElements(state);\r\n\r\n  const newSpellsText = useMemo(() => {\r\n    // Avoid weird caching issues...\r\n    state.temp.spellRequirementsCache = {};\r\n    const thisLevelSpells = getVisibleSpellsForElement(\r\n      state,\r\n      element,\r\n      ActionArea.SPELL_MENU,\r\n    );\r\n    const thisLevelCrafts = getVisibleTransmutationSpells(state);\r\n    const thisLevelEmpowerments = thisLevelSpells.filter((spell) =>\r\n      spell.isEmpoweringPossible(state),\r\n    );\r\n    const thisLevelRituals = getVisibleRituals(state);\r\n    const currentElementLevel = getElementLevel(state, element);\r\n    let nextUnlockLevelAdd = 0;\r\n    let foundNewSpellsOrItems = false;\r\n    let extraSpells: Spell[] = [];\r\n    let extraCrafts: Spell[] = [];\r\n    let extraEmpowerments: Spell[] = [];\r\n    let extraRituals: Ritual[] = [];\r\n    let fakeState = createHypotheticalState(state);\r\n    while (\r\n      !foundNewSpellsOrItems &&\r\n      currentElementLevel + nextUnlockLevelAdd < getMaxElementLevel(state)\r\n    ) {\r\n      nextUnlockLevelAdd += 1;\r\n      fakeState.run.elementExperience[element] = getTotalExpRequiredForLevel(\r\n        fakeState,\r\n        getElementLevel(state, element) + nextUnlockLevelAdd,\r\n        element,\r\n      );\r\n      fakeState = clearAllCaches(fakeState);\r\n      const nextLevelSpells = getVisibleSpellsForElement(\r\n        fakeState,\r\n        element,\r\n        ActionArea.SPELL_MENU,\r\n      );\r\n      const nextLevelTransmutations = getVisibleTransmutationSpells(fakeState);\r\n      const nextLevelEmpowerments = nextLevelSpells.filter((spell) =>\r\n        spell.isEmpoweringPossible(fakeState),\r\n      );\r\n      const nextLevelRituals = getVisibleRituals(fakeState);\r\n      extraSpells = nextLevelSpells.filter(\r\n        (spell) => !thisLevelSpells.includes(spell),\r\n      );\r\n      extraCrafts = nextLevelTransmutations.filter(\r\n        (item) => !thisLevelCrafts.includes(item),\r\n      );\r\n      extraEmpowerments = nextLevelEmpowerments.filter(\r\n        (spell) => !thisLevelEmpowerments.includes(spell),\r\n      );\r\n      extraRituals = nextLevelRituals.filter(\r\n        (ritual) => !thisLevelRituals.includes(ritual),\r\n      );\r\n      if (\r\n        extraSpells.length > 0 ||\r\n        extraCrafts.length > 0 ||\r\n        extraEmpowerments.length > 0 ||\r\n        extraRituals.length > 0\r\n      ) {\r\n        foundNewSpellsOrItems = true;\r\n      }\r\n    }\r\n    const newSpells = extraSpells.map(\r\n      (spell) => `*${spell.getBasicDisplayName(state)}*`,\r\n    );\r\n    const newTransmutations = extraCrafts.map((spell: TransmutationSpell) =>\r\n      t(\"{{itemIcon}} *{{itemName}}*\", {\r\n        itemIcon: `:${spell.getItem().getId()}:`,\r\n        itemName: spell.getItem().getName(spell.getItem().getDefaultParams()),\r\n      }),\r\n    );\r\n    const newEmpowerments = extraEmpowerments.map(\r\n      (spell) => `*${spell.getBasicDisplayName(state)}+*`,\r\n    );\r\n    const newRituals = extraRituals.map(\r\n      (ritual) => `*${ritual.getBaseName()}*`,\r\n    );\r\n\r\n    const newUnlocks = [\r\n      ...newSpells,\r\n      ...newEmpowerments,\r\n      ...newTransmutations,\r\n      ...newRituals,\r\n    ];\r\n\r\n    return newUnlocks.length > 0\r\n      ? t(`Your next unlock is at level {{level}}: {{unlocks}}`, {\r\n          level: nextUnlockLevelAdd + currentElementLevel,\r\n          unlocks: newUnlocks.join(t(\", \")),\r\n        })\r\n      : t(\r\n          `If you only level up this element, you will not unlock anything new!`,\r\n        );\r\n  }, [JSON.stringify(allElementLevels)]);\r\n\r\n  const nextLevelRequiredExp =\r\n    getTotalExpRequiredForLevel(\r\n      state,\r\n      getElementLevel(state, element) + 1,\r\n      element,\r\n    ) - getElementExp(state, element);\r\n\r\n  return (\r\n    <View style={Styles.p8}>\r\n      <View>\r\n        <Text>\r\n          {t(\"To Next Level: {{exp}} Exp ({{time}})\", {\r\n            exp: formatNumber(nextLevelRequiredExp),\r\n            time:\r\n              (researchEstimate?.[element] ?? 0) == 0 ||\r\n              nextLevelRequiredExp == Infinity\r\n                ? \"∞\"\r\n                : formatTimeLong(\r\n                    moment.duration(\r\n                      (1000 * nextLevelRequiredExp) /\r\n                        (researchEstimate?.[element] ?? 0),\r\n                    ),\r\n                  ),\r\n          })}\r\n        </Text>\r\n      </View>\r\n      <View style={Styles.mt4}>\r\n        <Markdown>{newSpellsText}</Markdown>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction StudyRow(props: {\r\n  element: SpellElement;\r\n  applyAll: boolean;\r\n  isOdd: boolean;\r\n}) {\r\n  const element = props.element;\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n  const [expanded, setExpanded] = useExpandedUIFromContext(\r\n    state,\r\n    \"study:\" + element,\r\n    false,\r\n  );\r\n  const toggleExpanded = useCallback(() => setExpanded(!expanded), [expanded]);\r\n  const freeResearchers = getFreeResearchers(state);\r\n  const hasFreeResearchers = freeResearchers > 0;\r\n\r\n  const current = state.run.studyAllocation?.[element] || 0;\r\n  const onPressMinus = useCallback(\r\n    () =>\r\n      stateRef.current.apply(\r\n        allocateResearchersToElement(element, props.applyAll ? -Infinity : -1),\r\n      ),\r\n    [element, props.applyAll],\r\n  );\r\n  const onPressPlus = useCallback(\r\n    () =>\r\n      stateRef.current.apply(\r\n        allocateResearchersToElement(element, props.applyAll ? Infinity : 1),\r\n      ),\r\n    [element, props.applyAll],\r\n  );\r\n  const elementLevel = getElementLevel(state, element);\r\n\r\n  const theme = useTheme();\r\n\r\n  const elementText = useMemo(\r\n    () => (\r\n      <Text numberOfLines={3}>\r\n        {t(\"{{element}}{{elementPrimaryText}}: Lv{{level}}\", {\r\n          element: translateElement(element),\r\n          elementPrimaryText: getPrimaryElements(state).includes(element)\r\n            ? t(\" (Primary)\")\r\n            : \"\",\r\n          level: formatNumber(elementLevel),\r\n        })}\r\n      </Text>\r\n    ),\r\n    [element, getPrimaryElements(state).join(), elementLevel],\r\n  );\r\n  return useMemo(\r\n    () => (\r\n      <View\r\n        key={element}\r\n        style={[\r\n          styles.singleElementContainer,\r\n          props.isOdd && {\r\n            backgroundColor: color(theme.colors.primary).alpha(0.1),\r\n          },\r\n        ]}\r\n      >\r\n        <View style={styles.row}>\r\n          <View style={styles.elementTextContainer}>{elementText}</View>\r\n          <View style={[styles.row, styles.rightHandSide]}>\r\n            <Text>{formatNumber(current)}</Text>\r\n            <View style={styles.plusMinusAllocatorContainer}>\r\n              <PlusMinusAllocator\r\n                disableMinus={current === 0}\r\n                disablePlus={!hasFreeResearchers}\r\n                onPressMinus={onPressMinus}\r\n                onPressPlus={onPressPlus}\r\n              />\r\n            </View>\r\n            <TouchableWithoutFeedback\r\n              onPress={toggleExpanded}\r\n              accessibilityRole=\"header\"\r\n              accessibilityLabel={expanded ? t(\"Collapse\") : t(\"Expand\")}\r\n            >\r\n              <View style={styles.expansionContainer}>\r\n                <Entypo\r\n                  name={expanded ? \"chevron-down\" : \"chevron-right\"}\r\n                  size={24}\r\n                  color={theme.colors.onBackground}\r\n                />\r\n              </View>\r\n            </TouchableWithoutFeedback>\r\n          </View>\r\n        </View>\r\n        {expanded && (\r\n          <View>\r\n            <StudyRowDetails element={element} />\r\n          </View>\r\n        )}\r\n      </View>\r\n    ),\r\n    [\r\n      elementText,\r\n      current,\r\n      hasFreeResearchers,\r\n      onPressMinus,\r\n      onPressPlus,\r\n      theme,\r\n      props.isOdd,\r\n      expanded,\r\n      toggleExpanded,\r\n    ],\r\n  );\r\n}\r\n\r\nexport function Study() {\r\n  const state = useGameState();\r\n  const uiContext = useContext(UIContext);\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n  const freeResearchers = getFreeResearchers(state);\r\n  const totalResearchers = getTotalResearchers(state);\r\n\r\n  const [applyAll, setApplyAll] = useUIStateFromContext(\r\n    uiContext,\r\n    \"research_applyall\",\r\n    false,\r\n  );\r\n\r\n  const toggleApplyAll = useCallback(() => {\r\n    setApplyAll(!applyAll);\r\n  }, [applyAll, setApplyAll]);\r\n\r\n  const autoAssign = state.options.researcherAutoAssignStrategy;\r\n  const setAutoAssign = useCallback((value: ResearcherAutoAssignStrategy) => {\r\n    stateRef.current.apply((s) => {\r\n      s.options.researcherAutoAssignStrategy = value;\r\n      return s;\r\n    });\r\n  }, []);\r\n\r\n  const autoAssignPicker = useMemo(() => {\r\n    const items = valuesOfCached(ResearcherAutoAssignStrategy).map((value) => ({\r\n      key: value,\r\n      value,\r\n      label: translateResearcherAutoAssignStrategy(value),\r\n    }));\r\n    return (\r\n      <Picker\r\n        onValueChange={setAutoAssign}\r\n        selectedValue={autoAssign}\r\n        disablePlaceholder={true}\r\n        data={items}\r\n        style={{ maxWidth: 120 }}\r\n        maxLength={16}\r\n      />\r\n    );\r\n  }, [autoAssign, setAutoAssign]);\r\n\r\n  const rateExplanation = explainBaseResearchRate(state);\r\n  const expRateContents = t(\"{{exp}} / sec\", {\r\n    exp: formatNumber(getBaseResearchRate(state), {\r\n      showDecimals: true,\r\n    }),\r\n  });\r\n\r\n  const bottomSection = useMemo(\r\n    () => (\r\n      <View>\r\n        <View style={styles.assignAllContainer}>\r\n          <CheckBox\r\n            title={t(\"Assign / unassign all at once\")}\r\n            checked={applyAll}\r\n            onPress={toggleApplyAll}\r\n          />\r\n        </View>\r\n        <View style={[Styles.mt4, Styles.ph16, Styles.flexRowSpaceBetween]}>\r\n          <Text>{t(\"Auto-assign researchers: \")}</Text>\r\n          <View style={Styles.ml16}>{autoAssignPicker}</View>\r\n        </View>\r\n        <View style={[styles.row, styles.researcherCapacityContainer]}>\r\n          <Text>{t(\"Researchers available: \")}</Text>\r\n          <Text>\r\n            {t(\"{{free}}/{{total}}\", {\r\n              free: formatNumber(freeResearchers),\r\n              total: formatNumber(totalResearchers),\r\n            })}\r\n          </Text>\r\n        </View>\r\n        <View style={[styles.row, styles.researcherCapacityContainer]}>\r\n          <Text>{t(\"Exp per researcher: \")}</Text>\r\n          {rateExplanation != null ? (\r\n            <Tooltip title={rateExplanation}>\r\n              <Text style={Styles.underlined}>{expRateContents}</Text>\r\n            </Tooltip>\r\n          ) : (\r\n            <Text>{expRateContents}</Text>\r\n          )}\r\n        </View>\r\n        <View>\r\n          <ActionsContainer area={ActionArea.STUDY} />\r\n        </View>\r\n      </View>\r\n    ),\r\n    [\r\n      expRateContents,\r\n      rateExplanation,\r\n      totalResearchers,\r\n      freeResearchers,\r\n      applyAll,\r\n      toggleApplyAll,\r\n      autoAssignPicker,\r\n    ],\r\n  );\r\n\r\n  const elements = getUnlockedElements(state);\r\n\r\n  const disableAllMinus = freeResearchers === totalResearchers;\r\n  const disableAllPlus = freeResearchers <= 0;\r\n  const onPressMinusAll = useCallback(() => {\r\n    stateRef.current.apply((state) => {\r\n      for (let element of keysOf(state.run.studyAllocation)) {\r\n        allocateResearchersToElement(element, applyAll ? -Infinity : -1)(state);\r\n      }\r\n      return state;\r\n    });\r\n  }, [applyAll]);\r\n  const onPressPlusAll = useCallback(() => {\r\n    stateRef.current.apply((state) => {\r\n      do {\r\n        for (let element of getUnlockedElements(state)) {\r\n          allocateResearchersToElement(element, 1)(state);\r\n        }\r\n      } while (applyAll && getFreeResearchers(state) > 0);\r\n      return state;\r\n    });\r\n  }, [applyAll]);\r\n\r\n  const theme = useTheme();\r\n\r\n  return useMemo(() => {\r\n    return (\r\n      <View>\r\n        <UtilityCard>\r\n          <Card.Title title={t(\"Elements\")} accessibilityRole=\"header\" />\r\n          <View style={[Styles.ph8, Styles.pb8]}>\r\n            {elements.map((element, index) => {\r\n              return (\r\n                <StudyRow\r\n                  key={element}\r\n                  element={element}\r\n                  applyAll={applyAll}\r\n                  isOdd={index % 2 != 0}\r\n                />\r\n              );\r\n            })}\r\n            <View\r\n              key=\"All\"\r\n              style={[\r\n                styles.row,\r\n                styles.singleElementContainer,\r\n                elements.length % 2 != 0 && {\r\n                  backgroundColor: color(theme.colors.primary).alpha(0.1),\r\n                },\r\n              ]}\r\n            >\r\n              <View style={styles.elementTextContainer}>\r\n                <Text numberOfLines={3}>{t(\"Assign to every Element\")}</Text>\r\n              </View>\r\n              <View style={[styles.row, styles.rightHandSide]}>\r\n                <View style={styles.plusMinusAllocatorContainer}>\r\n                  <PlusMinusAllocator\r\n                    disableMinus={disableAllMinus}\r\n                    disablePlus={disableAllPlus}\r\n                    onPressMinus={onPressMinusAll}\r\n                    onPressPlus={onPressPlusAll}\r\n                  />\r\n                </View>\r\n              </View>\r\n              <View style={styles.expansionPlaceholder} />\r\n            </View>\r\n          </View>\r\n        </UtilityCard>\r\n        {bottomSection}\r\n      </View>\r\n    );\r\n  }, [\r\n    elements.length,\r\n    bottomSection,\r\n    applyAll,\r\n    disableAllMinus,\r\n    disableAllPlus,\r\n    onPressMinusAll,\r\n    onPressPlusAll,\r\n    theme,\r\n  ]);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  row: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  plusMinusAllocatorContainer: {\r\n    marginLeft: 16,\r\n  },\r\n  assignAllContainer: {\r\n    marginTop: 8,\r\n    paddingHorizontal: 16,\r\n  },\r\n  researcherCapacityContainer: {\r\n    marginTop: 4,\r\n    paddingHorizontal: 16,\r\n  },\r\n  singleElementContainer: {\r\n    padding: 4,\r\n  },\r\n  checkboxContainer: {\r\n    marginLeft: 0,\r\n    marginTop: 8,\r\n    padding: 0,\r\n  },\r\n  checkboxText: {\r\n    fontWeight: \"normal\",\r\n  },\r\n  rightHandSide: {\r\n    marginLeft: 16,\r\n  },\r\n  elementTextContainer: {\r\n    flex: 1,\r\n  },\r\n  valueText: {\r\n    minWidth: 60,\r\n    textAlign: \"right\",\r\n    marginLeft: 8,\r\n  },\r\n  expansionContainer: {\r\n    // @ts-ignore \"pointer\" is allowed here\r\n    cursor: \"pointer\",\r\n  },\r\n  expansionPlaceholder: {\r\n    width: 24,\r\n  },\r\n});\r\n","import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { StyleSheet, TouchableOpacity, View } from \"react-native\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { Flag } from \"../backend/Flag\";\r\nimport { hasWorldFlag } from \"../backend/Flags\";\r\nimport {\r\n  SpellElement,\r\n  getFullyUnlockedElements,\r\n  translateElement,\r\n} from \"../backend/spells/Elements\";\r\nimport {\r\n  SYNCHRO_COLS,\r\n  SYNCHRO_ROWS,\r\n  calculateMaxOccurrencesInSynchroGrid,\r\n  getCurrentSynchroStrategy,\r\n  getSortedSynchroBonuses,\r\n  getSynchroPosition,\r\n  getTotalOccurrencesInSynchroGrid,\r\n  hasNegativeSynchroBonusOnTile,\r\n  setCurrentSynchroPosition,\r\n} from \"../backend/synchro/Synchro\";\r\nimport { SynchroBonus } from \"../backend/synchro/SynchroBonus\";\r\nimport { valuesOfCached } from \"../utils/CoreUtils\";\r\nimport { formatNumber } from \"../utils/FormattingUtils\";\r\nimport { t } from \"../utils/I18n\";\r\nimport { SynchroGridSelectors } from \"./synchro/SynchroGridSelectors\";\r\nimport Divider from \"./utility/Divider\";\r\nimport { Markdown } from \"./utility/Markdown\";\r\nimport Styles from \"./utility/Styles\";\r\nimport { Text } from \"./utility/Text\";\r\nimport { GameIcon } from \"./utility/icons/GameIcon\";\r\nimport { useGameState } from \"./utility/useGameState\";\r\n\r\nfunction SynchroBonusRow(props: { bonus: SynchroBonus; amount: number }) {\r\n  const state = useGameState();\r\n  const theme = useTheme();\r\n\r\n  const visible = props.bonus.isVisible(state);\r\n  const effect = props.bonus.getEffect(\r\n    state,\r\n    props.amount < 1 ? 1 : props.amount,\r\n  );\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View\r\n        style={[\r\n          Styles.flexRowAlignCenter,\r\n          props.amount == 0 && { opacity: 0.5 },\r\n        ]}\r\n      >\r\n        <GameIcon\r\n          icon={props.bonus.getElement1().toLowerCase()}\r\n          style={Styles.mr4}\r\n        />\r\n        <GameIcon\r\n          icon={props.bonus.getElement2().toLowerCase()}\r\n          style={Styles.mr4}\r\n        />\r\n        <View style={Styles.ml4}>\r\n          <Text style={{ fontWeight: \"bold\" }}>\r\n            {t(\"x{{amount}}\", { amount: formatNumber(props.amount) })}\r\n          </Text>\r\n        </View>\r\n        <View style={[Styles.ml16, Styles.flex]}>\r\n          <Markdown\r\n            style={\r\n              !props.bonus.isBeneficial() &&\r\n              props.amount > 0 && { color: theme.colors.error }\r\n            }\r\n          >\r\n            {visible ? effect : t(\"???\")}\r\n          </Markdown>\r\n        </View>\r\n      </View>\r\n    ),\r\n    [visible, effect, props.amount],\r\n  );\r\n}\r\n\r\nfunction SynchroBottomComponent(props) {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const activeBonuses = getSortedSynchroBonuses(state);\r\n\r\n  const topPart = useMemo(\r\n    () => (\r\n      <View>\r\n        <Divider />\r\n        <View style={Styles.mv8}>\r\n          <Text h3>{t(\"Bonuses\")}</Text>\r\n        </View>\r\n        {activeBonuses.length == 0 && (\r\n          <Text style={{ fontStyle: \"italic\" }}>{t(\"No bonuses yet!\")}</Text>\r\n        )}\r\n      </View>\r\n    ),\r\n    [activeBonuses.length],\r\n  );\r\n\r\n  return (\r\n    <View style={Styles.flex}>\r\n      {topPart}\r\n      <ScrollView style={Styles.flex}>\r\n        {activeBonuses.map(({ bonus, amount }) => (\r\n          <View key={bonus.getId()} style={Styles.pv4}>\r\n            <SynchroBonusRow bonus={bonus} amount={amount} />\r\n          </View>\r\n        ))}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction SynchroGridItem(props: {\r\n  x: number;\r\n  y: number;\r\n  selected: boolean;\r\n  error: boolean;\r\n  onPress?: () => void;\r\n}) {\r\n  const state = useGameState();\r\n  const theme = useTheme();\r\n\r\n  const element = getSynchroPosition(state, props.x, props.y);\r\n\r\n  const translationArgs = {\r\n    x: formatNumber(props.x + 1),\r\n    y: formatNumber(props.y + 1),\r\n    element: element != null ? translateElement(element) : t(\"Empty\"),\r\n  };\r\n\r\n  return useMemo(\r\n    () => (\r\n      <TouchableOpacity\r\n        onPress={props.onPress}\r\n        accessible={true}\r\n        accessibilityLabel={\r\n          props.selected\r\n            ? t(\r\n                \"Position {{x}}, {{y}} - Selected - {{element}}\",\r\n                translationArgs,\r\n              )\r\n            : t(\"Position {{x}}, {{y}} - {{element}}\", translationArgs)\r\n        }\r\n        accessibilityRole=\"button\"\r\n      >\r\n        <View\r\n          style={{\r\n            width: 34,\r\n            height: 34,\r\n            borderWidth: 1,\r\n            borderColor: props.error\r\n              ? theme.colors.error\r\n              : theme.colors.outline,\r\n            backgroundColor:\r\n              props.selected && props.error\r\n                ? theme.colors.onErrorContainer\r\n                : props.selected\r\n                ? theme.colors.secondaryContainer\r\n                : props.error\r\n                ? theme.colors.errorContainer\r\n                : undefined,\r\n          }}\r\n        >\r\n          {element != null && <GameIcon icon={element.toLowerCase()} />}\r\n        </View>\r\n      </TouchableOpacity>\r\n    ),\r\n    [\r\n      props.x,\r\n      props.y,\r\n      element,\r\n      props.onPress,\r\n      props.selected,\r\n      props.error,\r\n      theme,\r\n    ],\r\n  );\r\n}\r\n\r\nfunction SynchroGrid(props: {\r\n  onGridPress: (x: number, y: number) => void;\r\n  selectedPosition: { x: number; y: number } | undefined;\r\n}) {\r\n  const state = useGameState();\r\n  const theme = useTheme();\r\n\r\n  const rows = useMemo(() => {\r\n    const rows = [];\r\n    for (let i = 0; i < SYNCHRO_ROWS; i++) {\r\n      const currentRow = [];\r\n      for (let j = 0; j < SYNCHRO_COLS; j++) {\r\n        currentRow.push(\r\n          <SynchroGridItem\r\n            x={j}\r\n            y={i}\r\n            selected={\r\n              props.selectedPosition?.x == j && props.selectedPosition?.y == i\r\n            }\r\n            error={hasNegativeSynchroBonusOnTile(state, j, i)}\r\n            key={i.toString() + j.toString()}\r\n            onPress={props.onGridPress.bind(null, j, i)}\r\n          />,\r\n        );\r\n      }\r\n      rows.push(\r\n        <View key={i} style={Styles.flexRowAlignCenter}>\r\n          {currentRow}\r\n        </View>,\r\n      );\r\n    }\r\n    return rows;\r\n  }, [\r\n    JSON.stringify(getCurrentSynchroStrategy(state)),\r\n    props.selectedPosition?.x,\r\n    props.selectedPosition?.y,\r\n  ]);\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View style={{ borderWidth: 1, borderColor: theme.colors.outline }}>\r\n        {rows}\r\n      </View>\r\n    ),\r\n    [theme, rows],\r\n  );\r\n}\r\n\r\nfunction SynchroElement(props: {\r\n  element: SpellElement | undefined;\r\n  onPress: (element: SpellElement | undefined) => void;\r\n}) {\r\n  const state = useGameState();\r\n  const theme = useTheme();\r\n\r\n  const element = props.element;\r\n\r\n  const uses = getTotalOccurrencesInSynchroGrid(state, element);\r\n  const max = calculateMaxOccurrencesInSynchroGrid(state, element);\r\n\r\n  return useMemo(() => {\r\n    if (element == undefined) {\r\n      return (\r\n        <View style={[Styles.flexCenter, { alignSelf: \"flex-start\" }]}>\r\n          <TouchableOpacity\r\n            onPress={props.onPress.bind(null, element)}\r\n            accessible={true}\r\n            accessibilityLabel={t(\"Clear position\")}\r\n            accessibilityRole=\"button\"\r\n          >\r\n            <View\r\n              style={[\r\n                styles.itemContainerStyle,\r\n                { borderColor: theme.colors.outlineVariant },\r\n              ]}\r\n            >\r\n              <GameIcon icon=\"x\" />\r\n            </View>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <View style={Styles.flexCenter}>\r\n        <TouchableOpacity\r\n          onPress={props.onPress.bind(null, element)}\r\n          accessible={true}\r\n          accessibilityLabel={t(\"Set to {{element}}\", {\r\n            element: translateElement(element),\r\n          })}\r\n          accessibilityRole=\"button\"\r\n        >\r\n          <View\r\n            style={[\r\n              styles.itemContainerStyle,\r\n              { borderColor: theme.colors.outlineVariant },\r\n            ]}\r\n          >\r\n            <GameIcon icon={element.toLowerCase()} />\r\n          </View>\r\n        </TouchableOpacity>\r\n        <View style={Styles.mt4}>\r\n          <Text style={{ fontSize: 12 }}>\r\n            {t(\"{{left}}/{{max}}\", {\r\n              left: formatNumber(max - uses),\r\n              max: formatNumber(max),\r\n            })}\r\n          </Text>\r\n        </View>\r\n      </View>\r\n    );\r\n  }, [element, props.onPress, theme, max, uses]);\r\n}\r\n\r\nexport default function Synchro(props: {}) {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const [selectedPosition, setSelectedPosition] = useState<{\r\n    x: number;\r\n    y: number;\r\n  }>(null);\r\n  const onGridPress = useCallback(\r\n    (x: number, y: number) => setSelectedPosition({ x, y }),\r\n    [setSelectedPosition],\r\n  );\r\n\r\n  useEffect(\r\n    () => setSelectedPosition(undefined),\r\n    [state.world.synchro.currentGrid],\r\n  );\r\n\r\n  const onElementPress = useCallback(\r\n    (element: SpellElement) =>\r\n      stateRef.current.apply((state) => {\r\n        return setCurrentSynchroPosition(\r\n          state,\r\n          selectedPosition.x,\r\n          selectedPosition.y,\r\n          element,\r\n        );\r\n      }),\r\n    [selectedPosition],\r\n  );\r\n\r\n  const synchroGrid = useMemo(\r\n    () => (\r\n      <SynchroGrid\r\n        onGridPress={onGridPress}\r\n        selectedPosition={selectedPosition}\r\n      />\r\n    ),\r\n    [onGridPress, selectedPosition],\r\n  );\r\n\r\n  const synchroElementButtons = useMemo(() => {\r\n    const buttons = getFullyUnlockedElements(state)\r\n      .sort(\r\n        (a, b) =>\r\n          valuesOfCached(SpellElement).indexOf(a) -\r\n          valuesOfCached(SpellElement).indexOf(b),\r\n      )\r\n      .map((element) => (\r\n        <SynchroElement\r\n          key={element}\r\n          onPress={onElementPress}\r\n          element={element}\r\n        />\r\n      ));\r\n    buttons.push(\r\n      <SynchroElement\r\n        key=\"clear\"\r\n        onPress={onElementPress}\r\n        element={undefined}\r\n      />,\r\n    );\r\n    return buttons;\r\n  }, [JSON.stringify(getFullyUnlockedElements(state)), onElementPress]);\r\n\r\n  const showIntroMessage = !hasWorldFlag(state, Flag.EverUsedSynchro);\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View style={[Styles.p4, Styles.flex]}>\r\n        <Text h1>{t(\"Synchro\")}</Text>\r\n        <View style={[Styles.flexCenter, Styles.mt8]}>{synchroGrid}</View>\r\n        <View style={[Styles.flexCenter, Styles.mt8, { minHeight: 120 }]}>\r\n          <View\r\n            style={[\r\n              Styles.flexRowAlignCenter,\r\n              {\r\n                width: 34 * 7 + 8 * 6,\r\n                gap: 8,\r\n                flexWrap: \"wrap\",\r\n                justifyContent: \"center\",\r\n              },\r\n            ]}\r\n          >\r\n            {selectedPosition != null && synchroElementButtons}\r\n            {selectedPosition == null && showIntroMessage && (\r\n              <Text style={{ fontStyle: \"italic\" }}>\r\n                {t(\r\n                  \"Welcome to the Synchro screen! You can get started with your Synchro Board by pressing any of the tiles in the grid above.\",\r\n                )}\r\n              </Text>\r\n            )}\r\n          </View>\r\n        </View>\r\n        <View style={Styles.mt8}>\r\n          <SynchroGridSelectors />\r\n        </View>\r\n        <View style={[Styles.flex, Styles.mt8]}>\r\n          <SynchroBottomComponent />\r\n        </View>\r\n      </View>\r\n    ),\r\n    [selectedPosition, synchroElementButtons, synchroGrid, showIntroMessage],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  itemContainerStyle: {\r\n    width: 34,\r\n    height: 34,\r\n    borderWidth: 1,\r\n  },\r\n});\r\n","import { fromEntries, keysOf } from \"../../../utils/CoreUtils\";\r\nimport { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { cacheByArbitraryVersion, cacheByTickCount } from \"../../Caching\";\r\nimport { Flag } from \"../../Flag\";\r\nimport { hasFlag } from \"../../Flags\";\r\nimport { GameState } from \"../../GameState\";\r\nimport {\r\n  Resource,\r\n  getResourceAmount,\r\n  getResourceCap,\r\n  grantResource,\r\n} from \"../../Resources\";\r\nimport { ActionEffect, DoActionArgs } from \"../../action/Action\";\r\nimport {\r\n  ActionArea,\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport {\r\n  SpellElement,\r\n  getElementExpByUsage,\r\n  getUnlockedElements,\r\n} from \"../Elements\";\r\nimport { Spell } from \"../Spell\";\r\nimport { RESOURCE_FOR_ELEMENT } from \"./ChannelingResources\";\r\n\r\nexport abstract class BasicChannelingSpellBase extends Spell {\r\n  getAreas(): Partial<Record<ActionArea, ActionSubcategory[]>> {\r\n    const parentAreas = super.getAreas();\r\n    parentAreas.HOME = [ActionSubcategories.CHANNELING];\r\n    return parentAreas;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.CHANNELING;\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return Math.floor(\r\n      getResourceCap(state, Resource.Mana) * this.getManaCostProportion(),\r\n    );\r\n  }\r\n\r\n  getBaseEssenceEfficiency() {\r\n    return 1.0;\r\n  }\r\n\r\n  getManaCostProportion() {\r\n    return 0.1;\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      essenceEfficiency: {\r\n        value: this.getBaseEssenceEfficiency(),\r\n        tags: [TransformationTags.ChannelingEfficiency],\r\n      },\r\n    };\r\n  }\r\n\r\n  getEssencesToGrant(): Resource | \"all\" {\r\n    return RESOURCE_FOR_ELEMENT[this.getElement()];\r\n  }\r\n\r\n  getEssenceAmountToGrant(state: GameState): number {\r\n    return cacheByTickCount(\r\n      state,\r\n      \"essenceAmountToGrant\" + this.getId(),\r\n      (state) => {\r\n        const effects = this.getActionEffects(state);\r\n        const amount = this.getBaseManaCost(state) * effects.essenceEfficiency;\r\n        return amount;\r\n      },\r\n    );\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const resource = this.getEssencesToGrant();\r\n    const amount = this.getEssenceAmountToGrant(state);\r\n    if (resource === \"all\") {\r\n      const resourceTexts: string[] = [];\r\n      for (let element of getUnlockedElements(state)) {\r\n        resourceTexts.push(\r\n          t(\"+{{amount}}{{resourceIcon}}\", {\r\n            amount: formatNumber(amount),\r\n            resourceIcon:\r\n              \":\" + RESOURCE_FOR_ELEMENT[element].toLowerCase() + \":\",\r\n          }),\r\n        );\r\n      }\r\n      return resourceTexts.join(t(\", \"));\r\n    }\r\n    return t(\r\n      \"^+{{amount}}^<{{resourceIcon}}/:mana: calculation: {{explanation}}>{{resourceIcon}}\",\r\n      {\r\n        amount: formatNumber(amount),\r\n        resourceIcon: `:${resource.toLowerCase()}:`,\r\n        explanation: this.getActionEffectExplanations(\r\n          state,\r\n          \"essenceEfficiency\",\r\n        ).essenceEfficiency,\r\n      },\r\n    );\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return hasFlag(state, Flag.ChannelingUnlocked) && super.isVisible(state);\r\n  }\r\n\r\n  isEnabled(state: GameState, skipAffordabilityChecks?: boolean): boolean {\r\n    return (\r\n      super.isEnabled(state, skipAffordabilityChecks) &&\r\n      this.isCastingRecommended(state)\r\n    );\r\n  }\r\n\r\n  getExpFromUsage(state: GameState): Partial<Record<SpellElement, number>> {\r\n    return cacheByArbitraryVersion(\r\n      state,\r\n      this.getId() + \"expFromUsage\",\r\n      (state) => {\r\n        const elementRequirements = this.getLevelRequirements();\r\n        return fromEntries(\r\n          keysOf(elementRequirements).map((element) => {\r\n            return [\r\n              element,\r\n              getElementExpByUsage(\r\n                state,\r\n                element,\r\n                elementRequirements[element],\r\n                (this.getCost(state).resources[Resource.Mana] ?? 0) *\r\n                  Math.log10(Math.max(1, this.getEssenceAmountToGrant(state))),\r\n                true,\r\n                this.getTags(),\r\n              ),\r\n            ];\r\n          }),\r\n        );\r\n      },\r\n      (state) => Math.floor(Date.now() / 500),\r\n    );\r\n  }\r\n\r\n  doSpellAction(state: GameState, args: DoActionArgs): GameState {\r\n    const resource = this.getEssencesToGrant();\r\n    const amount = this.getEssenceAmountToGrant(state);\r\n\r\n    if (resource === \"all\") {\r\n      for (let element of getUnlockedElements(state)) {\r\n        state = grantResource(RESOURCE_FOR_ELEMENT[element], amount)(state);\r\n      }\r\n      return state;\r\n    }\r\n\r\n    return grantResource(resource, amount)(state);\r\n  }\r\n\r\n  isCastingRecommended(state: GameState): boolean {\r\n    const resource = this.getEssencesToGrant();\r\n    if (resource != \"all\") {\r\n      return (\r\n        getResourceAmount(state, resource) < getResourceCap(state, resource)\r\n      );\r\n    }\r\n    for (let element of getUnlockedElements(state)) {\r\n      if (\r\n        (resource == \"all\" || resource == RESOURCE_FOR_ELEMENT[element]) &&\r\n        getResourceAmount(state, RESOURCE_FOR_ELEMENT[element]) <\r\n          getResourceCap(state, RESOURCE_FOR_ELEMENT[element])\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport { BasicChannelingSpellBase } from \"./BasicChannelingSpellBase\";\r\n\r\nclass ChannelFire extends BasicChannelingSpellBase {\r\n  getId(): string {\r\n    return \"channelFire\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Channel Fire\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Fire;\r\n  }\r\n\r\n  getBaseEssenceEfficiency(): number {\r\n    return 0.75;\r\n  }\r\n\r\n  getManaCostProportion(): number {\r\n    return 0.2;\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\"Channel some of your Mana into Fire Essence, a basic resource.\");\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Fire: 1 };\r\n  }\r\n}\r\n\r\nexport default new ChannelFire();\r\n","import { MaterialIcons } from \"@expo/vector-icons\";\r\nimport React, {\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport {\r\n  NestableDraggableFlatList,\r\n  NestableScrollContainer,\r\n  RenderItem,\r\n  RenderItemParams,\r\n} from \"react-native-draggable-flatlist\";\r\nimport { IconButton, Switch, TextInput, useTheme } from \"react-native-paper\";\r\nimport { getThemeByElementAndDarkMode } from \"../Themes\";\r\nimport { cacheByArbitraryVersion } from \"../backend/Caching\";\r\nimport { Flag } from \"../backend/Flag\";\r\nimport { hasEverHadFlag } from \"../backend/Flags\";\r\nimport { Resource, getResourceCap } from \"../backend/Resources\";\r\nimport {\r\n  AutocastConditionData,\r\n  AutocastRule,\r\n  assignWizardsToPermaCast,\r\n  assignWizardsToRule,\r\n  clearAutocastStrategy,\r\n  estimateExpGainPerSecPerStrategy,\r\n  estimateIntervalBetweenCastsForRule,\r\n  estimateManaConsumptionPerSecPerRule,\r\n  estimateManaConsumptionPerSecPerStrategy,\r\n  estimateManaConsumptionPerSecPermaCast,\r\n  estimateWizardPowerConsumptionPerSecPermaCast,\r\n  estimateWizardsNeededPermaCast,\r\n  explainAutocastPointIncomePerSecPerWizard,\r\n  explainWizardAmount,\r\n  getAutocastPointIncomePerSecPerWizard,\r\n  getAutocastRuleById,\r\n  getAutocastRuleIndexByRule,\r\n  getAutocastStatusByRule,\r\n  getConditionFromData,\r\n  getCurrentAutocastStrategy,\r\n  getFreeWizards,\r\n  getSortedPermaCastSpellList,\r\n  getWizardAmount,\r\n  saveCurrentAutocastStrategy,\r\n  toggleAutocastRuleDisabled,\r\n  toggleAutocastRuleHidden,\r\n  translateSpellAutocastCategory,\r\n} from \"../backend/autocast/Autocast\";\r\nimport { permacastStoryline } from \"../backend/events/storyline/sewers/PermaCast\";\r\nimport { SpellElement, translateElement } from \"../backend/spells/Elements\";\r\nimport { Spells } from \"../backend/spells/Spells\";\r\nimport ChannelFire from \"../backend/spells/channeling/ChannelFire\";\r\nimport { calculateIncomePerSecond } from \"../backend/timetick/IncomeOverTime\";\r\nimport { keysOf, nullthrows } from \"../utils/CoreUtils\";\r\nimport { formatNumber } from \"../utils/FormattingUtils\";\r\nimport { t } from \"../utils/I18n\";\r\nimport { AutocastLoadoutLoadContainer } from \"./utility/AutocastLoadoutLoadContainer\";\r\nimport { Button } from \"./utility/Button\";\r\nimport CategoryContainer from \"./utility/CategoryContainer\";\r\nimport { CheckBox } from \"./utility/CheckBox\";\r\nimport { DragHandle } from \"./utility/DragHandle\";\r\nimport { Markdown } from \"./utility/Markdown\";\r\nimport { Picker } from \"./utility/Picker\";\r\nimport { PlusMinusAllocator } from \"./utility/PlusMinusAllocator\";\r\nimport Styles from \"./utility/Styles\";\r\nimport { Text } from \"./utility/Text\";\r\nimport { GameIcon } from \"./utility/icons/GameIcon\";\r\nimport { useGameState } from \"./utility/useGameState\";\r\n\r\nfunction ConditionRow(props: { condition: AutocastConditionData }) {\r\n  const condition = getConditionFromData(props.condition);\r\n  const state = useGameState();\r\n  const explanation = condition.getDisplayExplanation(\r\n    state,\r\n    props.condition.values,\r\n  );\r\n  return useMemo(() => <Markdown>{explanation}</Markdown>, [explanation]);\r\n}\r\n\r\nfunction PermaCastRow() {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n  const theme = useTheme();\r\n  const strategy = getCurrentAutocastStrategy(state);\r\n\r\n  const onPressPlus = useCallback(\r\n    () => stateRef.current.apply((state) => assignWizardsToPermaCast(state, 1)),\r\n    [],\r\n  );\r\n  const onPressMinus = useCallback(\r\n    () =>\r\n      stateRef.current.apply((state) => assignWizardsToPermaCast(state, -1)),\r\n    [],\r\n  );\r\n\r\n  const hasPermaCastSpells = keysOf(strategy.permaCastRules).length > 0;\r\n  const permaCastSpells = cacheByArbitraryVersion(\r\n    state,\r\n    \"permaCastSpellListSorted\",\r\n    (state) => getSortedPermaCastSpellList(state, strategy),\r\n    (state) => Math.floor(Date.now() / 500),\r\n  );\r\n\r\n  const permaCastSpellList =\r\n    permaCastSpells.length == 0\r\n      ? t(\r\n          \"No spells yet! You can assign spells to Perma-Cast by opening a spell's details in the Spell menu.\",\r\n        )\r\n      : t(\r\n          \"{{number}} spell(s), most expensive by :mana: and :wizardpower:: {{actualSpellList}}\",\r\n          {\r\n            number: permaCastSpells.length,\r\n            actualSpellList: permaCastSpells\r\n              .slice(-5)\r\n              .reverse()\r\n              .map((spell) => spell.getBasicDisplayName(state))\r\n              .join(t(\", \")),\r\n          },\r\n        );\r\n\r\n  const powerNeededPerSec = estimateWizardPowerConsumptionPerSecPermaCast(\r\n    state,\r\n    strategy,\r\n  );\r\n  const manaNeededPerSec = estimateManaConsumptionPerSecPermaCast(\r\n    state,\r\n    strategy,\r\n  );\r\n  const wizardsNeeded = estimateWizardsNeededPermaCast(state, strategy);\r\n  const manaIncome = calculateIncomePerSecond(state).Mana ?? 0;\r\n  const maxManaCost = Math.max(\r\n    ...permaCastSpells.map((spell) => spell.getManaCost(state)),\r\n  );\r\n  const manaCap = getResourceCap(state, Resource.Mana);\r\n\r\n  const warningWizardPower = useMemo(() => {\r\n    let warningWizardPower = null;\r\n    if (strategy.wizardsAssignedToPermaCast < wizardsNeeded) {\r\n      warningWizardPower = (\r\n        <View>\r\n          <Markdown style={{ color: theme.colors.error }}>\r\n            {t(\r\n              \"*Warning: you do not have enough wizards assigned to Perma-Cast! Some of your Perma-Cast spells may not actually get cast.*\",\r\n            )}\r\n          </Markdown>\r\n        </View>\r\n      );\r\n    }\r\n    return warningWizardPower;\r\n  }, [wizardsNeeded, strategy.wizardsAssignedToPermaCast]);\r\n  const warningManaConsumption = useMemo(() => {\r\n    let warningManaConsumption = null;\r\n    if (manaIncome < manaNeededPerSec) {\r\n      warningManaConsumption = (\r\n        <View>\r\n          <Markdown style={{ color: theme.colors.error }}>\r\n            {t(\r\n              \"*Warning: your :mana: income is not enough to support all your Perma-Cast spells! Some of your Perma-Cast spells may not actually get cast, and your :mana: may not increase.*\",\r\n            )}\r\n          </Markdown>\r\n        </View>\r\n      );\r\n    }\r\n    return warningManaConsumption;\r\n  }, [manaIncome, manaNeededPerSec]);\r\n  const warningManaCap = useMemo(() => {\r\n    let warningManaCap = null;\r\n    if (manaCap < maxManaCost) {\r\n      warningManaCap = (\r\n        <View>\r\n          <Markdown style={{ color: theme.colors.error }}>\r\n            {t(\r\n              \"*Warning: your Max:mana: is not high enough to cast at least one of your Perma-Cast spells! Those spells will not get cast, but they will also not consume :mana: or :wizardpower:.*\",\r\n            )}\r\n          </Markdown>\r\n        </View>\r\n      );\r\n    }\r\n    return warningManaCap;\r\n  }, [manaCap, maxManaCost]);\r\n\r\n  const helperText = useMemo(\r\n    () =>\r\n      hasPermaCastSpells\r\n        ? t(\r\n            `*({{wizardPower}}:wizardpower:/s ({{wiz}} Wizards); {{mana}}:mana:/s)*`,\r\n            {\r\n              wizardPower: formatNumber(powerNeededPerSec, {\r\n                showDecimals: true,\r\n              }),\r\n              wiz: formatNumber(wizardsNeeded),\r\n              mana: formatNumber(manaNeededPerSec, { showDecimals: true }),\r\n            },\r\n          )\r\n        : \"\",\r\n    [hasPermaCastSpells, powerNeededPerSec, wizardsNeeded, manaNeededPerSec],\r\n  );\r\n  const topHalf = useMemo(\r\n    () => (\r\n      <View style={Styles.flexRowAlignCenter}>\r\n        <View style={Styles.flex}>\r\n          <Markdown>\r\n            {t(\"***Perma-Cast spells:** {{permaCastSpellList}}*\", {\r\n              permaCastSpellList,\r\n            })}\r\n          </Markdown>\r\n        </View>\r\n      </View>\r\n    ),\r\n    [permaCastSpellList],\r\n  );\r\n  const explanationComponent = useMemo(\r\n    () => (\r\n      <View style={Styles.flexRowAlignCenter}>\r\n        {helperText != \"\" ? <Markdown>{helperText}</Markdown> : null}\r\n      </View>\r\n    ),\r\n    [helperText],\r\n  );\r\n\r\n  const warningComponent = useMemo(\r\n    () => (\r\n      <View>\r\n        {warningWizardPower}\r\n        {warningManaConsumption}\r\n        {warningManaCap}\r\n      </View>\r\n    ),\r\n    [warningWizardPower, warningManaConsumption, warningManaCap],\r\n  );\r\n\r\n  const viewStyle = useMemo(\r\n    () => [\r\n      Styles.flexRowAlignCenter,\r\n      Styles.flex,\r\n      Styles.mv4,\r\n      Styles.p8,\r\n      {\r\n        backgroundColor: !hasPermaCastSpells\r\n          ? theme.colors.surfaceDisabled\r\n          : theme.colors.secondaryContainer,\r\n        borderRadius: 8,\r\n      },\r\n    ],\r\n    [hasPermaCastSpells, theme],\r\n  );\r\n  return useMemo(\r\n    () => (\r\n      <View style={viewStyle}>\r\n        <View style={Styles.flex}>\r\n          {topHalf}\r\n          {explanationComponent}\r\n          {warningComponent}\r\n        </View>\r\n        <View style={[Styles.flexRowAlignCenter, Styles.ml16]}>\r\n          <View style={Styles.mr4}>\r\n            <Text>{strategy.wizardsAssignedToPermaCast}</Text>\r\n          </View>\r\n          <PlusMinusAllocator\r\n            disableMinus={strategy.wizardsAssignedToPermaCast <= 0}\r\n            disablePlus={getFreeWizards(state) <= 0}\r\n            onPressPlus={onPressPlus}\r\n            onPressMinus={onPressMinus}\r\n          />\r\n        </View>\r\n      </View>\r\n    ),\r\n    [\r\n      topHalf,\r\n      explanationComponent,\r\n      warningComponent,\r\n      strategy.wizardsAssignedToPermaCast,\r\n      getFreeWizards(state),\r\n      onPressPlus,\r\n      onPressMinus,\r\n      viewStyle,\r\n    ],\r\n  );\r\n}\r\n\r\nfunction AutocastRuleRow(props: {\r\n  ruleId: string;\r\n  // setEditRow: (ruleId: string) => void;\r\n  toggleDisabled: (ruleId: string) => void;\r\n  onPressMinus: (ruleId: string) => void;\r\n  onPressPlus: (ruleId: string) => void;\r\n  onDelete: (ruleId: string) => void;\r\n}) {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n  const { ruleId, onPressMinus, onPressPlus, toggleDisabled, onDelete } = props;\r\n  const rule = getAutocastRuleById(state, ruleId);\r\n  const ruleStatus = getAutocastStatusByRule(state, rule);\r\n  const spell = Spells.getByIdNullable(rule?.spellId);\r\n  const wizardPointCap = spell?.getAutocastPointsRequirement(state);\r\n  const manaCost = spell?.getCost(state)?.resources[Resource.Mana];\r\n  const isSpellVisible = spell?.isVisible(state);\r\n  const intervalBetweenCasts = estimateIntervalBetweenCastsForRule(\r\n    state,\r\n    rule,\r\n    ruleStatus,\r\n  );\r\n  const manaCostPerSec = estimateManaConsumptionPerSecPerRule(\r\n    state,\r\n    rule,\r\n    ruleStatus,\r\n  );\r\n  const hideRule = useCallback(\r\n    () => stateRef.current.apply((s) => toggleAutocastRuleHidden(s, rule)),\r\n    [rule],\r\n  );\r\n  const helperText = useMemo(\r\n    () =>\r\n      ruleStatus.wizardsAssigned > 0 && !ruleStatus.disabled\r\n        ? t(`*({{secs}}s/cast; {{mana}}:mana:/s)*`, {\r\n            secs: formatNumber(intervalBetweenCasts, { showDecimals: true }),\r\n            mana: formatNumber(manaCostPerSec, { showDecimals: true }),\r\n          })\r\n        : \"\",\r\n    [\r\n      intervalBetweenCasts,\r\n      ruleStatus.wizardsAssigned,\r\n      ruleStatus.disabled,\r\n      manaCostPerSec,\r\n    ],\r\n  );\r\n  const wizardPointStatusComponent = useMemo(\r\n    () => (\r\n      <View style={[Styles.flexRowAlignCenter, Styles.mr8, { marginTop: 2 }]}>\r\n        <GameIcon icon=\"wizardpower\" small={true} style={Styles.mr4} />\r\n        <Text>\r\n          {t(\"{{amount}}/{{cap}}\", {\r\n            amount: formatNumber(ruleStatus.currentPoints),\r\n            cap: formatNumber(wizardPointCap) ?? 0,\r\n          })}\r\n        </Text>\r\n      </View>\r\n    ),\r\n    [formatNumber(ruleStatus.currentPoints), wizardPointCap],\r\n  );\r\n  const topHalf = useMemo(\r\n    () => (\r\n      <View style={Styles.flexRowAlignCenter}>\r\n        <View style={[Styles.flex, { marginTop: -4 }]}>\r\n          {rule.spellId == \"checkOnly\" ? (\r\n            <Markdown>\r\n              {t(\"Stop processing rules below if conditions not met:\")}\r\n            </Markdown>\r\n          ) : !isSpellVisible ? (\r\n            <Markdown>{t(\"[Rule hidden as spell is not unlocked]\")}</Markdown>\r\n          ) : rule.conditions.length == 0 ? (\r\n            <Markdown>\r\n              {t(\"*{{spellName}}*\", {\r\n                spellName: nullthrows(spell).getBasicDisplayName(state),\r\n              })}\r\n            </Markdown>\r\n          ) : (\r\n            <Markdown>\r\n              {t(\"*{{spellName}}*) if:\", {\r\n                spellName: nullthrows(spell).getBasicDisplayName(state),\r\n              })}\r\n            </Markdown>\r\n          )}\r\n          {rule.conditions.map((condition, idx) => (\r\n            <ConditionRow condition={condition} key={idx} />\r\n          ))}\r\n        </View>\r\n        {spell != null && (\r\n          <View style={[Styles.flexRowAlignCenter, Styles.ml8]}>\r\n            <View style={Styles.mr4}>\r\n              <Text>{ruleStatus.wizardsAssigned}</Text>\r\n            </View>\r\n            <PlusMinusAllocator\r\n              disableMinus={!isSpellVisible || ruleStatus.wizardsAssigned <= 0}\r\n              disablePlus={!isSpellVisible || getFreeWizards(state) <= 0}\r\n              onPressPlus={onPressPlus.bind(null, ruleId)}\r\n              onPressMinus={onPressMinus.bind(null, ruleId)}\r\n            />\r\n          </View>\r\n        )}\r\n      </View>\r\n    ),\r\n    [\r\n      ruleId,\r\n      JSON.stringify(rule.conditions),\r\n      isSpellVisible,\r\n      spell != null && spell.getBasicDisplayName(state),\r\n      manaCost,\r\n      ruleStatus.wizardsAssigned,\r\n      getFreeWizards(state),\r\n      onPressMinus,\r\n      onPressPlus,\r\n    ],\r\n  );\r\n  const rightSide = useMemo(\r\n    () => (\r\n      <View\r\n        style={[\r\n          Styles.ml4,\r\n          Styles.mr4,\r\n          {\r\n            alignSelf: \"stretch\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-around\",\r\n          },\r\n        ]}\r\n      >\r\n        <Switch\r\n          value={!ruleStatus.disabled}\r\n          onValueChange={toggleDisabled.bind(null, ruleId)}\r\n        />\r\n        <View style={Styles.flexRowAlignCenter}>\r\n          <IconButton\r\n            icon={(props) => (\r\n              <MaterialIcons name=\"remove\" size={20} color={props.color} />\r\n            )}\r\n            style={[{ margin: 0, width: 20, height: 20 }, Styles.mr4]}\r\n            onPress={hideRule}\r\n          />\r\n          <IconButton\r\n            icon={(props) => (\r\n              <MaterialIcons name=\"close\" size={20} color={props.color} />\r\n            )}\r\n            style={{ margin: 0, width: 20, height: 20 }}\r\n            onPress={() => onDelete(ruleId)}\r\n          />\r\n        </View>\r\n      </View>\r\n    ),\r\n    [ruleStatus.disabled, toggleDisabled, ruleId, onDelete, hideRule],\r\n  );\r\n  const explanationComponent = useMemo(\r\n    () =>\r\n      spell != null &&\r\n      isSpellVisible && (\r\n        <View style={Styles.flexRowAlignCenter}>\r\n          {wizardPointStatusComponent}\r\n          <Markdown>{helperText}</Markdown>\r\n        </View>\r\n      ),\r\n    [wizardPointStatusComponent, helperText, rule.spellId, isSpellVisible],\r\n  );\r\n  return useMemo(\r\n    () => (\r\n      <View style={[Styles.flexRowAlignCenter, Styles.flex]}>\r\n        <View style={Styles.flex}>\r\n          {topHalf}\r\n          {explanationComponent}\r\n        </View>\r\n        {rightSide}\r\n      </View>\r\n    ),\r\n    [topHalf, rightSide, explanationComponent],\r\n  );\r\n}\r\n\r\nfunction AutocastRuleRowContainer(props: {\r\n  params: RenderItemParams<AutocastRule>;\r\n  // editRow: number;\r\n  saveRule: (rule: AutocastRule) => void;\r\n  deleteRule: (ruleId: string) => void;\r\n  // setEditRow: (ruleId: string) => void;\r\n  toggleDisabled: (ruleId: string) => void;\r\n  onPressMinus: (ruleId: string) => void;\r\n  onPressPlus: (ruleId: string) => void;\r\n}) {\r\n  const {\r\n    params,\r\n    // editRow,\r\n    saveRule,\r\n    deleteRule,\r\n    // setEditRow,\r\n    toggleDisabled,\r\n    onPressMinus,\r\n    onPressPlus,\r\n  } = props;\r\n  const rule = params.item;\r\n  //const idx = params.getIndex();\r\n  const theme = useTheme();\r\n  const spell = Spells.getByIdNullable(rule.spellId);\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n  const ruleStatus = getAutocastStatusByRule(state, rule);\r\n  const ruleDisabled =\r\n    ruleStatus.disabled ||\r\n    (spell != null && ruleStatus.wizardsAssigned <= 0) ||\r\n    (spell != null && !spell.isVisible(state));\r\n\r\n  const dragHandle = useMemo(\r\n    () => <DragHandle drag={params.drag} />,\r\n    [params.drag],\r\n  );\r\n\r\n  const isDark = theme.dark;\r\n  const isHidden = ruleStatus.hidden;\r\n\r\n  const surfaceColor =\r\n    spell != null && spell.getElement() != null\r\n      ? getThemeByElementAndDarkMode(spell.getElement(), isDark).colors\r\n          .secondaryContainer\r\n      : theme.colors.secondaryContainer;\r\n\r\n  const viewStyle = useMemo(\r\n    () => [\r\n      Styles.flexRowAlignCenter,\r\n      Styles.flex,\r\n      Styles.mv4,\r\n      Styles.p4,\r\n      {\r\n        backgroundColor: ruleDisabled\r\n          ? theme.colors.surfaceDisabled\r\n          : surfaceColor,\r\n        borderRadius: 8,\r\n      },\r\n    ],\r\n    [ruleDisabled, theme, surfaceColor],\r\n  );\r\n\r\n  const boundSave = useMemo(() => saveRule.bind(null), [saveRule]);\r\n  const boundDelete = useMemo(\r\n    () => deleteRule.bind(null, rule.id),\r\n    [rule.id, deleteRule],\r\n  );\r\n\r\n  const unhideRule = useCallback(\r\n    () => stateRef.current.apply((s) => toggleAutocastRuleHidden(s, rule)),\r\n    [rule.id],\r\n  );\r\n  const unhideIconFn = useCallback(\r\n    (props) => (\r\n      <MaterialIcons name=\"unfold-more\" size={20} color={props.color} />\r\n    ),\r\n    [],\r\n  );\r\n\r\n  const hiddenViewStyle = useMemo(\r\n    () => [Styles.flexRowSpaceBetween, Styles.ph8],\r\n    [],\r\n  );\r\n  const hiddenText = useMemo(\r\n    () =>\r\n      t(\"{{spellName}} (hidden){{wizardCount}}\", {\r\n        spellName: spell.getBasicDisplayName(state),\r\n        wizardCount:\r\n          ruleStatus.wizardsAssigned > 0\r\n            ? t(\" ({{wizardCount}})\", {\r\n                wizardCount: formatNumber(ruleStatus.wizardsAssigned),\r\n              })\r\n            : \"\",\r\n      }),\r\n    [spell.getDisplayName(state), ruleStatus.wizardsAssigned],\r\n  );\r\n  return useMemo(\r\n    () =>\r\n      !isHidden ? (\r\n        <View style={viewStyle}>\r\n          {dragHandle}\r\n          <AutocastRuleRow\r\n            ruleId={rule.id}\r\n            // setEditRow={setEditRow}\r\n            onPressMinus={onPressMinus}\r\n            onPressPlus={onPressPlus}\r\n            onDelete={deleteRule}\r\n            toggleDisabled={toggleDisabled}\r\n          />\r\n        </View>\r\n      ) : (\r\n        <View style={hiddenViewStyle}>\r\n          <Text key=\"hiddenText\">{hiddenText}</Text>\r\n          <IconButton\r\n            key=\"unhide\"\r\n            icon={unhideIconFn}\r\n            style={styles.unfoldButton}\r\n            onPress={unhideRule}\r\n          />\r\n        </View>\r\n      ),\r\n    [\r\n      isHidden,\r\n      viewStyle,\r\n      dragHandle,\r\n      rule.id,\r\n      rule,\r\n      boundSave,\r\n      boundDelete,\r\n      // setEditRow,\r\n      onPressMinus,\r\n      onPressPlus,\r\n      toggleDisabled,\r\n      hiddenViewStyle,\r\n      hiddenText,\r\n      unhideIconFn,\r\n      unhideRule,\r\n    ],\r\n  );\r\n}\r\n\r\nfunction WizardsBottomComponent(props) {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const strategy = getCurrentAutocastStrategy(state);\r\n\r\n  const theme = useTheme();\r\n\r\n  const manaConsumption = estimateManaConsumptionPerSecPerStrategy(\r\n    state,\r\n    strategy,\r\n  );\r\n  const manaIncome = calculateIncomePerSecond(state)?.Mana ?? 0;\r\n\r\n  const expGain = estimateExpGainPerSecPerStrategy(\r\n    state,\r\n    getCurrentAutocastStrategy(state),\r\n  );\r\n  let maxExpGain = 0,\r\n    maxExpGainElement = SpellElement.Fire;\r\n  for (let element of keysOf(expGain)) {\r\n    if (expGain[element] > maxExpGain) {\r\n      maxExpGainElement = element;\r\n      maxExpGain = expGain[element];\r\n    }\r\n  }\r\n\r\n  const wizardPowerProductionPerWizard =\r\n    getAutocastPointIncomePerSecPerWizard(state);\r\n  const wizardPowerProductionPerWizardExplanation =\r\n    explainAutocastPointIncomePerSecPerWizard(state);\r\n\r\n  const totalWizards = getWizardAmount(state);\r\n  const explainTotalWizards = explainWizardAmount(state);\r\n\r\n  const bottomComponent = useMemo(\r\n    () => (\r\n      <View\r\n        style={[\r\n          styles.loadoutsContainer,\r\n          { borderColor: theme.colors.outlineVariant },\r\n        ]}\r\n      >\r\n        <View style={[Styles.flexRowAlignCenter]}>\r\n          <View style={[Styles.flex, Styles.mr8]}>\r\n            <Markdown>{t(\"Wizards remaining:\")}</Markdown>\r\n          </View>\r\n          <View>\r\n            <Markdown>\r\n              {t(\r\n                \"{{remainingWizards}}/^{{totalWizards}}^<{{explainTotalWizards}}>\",\r\n                {\r\n                  remainingWizards: getFreeWizards(state),\r\n                  totalWizards: totalWizards,\r\n                  explainTotalWizards: explainTotalWizards,\r\n                },\r\n              )}\r\n            </Markdown>\r\n          </View>\r\n        </View>\r\n        <View style={[Styles.flexRowAlignCenter]}>\r\n          <View style={[Styles.flex, Styles.mr8]}>\r\n            <Markdown>{t(\"Wizard Power production per Wizard:\")}</Markdown>\r\n          </View>\r\n          <View>\r\n            <Markdown>\r\n              {t(\"^{{amount}}^<{{explanation}}>:wizardpower:/sec\", {\r\n                amount: formatNumber(wizardPowerProductionPerWizard, {\r\n                  showDecimals: true,\r\n                }),\r\n                explanation: wizardPowerProductionPerWizardExplanation,\r\n              })}\r\n            </Markdown>\r\n          </View>\r\n        </View>\r\n        <View style={[Styles.flexRowAlignCenter]}>\r\n          <View style={[Styles.flex, Styles.mr8]}>\r\n            <Markdown>{t(\"Estimated Mana consumption:\")}</Markdown>\r\n          </View>\r\n          <View>\r\n            <Markdown\r\n              style={\r\n                manaConsumption > manaIncome && { color: theme.colors.error }\r\n              }\r\n            >\r\n              {t(\"{{amount}}:mana:/sec\", {\r\n                amount: formatNumber(manaConsumption, { showDecimals: true }),\r\n              })}\r\n            </Markdown>\r\n          </View>\r\n        </View>\r\n        <View style={[Styles.flexRowAlignCenter]}>\r\n          <View style={[Styles.flex, Styles.mr8]}>\r\n            <Markdown>{t(\"Estimated exp gain:\")}</Markdown>\r\n          </View>\r\n          <View>\r\n            <Markdown>\r\n              {maxExpGain > 0\r\n                ? t(\"{{amount}} {{mainElement}} + others / min\", {\r\n                    amount: formatNumber(maxExpGain * 60, {\r\n                      showDecimals: true,\r\n                    }),\r\n                    mainElement: translateElement(maxExpGainElement),\r\n                  })\r\n                : t(\"-\")}\r\n            </Markdown>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    ),\r\n    [\r\n      theme,\r\n      getFreeWizards(state),\r\n      totalWizards,\r\n      explainTotalWizards,\r\n      wizardPowerProductionPerWizard,\r\n      wizardPowerProductionPerWizardExplanation,\r\n      manaConsumption,\r\n      manaIncome,\r\n      maxExpGain,\r\n      maxExpGainElement,\r\n    ],\r\n  );\r\n  return bottomComponent;\r\n}\r\n\r\nfunction WizardsMainComponent(props: {}) {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const theme = useTheme();\r\n\r\n  const strategy = getCurrentAutocastStrategy(state);\r\n\r\n  // const [editRow, setEditRow] = useState<number | undefined>(undefined);\r\n\r\n  const saveRule = useCallback((rule: AutocastRule) => {\r\n    stateRef.current.apply((s) => {\r\n      const currentStrategy = getCurrentAutocastStrategy(s);\r\n      const idx = getAutocastRuleIndexByRule(state, rule);\r\n      currentStrategy.rules[idx] = rule;\r\n      s.run.autocast.rules[rule.id] = {\r\n        currentPoints: 0,\r\n        wizardsAssigned: rule.wizardsAssigned,\r\n        disabled: rule.disabled,\r\n        hidden: false,\r\n      };\r\n      return s;\r\n    });\r\n    // setEditRow(undefined);\r\n  }, []);\r\n\r\n  const deleteRule = useCallback((ruleId: string) => {\r\n    stateRef.current.apply((s) => {\r\n      const currentStrategy = getCurrentAutocastStrategy(s);\r\n      currentStrategy.rules = currentStrategy.rules.filter(\r\n        (rule) => rule.id != ruleId,\r\n      );\r\n      return s;\r\n    });\r\n    // setEditRow(undefined);\r\n  }, []);\r\n\r\n  const toggleDisabled = useCallback((ruleId: string) => {\r\n    stateRef.current.apply((s) =>\r\n      toggleAutocastRuleDisabled(s, getAutocastRuleById(s, ruleId)),\r\n    );\r\n  }, []);\r\n\r\n  const onPressPlus = useCallback((ruleId: string) => {\r\n    stateRef.current.apply((s) =>\r\n      assignWizardsToRule(s, getAutocastRuleById(s, ruleId), 1),\r\n    );\r\n  }, []);\r\n\r\n  const onPressMinus = useCallback((ruleId: string) => {\r\n    stateRef.current.apply((s) =>\r\n      assignWizardsToRule(s, getAutocastRuleById(s, ruleId), -1),\r\n    );\r\n  }, []);\r\n\r\n  const renderItem: RenderItem<AutocastRule> = useCallback(\r\n    (params: RenderItemParams<AutocastRule>) => (\r\n      <AutocastRuleRowContainer\r\n        params={params}\r\n        saveRule={saveRule}\r\n        deleteRule={deleteRule}\r\n        // editRow={editRow}\r\n        // setEditRow={setEditRow}\r\n        onPressMinus={onPressMinus}\r\n        onPressPlus={onPressPlus}\r\n        toggleDisabled={toggleDisabled}\r\n      />\r\n    ),\r\n    [\r\n      saveRule,\r\n      deleteRule,\r\n      // editRow,\r\n      // setEditRow,\r\n      onPressMinus,\r\n      onPressPlus,\r\n      toggleDisabled,\r\n    ],\r\n  );\r\n  const keyExtractor = useCallback(\r\n    (rule: AutocastRule, idx: number) => rule.id,\r\n    [],\r\n  );\r\n\r\n  const addNewRule = useCallback(() => {\r\n    stateRef.current.apply((s) => {\r\n      const currentStrategy = getCurrentAutocastStrategy(s);\r\n      currentStrategy.rules.push({\r\n        id: Math.random().toString(),\r\n        disabled: true,\r\n        wizardsAssigned: 0,\r\n        spellId: ChannelFire.getId(),\r\n        conditions: [],\r\n      });\r\n      s.global.autocast.currentStrategy = currentStrategy;\r\n      return s;\r\n    });\r\n  }, []);\r\n\r\n  const showPermaCast = permacastStoryline.isBonusActive(state);\r\n\r\n  const rulesByAutocastCategory = useMemo(() => {\r\n    const rulesByAutocastCategory = {};\r\n    for (let rule of strategy.rules) {\r\n      const category = Spells.getById(rule.spellId).getAutocastCategory();\r\n      if (rulesByAutocastCategory[category] == null) {\r\n        rulesByAutocastCategory[category] = [];\r\n      }\r\n      rulesByAutocastCategory[category].push(rule);\r\n    }\r\n    return rulesByAutocastCategory;\r\n  }, [JSON.stringify(strategy.rules)]);\r\n\r\n  const togglePause = useCallback(() => {\r\n    stateRef.current.apply((state) => {\r\n      state.run.autocast.autocastPaused = !state.run.autocast.autocastPaused;\r\n      return state;\r\n    });\r\n  }, []);\r\n  const paused = state.run.autocast.autocastPaused;\r\n\r\n  const mainComponent = useMemo(\r\n    () => (\r\n      <NestableScrollContainer>\r\n        {(keysOf(rulesByAutocastCategory).length > 0 || showPermaCast) && (\r\n          <View style={[Styles.ph4, Styles.mt8]}>\r\n            <CheckBox\r\n              title={\r\n                <View style={Styles.flex}>\r\n                  <Text style={paused && { color: theme.colors.error }}>\r\n                    {t(\"Pause all Wizards\")}\r\n                  </Text>\r\n                </View>\r\n              }\r\n              checked={paused}\r\n              onPress={togglePause}\r\n            />\r\n          </View>\r\n        )}\r\n        {showPermaCast ? (\r\n          <View style={[Styles.ph4, Styles.mt8]}>\r\n            <PermaCastRow />\r\n          </View>\r\n        ) : undefined}\r\n        {keysOf(rulesByAutocastCategory).length == 0 && !showPermaCast && (\r\n          <Markdown>\r\n            {t(\r\n              \"*You have no rules currently set for your Wizards! You can tell them to cast spells for you from the Spell menu (by expanding a spell's details) or from the Transmute screen.*\",\r\n            )}\r\n          </Markdown>\r\n        )}\r\n        {keysOf(rulesByAutocastCategory).map((category) => (\r\n          <CategoryContainer\r\n            key={category}\r\n            title={translateSpellAutocastCategory(category)}\r\n            containerStyle={Styles.ph4}\r\n          >\r\n            <NestableDraggableFlatList\r\n              style={styles.container}\r\n              containerStyle={[Styles.flex, styles.contentContainer]}\r\n              // containerStyle={Styles.flex}\r\n              // style={Styles.flex}\r\n              data={rulesByAutocastCategory[category]}\r\n              renderItem={renderItem}\r\n              keyExtractor={keyExtractor}\r\n              onDragEnd={(params) => {\r\n                stateRef.current.apply((state) => {\r\n                  const strategy = getCurrentAutocastStrategy(state);\r\n                  const ruleIndices = [];\r\n                  const ruleIds = params.data.map((rule) => rule.id);\r\n                  for (let idx in strategy.rules) {\r\n                    const rule = strategy.rules[idx];\r\n                    if (ruleIds.includes(rule.id)) {\r\n                      ruleIndices.push(idx);\r\n                    }\r\n                  }\r\n                  for (let idx in params.data) {\r\n                    const rule = params.data[idx];\r\n                    strategy.rules[ruleIndices[idx]] = rule;\r\n                  }\r\n                  state.global.autocast.currentStrategy = strategy;\r\n                  return state;\r\n                });\r\n              }}\r\n            />\r\n          </CategoryContainer>\r\n        ))}\r\n      </NestableScrollContainer>\r\n    ),\r\n    [\r\n      renderItem,\r\n      keyExtractor,\r\n      showPermaCast,\r\n      rulesByAutocastCategory,\r\n      theme,\r\n      paused,\r\n      togglePause,\r\n    ],\r\n  );\r\n\r\n  // const mainComponent = useMemo(\r\n  //   () => (\r\n  //     // <ScrollView\r\n  //     //\r\n  //     // >\r\n  //     <DraggableFlatList\r\n  //       style={styles.container}\r\n  //       containerStyle={[Styles.flex, styles.contentContainer]}\r\n  //       // containerStyle={Styles.flex}\r\n  //       // style={Styles.flex}\r\n  //       data={strategy.rules}\r\n  //       renderItem={renderItem}\r\n  //       keyExtractor={keyExtractor}\r\n  //       ListHeaderComponent={showPermaCast ? <PermaCastRow /> : undefined}\r\n  //       onDragEnd={(params) => {\r\n  //         stateRef.current.apply((state) => {\r\n  //           const strategy = getCurrentAutocastStrategy(state);\r\n  //           strategy.rules = params.data;\r\n  //           state.global.autocast.currentStrategy = strategy;\r\n  //           return state;\r\n  //         });\r\n  //       }}\r\n  //       ListEmptyComponent={\r\n  //         !showPermaCast ? (\r\n  //           <Markdown>\r\n  //             {t(\r\n  //               \"*You have no rules currently set for your Wizards! You can tell them to cast spells for you from the Spell menu (by expanding a spell's details) or from the Transmute screen.*\",\r\n  //             )}\r\n  //           </Markdown>\r\n  //         ) : undefined\r\n  //       }\r\n  //     ></DraggableFlatList>\r\n  //     // </ScrollView>\r\n  //   ),\r\n  //   [renderItem, keyExtractor, showPermaCast, JSON.stringify(strategy.rules)],\r\n  // );\r\n  return mainComponent;\r\n}\r\n\r\nexport default function Wizards(props: {}) {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const [slotNumber, setSlotNumber] = useState<string>(\r\n    state.global.autocast.lastStrategyIndex?.toString?.() ?? \"0\",\r\n  );\r\n\r\n  const loadoutAmount = 8;\r\n  const loadoutsSlotPicker = useMemo(() => {\r\n    const items = [];\r\n    for (let i = 0; i < loadoutAmount; i++) {\r\n      items.push({\r\n        key: i.toString(),\r\n        value: i.toString(),\r\n        label: t(\"Slot {{idx}}\", { idx: i + 1 }),\r\n      });\r\n    }\r\n    return (\r\n      <Picker\r\n        onValueChange={setSlotNumber}\r\n        selectedValue={slotNumber}\r\n        disablePlaceholder={true}\r\n        data={items}\r\n      />\r\n    );\r\n  }, [loadoutAmount, setSlotNumber, slotNumber]);\r\n\r\n  const loadoutObjects = state.global.autocast.savedStrategies;\r\n\r\n  const [loadoutName, setLoadoutName] = useState(\"\");\r\n\r\n  useEffect(\r\n    () =>\r\n      setLoadoutName(\r\n        slotNumber != null\r\n          ? loadoutObjects?.[Number.parseInt(slotNumber)]?.name ?? \"\"\r\n          : \"\",\r\n      ),\r\n    [slotNumber],\r\n  );\r\n\r\n  useEffect(() => {\r\n    setSlotNumber(state.global.autocast.lastStrategyIndex?.toString?.() ?? \"0\");\r\n  }, [state.global.autocast.lastStrategyIndex]);\r\n\r\n  const showHeader = hasEverHadFlag(state, Flag.AssignedWizard);\r\n\r\n  const headerComponent = useMemo(\r\n    () => (\r\n      <View style={Styles.ph4}>\r\n        <CategoryContainer title={t(\"Strategies\")}>\r\n          <View key=\"strat\" style={Styles.mt8}>\r\n            <View key=\"strat\">\r\n              <View style={Styles.flexRowAlignCenter}>\r\n                <View style={Styles.flex}>\r\n                  <Text>{t(\"Save:\")}</Text>\r\n                </View>\r\n                {loadoutsSlotPicker}\r\n              </View>\r\n              <View key=\"strat\" style={[Styles.flexRowAlignCenter, Styles.mt4]}>\r\n                <TextInput\r\n                  key=\"strat\"\r\n                  label={t(\"Strategy name\")}\r\n                  value={loadoutName}\r\n                  onChangeText={(text) => setLoadoutName(text)}\r\n                  mode=\"outlined\"\r\n                  dense={true}\r\n                  style={Styles.flex}\r\n                  maxLength={20}\r\n                />\r\n                <View style={[Styles.ml8, Styles.flexRowAlignCenter]}>\r\n                  <Button\r\n                    compact={true}\r\n                    onPress={() => {\r\n                      stateRef.current.apply((state) =>\r\n                        saveCurrentAutocastStrategy(\r\n                          state,\r\n                          loadoutName,\r\n                          Number.parseInt(slotNumber),\r\n                        ),\r\n                      );\r\n                    }}\r\n                  >\r\n                    {t(\"Save\")}\r\n                  </Button>\r\n                  <Button\r\n                    compact={true}\r\n                    style={Styles.ml4}\r\n                    onPress={() => {\r\n                      setLoadoutName(\"\");\r\n                      stateRef.current.apply((state) =>\r\n                        clearAutocastStrategy(\r\n                          state,\r\n                          Number.parseInt(slotNumber),\r\n                        ),\r\n                      );\r\n                    }}\r\n                  >\r\n                    {t(\"Clear\")}\r\n                  </Button>\r\n                </View>\r\n              </View>\r\n            </View>\r\n            <View style={Styles.mt8}>\r\n              <AutocastLoadoutLoadContainer />\r\n            </View>\r\n          </View>\r\n        </CategoryContainer>\r\n      </View>\r\n    ),\r\n    [slotNumber, loadoutName, setLoadoutName, loadoutsSlotPicker],\r\n  );\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View style={styles.campusContainer}>\r\n        {showHeader && headerComponent}\r\n        <WizardsMainComponent />\r\n        <WizardsBottomComponent />\r\n      </View>\r\n    ),\r\n    [showHeader, headerComponent],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n  },\r\n  contentContainer: {\r\n    paddingVertical: 8,\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  hintContents: {\r\n    marginLeft: 16,\r\n    marginTop: 8,\r\n    paddingRight: 32,\r\n  },\r\n  hintContentsText: {\r\n    fontStyle: \"italic\",\r\n  },\r\n  hintProgress: {\r\n    marginTop: 4,\r\n  },\r\n  loadoutsContainer: {\r\n    borderTopWidth: 1,\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 4,\r\n  },\r\n  categoryTitle: {\r\n    marginLeft: 8,\r\n  },\r\n  categoryContainer: {\r\n    paddingTop: 4,\r\n    marginBottom: 8,\r\n  },\r\n  campusContainer: {\r\n    flex: 1,\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  campusHintWarning: {\r\n    marginTop: 16,\r\n  },\r\n  unfoldButton: { margin: 0, width: 20, height: 20 },\r\n});\r\n","import color from \"color\";\r\nimport * as Clipboard from \"expo-clipboard\";\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { Platform, StyleSheet, View } from \"react-native\";\r\nimport { Card } from \"react-native-paper\";\r\nimport { formatMultiplier, formatNumber } from \"../utils/FormattingUtils\";\r\nimport { Card as UtilityCard } from \"./utility/Card\";\r\nimport { Markdown } from \"./utility/Markdown\";\r\nimport { Text } from \"./utility/Text\";\r\n\r\nimport { useTheme } from \"react-native-paper\";\r\nimport {\r\n  BASE_BOON_POINTS_PER_WORLD,\r\n  MAX_BOON_LEVEL,\r\n  getBlazingSpeedLevel,\r\n  getIncrementalPointsRequiredForLevel,\r\n  getMaxPossibleDifficultyLevel,\r\n  getNewBoonPointsAvailable,\r\n  getNewGamePlusAccuracyAndDodgeMultiplier,\r\n  getNewGamePlusAttackDelayMultiplier,\r\n  getNewGamePlusBoonPointsEarnedMultiplier,\r\n  getNewGamePlusChannelingAndSalePriceMultiplier,\r\n  getNewGamePlusElementMaxLevelBonus,\r\n  getNewGamePlusExpGainMultiplier,\r\n  getNewGamePlusFamiliarMaxLevelBonus,\r\n  getNewGamePlusHpMultiplier,\r\n  getNewGamePlusItemQualityMaxBonus,\r\n  getNewGamePlusLootMultiplier,\r\n  getNewGamePlusOtherStatMultiplier,\r\n  getNewGamePlusProductionMultiplier,\r\n  getNewGamePlusStorageMultiplier,\r\n  getPointsRequiredForConfiguration,\r\n  getSheerPowerLevel,\r\n  getStorylineOracleLevel,\r\n  getStorylinesToUnlockForSpecificOracleLevel,\r\n  getTotalAvailableBoonPoints,\r\n  getTotalPointsRequiredForLevel,\r\n  getWorldDifficultyLevel,\r\n  triggerNewGamePlus,\r\n} from \"../backend/NewGamePlus\";\r\nimport { serializeSaveData } from \"../backend/SaveData\";\r\nimport { FAMILIAR_LEVEL_CAP_BASE } from \"../backend/familiars/FamiliarClass\";\r\nimport { INITIAL_MAX_ITEM_QUALITY } from \"../backend/items/Item\";\r\nimport { ELEMENT_LEVEL_CAP_BASE } from \"../backend/spells/Elements\";\r\nimport { SAVE_TO_FILE_SUPPORTED, saveToFile } from \"../utils/FilesystemSave\";\r\nimport { t } from \"../utils/I18n\";\r\nimport { Button } from \"./utility/Button\";\r\nimport { PlusMinusAllocator } from \"./utility/PlusMinusAllocator\";\r\nimport Styles from \"./utility/Styles\";\r\nimport { VisibilityContext } from \"./utility/VisibilityContext\";\r\nimport { useGameState } from \"./utility/useGameState\";\r\n\r\nconst SheerPowerDescription = React.memo((props: { level: number }) => {\r\n  const level = props.level;\r\n\r\n  const explanationBase = (\r\n    <Markdown>\r\n      {t(\r\n        `The Sheer Power Boon increases the limit of how strong you can be. It increases level and item quality caps and maximum Storage, as well as boosting production slightly across the board. At some point, if you hope to defeat ever more difficult foes, this Boon will be necessary.`,\r\n      )}\r\n    </Markdown>\r\n  );\r\n\r\n  if (level == 0) {\r\n    return (\r\n      <View>\r\n        <View>{explanationBase}</View>\r\n        <View>\r\n          <Markdown>\r\n            {t(`Your Sheer Power level will be 0. You will get no benefits.`)}\r\n          </Markdown>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  const elementMaxLevelBonus = getNewGamePlusElementMaxLevelBonus(level);\r\n  const familiarMaxLevelBonus = getNewGamePlusFamiliarMaxLevelBonus(level);\r\n  const itemQualityBonus = getNewGamePlusItemQualityMaxBonus(level);\r\n\r\n  return (\r\n    <View>\r\n      <View>{explanationBase}</View>\r\n      <View>\r\n        <Markdown>\r\n          {t(\r\n            `Your Sheer Power level will be {{level}}. You will get the following benefits:\r\n    \r\n* Your maximum Element level will become **{{maxElementLevel}}**;\r\n* Your maximum Familiar level will become **{{maxFamiliarLevel}}**;\r\n* The maximum item quality will become **+{{maxItemQuality}}**;\r\n* **{{storageMultiplier}}** bonus to all Storage maximums (except :mana: and :timepiece:);\r\n* **{{productionMultiplier}}** bonus to all Production`,\r\n            {\r\n              level: formatNumber(level),\r\n              maxElementLevel: formatNumber(\r\n                ELEMENT_LEVEL_CAP_BASE + elementMaxLevelBonus,\r\n              ),\r\n              maxFamiliarLevel: formatNumber(\r\n                FAMILIAR_LEVEL_CAP_BASE + familiarMaxLevelBonus,\r\n              ),\r\n              maxItemQuality: formatNumber(\r\n                INITIAL_MAX_ITEM_QUALITY + itemQualityBonus,\r\n              ),\r\n              storageMultiplier: formatMultiplier(\r\n                getNewGamePlusStorageMultiplier(level),\r\n              ),\r\n              productionMultiplier: formatMultiplier(\r\n                getNewGamePlusProductionMultiplier(level),\r\n              ),\r\n            },\r\n          )}\r\n        </Markdown>\r\n      </View>\r\n    </View>\r\n  );\r\n});\r\n\r\nconst StorylineOracleDescription = React.memo((props: { level: number }) => {\r\n  const level = props.level;\r\n\r\n  const explanationBase = (\r\n    <Markdown>\r\n      {t(\r\n        `The Storyline Oracle Boon lets you manifest bonuses from Storylines that might originally have happened in the future, immediately at the beginning - effectively having a large impact in the early game. Obtain powerful bonuses without the need to progress throughout most of the game to unlock them!`,\r\n      )}\r\n    </Markdown>\r\n  );\r\n\r\n  if (level == 0) {\r\n    return (\r\n      <View>\r\n        <View>{explanationBase}</View>\r\n        <View>\r\n          <Markdown>\r\n            {t(\r\n              `Your Storyline Oracle level will be 0. You will get no benefits.`,\r\n            )}\r\n          </Markdown>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (level == 10) {\r\n    return (\r\n      <View>\r\n        <View>{explanationBase}</View>\r\n        <View>\r\n          <Markdown>\r\n            {t(\r\n              `Your Storyline Oracle level will be 10. This means **you will start with all Storylines, except endings and Challenges, already completed!**`,\r\n            )}\r\n          </Markdown>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  const storylineBonusesLines = [];\r\n  for (let i = 1; i <= level; i++) {\r\n    const storylines = getStorylinesToUnlockForSpecificOracleLevel(i);\r\n    const storylineText = storylines\r\n      .map((storyline) => storyline.getName())\r\n      .join(t(\", \"));\r\n    storylineBonusesLines.push(\r\n      t(`* Storyline Oracle level {{i}}: **{{storylineText}}**`, {\r\n        i: formatNumber(i),\r\n        storylineText,\r\n      }),\r\n    );\r\n  }\r\n  const storylineBonusesText = storylineBonusesLines.join(t(\"\\n\"));\r\n\r\n  return (\r\n    <View>\r\n      <View>{explanationBase}</View>\r\n      <View>\r\n        <Markdown>\r\n          {t(\r\n            `Your Storyline Oracle level will be {{level}}. This means you will begin the new World with the following Storylines already completed and their bonus active:\r\n      \r\n{{storylineBonusesText}}`,\r\n            { level: formatNumber(level), storylineBonusesText },\r\n          )}\r\n        </Markdown>\r\n      </View>\r\n    </View>\r\n  );\r\n});\r\n\r\nconst BlazingSpeedDescription = React.memo((props: { level: number }) => {\r\n  const level = props.level;\r\n\r\n  const explanationBase = (\r\n    <Markdown>\r\n      {t(\r\n        `The Blazing Speed Boon generally increases how fast you can make progress throughout the game. It affects exp and loot gain, as well as Channeling efficiency and item sale prices. This Boon can help make progress through a World significantly shorter.`,\r\n      )}\r\n    </Markdown>\r\n  );\r\n\r\n  if (level == 0) {\r\n    return (\r\n      <View>\r\n        <View>{explanationBase}</View>\r\n        <View>\r\n          <Markdown>\r\n            {t(`Your Blazing Speed level will be 0. You will get no benefits.`)}\r\n          </Markdown>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View>\r\n      <View>{explanationBase}</View>\r\n      <View>\r\n        <Markdown>\r\n          {t(\r\n            `Your Blazing Speed level will be {{level}}. You will get the following benefits:\r\n    \r\n* **{{expMultiplier}}** bonus to Element and Familiar exp gain;\r\n* **{{channelingMultiplier}}** bonus to Channeling efficiency and item sale prices;\r\n* **{{lootMultiplier}}** bonus to :coins: and :monstium: obtained from enemies, as well as to the chance of looting items.`,\r\n            {\r\n              level: formatNumber(level),\r\n              expMultiplier: formatMultiplier(\r\n                getNewGamePlusExpGainMultiplier(level),\r\n              ),\r\n              channelingMultiplier: formatMultiplier(\r\n                getNewGamePlusChannelingAndSalePriceMultiplier(level),\r\n              ),\r\n              lootMultiplier: formatMultiplier(\r\n                getNewGamePlusLootMultiplier(level),\r\n              ),\r\n            },\r\n          )}\r\n        </Markdown>\r\n      </View>\r\n    </View>\r\n  );\r\n});\r\n\r\nconst WorldDifficultyDescription = React.memo((props: { level: number }) => {\r\n  const state = useGameState();\r\n  const level = props.level;\r\n\r\n  if (level == 0) {\r\n    return (\r\n      <View>\r\n        <Markdown>\r\n          {t(\r\n            `Your World Difficulty level will be 0. It will be exactly the same as the first time you played through the game.`,\r\n          )}\r\n        </Markdown>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View>\r\n      <Markdown>\r\n        {t(\r\n          `Your World Difficulty level will be {{level}}.{{ultimateChallengeText}} Enemies will have the following bonuses:\r\n    \r\n* **{{hpMultiplier}}** bonus to Max:hp:;\r\n* **{{attackMultiplier}}** bonus to :attack: and :defense:;\r\n* **{{attackDelayMultiplier}}** bonus to :attackDelay:;\r\n* **{{accuracyMultiplier}}** bonus to :accuracy: and :dodge:.\r\n\r\nHowever, if you manage to clear the World, you will get a **{{boonPointMultiplier}}** bonus to the amount of Boon Points you will earn. This means you will get **{{boonPoints}}** Boon Points if you reach the ending \"To Save a Life\", and **{{doubleBoonPoints}}** Boon Points if you complete the Universal Challenge and reach the ending \"Transcend Humanity\".{{penUltimateChallengeRewardText}}`,\r\n          {\r\n            level: formatNumber(level),\r\n            hpMultiplier: formatMultiplier(getNewGamePlusHpMultiplier(level)),\r\n            attackMultiplier: formatMultiplier(\r\n              getNewGamePlusOtherStatMultiplier(level),\r\n            ),\r\n            attackDelayMultiplier: formatMultiplier(\r\n              getNewGamePlusAttackDelayMultiplier(level),\r\n            ),\r\n            accuracyMultiplier: formatMultiplier(\r\n              getNewGamePlusAccuracyAndDodgeMultiplier(level),\r\n            ),\r\n            boonPointMultiplier: formatMultiplier(\r\n              getNewGamePlusBoonPointsEarnedMultiplier(level),\r\n            ),\r\n            boonPoints: formatNumber(\r\n              getNewGamePlusBoonPointsEarnedMultiplier(level) *\r\n                BASE_BOON_POINTS_PER_WORLD,\r\n            ),\r\n            doubleBoonPoints: formatNumber(\r\n              getNewGamePlusBoonPointsEarnedMultiplier(level) *\r\n                BASE_BOON_POINTS_PER_WORLD *\r\n                2,\r\n            ),\r\n            ultimateChallengeText:\r\n              level > 10 ? t(\" **This is the maximum World Difficulty!**\") : \"\",\r\n            penUltimateChallengeRewardText:\r\n              level == 10 && getMaxPossibleDifficultyLevel(state) == 10\r\n                ? t(\r\n                    \" **And if you clear the World, you may unlock something special...**\",\r\n                  )\r\n                : \"\",\r\n          },\r\n        )}\r\n      </Markdown>\r\n    </View>\r\n  );\r\n});\r\n\r\nfunction BoonRow(props: {\r\n  level: number;\r\n  title: string;\r\n  decreasingPossible: boolean;\r\n  increasingPossible: boolean;\r\n  onPressMinus: () => void;\r\n  onPressPlus: () => void;\r\n}) {\r\n  return (\r\n    <View style={Styles.flexRowAlignCenter}>\r\n      <View style={Styles.flex}>\r\n        <Text style={Styles.bold}>{props.title}</Text>\r\n        <Text>\r\n          {props.level >= MAX_BOON_LEVEL\r\n            ? t(\"Next level: -\")\r\n            : t(\"Next level: {{points}} pts\", {\r\n                points: formatNumber(\r\n                  getIncrementalPointsRequiredForLevel(props.level + 1),\r\n                ),\r\n              })}\r\n        </Text>\r\n      </View>\r\n      <View style={Styles.flexRowAlignCenter}>\r\n        <Text>\r\n          {t(`Lv{{level}} ({{points}} pts)`, {\r\n            level: formatNumber(props.level),\r\n            points: formatNumber(getTotalPointsRequiredForLevel(props.level)),\r\n          })}\r\n        </Text>\r\n        <View style={Styles.ml16}>\r\n          <PlusMinusAllocator\r\n            disableMinus={!props.decreasingPossible}\r\n            disablePlus={!props.increasingPossible}\r\n            onPressMinus={props.onPressMinus}\r\n            onPressPlus={props.onPressPlus}\r\n          />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction useBoonManipulation(level, remainingPoints, setLevel) {\r\n  const decreasingPossible = level > 0;\r\n  const increasingPossible =\r\n    level < MAX_BOON_LEVEL &&\r\n    remainingPoints >= getIncrementalPointsRequiredForLevel(level + 1);\r\n\r\n  const onPressMinus = useCallback(() => {\r\n    if (decreasingPossible) {\r\n      setLevel(level - 1);\r\n    }\r\n  }, [level, setLevel, decreasingPossible]);\r\n  const onPressPlus = useCallback(() => {\r\n    if (increasingPossible) {\r\n      setLevel(level + 1);\r\n    }\r\n  }, [level, setLevel, increasingPossible]);\r\n\r\n  return { decreasingPossible, increasingPossible, onPressMinus, onPressPlus };\r\n}\r\n\r\nexport default function Worlds() {\r\n  const state = useGameState();\r\n  const theme = useTheme();\r\n\r\n  const totalPointsAvailable = getTotalAvailableBoonPoints(state);\r\n  const newBoonPointsAvailable = getNewBoonPointsAvailable(state);\r\n  const maxDifficultyLevel = getMaxPossibleDifficultyLevel(state);\r\n\r\n  const [sheerPower, setSheerPower] = useState(getSheerPowerLevel(state));\r\n  const [storylineOracle, setStorylineOracle] = useState(\r\n    getStorylineOracleLevel(state),\r\n  );\r\n  const [blazingSpeed, setBlazingSpeed] = useState(getBlazingSpeedLevel(state));\r\n  const [worldDifficulty, setWorldDifficulty] = useState(\r\n    getWorldDifficultyLevel(state),\r\n  );\r\n\r\n  const pointsRequiredForConfig = getPointsRequiredForConfiguration(\r\n    sheerPower,\r\n    storylineOracle,\r\n    blazingSpeed,\r\n  );\r\n  const remainingPoints = totalPointsAvailable - pointsRequiredForConfig;\r\n\r\n  const topMessage =\r\n    t(`You now possess the ability to travel to other Worlds! You feel like, perhaps, you'd like a do-over of your grand adventure, but this time, in another World, a slightly different one. All the possibilities are laid bare before you...\r\n  \r\nBy traveling a new world, **you will start over the game from the very beginning, and will forfeit everything:**\r\n\r\n* Unlocked elements and Storylines will generally **not** carry over;\r\n* Your MPL values, as well as your global element exp, production and loot multipliers, will **not** carry over.\r\n\r\nHowever, you will continue having access to the Worlds screen - you will not need to unlock it again.`);\r\n\r\n  const noContentWarning = (\r\n    <Text style={[styles.error, { color: theme.colors.error }]}>\r\n      {t(\r\n        \"Traveling to a different World does not unlock any new content! It is only meant as a way to experience the game again.\",\r\n      )}\r\n    </Text>\r\n  );\r\n\r\n  const explanationForBoonsMessage = t(\r\n    `Your prowess as a World traveler has granted you a total of **{{totalPointsAvailable}}** (**+{{newPointsAvailable}}**) Boon Points. You can use Boon Points to obtain powerful advantages across three different categories in the next World. Your Boon Points accumulate through Worlds, and you can reallocate them whenever traveling to a new World.`,\r\n    {\r\n      totalPointsAvailable: formatNumber(totalPointsAvailable),\r\n      newPointsAvailable: formatNumber(newBoonPointsAvailable),\r\n    },\r\n  );\r\n\r\n  const sheerPowerManipulation = useBoonManipulation(\r\n    sheerPower,\r\n    remainingPoints,\r\n    setSheerPower,\r\n  );\r\n  const storylineOracleManipulation = useBoonManipulation(\r\n    storylineOracle,\r\n    remainingPoints,\r\n    setStorylineOracle,\r\n  );\r\n  const blazingSpeedManipulation = useBoonManipulation(\r\n    blazingSpeed,\r\n    remainingPoints,\r\n    setBlazingSpeed,\r\n  );\r\n\r\n  const difficultyExplanation = (\r\n    <Markdown>\r\n      {t(\r\n        `Perhaps the adventure was too easy? For your next adventure, you can search for a World that is more difficult. They say that the higher the challenge, naturally, the higher the reward...\r\n        \r\nThe maximum World Difficulty you can access is {{maxDifficulty}}.{{clearText}}`,\r\n        {\r\n          maxDifficulty: getMaxPossibleDifficultyLevel(state),\r\n          clearText:\r\n            getMaxPossibleDifficultyLevel(state) < 10\r\n              ? t(\r\n                  ' You can access higher difficulties by traveling to a new World and reaching the ending \"To Save a Life\".',\r\n                )\r\n              : \"\",\r\n        },\r\n      )}\r\n    </Markdown>\r\n  );\r\n\r\n  const onPressDifficultyMinus = useCallback(() => {\r\n    if (worldDifficulty > 0) {\r\n      setWorldDifficulty(worldDifficulty - 1);\r\n    }\r\n  }, [worldDifficulty, setWorldDifficulty]);\r\n  const onPressDifficultyPlus = useCallback(() => {\r\n    if (worldDifficulty <= maxDifficultyLevel) {\r\n      setWorldDifficulty(worldDifficulty + 1);\r\n    }\r\n  }, [worldDifficulty, setWorldDifficulty, maxDifficultyLevel]);\r\n\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const [hasExportedGame, setHasExportedGame] = useState(false);\r\n  const visible = useContext(VisibilityContext);\r\n  useEffect(() => {\r\n    if (!visible) {\r\n      setHasExportedGame(false);\r\n    }\r\n  }, [visible]);\r\n\r\n  const [copyToClipboardError, setCopyToClipboardError] = useState(null);\r\n\r\n  const copyToClipboard = useCallback(async () => {\r\n    const serializedData = await serializeSaveData(stateRef.current);\r\n    await Clipboard.setStringAsync(serializedData);\r\n\r\n    if (Platform.OS == \"android\" || Platform.OS == \"ios\") {\r\n      const savedData = await Clipboard.getStringAsync();\r\n      if (savedData != serializedData) {\r\n        setCopyToClipboardError(\r\n          t(\"Warning: save did not copy to clipboard correctly!\"),\r\n        );\r\n        return;\r\n      }\r\n    }\r\n\r\n    setHasExportedGame(true);\r\n    setCopyToClipboardError(null);\r\n  }, [setHasExportedGame]);\r\n\r\n  const saveToFileCallback = useCallback(async () => {\r\n    const result = await saveToFile(stateRef.current);\r\n    setHasExportedGame(true);\r\n  }, [setHasExportedGame]);\r\n\r\n  const saveFileCategory = useMemo(\r\n    () => (\r\n      <View>\r\n        <View>\r\n          <Text>\r\n            {t(\r\n              \"Since traveling to a new World is irreversible, you will need to export your save data first before being able to use your ability.\",\r\n            )}\r\n          </Text>\r\n        </View>\r\n        <View style={Styles.mt8}>\r\n          <Button onPress={copyToClipboard}>\r\n            {t(\"Copy savefile to clipboard\")}\r\n          </Button>\r\n        </View>\r\n        {SAVE_TO_FILE_SUPPORTED && (\r\n          <View style={Styles.mt4}>\r\n            <Button onPress={saveToFileCallback}>{t(\"Save to File\")}</Button>\r\n          </View>\r\n        )}\r\n        {copyToClipboardError != null && (\r\n          <View style={Styles.mt8}>\r\n            <Text style={{ color: theme.colors.error }}>\r\n              {copyToClipboardError}\r\n            </Text>\r\n          </View>\r\n        )}\r\n      </View>\r\n    ),\r\n    [\r\n      copyToClipboard,\r\n      SAVE_TO_FILE_SUPPORTED,\r\n      saveToFileCallback,\r\n      copyToClipboardError,\r\n      theme,\r\n    ],\r\n  );\r\n\r\n  const doNewGamePlus = useCallback(() => {\r\n    stateRef.current.apply((state) => {\r\n      return triggerNewGamePlus(\r\n        state,\r\n        sheerPower,\r\n        storylineOracle,\r\n        blazingSpeed,\r\n        worldDifficulty,\r\n      );\r\n    });\r\n  }, [sheerPower, storylineOracle, blazingSpeed, worldDifficulty]);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text h1>{t(\"Worlds\")}</Text>\r\n      <View style={Styles.mt16}>\r\n        <Markdown>{topMessage}</Markdown>\r\n        {noContentWarning}\r\n      </View>\r\n      <UtilityCard style={Styles.mt16}>\r\n        <Card.Title title={t(\"Boons\")} />\r\n        <Card.Content>\r\n          <Markdown>{explanationForBoonsMessage}</Markdown>\r\n          <View\r\n            style={[\r\n              Styles.mt16,\r\n              Styles.p8,\r\n              { backgroundColor: color(theme.colors.primary).alpha(0.1) },\r\n            ]}\r\n          >\r\n            <BoonRow\r\n              decreasingPossible={sheerPowerManipulation.decreasingPossible}\r\n              increasingPossible={sheerPowerManipulation.increasingPossible}\r\n              level={sheerPower}\r\n              title={t(\"Sheer Power\")}\r\n              onPressMinus={sheerPowerManipulation.onPressMinus}\r\n              onPressPlus={sheerPowerManipulation.onPressPlus}\r\n            />\r\n            <View style={Styles.mt8}>\r\n              <SheerPowerDescription level={sheerPower} />\r\n            </View>\r\n          </View>\r\n          <View style={Styles.p8}>\r\n            <BoonRow\r\n              decreasingPossible={\r\n                storylineOracleManipulation.decreasingPossible\r\n              }\r\n              increasingPossible={\r\n                storylineOracleManipulation.increasingPossible\r\n              }\r\n              level={storylineOracle}\r\n              title={t(\"Storyline Oracle\")}\r\n              onPressMinus={storylineOracleManipulation.onPressMinus}\r\n              onPressPlus={storylineOracleManipulation.onPressPlus}\r\n            />\r\n            <View style={Styles.mt8}>\r\n              <StorylineOracleDescription level={storylineOracle} />\r\n            </View>\r\n          </View>\r\n          <View\r\n            style={[\r\n              Styles.p8,\r\n              { backgroundColor: color(theme.colors.primary).alpha(0.1) },\r\n            ]}\r\n          >\r\n            <BoonRow\r\n              decreasingPossible={blazingSpeedManipulation.decreasingPossible}\r\n              increasingPossible={blazingSpeedManipulation.increasingPossible}\r\n              level={blazingSpeed}\r\n              title={t(\"Blazing Speed\")}\r\n              onPressMinus={blazingSpeedManipulation.onPressMinus}\r\n              onPressPlus={blazingSpeedManipulation.onPressPlus}\r\n            />\r\n            <View style={Styles.mt8}>\r\n              <BlazingSpeedDescription level={blazingSpeed} />\r\n            </View>\r\n          </View>\r\n        </Card.Content>\r\n      </UtilityCard>\r\n      <UtilityCard style={Styles.mt16}>\r\n        <Card.Title title={t(\"Difficulty\")} />\r\n        <Card.Content>\r\n          {difficultyExplanation}\r\n          <View style={Styles.mt16}>\r\n            <View style={Styles.flexRowAlignCenter}>\r\n              <View style={Styles.flex}>\r\n                <Text style={Styles.bold}>{t(\"World Difficulty\")}</Text>\r\n              </View>\r\n              <View style={Styles.flexRowAlignCenter}>\r\n                <Text>\r\n                  {t(`Lv{{level}}`, {\r\n                    level: formatNumber(worldDifficulty),\r\n                  })}\r\n                </Text>\r\n                <View style={Styles.ml16}>\r\n                  <PlusMinusAllocator\r\n                    disableMinus={worldDifficulty <= 0}\r\n                    disablePlus={worldDifficulty >= maxDifficultyLevel}\r\n                    onPressMinus={onPressDifficultyMinus}\r\n                    onPressPlus={onPressDifficultyPlus}\r\n                  />\r\n                </View>\r\n              </View>\r\n            </View>\r\n            <View style={Styles.mt8}>\r\n              <WorldDifficultyDescription level={worldDifficulty} />\r\n            </View>\r\n          </View>\r\n        </Card.Content>\r\n      </UtilityCard>\r\n      <View style={Styles.mt16}>{saveFileCategory}</View>\r\n      <View style={Styles.mt16}>\r\n        <Button\r\n          buttonColor={theme.colors.errorContainer}\r\n          textColor={theme.colors.onErrorContainer}\r\n          onPress={doNewGamePlus}\r\n          disabled={!hasExportedGame}\r\n        >\r\n          {t(\"Travel to a new World\")}\r\n        </Button>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"flex-start\",\r\n    width: \"100%\",\r\n  },\r\n  explanation: {\r\n    marginTop: 16,\r\n  },\r\n  buttonContainer: {\r\n    marginTop: 16,\r\n  },\r\n  warning: {\r\n    marginTop: 8,\r\n  },\r\n  error: {\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n","import { EvilIcons, MaterialIcons } from \"@expo/vector-icons\";\r\nimport moment from \"moment\";\r\nimport React, { useCallback, useMemo, useRef } from \"react\";\r\nimport { FlatList, StyleSheet, View } from \"react-native\";\r\nimport { List, useTheme } from \"react-native-paper\";\r\nimport { INITIAL_STATE } from \"../../backend/GameState\";\r\nimport {\r\n  EventOccurrenceData,\r\n  addOccurrenceToQueue,\r\n  getEventMessageById,\r\n} from \"../../backend/events/Events\";\r\nimport { clone } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { useAuxOptions } from \"../utility/AuxOptionsContext\";\r\nimport CategoryContainer from \"../utility/CategoryContainer\";\r\nimport Divider from \"../utility/Divider\";\r\nimport Styles from \"../utility/Styles\";\r\nimport { Text } from \"../utility/Text\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\n\r\nexport const INITIAL_STATE_CLONED = clone(INITIAL_STATE);\r\n\r\nfunction EventListItem(props: {\r\n  item: EventOccurrenceData;\r\n  onPress: () => void;\r\n}) {\r\n  if (!props.item.currentMessageId) {\r\n    return null;\r\n  }\r\n  const currentMessageData = getEventMessageById(props.item.currentMessageId);\r\n  if (!currentMessageData) {\r\n    return null;\r\n  }\r\n  const title = currentMessageData.getTitle(props.item?.params);\r\n  const state = useGameState();\r\n  const description = useMemo(\r\n    () =>\r\n      moment(props.item.timestamp).format(\"h:mm A\") +\r\n      \" - \" +\r\n      currentMessageData.getDescription(\r\n        INITIAL_STATE_CLONED,\r\n        props.item?.params,\r\n      ),\r\n    [props.item.timestamp],\r\n  );\r\n  const theme = useTheme();\r\n  const auxOptions = useAuxOptions();\r\n  return useMemo(() => {\r\n    return (\r\n      <View>\r\n        <List.Item\r\n          onPress={props.onPress}\r\n          accessible={true}\r\n          accessibilityLabel={title}\r\n          accessibilityRole=\"button\"\r\n          title={title}\r\n          description={description}\r\n          descriptionNumberOfLines={1}\r\n          style={auxOptions.compactLayout && { paddingVertical: 0 }}\r\n          left={() =>\r\n            currentMessageData.isActionable(state, props.item?.params) && (\r\n              <View style={[Styles.ml16, Styles.flexCenter]}>\r\n                <EvilIcons\r\n                  name=\"exclamation\"\r\n                  type=\"evilicon\"\r\n                  size={24}\r\n                  style={{ height: 24 }}\r\n                  color={theme.colors.onBackground}\r\n                />\r\n              </View>\r\n            )\r\n          }\r\n          right={() => (\r\n            <List.Icon\r\n              icon={currentMessageData.isTerminal() ? \"check\" : \"chevron-right\"}\r\n            />\r\n          )}\r\n        />\r\n        <Divider />\r\n      </View>\r\n    );\r\n  }, [\r\n    title,\r\n    description,\r\n    currentMessageData.isTerminal(),\r\n    currentMessageData.isActionable(state, props.item?.params),\r\n    theme,\r\n    auxOptions.compactLayout,\r\n  ]);\r\n}\r\n\r\nconst EventListItemMemoized = React.memo(\r\n  EventListItem,\r\n  (prevProps, nextProps) => {\r\n    return prevProps.item.currentMessageId === nextProps.item.currentMessageId;\r\n  },\r\n);\r\n\r\nexport function EventList(props: { style?: any }) {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const keyExtractor = useCallback(\r\n    (item: EventOccurrenceData, index: number) => item.eventOccurrenceId,\r\n    [],\r\n  );\r\n\r\n  const renderItem = useCallback((props: any) => {\r\n    const onPress = () => {\r\n      stateRef.current.apply(\r\n        addOccurrenceToQueue(props.item.eventOccurrenceId),\r\n      );\r\n    };\r\n    return <EventListItemMemoized {...props} onPress={onPress} />;\r\n  }, []);\r\n\r\n  const sortedEvents = Object.values(state.run.eventOccurrences).sort(\r\n    (a, b) => b.timestamp - a.timestamp,\r\n  );\r\n\r\n  const stringifiedEvents = useMemo(\r\n    () => JSON.stringify(state.run.eventOccurrences),\r\n    [sortedEvents],\r\n  );\r\n\r\n  const terminalEvents = useMemo(\r\n    () =>\r\n      sortedEvents\r\n        .filter((event) => {\r\n          return (\r\n            event.currentMessageId &&\r\n            getEventMessageById(event.currentMessageId).isTerminal()\r\n          );\r\n        })\r\n        .slice(0, 20),\r\n    [stringifiedEvents],\r\n  );\r\n  const ongoingEvents = useMemo(\r\n    () =>\r\n      sortedEvents.filter((event) => {\r\n        return (\r\n          event.currentMessageId &&\r\n          !getEventMessageById(event.currentMessageId).isTerminal()\r\n        );\r\n      }),\r\n    [stringifiedEvents],\r\n  );\r\n\r\n  const eventCategories = useMemo(() => {\r\n    const eventCategories: { title: string; data: EventOccurrenceData[] }[] =\r\n      [];\r\n    if (ongoingEvents.length > 0) {\r\n      eventCategories.push({ title: t(\"Ongoing\"), data: ongoingEvents });\r\n    }\r\n    if (terminalEvents.length > 0) {\r\n      eventCategories.push({ title: t(\"Finished\"), data: terminalEvents });\r\n    }\r\n    return eventCategories;\r\n  }, [ongoingEvents, terminalEvents]);\r\n\r\n  const categoryKeyExtractor = useCallback(\r\n    (item: { title: string; data: EventOccurrenceData[] }, index: number) =>\r\n      item.title,\r\n    [],\r\n  );\r\n\r\n  const categoryRenderItem = useCallback(\r\n    (props: any) => {\r\n      return (\r\n        <CategoryContainer\r\n          titleStyle={styles.categoryTitle}\r\n          title={props.item.title}\r\n        >\r\n          <FlatList\r\n            keyExtractor={keyExtractor}\r\n            data={props.item.data}\r\n            renderItem={renderItem}\r\n          />\r\n        </CategoryContainer>\r\n      );\r\n    },\r\n    [keyExtractor, renderItem],\r\n  );\r\n\r\n  const theme = useTheme();\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View\r\n        style={[\r\n          { backgroundColor: theme.colors.background },\r\n          Styles.flex,\r\n          props.style,\r\n        ]}\r\n      >\r\n        <View\r\n          accessible={true}\r\n          accessibilityLabel={t(\"Events\")}\r\n          accessibilityRole=\"header\"\r\n          style={styles.emptyTitleContainer}\r\n        >\r\n          <MaterialIcons\r\n            size={24}\r\n            name=\"notifications\"\r\n            style={styles.titleIcon}\r\n            color={theme.colors.onBackground}\r\n          />\r\n          <Text h2>{t(\"Events\")}</Text>\r\n        </View>\r\n        <FlatList\r\n          keyExtractor={categoryKeyExtractor}\r\n          data={eventCategories}\r\n          renderItem={categoryRenderItem}\r\n          style={Styles.flex}\r\n        />\r\n      </View>\r\n    ),\r\n    [theme, categoryKeyExtractor, categoryRenderItem, eventCategories],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  categoryTitle: {\r\n    marginLeft: 8,\r\n  },\r\n  emptyTitleContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginTop: 8,\r\n  },\r\n  titleIcon: {\r\n    paddingRight: 8,\r\n    height: 28,\r\n  },\r\n  eventTitleContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  titleText: {\r\n    flex: 1,\r\n  },\r\n  actionableIcon: {\r\n    marginRight: 4,\r\n  },\r\n});\r\n","import { MaterialIcons } from \"@expo/vector-icons\";\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport {\r\n  ScrollView,\r\n  StyleSheet,\r\n  View,\r\n  useWindowDimensions,\r\n} from \"react-native\";\r\nimport { Modal, useTheme } from \"react-native-paper\";\r\nimport { GameState } from \"../../backend/GameState\";\r\nimport {\r\n  addGameStateListener,\r\n  clearGameStateListener,\r\n} from \"../../backend/GameStateListeners\";\r\nimport { getUICommands } from \"../../backend/UICommands\";\r\nimport {\r\n  EventOccurrenceData,\r\n  executeEventOccurrenceAction,\r\n  getEventMessageById,\r\n  getEventOccurrenceById,\r\n  removeOccurrenceFromQueue,\r\n} from \"../../backend/events/Events\";\r\nimport { EventMessage } from \"../../backend/events/GameEvent\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { Button } from \"../utility/Button\";\r\nimport { IconButton } from \"../utility/IconButton\";\r\nimport { Markdown } from \"../utility/Markdown\";\r\nimport { disabledColorByTheme } from \"../utility/Miscellaneous\";\r\nimport { Text } from \"../utility/Text\";\r\nimport { UIContext, useUIStateFromContext } from \"../utility/UIContext\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\n\r\nexport function EventOverlay() {\r\n  const state = useGameState();\r\n  const uiContext = useContext(UIContext);\r\n  const isPickerOpen = uiContext.getUIState(\"picker_open\");\r\n  const isEndingOpen = uiContext\r\n    .getUIState(\"active_sections\")\r\n    ?.includes(\"Ending\");\r\n  const [currentEventOccurrenceId, setCurrentEventOccurrenceId] =\r\n    useUIStateFromContext(\r\n      uiContext,\r\n      \"current_event_occurrence_id\",\r\n      undefined as string | undefined,\r\n    );\r\n\r\n  const processUICommand = useCallback((uiCommand: string) => {\r\n    if (uiCommand == \"closeEventOverlay\") {\r\n      setCurrentEventOccurrenceId(undefined);\r\n      setCurrentLookbackMessageId(\"\");\r\n    }\r\n  }, []);\r\n\r\n  const processUICommands = useCallback((state: GameState) => {\r\n    const uiCommands = getUICommands(state);\r\n    uiCommands.forEach(processUICommand);\r\n    state.run.uiCommands = uiCommands.filter(\r\n      (uiCommand) => uiCommand != \"closeEventOverlay\",\r\n    );\r\n    return state;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    addGameStateListener(\"eventOverlayUiCommand\", (newState) => {\r\n      const uiCommands = getUICommands(newState);\r\n      if (\r\n        uiCommands.filter((command) => command === \"closeEventOverlay\").length >\r\n        0\r\n      ) {\r\n        return (state) => processUICommands(state);\r\n      }\r\n    });\r\n    return () => clearGameStateListener(\"eventOverlayUiCommand\");\r\n  }, []);\r\n\r\n  const currentEventOccurrenceIdRef = useRef(currentEventOccurrenceId);\r\n  currentEventOccurrenceIdRef.current = currentEventOccurrenceId;\r\n\r\n  const [currentLookbackMessageId, setCurrentLookbackMessageId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    addGameStateListener(\"event_overlay\", (newState) => {\r\n      if (isPickerOpen || isEndingOpen) {\r\n        return;\r\n      }\r\n      if (\r\n        newState.run.eventQueue.length > 0 &&\r\n        (!currentEventOccurrenceIdRef.current ||\r\n          getEventOccurrenceById(\r\n            newState,\r\n            currentEventOccurrenceIdRef.current,\r\n          ) == null)\r\n      ) {\r\n        // Get a new event\r\n        let newEventOccurrenceId: string | null | undefined = null;\r\n        const eventsToRemoveFromQueue: string[] = [];\r\n\r\n        do {\r\n          newEventOccurrenceId = newState.run.eventQueue.pop();\r\n          if (newEventOccurrenceId != null) {\r\n            eventsToRemoveFromQueue.push(newEventOccurrenceId);\r\n            const occurrence = getEventOccurrenceById(\r\n              newState,\r\n              newEventOccurrenceId,\r\n            );\r\n            const message = occurrence?.currentMessageId;\r\n            if (occurrence != null && message != null) {\r\n              if (\r\n                (occurrence?.timestampSecondsPlayed ?? 0) <= 0.1 &&\r\n                getEventMessageById(message)?.isTerminal()\r\n              ) {\r\n                newEventOccurrenceId = null;\r\n              }\r\n            }\r\n          }\r\n        } while (\r\n          newState.run.eventQueue.length > 0 &&\r\n          newEventOccurrenceId == null\r\n        );\r\n\r\n        if (newEventOccurrenceId) {\r\n          setCurrentEventOccurrenceId(newEventOccurrenceId);\r\n          setCurrentLookbackMessageId(\"\");\r\n\r\n          // This next line is required because otherwise, if many events are\r\n          // in the queue before the next rerender, we will swallow them\r\n          currentEventOccurrenceIdRef.current = newEventOccurrenceId;\r\n        }\r\n\r\n        return (state) =>\r\n          eventsToRemoveFromQueue.reduce(\r\n            (accumulatedState, eventToRemove) =>\r\n              removeOccurrenceFromQueue(eventToRemove)(accumulatedState),\r\n            state,\r\n          );\r\n      }\r\n    });\r\n    return () => clearGameStateListener(\"event_overlay\");\r\n  }, [isPickerOpen, isEndingOpen]);\r\n\r\n  let eventOccurrence: EventOccurrenceData | null | undefined = null,\r\n    eventMessage: EventMessage | null | undefined = null,\r\n    optionDescriptions: string[] | null = null,\r\n    totalText: string | null = null,\r\n    messageInLookbackIdx: number = -1,\r\n    messageLength: number = 0,\r\n    totalMessageCount: number = -1;\r\n  if (currentEventOccurrenceId != null) {\r\n    eventOccurrence = getEventOccurrenceById(state, currentEventOccurrenceId);\r\n    messageInLookbackIdx =\r\n      eventOccurrence?.messageHistory?.findIndex(\r\n        (value) => value === currentLookbackMessageId,\r\n      ) ?? -1;\r\n    if (messageInLookbackIdx < 0) {\r\n      eventMessage = (eventOccurrence?.currentMessageId &&\r\n        getEventMessageById(eventOccurrence.currentMessageId)) as EventMessage;\r\n    } else {\r\n      eventMessage = getEventMessageById(\r\n        currentLookbackMessageId as string,\r\n      ) as EventMessage;\r\n    }\r\n    if (eventMessage) {\r\n      optionDescriptions = eventMessage\r\n        .getAllowedOptions(state, eventOccurrence?.params)\r\n        .map((option) => option.description + option.isEnabled);\r\n    }\r\n    messageLength = eventOccurrence?.messageHistory?.length ?? 0;\r\n    if (messageLength > 0) {\r\n      totalMessageCount = messageLength + 1;\r\n      const idxToDisplay =\r\n        messageInLookbackIdx >= 0\r\n          ? messageInLookbackIdx + 1\r\n          : totalMessageCount;\r\n      if (idxToDisplay < totalMessageCount) {\r\n        totalText = `(${idxToDisplay}/${totalMessageCount})`;\r\n      }\r\n    }\r\n  }\r\n\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  const theme = useTheme();\r\n\r\n  const disabledIconColor = disabledColorByTheme(theme);\r\n\r\n  return useMemo(() => {\r\n    if (currentEventOccurrenceId && eventMessage) {\r\n      const disableBackArrow =\r\n        messageInLookbackIdx === 0 || messageLength === 0;\r\n      const disableForwardArrow =\r\n        messageInLookbackIdx < 0 ||\r\n        messageInLookbackIdx > totalMessageCount - 2;\r\n      return (\r\n        <Modal\r\n          visible={true}\r\n          dismissable={false}\r\n          contentContainerStyle={[\r\n            styles.overlay,\r\n            {\r\n              maxWidth: Math.min(width - 16, 640),\r\n              maxHeight: height - 64,\r\n              backgroundColor: theme.colors.background,\r\n            },\r\n          ]}\r\n        >\r\n          <View style={styles.overlayContainer}>\r\n            <IconButton\r\n              icon={() => (\r\n                <MaterialIcons\r\n                  name=\"close\"\r\n                  size={24}\r\n                  color={theme.colors.onPrimary}\r\n                />\r\n              )}\r\n              accessibilityLabel=\"Close\"\r\n              style={styles.overlayCloseButton}\r\n              mode=\"contained\"\r\n              containerColor={theme.colors.primary}\r\n              onPress={() => {\r\n                setCurrentEventOccurrenceId(undefined);\r\n                setCurrentLookbackMessageId(\"\");\r\n              }}\r\n            />\r\n\r\n            <View style={styles.titleContainer}>\r\n              <View\r\n                style={[\r\n                  styles.titleTextContainer,\r\n                  { maxWidth: messageLength > 0 ? width - 164 : width - 68 },\r\n                ]}\r\n              >\r\n                <Text h1>\r\n                  {eventMessage.getTitle(eventOccurrence?.params)} {totalText}{\" \"}\r\n                </Text>\r\n              </View>\r\n              {messageLength > 0 && (\r\n                <View style={styles.historyContainer}>\r\n                  <IconButton\r\n                    disabled={disableBackArrow}\r\n                    icon={() => (\r\n                      <MaterialIcons\r\n                        name=\"arrow-back\"\r\n                        size={24}\r\n                        color={\r\n                          disableBackArrow\r\n                            ? theme.colors.onSurfaceDisabled\r\n                            : theme.colors.onPrimary\r\n                        }\r\n                      />\r\n                    )}\r\n                    accessibilityLabel={t(\"Previous Message\")}\r\n                    style={styles.historyButton}\r\n                    containerColor={\r\n                      disableBackArrow\r\n                        ? theme.colors.surfaceDisabled\r\n                        : theme.colors.primary\r\n                    }\r\n                    onPress={() =>\r\n                      setCurrentLookbackMessageId(\r\n                        messageInLookbackIdx > 0\r\n                          ? eventOccurrence?.messageHistory?.[\r\n                              messageInLookbackIdx - 1\r\n                            ] ?? \"\"\r\n                          : eventOccurrence?.messageHistory?.[\r\n                              totalMessageCount - 2\r\n                            ] ?? \"\",\r\n                      )\r\n                    }\r\n                  />\r\n                  <IconButton\r\n                    disabled={disableForwardArrow}\r\n                    accessibilityLabel={t(\"Next Message\")}\r\n                    containerColor={\r\n                      disableForwardArrow\r\n                        ? theme.colors.surfaceDisabled\r\n                        : theme.colors.primary\r\n                    }\r\n                    style={styles.historyButton}\r\n                    icon={() => (\r\n                      <MaterialIcons\r\n                        name=\"arrow-forward\"\r\n                        size={24}\r\n                        color={\r\n                          disableForwardArrow\r\n                            ? theme.colors.onSurfaceDisabled\r\n                            : theme.colors.onPrimary\r\n                        }\r\n                      />\r\n                    )}\r\n                    onPress={() =>\r\n                      setCurrentLookbackMessageId(\r\n                        messageInLookbackIdx < totalMessageCount - 2\r\n                          ? eventOccurrence?.messageHistory?.[\r\n                              messageInLookbackIdx + 1\r\n                            ] ?? \"\"\r\n                          : \"\",\r\n                      )\r\n                    }\r\n                  />\r\n                </View>\r\n              )}\r\n            </View>\r\n            <View style={{ maxHeight: height - 150 }}>\r\n              <ScrollView style={styles.scrollView}>\r\n                <View style={styles.description}>\r\n                  <Markdown>\r\n                    {eventMessage.getDescription(\r\n                      state,\r\n                      eventOccurrence?.params,\r\n                    )}\r\n                  </Markdown>\r\n                </View>\r\n                {messageInLookbackIdx < 0 && (\r\n                  <View style={styles.optionRow}>\r\n                    {eventMessage\r\n                      .getAllowedOptions(state, eventOccurrence?.params)\r\n                      .map((option) => {\r\n                        const optionPress = () => {\r\n                          if (!option.nextMessage && !option.transform) {\r\n                            setCurrentEventOccurrenceId(undefined);\r\n                            setCurrentLookbackMessageId(\"\");\r\n                            return;\r\n                          }\r\n                          state.apply(\r\n                            executeEventOccurrenceAction(\r\n                              currentEventOccurrenceId,\r\n                              option,\r\n                            ),\r\n                          );\r\n                        };\r\n                        return (\r\n                          <Button\r\n                            key={option.description}\r\n                            onPress={optionPress}\r\n                            style={[\r\n                              styles.optionButton,\r\n                              { maxWidth: Math.min(width - 70, 586) },\r\n                            ]}\r\n                            TextComponent={View}\r\n                            disabled={!option.isEnabled}\r\n                          >\r\n                            <Text\r\n                              style={[\r\n                                {\r\n                                  color: theme.colors.onPrimary,\r\n                                },\r\n                                !option.isEnabled && {\r\n                                  color: theme.colors.onSurfaceDisabled,\r\n                                },\r\n                              ]}\r\n                            >\r\n                              {option.description}\r\n                            </Text>\r\n                          </Button>\r\n                        );\r\n                      })}\r\n                  </View>\r\n                )}\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      );\r\n    }\r\n    return null;\r\n  }, [\r\n    JSON.stringify(eventOccurrence),\r\n    optionDescriptions?.join(\",\"),\r\n    messageInLookbackIdx,\r\n    currentLookbackMessageId,\r\n    width,\r\n    height,\r\n    theme,\r\n    disabledIconColor,\r\n  ]);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  overlay: {\r\n    alignSelf: \"center\",\r\n    marginHorizontal: 16,\r\n    maxWidth: 640,\r\n  },\r\n  overlayContainer: {\r\n    paddingVertical: 16,\r\n    paddingHorizontal: 8,\r\n  },\r\n  historyButton: {\r\n    height: 32,\r\n    width: 32,\r\n    borderRadius: 16,\r\n    marginLeft: 8,\r\n  },\r\n  overlayCloseButton: {\r\n    height: 32,\r\n    width: 32,\r\n    position: \"absolute\",\r\n    right: -16,\r\n    top: -16,\r\n  },\r\n  overlayCloseButtonInner: {\r\n    paddingHorizontal: 0,\r\n    paddingVertical: 0,\r\n    height: 32,\r\n  },\r\n  titleContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  titleTextContainer: {},\r\n  historyContainer: {\r\n    marginLeft: 8,\r\n    flexDirection: \"row\",\r\n    width: 80,\r\n    marginRight: 32,\r\n  },\r\n  description: {\r\n    marginBottom: 8,\r\n  },\r\n  scrollView: {\r\n    flexGrow: 0,\r\n    marginTop: 8,\r\n  },\r\n  optionRow: {\r\n    marginTop: 8,\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    gap: 12,\r\n    justifyContent: \"space-around\",\r\n  },\r\n  optionButton: {\r\n    maxWidth: 600,\r\n  },\r\n});\r\n","import { MaterialIcons } from \"@expo/vector-icons\";\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport {\r\n  FlatList,\r\n  ListRenderItemInfo,\r\n  NativeScrollEvent,\r\n  NativeSyntheticEvent,\r\n  Platform,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  View,\r\n} from \"react-native\";\r\nimport { Badge, useTheme } from \"react-native-paper\";\r\nimport { getUnreadNotificationsByGroup } from \"../../backend/Notifications\";\r\nimport Divider from \"../utility/Divider\";\r\nimport {\r\n  DEFAULT_SECTION_ORDER,\r\n  getSectionInfo,\r\n  useHorizontalScrollRef,\r\n} from \"../utility/Miscellaneous\";\r\nimport { Text } from \"../utility/Text\";\r\nimport { GameIcon } from \"../utility/icons/GameIcon\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\n\r\nconst SelectedContext = React.createContext(\"Campus\");\r\n\r\nfunction MenuComponent(props: {\r\n  title: string;\r\n  showBadge: boolean;\r\n  onPress: () => void;\r\n}) {\r\n  const { title, onPress } = { ...props };\r\n  const theme = useTheme();\r\n  const selected = useContext(SelectedContext);\r\n  const shouldHighlight = selected == title;\r\n  return useMemo(\r\n    () => (\r\n      <TouchableOpacity\r\n        onPress={onPress}\r\n        accessible={true}\r\n        accessibilityLabel={title}\r\n        accessibilityRole=\"tab\"\r\n      >\r\n        <View\r\n          style={[\r\n            styles.itemContainerStyle,\r\n            shouldHighlight\r\n              ? { backgroundColor: theme.colors.secondaryContainer }\r\n              : null,\r\n          ]}\r\n        >\r\n          <View>\r\n            <GameIcon icon={title.toLowerCase()} />\r\n            {props.showBadge && (\r\n              <View style={styles.notificationBadge}>\r\n                <Badge size={12} />\r\n              </View>\r\n            )}\r\n          </View>\r\n          <Text\r\n            doNotScaleFonts={true}\r\n            style={[\r\n              styles.itemStyle,\r\n              shouldHighlight\r\n                ? { color: theme.colors.onSecondaryContainer }\r\n                : null,\r\n            ]}\r\n          >\r\n            {getSectionInfo(title).name}\r\n          </Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n    ),\r\n    [title, onPress, shouldHighlight, theme, props.showBadge],\r\n  );\r\n}\r\n\r\nconst SCROLL_VIEW_EPSILON = 10;\r\n\r\nexport function BottomMenu(props: {\r\n  onNavigationPress: (section: string) => void;\r\n  onSpellMenuPress: () => void;\r\n  selected: string;\r\n  leftHanded: boolean;\r\n  showCastSpellButton: boolean;\r\n}) {\r\n  const state = useGameState();\r\n\r\n  const menuOrder =\r\n    state.options.sectionOrder.length > 0\r\n      ? state.options.sectionOrder\r\n      : DEFAULT_SECTION_ORDER;\r\n\r\n  const menuItemsCalculated = menuOrder.filter(\r\n    (item) =>\r\n      !state.options.hiddenFromBottomMenu.includes(item) &&\r\n      (getSectionInfo(item).isVisible?.(state) ?? true),\r\n  );\r\n\r\n  const navigationPressCallback = useCallback(\r\n    (item: string) => {\r\n      props.onNavigationPress(item);\r\n    },\r\n    [props.onNavigationPress],\r\n  );\r\n\r\n  const menuItems = useMemo(\r\n    () => menuItemsCalculated,\r\n    [menuItemsCalculated.join()],\r\n  );\r\n  const callbacks = useMemo(\r\n    () => menuItems.map((item) => () => navigationPressCallback(item)),\r\n    [menuItems, navigationPressCallback],\r\n  );\r\n  const sectionsWithBadges = menuItems.filter(\r\n    (group) =>\r\n      getUnreadNotificationsByGroup(state, group).length > 0 ||\r\n      getSectionInfo(group).isBadged?.(state),\r\n  );\r\n  const renderItem = useCallback(\r\n    (item: ListRenderItemInfo<string>) => (\r\n      <View style={{ flexDirection: \"row\" }}>\r\n        {item.index === 0 && <Divider orientation=\"vertical\" />}\r\n        <MenuComponent\r\n          title={item.item}\r\n          showBadge={sectionsWithBadges.includes(item.item)}\r\n          onPress={callbacks[item.index]}\r\n        />\r\n        <Divider orientation=\"vertical\" />\r\n      </View>\r\n    ),\r\n    [callbacks, navigationPressCallback, sectionsWithBadges.join()],\r\n  );\r\n\r\n  const keyExtractor = useCallback((item: string) => item, []);\r\n\r\n  const theme = useTheme();\r\n  const [scrollEnd, setScrollEnd] = useState(false);\r\n  const [scrollStart, setScrollStart] = useState(true);\r\n  const onScroll = useCallback(\r\n    (e: NativeSyntheticEvent<NativeScrollEvent>) => {\r\n      const position = e.nativeEvent.contentOffset.x;\r\n      const contentWidth = e.nativeEvent.contentSize.width;\r\n      const scrollViewWidth = e.nativeEvent.layoutMeasurement.width;\r\n      const isStart = position < SCROLL_VIEW_EPSILON;\r\n      const isEnd =\r\n        contentWidth - scrollViewWidth - position < SCROLL_VIEW_EPSILON;\r\n      if (isStart != scrollStart) {\r\n        setScrollStart(isStart);\r\n      }\r\n      if (isEnd != scrollEnd) {\r\n        setScrollEnd(isEnd);\r\n      }\r\n    },\r\n    [scrollEnd, scrollStart, setScrollEnd, setScrollStart],\r\n  );\r\n\r\n  const flatListBackgroundStyle = useMemo(\r\n    () => [\r\n      styles.scrollContentContainer,\r\n      { backgroundColor: theme.colors.background },\r\n    ],\r\n    [theme],\r\n  );\r\n\r\n  const wheelScrollRef =\r\n    Platform.OS === \"web\" ? useHorizontalScrollRef() : useRef();\r\n\r\n  return useMemo(\r\n    () => (\r\n      <View\r\n        style={[\r\n          styles.bottomMenuContainer,\r\n          { backgroundColor: theme.colors.background },\r\n        ]}\r\n      >\r\n        {props.leftHanded && props.showCastSpellButton && (\r\n          <View style={styles.spellButtonPlaceholder} />\r\n        )}\r\n        <View style={[styles.chevron, scrollStart && { opacity: 0 }]}>\r\n          <MaterialIcons\r\n            name=\"chevron-left\"\r\n            size={24}\r\n            color={theme.colors.onBackground}\r\n          />\r\n        </View>\r\n        <SelectedContext.Provider value={props.selected}>\r\n          <FlatList\r\n            ref={wheelScrollRef}\r\n            data={menuItems}\r\n            renderItem={renderItem}\r\n            keyExtractor={keyExtractor}\r\n            horizontal={true}\r\n            snapToInterval={71}\r\n            style={styles.scrollContainer}\r\n            contentContainerStyle={flatListBackgroundStyle}\r\n            scrollEventThrottle={100}\r\n            onScroll={onScroll}\r\n            overScrollMode=\"never\"\r\n            showsHorizontalScrollIndicator={false}\r\n            nestedScrollEnabled={true}\r\n          />\r\n        </SelectedContext.Provider>\r\n        <View style={[styles.chevron, scrollEnd && { opacity: 0 }]}>\r\n          <MaterialIcons\r\n            name=\"chevron-right\"\r\n            size={24}\r\n            color={theme.colors.onBackground}\r\n          />\r\n        </View>\r\n        {!props.leftHanded && props.showCastSpellButton && (\r\n          <View style={styles.spellButtonPlaceholder} />\r\n        )}\r\n      </View>\r\n    ),\r\n    [\r\n      menuItems,\r\n      renderItem,\r\n      theme,\r\n      scrollStart,\r\n      scrollEnd,\r\n      flatListBackgroundStyle,\r\n      onScroll,\r\n      props.selected,\r\n      props.leftHanded,\r\n      props.showCastSpellButton,\r\n    ],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  scrollContainer: {\r\n    flex: 1,\r\n    height: 48,\r\n  },\r\n  scrollContentContainer: {\r\n    paddingVertical: 0,\r\n    justifyContent: \"center\",\r\n  },\r\n  navigationBlock: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"stretch\",\r\n  },\r\n  itemContainerStyle: {\r\n    width: 70,\r\n    alignItems: \"center\",\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n  },\r\n  itemStyle: {\r\n    fontSize: 10,\r\n  },\r\n  gradient: {\r\n    flex: 1,\r\n  },\r\n  spellButtonPlaceholder: {\r\n    width: 84,\r\n    height: 48,\r\n  },\r\n  bottomMenuContainer: { flexDirection: \"row\", alignItems: \"center\" },\r\n  spellMenuButtonPlaceholder: {\r\n    height: 48,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"flex-end\",\r\n    overflow: \"visible\",\r\n  },\r\n  chevron: {\r\n    width: 24,\r\n    height: 48,\r\n    justifyContent: \"center\",\r\n  },\r\n  notificationBadge: {\r\n    position: \"absolute\",\r\n    top: 4,\r\n    right: 4,\r\n  },\r\n});\r\n","import { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { cleanup } from \"../../backend/Cleanup\";\r\nimport { hasFlag } from \"../../backend/Flags\";\r\nimport { GameState } from \"../../backend/GameState\";\r\nimport {\r\n  nextFrame,\r\n  processOfflineTicks,\r\n  processTimeTick,\r\n  processWarpTime,\r\n} from \"../../backend/timetick/TimeTick\";\r\nimport {\r\n  TransformationType,\r\n  applyTransformations,\r\n  registerTransformation,\r\n} from \"../../backend/transformation/Transformation\";\r\nimport { TransformationTags } from \"../../backend/transformation/TransformationTags\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\n// import {\r\n//   clearTimeout,\r\n//   setInterval,\r\n//   setTimeout,\r\n// } from \"../utility/FailSafeTimers\";\r\n\r\nconst TARGET_FPS = 20;\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.GameSpeed]],\r\n  \"CombatPausedMagicTap\",\r\n  t(\"Combat paused for accessibility\"),\r\n  TransformationType.Multiplier,\r\n  (state) => (hasFlag(state, \"combat_paused_magic_tap\") ? 0 : 1),\r\n);\r\n\r\nconst gameSpeedTags = [TransformationTags.GameSpeed];\r\n\r\nexport default function GameTickProcessor(props: {\r\n  setPlayerState: (state: GameState) => void;\r\n  onLoadingProgress: (ticksProcessedSoFar: number, ticksTotal: number) => void;\r\n}) {\r\n  const state = useGameState();\r\n\r\n  // The use of ref is needed here because:\r\n  // 1. We don't want to reset the interval if the context changes,\r\n  //    because that will lead to delayed updates\r\n  // 2. If we don't use playerContextRef and use playerContext instead,\r\n  //    it will refer to an old context,\r\n  //    and it will miss updates\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const [currentError, setCurrentError] = useState(null);\r\n\r\n  const [lastTickTime, setLastTickTime] = useState(state.run.lastProcessedTime);\r\n\r\n  const [randomValueForReprocessing, setRandomValueForReprocessing] = useState(\r\n    Math.random(),\r\n  );\r\n\r\n  const [warping, setWarping] = useState(false);\r\n\r\n  if (currentError != null) {\r\n    // If we have an error, stop all processing by throwing\r\n    // and letting the error handler handle it\r\n    throw currentError;\r\n  }\r\n\r\n  const timeTickCallback = useCallback(async () => {\r\n    let nowTime = Date.now();\r\n    let lastTickTimeConsidered = lastTickTime;\r\n\r\n    if (warping) {\r\n      // Skip ticks entirely if warping\r\n      return;\r\n    }\r\n\r\n    if (stateRef.current.run.warpTimeSecs > 0) {\r\n      // Trigger a time warp!\r\n      let { apply, ...currentState } = stateRef.current;\r\n      setWarping(true);\r\n      await processWarpTime(\r\n        currentState,\r\n        () => Date.now(),\r\n        props.onLoadingProgress,\r\n        props.setPlayerState,\r\n      );\r\n      // Processing can take a while, so overwrite this so we don't end up with a long tick...\r\n      nowTime = Date.now();\r\n      setWarping(false);\r\n      lastTickTimeConsidered = nowTime;\r\n    }\r\n\r\n    const elapsedSec =\r\n      (nowTime - lastTickTimeConsidered) / 1000 +\r\n      stateRef.current.run.skipAheadTime;\r\n    if (stateRef.current.run.skipAheadTime > 0) {\r\n      stateRef.current.apply((state) => {\r\n        state.run.skipAheadTime = 0;\r\n        return state;\r\n      });\r\n    }\r\n    // console.log(\"elapsed sec: \", elapsedSec, new Date().toTimeString());\r\n    if (elapsedSec <= 0) {\r\n      // Someone is skipping time. Do not do anything!!\r\n      // Or maybe the system clock adjusted itself. In which case, although we do not\r\n      // want to do anything, we do want the time tick to resume later, so\r\n      // just set a random value so it refreshes...\r\n      setRandomValueForReprocessing(Math.random());\r\n      return;\r\n    }\r\n    if (elapsedSec > 600) {\r\n      // console.warn(\"elapsed sec is too large\", elapsedSec);\r\n      // Trigger a loading update\r\n      const secsTotal = Math.floor(Math.min(60 * 60 * 48, elapsedSec));\r\n      let { apply, ...currentState } = stateRef.current;\r\n      await processOfflineTicks(\r\n        currentState,\r\n        secsTotal,\r\n        nowTime,\r\n        props.setPlayerState,\r\n      );\r\n    } else if (elapsedSec > 30) {\r\n      // Start a warp!\r\n      stateRef.current.apply((state) => {\r\n        state.run.warpTimeSecs += elapsedSec;\r\n        state.run.lastProcessedTime = nowTime;\r\n        return state;\r\n      });\r\n    } else {\r\n      stateRef.current.apply((state) => {\r\n        const beginTimestamp = Date.now();\r\n        let remainingSec = elapsedSec;\r\n        let ticksRun = 0;\r\n        const speedMultiplier = applyTransformations(\r\n          gameSpeedTags,\r\n          state,\r\n          1.0,\r\n          {\r\n            isWarp: false,\r\n          },\r\n        );\r\n        do {\r\n          // Attempt to do a tick once every 100 in-game milliseconds at most.\r\n          // However, if we would need to execute more than 20 ticks, just do 20 ticks to avoid locking the game.\r\n          const tickTime = Math.min(\r\n            Math.max(0.1 / speedMultiplier, elapsedSec / 19.999),\r\n            remainingSec,\r\n          );\r\n          state = processTimeTick(tickTime, false)(state);\r\n          state.run.lastProcessedTime = nowTime;\r\n          remainingSec -= tickTime;\r\n          ticksRun++;\r\n        } while (remainingSec > 0);\r\n        const endTimestamp = Date.now();\r\n        state.global.debugLastUpdateTimestamps.push(endTimestamp);\r\n        state.global.debugLastUpdateBeginEndTimestamps.push({\r\n          begin: beginTimestamp,\r\n          end: endTimestamp,\r\n          ticksRun,\r\n        });\r\n        state.global.debugLastUpdateTimestamps =\r\n          state.global.debugLastUpdateTimestamps.slice(-10);\r\n        state.global.debugLastUpdateBeginEndTimestamps =\r\n          state.global.debugLastUpdateBeginEndTimestamps.slice(-10);\r\n        return state;\r\n      });\r\n    }\r\n\r\n    setLastTickTime(nowTime);\r\n  }, [lastTickTime, warping, randomValueForReprocessing]);\r\n\r\n  const cleanupCallback = useCallback(async () => {\r\n    stateRef.current.apply(cleanup);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const interval = setTimeout(async () => {\r\n      try {\r\n        await timeTickCallback();\r\n        await nextFrame();\r\n      } catch (e: any) {\r\n        setCurrentError(e);\r\n      }\r\n    }, 1000 / (state.options?.targetFps ?? TARGET_FPS));\r\n    return () => clearTimeout(interval);\r\n  }, [timeTickCallback]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      try {\r\n        await cleanupCallback();\r\n        await nextFrame();\r\n      } catch (e: any) {\r\n        setCurrentError(e);\r\n      }\r\n    }, 3000);\r\n    return () => clearTimeout(interval);\r\n  }, [cleanupCallback]);\r\n\r\n  // Do not render anything\r\n  return null;\r\n}\r\n","import { LinearGradient } from \"expo-linear-gradient\";\r\nimport React, { useEffect, useMemo, useRef } from \"react\";\r\nimport { Animated, Platform, StyleSheet, View } from \"react-native\";\r\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\r\nimport {\r\n  Resource,\r\n  getResourceAmount,\r\n  getResourceCap,\r\n} from \"../../backend/Resources\";\r\nimport {\r\n  estimateManaConsumptionPerSecPermaCast,\r\n  getCurrentAutocastStrategy,\r\n} from \"../../backend/autocast/Autocast\";\r\nimport { calculateIncomePerSecond } from \"../../backend/timetick/IncomeOverTime\";\r\nimport { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { useAuxOptions } from \"../utility/AuxOptionsContext\";\r\nimport { Text } from \"../utility/Text\";\r\nimport { GameIcon } from \"../utility/icons/GameIcon\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\n\r\n/*\r\n * This component displays a mana bar. However, it's a total hack and will\r\n * certainly not look ok if it's not full-screen-width.\r\n */\r\nexport default function ManaBar() {\r\n  const auxOptions = useAuxOptions();\r\n  const state = useGameState();\r\n  const mana = getResourceAmount(state, Resource.Mana);\r\n  const manaCap = getResourceCap(state, Resource.Mana);\r\n  const insets = useSafeAreaInsets();\r\n  const ratioFilled = Math.min(1.0, mana / manaCap);\r\n\r\n  const filledAnimWithNativeDriver = useRef(\r\n    new Animated.Value(ratioFilled),\r\n  ).current;\r\n  const filledAnimWithoutNativeDriver = useRef(\r\n    new Animated.Value(ratioFilled),\r\n  ).current;\r\n\r\n  const manaIncome = calculateIncomePerSecond(state)?.Mana ?? 0;\r\n  const permaCastCost = estimateManaConsumptionPerSecPermaCast(\r\n    state,\r\n    getCurrentAutocastStrategy(state),\r\n  );\r\n\r\n  const incomeText =\r\n    manaIncome != 0\r\n      ? \" (\" +\r\n        (manaIncome > 0 ? \"+\" : \"\") +\r\n        formatNumber(manaIncome, { showDecimals: true }) +\r\n        \"/s\" +\r\n        (permaCastCost != 0\r\n          ? \"; -\" + formatNumber(permaCastCost, { showDecimals: true }) + \"/s\"\r\n          : \"\") +\r\n        \")\"\r\n      : \"\";\r\n\r\n  useEffect(() => {\r\n    if (state.options.doNotUseNativeDriver) {\r\n      Animated.timing(filledAnimWithoutNativeDriver, {\r\n        toValue: Math.max(ratioFilled, 1e-5),\r\n        duration: 100,\r\n        useNativeDriver: false,\r\n      }).start();\r\n    } else {\r\n      Animated.timing(filledAnimWithNativeDriver, {\r\n        toValue: Math.max(ratioFilled, 1e-5),\r\n        duration: 100,\r\n        useNativeDriver: true,\r\n      }).start();\r\n    }\r\n  }, [ratioFilled]);\r\n  const animatedStyle = useMemo(\r\n    () => [\r\n      styles.filled,\r\n      {\r\n        transform: [\r\n          {\r\n            scaleX: state.options.doNotUseNativeDriver\r\n              ? filledAnimWithoutNativeDriver\r\n              : filledAnimWithNativeDriver,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    [state.options.doNotUseNativeDriver],\r\n  );\r\n  const animatedComponent = useMemo(\r\n    () => (\r\n      <Animated.View\r\n        key={state.options.doNotUseNativeDriver ? \"yes\" : \"no\"}\r\n        style={[\r\n          animatedStyle,\r\n          insets.bottom < 10 && { backgroundColor: \"#04c\" },\r\n        ]}\r\n      >\r\n        {insets.bottom >= 10 && (\r\n          <LinearGradient\r\n            colors={[`#04c`, `#04c0`]}\r\n            style={[\r\n              styles.gradient,\r\n              {\r\n                height: Math.max(\r\n                  48,\r\n                  (auxOptions.compactLayout ? 21 : 29) + insets.bottom,\r\n                ),\r\n              },\r\n            ]}\r\n          />\r\n        )}\r\n      </Animated.View>\r\n    ),\r\n    [\r\n      state.options.doNotUseNativeDriver,\r\n      animatedStyle,\r\n      insets.bottom,\r\n      auxOptions.compactLayout,\r\n    ],\r\n  );\r\n  const incomeTextComponent = useMemo(\r\n    () => <Text style={styles.income}>{incomeText}</Text>,\r\n    [incomeText],\r\n  );\r\n  const manaTextComponent = useMemo(\r\n    () => (\r\n      <Text style={styles.textOverlay}>\r\n        {formatNumber(mana)}/{formatNumber(manaCap)}\r\n        {incomeTextComponent}\r\n      </Text>\r\n    ),\r\n    [mana, manaCap, incomeTextComponent],\r\n  );\r\n  const accessibilityLabel = useMemo(\r\n    () => `Mana: ${formatNumber(mana)}/${formatNumber(manaCap)} ${incomeText}`,\r\n    [mana, manaCap, incomeText],\r\n  );\r\n  return useMemo(\r\n    () => (\r\n      <View\r\n        style={[\r\n          styles.container,\r\n          { height: (auxOptions.compactLayout ? 21 : 29) + insets.bottom },\r\n        ]}\r\n      >\r\n        {animatedComponent}\r\n        <View>\r\n          <View\r\n            style={styles.row}\r\n            accessible={true}\r\n            accessibilityRole={Platform.OS !== \"web\" ? \"header\" : undefined}\r\n            accessibilityLabel={accessibilityLabel}\r\n          >\r\n            <GameIcon icon=\"mana\" style={styles.icon} />\r\n            {manaTextComponent}\r\n          </View>\r\n          <View style={{ height: insets.bottom }} />\r\n        </View>\r\n      </View>\r\n    ),\r\n    [\r\n      animatedComponent,\r\n      accessibilityLabel,\r\n      manaTextComponent,\r\n      insets.bottom,\r\n      auxOptions.compactLayout,\r\n    ],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n    backgroundColor: \"#014\",\r\n    height: 29,\r\n  },\r\n  gradient: {\r\n    width: \"100%\",\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n  },\r\n  filled: {\r\n    position: \"absolute\",\r\n    left: \"-100%\",\r\n    top: 0,\r\n    height: \"100%\",\r\n    width: \"200%\",\r\n    overflow: \"hidden\",\r\n  },\r\n  textOverlay: {\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  income: {\r\n    color: \"#fff\",\r\n    fontWeight: \"normal\",\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  icon: {\r\n    height: 16,\r\n    width: 16,\r\n    marginRight: 4,\r\n  },\r\n  accessibilityHidden: {\r\n    width: 1,\r\n    height: 1,\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n  },\r\n});\r\n","import { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { buildEvent } from \"../events/EventMessageBuilder\";\r\nimport {\r\n  EventOccurrenceData,\r\n  getEventOccurrenceById,\r\n  triggerEvent,\r\n} from \"../events/Events\";\r\nimport { clearFlag, hasFlag, hasWorldFlag, setWorldFlag } from \"../Flags\";\r\nimport { GameState } from \"../GameState\";\r\nimport { getResourceAmount, grantResource, Resource } from \"../Resources\";\r\nimport {\r\n  registerPostRetirementListener,\r\n  registerRetirementListener,\r\n} from \"../Retire\";\r\nimport {\r\n  applyTransformations,\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport {\r\n  OfflineTickListener,\r\n  OfflineTickListeners,\r\n} from \"./OfflineTickListeners\";\r\nimport { registerTimeTickListener } from \"./TimeTick\";\r\n\r\nexport function getCurrentTimePieceSpeedupSpeed(state: GameState) {\r\n  return hasFlag(state, \"time_piece_5x_speedup_enabled\")\r\n    ? 5\r\n    : hasFlag(state, \"time_piece_speedup_enabled\")\r\n    ? 2\r\n    : 1;\r\n}\r\n\r\n// Returns cost per extra REAL LIFE second gained.\r\nexport function getCurrentTimePieceSpeedupCost(state: GameState) {\r\n  if (hasFlag(state, \"time_piece_5x_speedup_enabled\")) {\r\n    return applyTransformations(\r\n      [TransformationTags.TimePiecePerFasterSpeedup],\r\n      state,\r\n      4.0,\r\n    );\r\n  } else if (hasFlag(state, \"time_piece_speedup_enabled\")) {\r\n    return applyTransformations(\r\n      [TransformationTags.TimePiecePerFastSpeedup],\r\n      state,\r\n      3.0,\r\n    );\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\n// Returns cost per real-life second.\r\nexport function getCurrentTimePieceSpeedupCostPerRealSecond(state: GameState) {\r\n  const speed = getCurrentTimePieceSpeedupSpeed(state);\r\n  if (speed > 1) {\r\n    const cost = getCurrentTimePieceSpeedupCost(state);\r\n    return (speed - 1) * cost;\r\n  }\r\n  return 0;\r\n}\r\n\r\nconst gameSpeedTags = [TransformationTags.GameSpeed];\r\n\r\n/**\r\n * Returns the total speed multiplier. This includes time pieces,\r\n * Time Contraction, and everything else.\r\n */\r\nfunction calculateSpeedMultiplier(state: GameState): number {\r\n  return applyTransformations(gameSpeedTags, state, 1.0, { isWarp: false });\r\n}\r\n\r\nfunction getCurrentTimePieceSpeedupCostPerGameSecond(state: GameState) {\r\n  const speed = getCurrentTimePieceSpeedupSpeed(state);\r\n  if (speed > 1) {\r\n    const cost = getCurrentTimePieceSpeedupCost(state);\r\n    const totalSpeed = calculateSpeedMultiplier(state);\r\n    return ((speed - 1) * cost) / totalSpeed;\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function recordTimePieceConsumption(\r\n  state: GameState,\r\n  amount: number,\r\n): GameState {\r\n  state.global.timePiecesConsumed += amount;\r\n  state.world.timePiecesConsumed += amount;\r\n  state.run.timePiecesConsumed += amount;\r\n  return state;\r\n}\r\n\r\nexport function loadTimePieces() {\r\n  registerTransformation(\r\n    [[TransformationTags.GameSpeed]],\r\n    \"TimePieceGameSpeed\",\r\n    t(\"Time Pieces game speedup\"),\r\n    TransformationType.Multiplier,\r\n    (state, params) =>\r\n      !params.isWarp ? getCurrentTimePieceSpeedupSpeed(state) : 1,\r\n  );\r\n\r\n  registerTransformation(\r\n    [[TransformationTags.GameSpeed]],\r\n    \"Debug2xGameSpeed\",\r\n    t(\"Debug game speedup\"),\r\n    TransformationType.Multiplier,\r\n    (state, params) =>\r\n      hasFlag(state, \"debug_2x_speed\") && !params?.isWarp ? 2 : 1,\r\n  );\r\n\r\n  registerTransformation(\r\n    [[TransformationTags.GameSpeed]],\r\n    \"Debug0xGameSpeed\",\r\n    t(\"Debug game speed frozen\"),\r\n    TransformationType.Multiplier,\r\n    (state, params) =>\r\n      hasFlag(state, \"debug_0x_speed\") && !params?.isWarp ? 0 : 1,\r\n  );\r\n\r\n  registerTimeTickListener(\r\n    \"TimePieceConsumer\",\r\n    (state, timeElapsedSec, isWarp) => {\r\n      if (!isWarp) {\r\n        const costPerSecond =\r\n          getCurrentTimePieceSpeedupCostPerGameSecond(state);\r\n        if (costPerSecond > 0) {\r\n          const amount = costPerSecond * timeElapsedSec;\r\n          state = grantResource(Resource.TimePiece, -amount)(state);\r\n          state = recordTimePieceConsumption(state, amount);\r\n        }\r\n        if (getResourceAmount(state, Resource.TimePiece) <= 0) {\r\n          state = clearFlag(\"time_piece_5x_speedup_enabled\")(state);\r\n          state = clearFlag(\"time_piece_speedup_enabled\")(state);\r\n        }\r\n      }\r\n      return state;\r\n    },\r\n  );\r\n\r\n  const timePieceEventBuilder = buildEvent(\r\n    \"TimePieceEvent\",\r\n    t(\"Offline Progress\"),\r\n    [],\r\n  );\r\n  timePieceEventBuilder.message(\r\n    t(`Welcome back to Magic Research!\r\n        \r\n  **You obtained /amount/:timepiece: Time Pieces!**`),\r\n  );\r\n  const timePieceEvent = timePieceEventBuilder.build();\r\n\r\n  const timePieceEventBuilderFirstTime = buildEvent(\r\n    \"TimePieceEventFirstTime\",\r\n    t(\"Offline Progress\"),\r\n    [],\r\n  ).setOnTrigger(setWorldFlag(\"has_seen_offline_progress\"));\r\n  timePieceEventBuilderFirstTime.message(\r\n    t(`Welcome back to Magic Research!\r\n        \r\n  **You obtained /amount/:timepiece: Time Pieces! Time Pieces allow you to make time pass faster for a duration. You can do so from the left side menu!**`),\r\n  );\r\n  const timePieceEventFirstTime = timePieceEventBuilderFirstTime.build();\r\n\r\n  const timePieceGranter = new OfflineTickListener(\r\n    \"TimePieceGranter\",\r\n    (totalSecs) => {\r\n      return (state) => {\r\n        const transformedSecs = applyTransformations(\r\n          [TransformationTags.OfflineTimePieceGain, Resource.TimePiece],\r\n          state,\r\n          totalSecs,\r\n        );\r\n        const oldTimePiece = getResourceAmount(state, Resource.TimePiece);\r\n        // console.log(\"Granting time pieces\", transformedSecs);\r\n        state = grantResource(Resource.TimePiece, transformedSecs)(state);\r\n        const newTimePiece = getResourceAmount(state, Resource.TimePiece);\r\n        const amount = newTimePiece - oldTimePiece;\r\n        if (amount > 0) {\r\n          if (hasWorldFlag(state, \"has_seen_offline_progress\")) {\r\n            const lastEventOccurrenceId = state.run.eventQueue.find(\r\n              (eventOccurrenceId) =>\r\n                getEventOccurrenceById(state, eventOccurrenceId)?.eventId ===\r\n                timePieceEvent.getId(),\r\n            );\r\n            if (lastEventOccurrenceId != null) {\r\n              const eventOccurrence = getEventOccurrenceById(\r\n                state,\r\n                lastEventOccurrenceId,\r\n              ) as EventOccurrenceData;\r\n              const newAmount =\r\n                amount + (eventOccurrence?.params?.rawAmount ?? 0);\r\n              eventOccurrence.params.amount = formatNumber(newAmount);\r\n              eventOccurrence.params.rawAmount = newAmount;\r\n              state.run.eventOccurrences[lastEventOccurrenceId] =\r\n                eventOccurrence;\r\n            } else {\r\n              if (amount > 60) {\r\n                state = triggerEvent(timePieceEvent, {\r\n                  amount: formatNumber(amount),\r\n                  rawAmount: amount,\r\n                })(state);\r\n              }\r\n            }\r\n          } else {\r\n            state = triggerEvent(timePieceEventFirstTime, {\r\n              amount: formatNumber(amount),\r\n              rawAmount: amount,\r\n            })(state);\r\n          }\r\n        }\r\n        return state;\r\n      };\r\n    },\r\n  );\r\n  OfflineTickListeners.register(timePieceGranter);\r\n\r\n  registerRetirementListener(\"TimePieceRecorder\", (state) => {\r\n    state.world.variables[\"timePiecesLastRun\"] = getResourceAmount(\r\n      state,\r\n      Resource.TimePiece,\r\n    );\r\n    return state;\r\n  });\r\n\r\n  registerPostRetirementListener(\"TimePieceRetirementGranter\", (state) => {\r\n    state = grantResource(\r\n      Resource.TimePiece,\r\n      state.world.variables[\"timePiecesLastRun\"] as number,\r\n    )(state);\r\n    return state;\r\n  });\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport {\r\n  getElementExp,\r\n  getElementLevel,\r\n  getPrimaryElements,\r\n  getTotalExpRequiredForLevel,\r\n  getUnlockedElements,\r\n} from \"../../backend/spells/Elements\";\r\nimport { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { Text } from \"./Text\";\r\nimport { useGameState } from \"./useGameState\";\r\n\r\nfunction ElementRow(props: {\r\n  name: string;\r\n  level: number;\r\n  isPrimary: boolean;\r\n  currentExp: string;\r\n  toNextLevel: string;\r\n}) {\r\n  return (\r\n    <View style={styles.row} accessible={true}>\r\n      <Text\r\n        doNotScaleFonts={true}\r\n        style={props.isPrimary && styles.primaryText}\r\n      >\r\n        {t(\"{{name}}: Lv{{level}}\", { name: props.name, level: props.level })}\r\n      </Text>\r\n      <Text\r\n        doNotScaleFonts={true}\r\n        style={props.isPrimary && styles.primaryText}\r\n      >\r\n        {t(\"Exp {{currentExp}}/{{nextLevelExp}}\", {\r\n          currentExp: props.currentExp,\r\n          nextLevelExp: props.toNextLevel,\r\n        })}\r\n      </Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst SchoolRowMemo = React.memo(ElementRow);\r\n\r\nexport function ElementViewer(props: { isVisible: boolean }) {\r\n  const state = useGameState();\r\n  const keys = getUnlockedElements(state);\r\n  const rows = useMemo(\r\n    () =>\r\n      keys.map((key) => {\r\n        const level = getElementLevel(state, key);\r\n        const currentExp = getElementExp(state, key);\r\n        const toNextLevel = getTotalExpRequiredForLevel(state, level + 1, key);\r\n        return (\r\n          <SchoolRowMemo\r\n            name={key}\r\n            level={level}\r\n            isPrimary={getPrimaryElements(state).includes(key)}\r\n            currentExp={formatNumber(currentExp)}\r\n            toNextLevel={formatNumber(toNextLevel)}\r\n            key={key}\r\n          />\r\n        );\r\n      }),\r\n    [\r\n      props.isVisible !== false\r\n        ? JSON.stringify(state.run.elementExperience)\r\n        : false,\r\n      getPrimaryElements(state).join(),\r\n    ],\r\n  );\r\n  return <View style={styles.container}>{rows}</View>;\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"stretch\",\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-end\",\r\n  },\r\n  primaryText: {\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n","import React, { useMemo } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport {\r\n  Resource,\r\n  getResourceAmount,\r\n  getResourceCap,\r\n  getResourceInfo,\r\n  getSortedResourceKeys,\r\n  translateResource,\r\n} from \"../../backend/Resources\";\r\nimport {\r\n  calculateIncomePerSecond,\r\n  explainIncomePerSecText,\r\n} from \"../../backend/timetick/IncomeOverTime\";\r\nimport { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport Styles from \"./Styles\";\r\nimport { Text } from \"./Text\";\r\nimport { GameIcon } from \"./icons/GameIcon\";\r\nimport Tooltip from \"./tooltip/PaperTooltip\";\r\nimport { useGameState } from \"./useGameState\";\r\n\r\nconst EPSILON = 1e-6;\r\n\r\nfunction ResourceRow(props: {\r\n  resource: Resource;\r\n  current: number;\r\n  cap: number;\r\n  income: number;\r\n  hideIncome: boolean;\r\n  explanation: string;\r\n}) {\r\n  const resourceInfo = getResourceInfo(props.resource);\r\n  const isCapped = props.current >= props.cap - EPSILON;\r\n  const theme = useTheme();\r\n  const incomeComponent = useMemo(() => {\r\n    if (props.hideIncome) {\r\n      return null;\r\n    }\r\n    if (props.explanation != \"\") {\r\n      return (\r\n        <View style={styles.income}>\r\n          {props.income != 0 && (\r\n            <Tooltip title={props.explanation}>\r\n              <Text\r\n                style={[\r\n                  props.income < 0 && { color: theme.colors.error },\r\n                  Styles.underlined,\r\n                ]}\r\n                doNotScaleFonts={true}\r\n              >\r\n                {t(\"{{incomeSign}}{{income}}/s\", {\r\n                  incomeSign: props.income > 0 ? \"+\" : \"-\",\r\n                  income: formatNumber(Math.abs(props.income), {\r\n                    showDecimals: true,\r\n                  }),\r\n                })}\r\n              </Text>\r\n            </Tooltip>\r\n          )}\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <View style={styles.income}>\r\n        {props.income != 0 && (\r\n          <Text\r\n            style={props.income < 0 && { color: theme.colors.error }}\r\n            doNotScaleFonts={true}\r\n          >\r\n            {t(\"{{incomeSign}}{{income}}/s\", {\r\n              incomeSign: props.income > 0 ? \"+\" : \"-\",\r\n              income: formatNumber(Math.abs(props.income), {\r\n                showDecimals: true,\r\n              }),\r\n            })}\r\n          </Text>\r\n        )}\r\n      </View>\r\n    );\r\n  }, [props.income, props.hideIncome, props.explanation, theme]);\r\n\r\n  const firstComponent = useMemo(\r\n    () => (\r\n      <View style={styles.inlineRow}>\r\n        <GameIcon\r\n          icon={resourceInfo.icon}\r\n          style={styles.icon}\r\n          small\r\n          accessibilityLabel=\"\"\r\n        />\r\n        <Text doNotScaleFonts={true}>\r\n          {t(\"{{resource}}: \", { resource: translateResource(props.resource) })}\r\n        </Text>\r\n      </View>\r\n    ),\r\n    [props.resource, resourceInfo.icon],\r\n  );\r\n\r\n  return (\r\n    <View style={styles.row} accessible={true}>\r\n      {firstComponent}\r\n      <View style={styles.inlineRow}>\r\n        <Text\r\n          style={isCapped && { color: theme.colors.secondary }}\r\n          doNotScaleFonts={true}\r\n        >\r\n          {t(\"{{current}}/{{cap}}\", {\r\n            current: formatNumber(props.current, { showDecimals: true }),\r\n            cap: formatNumber(props.cap),\r\n          })}\r\n        </Text>\r\n        {incomeComponent}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst ResourceRowMemo = React.memo(ResourceRow);\r\n\r\nexport function ResourceViewer(props: { isVisible?: boolean }) {\r\n  const state = useGameState();\r\n  const resourceKeys = getSortedResourceKeys(state) as Array<Resource>;\r\n  const income = calculateIncomePerSecond(state);\r\n  const incomeExplanation = explainIncomePerSecText(state);\r\n  const hasAnyIncome = Object.keys(income).some(\r\n    (resource) => income[resource as Resource] != 0,\r\n  );\r\n  const rows = useMemo(\r\n    () =>\r\n      resourceKeys.map((resourceName) => {\r\n        return (\r\n          <ResourceRowMemo\r\n            resource={resourceName}\r\n            current={getResourceAmount(state, resourceName)}\r\n            cap={getResourceCap(state, resourceName)}\r\n            income={income?.[resourceName] ?? 0}\r\n            hideIncome={!hasAnyIncome}\r\n            explanation={incomeExplanation?.[resourceName] ?? \"\"}\r\n            key={resourceName}\r\n          />\r\n        );\r\n      }),\r\n    [props.isVisible !== false ? state : false],\r\n  );\r\n  return <View style={styles.container}>{rows}</View>;\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"stretch\",\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-end\",\r\n  },\r\n  inlineRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  icon: {\r\n    marginRight: 2,\r\n  },\r\n  income: {\r\n    width: 65,\r\n    marginLeft: 8,\r\n  },\r\n});\r\n","import { Ionicons } from \"@expo/vector-icons\";\r\nimport React, { useCallback, useContext, useMemo, useRef } from \"react\";\r\nimport {\r\n  Platform,\r\n  ScrollView,\r\n  StyleSheet,\r\n  TouchableNativeFeedback,\r\n  TouchableOpacity,\r\n  View,\r\n} from \"react-native\";\r\nimport { Badge, useTheme } from \"react-native-paper\";\r\nimport { clearFlag, setFlag } from \"../../backend/Flags\";\r\nimport { Resource, getResourceAmount } from \"../../backend/Resources\";\r\nimport { isExplorationUnlocked } from \"../../backend/exploration/Exploration\";\r\nimport { getTemporaryEffects } from \"../../backend/temporaryeffects/TemporaryEffects\";\r\nimport {\r\n  getCurrentTimePieceSpeedupCost,\r\n  getCurrentTimePieceSpeedupSpeed,\r\n} from \"../../backend/timetick/TimePieces\";\r\nimport { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { Button } from \"../utility/Button\";\r\nimport CategoryContainer from \"../utility/CategoryContainer\";\r\nimport { PlayerCombatStatsViewer } from \"../utility/CombatStatsViewer\";\r\nimport { ElementViewer } from \"../utility/ElementViewer\";\r\nimport { KeyboardListener } from \"../utility/KeyboardListener\";\r\nimport { Markdown } from \"../utility/Markdown\";\r\nimport {\r\n  getAllMenuItems,\r\n  getAllSections,\r\n  getSectionInfo,\r\n  useLayoutType,\r\n} from \"../utility/Miscellaneous\";\r\nimport { ResourceViewer } from \"../utility/ResourceViewer\";\r\nimport Styles from \"../utility/Styles\";\r\nimport { TemporaryEffectsViewer } from \"../utility/TemporaryEffectsViewer\";\r\nimport { Text } from \"../utility/Text\";\r\nimport { VisibilityContext } from \"../utility/VisibilityContext\";\r\nimport { GameIcon } from \"../utility/icons/GameIcon\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\n\r\nconst boldHotkeyLetter = (title: string, hotkey: string, theme: any) => {\r\n  const hotkeyPos = title.toLowerCase().indexOf(hotkey.toLowerCase());\r\n  let firstHalf = \"\";\r\n  let lastHalf = \"\";\r\n\r\n  if (hotkeyPos == 0) {\r\n    lastHalf = title.substring(1);\r\n  } else {\r\n    firstHalf = title.substring(0, hotkeyPos);\r\n    lastHalf = title.substring(hotkeyPos + 1);\r\n  }\r\n\r\n  return (\r\n    <Text>\r\n      {firstHalf}\r\n      <Text style={[styles.hotkeyText, { color: theme.colors.tertiary }]}>\r\n        {hotkeyPos == 0 ? hotkey.toUpperCase() : hotkey.toLowerCase()}\r\n      </Text>\r\n      {lastHalf}\r\n    </Text>\r\n  );\r\n};\r\n\r\nconst MenuComponent = (\r\n  props: {\r\n    title: string;\r\n    section: string;\r\n    onPress: () => void;\r\n    showBadge: boolean;\r\n    showFavoriteIcon: boolean;\r\n    favorited: boolean;\r\n    onPressFavorite: () => void;\r\n    hotkey?: string;\r\n    wide?: boolean;\r\n    children: React.ReactNode;\r\n  } & any,\r\n) => {\r\n  const { title, onPress, showBadge, ...others } = props;\r\n  const theme = useTheme();\r\n  const visible = useContext(VisibilityContext);\r\n  const onKeyboard = useCallback(\r\n    (ev: KeyboardEvent) => {\r\n      if (!visible || props.hotkey == null) {\r\n        return;\r\n      }\r\n\r\n      if (\r\n        ((!ev.shiftKey && !ev.ctrlKey) || (ev.shiftKey && ev.ctrlKey)) &&\r\n        ev.key.toLowerCase() == props.hotkey.toLowerCase()\r\n      ) {\r\n        onPress();\r\n      }\r\n    },\r\n    [visible, onPress],\r\n  );\r\n  const favoriteButton = useMemo(\r\n    () => (\r\n      <TouchableOpacity\r\n        accessibilityLabel={\r\n          props.favorited ? t(\"Unpin Section\") : t(\"Pin Section\")\r\n        }\r\n        onPress={props.onPressFavorite}\r\n        style={styles.favoriteButton}\r\n      >\r\n        <Ionicons\r\n          name={props.favorited ? \"heart\" : \"heart-outline\"}\r\n          color={theme.colors.onBackground}\r\n          size={14}\r\n        />\r\n      </TouchableOpacity>\r\n    ),\r\n    [props.favorited, props.onPressFavorite, theme],\r\n  );\r\n  return (\r\n    <View>\r\n      <KeyboardListener callback={onKeyboard} />\r\n      <TouchableOpacity\r\n        onPress={onPress}\r\n        Component={Platform.select<any>({\r\n          android: TouchableNativeFeedback,\r\n          default: TouchableOpacity,\r\n        })}\r\n        accessibilityLabel={title}\r\n        accessibilityRole=\"button\"\r\n        accessible={true}\r\n        focusable={true}\r\n        {...others}\r\n        style={[\r\n          styles.menuComponentTouch,\r\n          { borderColor: theme.colors.outlineVariant },\r\n          props.wide && { width: 96 },\r\n        ]}\r\n      >\r\n        <View style={styles.menuComponentButton}>\r\n          <GameIcon\r\n            /* @ts-expect-error accessibilityHidden is supported in web */\r\n            focusable={false}\r\n            accessibilityHidden={true}\r\n            icon={props.section.toLowerCase()}\r\n          />\r\n          {showBadge && <Badge style={styles.notificationBadge} size={8} />}\r\n          {props.showFavoriteIcon && favoriteButton}\r\n          <View style={Styles.mt2}>\r\n            {Platform.OS === \"web\" && props.hotkey ? (\r\n              <Text\r\n                style={[styles.menuItemText, props.wide && { fontSize: 13 }]}\r\n                numberOfLines={1}\r\n              >\r\n                {boldHotkeyLetter(title, props.hotkey, theme)}\r\n              </Text>\r\n            ) : (\r\n              <Text\r\n                style={[styles.menuItemText, props.wide && { fontSize: 13 }]}\r\n                numberOfLines={1}\r\n              >\r\n                {title}\r\n              </Text>\r\n            )}\r\n          </View>\r\n        </View>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport function MenuContents(props: {\r\n  visible: boolean;\r\n  pinnedSections: string[];\r\n  wide: boolean;\r\n  onPressFavorite: (section: string) => void;\r\n  onNavigationPress: (section: string) => void;\r\n}) {\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n\r\n  const layout = useLayoutType();\r\n\r\n  const favoritesFull =\r\n    props.pinnedSections.length >= layout.activeContentTabs - 1;\r\n\r\n  const menuComponent = useCallback(\r\n    (sectionKey: string, sectionTitle: string, menuProps?: any) => {\r\n      const sectionInfo = getSectionInfo(sectionKey);\r\n      return (\r\n        <MenuComponent\r\n          title={sectionTitle}\r\n          section={sectionKey}\r\n          key={sectionKey}\r\n          onPress={() => props.onNavigationPress(sectionKey)}\r\n          onPressFavorite={() => props.onPressFavorite(sectionKey)}\r\n          favorited={props.pinnedSections.includes(sectionKey)}\r\n          showFavoriteIcon={\r\n            (props.pinnedSections.includes(sectionKey) || !favoritesFull) &&\r\n            !sectionInfo.fullScreen\r\n          }\r\n          wide={props.wide}\r\n          {...(menuProps ?? {})}\r\n        />\r\n      );\r\n    },\r\n    [\r\n      props.onNavigationPress,\r\n      props.onPressFavorite,\r\n      props.wide,\r\n      props.pinnedSections.join(),\r\n      favoritesFull,\r\n    ],\r\n  );\r\n\r\n  const menuItems = getAllMenuItems(state);\r\n  const sectionInfo = getAllSections();\r\n  const badgeCacheKey = sectionInfo\r\n    .map((section) => (section.isBadged?.(state) ? \"y\" : \"n\"))\r\n    .join();\r\n\r\n  const navigation = useMemo(\r\n    () => (\r\n      <View style={[styles.navigationBlock, props.wide && { width: 300 }]}>\r\n        {menuItems.map((item, idx) =>\r\n          menuComponent(\r\n            item,\r\n            sectionInfo.find((section) => section.id == item)?.name,\r\n            {\r\n              topDivider: idx == 0,\r\n              showBadge: sectionInfo\r\n                .find((section) => section.id == item)\r\n                ?.isBadged?.(state),\r\n              hotkey: sectionInfo.find((section) => section.id == item)?.hotkey,\r\n            },\r\n          ),\r\n        )}\r\n      </View>\r\n    ),\r\n    [\r\n      props.onNavigationPress,\r\n      props.onPressFavorite,\r\n      menuComponent,\r\n      menuItems.join(\",\"),\r\n      badgeCacheKey,\r\n    ],\r\n  );\r\n\r\n  const hasTemporaryEffects = getTemporaryEffects(state).length > 0;\r\n\r\n  const gameSpeed = getCurrentTimePieceSpeedupSpeed(state);\r\n  const hasTimePieces = getResourceAmount(state, Resource.TimePiece) > 0;\r\n  const speedupCost = getCurrentTimePieceSpeedupCost(state);\r\n  const timePieceCost = t(\"{{timepiecePerSec}}:timepiece:/extra sec\", {\r\n    timepiecePerSec: formatNumber(speedupCost),\r\n  });\r\n\r\n  const showExploration = isExplorationUnlocked(state);\r\n\r\n  const theme = useTheme();\r\n\r\n  return useMemo(\r\n    () => (\r\n      <ScrollView\r\n        style={[\r\n          styles.scrollContainer,\r\n          { backgroundColor: theme.colors.background },\r\n        ]}\r\n        contentContainerStyle={styles.scrollContentContainer}\r\n      >\r\n        <View style={styles.titleContainer}>\r\n          <Text h1>{t(\"Magic Research 2\")}</Text>\r\n        </View>\r\n        {navigation}\r\n        {hasTimePieces && (\r\n          <CategoryContainer title={t(\"Speed up time\")}>\r\n            <View style={styles.timePieceButtonsContainer}>\r\n              <Text>{t(\"Set game speed:\")}</Text>\r\n              <Button\r\n                onPress={() =>\r\n                  stateRef.current.apply((state) => {\r\n                    state = clearFlag(\"time_piece_5x_speedup_enabled\")(state);\r\n                    state = clearFlag(\"time_piece_speedup_enabled\")(state);\r\n                    return state;\r\n                  })\r\n                }\r\n                compact={true}\r\n                labelStyle={styles.timePieceButtonTitle}\r\n                style={[styles.timePieceButtonContainer]}\r\n              >\r\n                {t(\"Normal\")}\r\n              </Button>\r\n              <Button\r\n                onPress={() =>\r\n                  stateRef.current.apply((state) => {\r\n                    state = clearFlag(\"time_piece_5x_speedup_enabled\")(state);\r\n                    state = setFlag(\"time_piece_speedup_enabled\")(state);\r\n                    return state;\r\n                  })\r\n                }\r\n                compact={true}\r\n                labelStyle={styles.timePieceButtonTitle}\r\n                style={[styles.timePieceButtonContainer]}\r\n              >\r\n                {t(\"2x\")}\r\n              </Button>\r\n              <Button\r\n                onPress={() =>\r\n                  stateRef.current.apply((state) => {\r\n                    state = setFlag(\"time_piece_5x_speedup_enabled\")(state);\r\n                    state = clearFlag(\"time_piece_speedup_enabled\")(state);\r\n                    return state;\r\n                  })\r\n                }\r\n                compact={true}\r\n                labelStyle={styles.timePieceButtonTitle}\r\n                style={[styles.timePieceButtonContainer]}\r\n              >\r\n                {t(\"5x\")}\r\n              </Button>\r\n            </View>\r\n            <View style={styles.timePieceTextRows}>\r\n              <Text>{t(\"Current speed:\")}</Text>\r\n              <Text>{t(\"{{speed}}x\", { speed: gameSpeed })}</Text>\r\n            </View>\r\n            {gameSpeed > 1 && (\r\n              <View style={styles.timePieceTextRows}>\r\n                <View>\r\n                  <Text>{t(\"Time Piece cost:\")}</Text>\r\n                </View>\r\n                <View>\r\n                  <Markdown>{timePieceCost}</Markdown>\r\n                </View>\r\n              </View>\r\n            )}\r\n          </CategoryContainer>\r\n        )}\r\n        <CategoryContainer title={t(\"Resources\")}>\r\n          <View style={styles.statViewer}>\r\n            <ResourceViewer isVisible={props.visible} />\r\n          </View>\r\n        </CategoryContainer>\r\n        <CategoryContainer title={t(\"Elements\")}>\r\n          <View style={styles.statViewer}>\r\n            <ElementViewer isVisible={props.visible} />\r\n          </View>\r\n        </CategoryContainer>\r\n        {showExploration && (\r\n          <CategoryContainer title=\"Combat\">\r\n            <View style={styles.statViewer}>\r\n              <PlayerCombatStatsViewer isVisible={props.visible} />\r\n            </View>\r\n          </CategoryContainer>\r\n        )}\r\n        {hasTemporaryEffects && (\r\n          <CategoryContainer title={t(\"Buffs\")}>\r\n            <TemporaryEffectsViewer isVisible={props.visible} />\r\n          </CategoryContainer>\r\n        )}\r\n      </ScrollView>\r\n    ),\r\n    [\r\n      navigation,\r\n      hasTemporaryEffects,\r\n      hasTimePieces,\r\n      gameSpeed,\r\n      props.visible,\r\n      theme,\r\n    ],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"stretch\",\r\n    position: \"absolute\",\r\n    height: \"100%\",\r\n    width: 300,\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 140,\r\n  },\r\n  scrollContainer: {\r\n    padding: 8,\r\n    flex: 1,\r\n  },\r\n  scrollContentContainer: {\r\n    paddingBottom: 16,\r\n  },\r\n  titleContainer: { marginBottom: 8 },\r\n  navigationBlock: {\r\n    marginTop: 16,\r\n    width: 261,\r\n    flexWrap: \"wrap\",\r\n    flexDirection: \"row\",\r\n  },\r\n  navigationRowTitle: { paddingVertical: 0 },\r\n  timePieceButtonContainer: { marginLeft: 4 },\r\n  timePieceButtonTitle: { fontSize: 12 },\r\n  statViewer: {\r\n    marginTop: 4,\r\n  },\r\n  timePieceButtonsContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 8,\r\n  },\r\n  timePieceTextRows: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 4,\r\n  },\r\n  expandContainer: {\r\n    width: 32,\r\n    alignSelf: \"center\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    cursor: \"pointer\",\r\n  },\r\n  favoriteButton: {\r\n    position: \"absolute\",\r\n    top: 4,\r\n    left: 4,\r\n  },\r\n  // notificationBadge: {\r\n  //   position: \"absolute\",\r\n  //   top: 4,\r\n  //   right: 4,\r\n  // },\r\n  notificationBadge: {\r\n    position: \"absolute\",\r\n    top: 4,\r\n    right: 24,\r\n  },\r\n  notificationBadgeSize: {\r\n    height: 12,\r\n    width: 12,\r\n  },\r\n  hotkeyText: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  menuComponentTouch: {\r\n    height: 56,\r\n    width: 83,\r\n    margin: 2,\r\n    borderWidth: StyleSheet.hairlineWidth,\r\n  },\r\n  menuComponentButton: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flex: 1,\r\n  },\r\n  menuItemText: {\r\n    fontSize: 11,\r\n  },\r\n});\r\n","import React, { useContext, useMemo } from \"react\";\r\nimport {\r\n  Platform,\r\n  ScrollView,\r\n  StyleSheet,\r\n  View,\r\n  useWindowDimensions,\r\n} from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { ActionArea } from \"../../backend/action/ActionAreas\";\r\nimport { getFavoriteSpells } from \"../../backend/spells/Spells\";\r\nimport Styles from \"../utility/Styles\";\r\nimport { VisibilityContext } from \"../utility/VisibilityContext\";\r\nimport { useGameState } from \"../utility/useGameState\";\r\nimport { FavoriteSpellsContainer } from \"./FavoriteSpellsContainer\";\r\nimport SpellsContainer from \"./SpellsContainer\";\r\n\r\ntype Props = {\r\n  favoritesOnBottom: boolean;\r\n};\r\n\r\nexport function SpellMenuContents(props: { favoritesOnBottom: boolean }) {\r\n  const theme = useTheme();\r\n  const state = useGameState();\r\n  const visible = useContext(VisibilityContext);\r\n  const isBottomMenuEnabled = state.options.enableBottomMenu;\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  const heightWithoutBottomMenu =\r\n    height - (isBottomMenuEnabled && width < 640 ? 48 : 0);\r\n  const hasFavorites = getFavoriteSpells(state).length > 0;\r\n  return useMemo(\r\n    () => (\r\n      <View style={{ flex: 1, backgroundColor: theme.colors.background }}>\r\n        <ScrollView\r\n          style={{ flex: 1 }}\r\n          contentContainerStyle={styles.magicContainer}\r\n        >\r\n          <SpellsContainer\r\n            uiKey=\"SpellMenuContainer\"\r\n            area={ActionArea.SPELL_MENU}\r\n            onlyBySchool={props.favoritesOnBottom}\r\n            showWizards={true}\r\n            isVisible={visible}\r\n          />\r\n        </ScrollView>\r\n        {props.favoritesOnBottom && hasFavorites && (\r\n          <View\r\n            style={{\r\n              height: Math.max(\r\n                Math.min(heightWithoutBottomMenu - 472, 270),\r\n                180,\r\n              ),\r\n              borderTopColor: theme.colors.outlineVariant,\r\n              borderTopWidth: 1,\r\n            }}\r\n          >\r\n            {Platform.select({\r\n              default: (\r\n                <View style={[styles.favoritesContainer, Styles.flex]}>\r\n                  <FavoriteSpellsContainer />\r\n                </View>\r\n              ),\r\n              web: (\r\n                <ScrollView contentContainerStyle={styles.favoritesContainer}>\r\n                  <FavoriteSpellsContainer />\r\n                </ScrollView>\r\n              ),\r\n            })}\r\n          </View>\r\n        )}\r\n      </View>\r\n    ),\r\n    [\r\n      theme,\r\n      hasFavorites,\r\n      props.favoritesOnBottom,\r\n      heightWithoutBottomMenu,\r\n      visible,\r\n    ],\r\n  );\r\n}\r\n\r\nexport function SpellMenu(props: Props) {\r\n  return useMemo(() => {\r\n    return <SpellMenuContents favoritesOnBottom={props.favoritesOnBottom} />;\r\n  }, [props.favoritesOnBottom]);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  backdrop: {\r\n    position: \"absolute\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    backgroundColor: \"#000\",\r\n    zIndex: 80,\r\n  },\r\n  backdropTouchable: {\r\n    position: \"absolute\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    zIndex: 90,\r\n  },\r\n  container: {\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"stretch\",\r\n    position: \"absolute\",\r\n    zIndex: 100,\r\n    height: \"100%\",\r\n    width: 300,\r\n    right: 0,\r\n    top: 0,\r\n  },\r\n  magicContainer: {\r\n    padding: 8,\r\n  },\r\n  favoritesContainer: {\r\n    paddingHorizontal: 8,\r\n    paddingBottom: 8,\r\n  },\r\n});\r\n","import React, { useMemo } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { Text } from \"./Text\";\r\nimport { useGameState } from \"./useGameState\";\r\n\r\nexport function DebugUPSOverlay(props: {}) {\r\n  const state = useGameState();\r\n  const showOverlay = state.global.debugShowUpdatesPerSec;\r\n  if (!showOverlay) {\r\n    return null;\r\n  }\r\n  const timestamps = state.global.debugLastUpdateTimestamps;\r\n  if (timestamps.length < 2) {\r\n    return null;\r\n  }\r\n  const startEndTimestamps = state.global.debugLastUpdateBeginEndTimestamps;\r\n  if (startEndTimestamps.length < 1) {\r\n    return null;\r\n  }\r\n  const msPerUpdate =\r\n    (timestamps[timestamps.length - 1] - timestamps[0]) /\r\n    (timestamps.length - 1);\r\n  if (msPerUpdate <= 0) {\r\n    return null;\r\n  }\r\n  const backendMsPerUpdate =\r\n    startEndTimestamps\r\n      .map((value) => value.end - value.begin)\r\n      .reduce((prev, current) => prev + current, 0) / startEndTimestamps.length;\r\n  const ticksPerUpdate =\r\n    startEndTimestamps\r\n      .map((value) => value.ticksRun)\r\n      .reduce((prev, current) => prev + current, 0) / startEndTimestamps.length;\r\n  const updatesPerSec = 1000 / msPerUpdate;\r\n  const estimatedMsPerUpdate = msPerUpdate - 1000.0 / state.options.targetFps;\r\n  return useMemo(\r\n    () => (\r\n      <View style={styles.overlay}>\r\n        <View>\r\n          <Text>\r\n            Actual UPS: {formatNumber(updatesPerSec, { showDecimals: true })}\r\n          </Text>\r\n        </View>\r\n        <View>\r\n          <Text>\r\n            Time/update:{\" \"}\r\n            {formatNumber(estimatedMsPerUpdate, { showDecimals: true })}ms\r\n          </Text>\r\n        </View>\r\n        <View>\r\n          <Text>\r\n            Backend ms:{\" \"}\r\n            {formatNumber(backendMsPerUpdate, { showDecimals: true })}\r\n            ms\r\n          </Text>\r\n        </View>\r\n        <View>\r\n          <Text>\r\n            Ticks/update: {formatNumber(ticksPerUpdate, { showDecimals: true })}\r\n          </Text>\r\n        </View>\r\n      </View>\r\n    ),\r\n    [Math.floor(Date.now() / 1000)],\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  overlay: {\r\n    position: \"absolute\",\r\n    right: 50,\r\n    top: 50,\r\n    opacity: 0.8,\r\n    zIndex: 999999,\r\n  },\r\n});\r\n","import React, { ErrorInfo } from \"react\";\r\n\r\ntype Props = { children: React.ReactNode; errorFallback: React.ReactNode };\r\n\r\nexport class ErrorBoundary extends React.Component<Props> {\r\n  state = {\r\n    hasError: false,\r\n    error: null,\r\n  };\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n  }\r\n\r\n  static getDerivedStateFromError(error: any) {\r\n    return { hasError: true, error: error };\r\n  }\r\n\r\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n    // TODO: we probably want to log this somewhere\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return this.props.errorFallback;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n","import { useCallback } from \"react\";\r\nimport { electron, isElectron } from \"../../utils/ElectronUtils\";\r\nimport { KeyboardListener } from \"./KeyboardListener\";\r\n\r\nexport function FullScreenListener() {\r\n  if (!isElectron()) {\r\n    return null;\r\n  }\r\n\r\n  const callback = useCallback((e: KeyboardEvent) => {\r\n    if (e.key == \"F11\" || (e.key == \"Enter\" && e.altKey)) {\r\n      electron().ipcRenderer.send(\"toggleFullscreen\");\r\n    }\r\n  }, []);\r\n\r\n  return <KeyboardListener callback={callback} />;\r\n}\r\n","import { useKeepAwake } from \"expo-keep-awake\";\r\n\r\nexport function KeepAwake() {\r\n  useKeepAwake();\r\n  return null;\r\n}\r\n","import { useCallback, useEffect, useRef } from \"react\";\r\nimport { serializeSaveData } from \"../../backend/SaveData\";\r\nimport { electron, isElectron } from \"../../utils/ElectronUtils\";\r\nimport { useGameState } from \"./useGameState\";\r\n\r\nexport function SaveDataBackupper() {\r\n  if (!isElectron()) {\r\n    return null;\r\n  }\r\n\r\n  const state = useGameState();\r\n\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  const backupCallback = useCallback(async () => {\r\n    electron().ipcRenderer.send(\r\n      \"saveFileBackup\",\r\n      await serializeSaveData(stateRef.current),\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      try {\r\n        await backupCallback();\r\n      } catch (e: any) {\r\n        throw e;\r\n      }\r\n    }, 15 * 60 * 1000); // 15 min\r\n    return () => {\r\n      clearTimeout(interval);\r\n    };\r\n  }, [backupCallback]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"beforeunload\", backupCallback);\r\n    return () => window.removeEventListener(\"beforeunload\", backupCallback);\r\n  }, [backupCallback]);\r\n\r\n  // Do not render anything\r\n  return null;\r\n}\r\n","import { MaterialIcons, SimpleLineIcons } from \"@expo/vector-icons\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport * as Clipboard from \"expo-clipboard\";\r\nimport * as NavigationBar from \"expo-navigation-bar\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n  useTransition,\r\n} from \"react\";\r\nimport {\r\n  AccessibilityInfo,\r\n  ActivityIndicator,\r\n  Animated,\r\n  BackHandler,\r\n  I18nManager,\r\n  Platform,\r\n  SafeAreaView,\r\n  ScrollView,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  View,\r\n  useWindowDimensions,\r\n} from \"react-native\";\r\nimport { Drawer } from \"react-native-drawer-layout\";\r\nimport \"react-native-gesture-handler\";\r\nimport { GestureHandlerRootView } from \"react-native-gesture-handler\";\r\nimport {\r\n  Appbar,\r\n  Badge,\r\n  IconButton,\r\n  Button as PaperButton,\r\n  Provider as PaperProvider,\r\n  Portal,\r\n  Text,\r\n  useTheme,\r\n} from \"react-native-paper\";\r\nimport {\r\n  SafeAreaProvider,\r\n  initialWindowMetrics,\r\n  useSafeAreaInsets,\r\n} from \"react-native-safe-area-context\";\r\nimport { getThemeByElementAndDarkMode } from \"./Themes\";\r\nimport { clearAllCaches } from \"./backend/Caching\";\r\nimport { clearFlag, hasFlag, setFlag } from \"./backend/Flags\";\r\nimport {\r\n  GameState,\r\n  GameStateTransform,\r\n  INITIAL_STATE,\r\n  StateContextValue,\r\n  createTempState,\r\n} from \"./backend/GameState\";\r\nimport {\r\n  addGameStateListener,\r\n  applyAllTransforms,\r\n  clearGameStateListener,\r\n} from \"./backend/GameStateListeners\";\r\nimport { loadData, saveData, serializeSaveData } from \"./backend/SaveData\";\r\nimport { getUICommands } from \"./backend/UICommands\";\r\nimport { EndingCloseListeners } from \"./backend/ending/Endings\";\r\nimport { getEventMessageById } from \"./backend/events/Events\";\r\nimport { nextFrame } from \"./backend/timetick/TimeTick\";\r\nimport { getSecondsPlayed } from \"./backend/timetick/TotalTimePlayed\";\r\nimport About from \"./components/About\";\r\nimport Boosts from \"./components/Boosts\";\r\nimport Compendium from \"./components/Compendium\";\r\nimport Debug from \"./components/Debug\";\r\nimport Ending from \"./components/Ending\";\r\nimport Enhance from \"./components/Enhance\";\r\nimport Exploration from \"./components/Exploration\";\r\nimport { FamiliarsComponent } from \"./components/Familiars\";\r\nimport Help from \"./components/Help\";\r\nimport Home from \"./components/Home\";\r\nimport Intro from \"./components/Intro\";\r\nimport Inventory from \"./components/Inventory\";\r\nimport { Loading } from \"./components/Loading\";\r\nimport Options from \"./components/Options\";\r\nimport Retirement from \"./components/Retirement\";\r\nimport { RitualsComponent } from \"./components/Rituals\";\r\nimport { SpellcraftsComponent } from \"./components/Spellcraft\";\r\nimport Stats from \"./components/Stats\";\r\nimport { Study } from \"./components/Study\";\r\nimport Synchro from \"./components/Synchro\";\r\nimport Transmute from \"./components/Transmute\";\r\nimport Wizards from \"./components/Wizards\";\r\nimport Worlds from \"./components/Worlds\";\r\nimport { EventList } from \"./components/events/EventList\";\r\nimport { EventOverlay } from \"./components/events/EventOverlay\";\r\nimport { BottomMenu } from \"./components/main/BottomMenu\";\r\nimport GameTickProcessor from \"./components/main/GameTickProcessor\";\r\nimport ManaBar from \"./components/main/ManaBar\";\r\nimport { MenuContents } from \"./components/main/Menu\";\r\nimport { SpellMenu } from \"./components/spells/SpellMenu\";\r\nimport { AccessibilityContext } from \"./components/utility/AccessibilityContext\";\r\nimport {\r\n  AuxOptionsContext,\r\n  useAuxOptions,\r\n} from \"./components/utility/AuxOptionsContext\";\r\nimport { BottomResourceViewer } from \"./components/utility/BottomResourceViewer\";\r\nimport { DebugUPSOverlay } from \"./components/utility/DebugUPSOverlay\";\r\nimport { ErrorBoundary } from \"./components/utility/ErrorBoundary\";\r\nimport { FullScreenListener } from \"./components/utility/FullScreenListener\";\r\nimport { GameStateFreezer } from \"./components/utility/GameStateFreezer\";\r\nimport { KeepAwake } from \"./components/utility/KeepAwake\";\r\nimport {\r\n  getAllSections,\r\n  getLayoutType,\r\n} from \"./components/utility/Miscellaneous\";\r\nimport { SaveDataBackupper } from \"./components/utility/SaveDataBackupper\";\r\nimport Styles from \"./components/utility/Styles\";\r\nimport { Text as UtilityText } from \"./components/utility/Text\";\r\nimport { TooltipDisplay } from \"./components/utility/Tooltip\";\r\nimport {\r\n  EMPTY_TOOLTIP_CONTEXT,\r\n  TooltipContent,\r\n  TooltipContext,\r\n  TooltipControlContext,\r\n  TooltipPosition,\r\n} from \"./components/utility/TooltipContext\";\r\nimport {\r\n  UIContext,\r\n  useUIStateFromContext,\r\n} from \"./components/utility/UIContext\";\r\nimport { VisibilityContext } from \"./components/utility/VisibilityContext\";\r\nimport {\r\n  updateGameState,\r\n  useGameState,\r\n} from \"./components/utility/useGameState\";\r\nimport { clone, keysOf } from \"./utils/CoreUtils\";\r\nimport { SAVE_TO_FILE_SUPPORTED, saveToFile } from \"./utils/FilesystemSave\";\r\nimport { formatNumber } from \"./utils/FormattingUtils\";\r\nimport { t } from \"./utils/I18n\";\r\nimport { OrientationLockManager } from \"./utils/OrientationLockManager\";\r\nimport {\r\n  getCurrentVersion,\r\n  getCurrentVersionTimestamp,\r\n} from \"./utils/Versioning\";\r\nimport { ZoomChecker } from \"./utils/Zoom\";\r\n\r\nI18nManager.allowRTL(false);\r\n\r\nconst SWIPE_EDGE_WIDTH_DEFAULT = 128;\r\nconst SWIPE_EDGE_WIDTH_LEFT_WITH_BOTTOM_MENU = 40;\r\n\r\nfunction BottomSafeAreaPadding() {\r\n  const safeAreaInsets = useSafeAreaInsets();\r\n  const theme = useTheme();\r\n  if (Platform.OS != \"ios\" && Platform.OS != \"android\") {\r\n    return null;\r\n  }\r\n  return (\r\n    <View\r\n      style={{\r\n        backgroundColor: theme.colors.surface,\r\n        height: safeAreaInsets.bottom,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nfunction IntroContents() {\r\n  const theme = useTheme();\r\n  const headerContainerStyle = useMemo(\r\n    () => ({\r\n      borderBottomColor: theme.colors.outlineVariant,\r\n      borderBottomWidth: 2,\r\n    }),\r\n    [theme],\r\n  );\r\n  const centerComponent = useMemo(\r\n    () => (\r\n      <View style={styles.centerText}>\r\n        <Text\r\n          accessibilityRole=\"header\"\r\n          style={{ color: theme.colors.primary }}\r\n        >\r\n          {t(\"Magic Research 2\")}\r\n        </Text>\r\n      </View>\r\n    ),\r\n    [theme],\r\n  );\r\n  return (\r\n    <View style={styles.maxContainer} nativeID={theme.dark ? \"dark\" : \"light\"}>\r\n      <OrientationLockManager />\r\n      <View style={styles.safeAreaContainer}>\r\n        <Appbar.Header style={headerContainerStyle}>\r\n          {centerComponent}\r\n        </Appbar.Header>\r\n        <View\r\n          style={[\r\n            styles.biggerContainer,\r\n            { backgroundColor: theme.colors.background },\r\n          ]}\r\n        >\r\n          <View style={styles.introContainer}>\r\n            <ScrollView>\r\n              <Intro />\r\n            </ScrollView>\r\n            <BottomSafeAreaPadding />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\ntype MainAppContentsProps = {\r\n  setPlayerState: any;\r\n  onLoadingProgress: any;\r\n};\r\n\r\nfunction resetKeys(pinnedSectionObjects: { section: string; key: number }[]) {\r\n  for (let idx in pinnedSectionObjects) {\r\n    pinnedSectionObjects[idx].key = Number.parseInt(idx) + 1;\r\n  }\r\n  return pinnedSectionObjects;\r\n}\r\n\r\nfunction MainAppContents(props: MainAppContentsProps) {\r\n  const { height, width } = useWindowDimensions();\r\n  const auxOptions = useAuxOptions();\r\n  const state = useGameState();\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n  const uiContext = useContext(UIContext);\r\n\r\n  const [menuShown, setMenuShown] = useState(false);\r\n  const [rightMenuShown, setRightMenuShown] = useState(\"none\");\r\n  const layout = getLayoutType(state, height, width);\r\n\r\n  const allSections = getAllSections();\r\n  const sectionData = Object.fromEntries(\r\n    allSections.map((section) => [section.id, section]),\r\n  );\r\n\r\n  const [section, setSection] = useState(\"Home\");\r\n  const [pinnedSectionObjects, setPinnedSectionObjects] = useState<\r\n    { section: string; key: number }[]\r\n  >([]);\r\n  const pinnedSectionObjectsRef = useRef(pinnedSectionObjects);\r\n  pinnedSectionObjectsRef.current = pinnedSectionObjects;\r\n\r\n  const activeSections = [\r\n    section,\r\n    ...pinnedSectionObjects.map((pinnedSection) => pinnedSection.section),\r\n  ];\r\n  const [_uiActiveSections, setUiActiveSections] = useUIStateFromContext(\r\n    uiContext,\r\n    \"active_sections\",\r\n    activeSections,\r\n  );\r\n\r\n  useEffect(() => {\r\n    setUiActiveSections(activeSections);\r\n  }, [JSON.stringify(activeSections)]);\r\n\r\n  useEffect(() => {\r\n    if (layout.activeContentTabs == 1) {\r\n      setPinnedSectionObjects([]);\r\n    }\r\n    const newSectionObjects = pinnedSectionObjectsRef.current.slice(\r\n      0,\r\n      layout.activeContentTabs - 1,\r\n    );\r\n    setPinnedSectionObjects(resetKeys(newSectionObjects));\r\n  }, [layout.activeContentTabs]);\r\n\r\n  const togglePinnedSection = useCallback(\r\n    (section: string) => {\r\n      // If the section is already there, remove it\r\n      if (pinnedSectionObjectsRef.current.find((s) => s.section == section)) {\r\n        setPinnedSectionObjects(\r\n          pinnedSectionObjectsRef.current.filter((s) => s.section != section),\r\n        );\r\n        return;\r\n      }\r\n\r\n      // Otherwise, choose the smallest possible index, and push it to the end\r\n      // Obtain the lowest free key, so that we are constantly reusing numbers\r\n      // so that we don't need to re-load things\r\n      const usedIndices = pinnedSectionObjectsRef.current.map((s) => s.key);\r\n      let lowestFreeIndex = 1;\r\n      while (usedIndices.includes(lowestFreeIndex)) {\r\n        lowestFreeIndex++;\r\n      }\r\n      const newPinnedSectionObjects = [\r\n        ...pinnedSectionObjectsRef.current,\r\n        { section: section, key: lowestFreeIndex },\r\n      ];\r\n      setPinnedSectionObjects(\r\n        newPinnedSectionObjects.slice(0, layout.activeContentTabs - 1),\r\n      );\r\n\r\n      // Finally, if the current selected section is the one that was pinned,\r\n      // we want to reset it to something new\r\n    },\r\n    [setPinnedSectionObjects, JSON.stringify(layout)],\r\n  );\r\n\r\n  const theme = useTheme();\r\n\r\n  const [endingHistoryIndex, setEndingHistoryIndex] = useState(null);\r\n\r\n  const processUICommand = useCallback(\r\n    (uiCommand: string) => {\r\n      if (\r\n        uiCommand == \"goToExploration\" &&\r\n        !activeSections.includes(\"Exploration\")\r\n      ) {\r\n        setSection(\"Exploration\");\r\n      } else if (\r\n        uiCommand == \"goToEnding\" &&\r\n        !activeSections.includes(\"Ending\")\r\n      ) {\r\n        setSection(\"Ending\");\r\n        setPinnedSectionObjects([]);\r\n      } else if (uiCommand == \"goToDebug\") {\r\n        setSection(\"Debug\");\r\n      } else if (uiCommand == \"closeAllMenus\") {\r\n        setMenuShown(false);\r\n        setRightMenuShown(\"none\");\r\n      } else if (uiCommand.startsWith(\"endingHistoryOverride:\")) {\r\n        setEndingHistoryIndex(uiCommand.split(\":\")[1]);\r\n      }\r\n    },\r\n    [\r\n      setSection,\r\n      activeSections,\r\n      setPinnedSectionObjects,\r\n      setEndingHistoryIndex,\r\n    ],\r\n  );\r\n\r\n  const processUICommands = useCallback(\r\n    (state: GameState) => {\r\n      const uiCommands = getUICommands(state);\r\n      uiCommands.forEach(processUICommand);\r\n      state.run.uiCommands = uiCommands.filter(\r\n        (uiCommand) =>\r\n          uiCommand != \"goToExploration\" &&\r\n          uiCommand != \"goToEnding\" &&\r\n          uiCommand != \"closeAllMenus\" &&\r\n          !uiCommand.startsWith(\"endingHistoryOverride:\") &&\r\n          uiCommand != \"goToDebug\",\r\n      );\r\n      return state;\r\n    },\r\n    [processUICommand],\r\n  );\r\n\r\n  useEffect(() => {\r\n    addGameStateListener(\"appUiCommand\", (newState) => {\r\n      const uiCommands = getUICommands(newState);\r\n      if (\r\n        uiCommands.filter(\r\n          (command) =>\r\n            [\r\n              \"goToExploration\",\r\n              \"goToEnding\",\r\n              \"closeAllMenus\",\r\n              \"goToDebug\",\r\n            ].includes(command) || command.startsWith(\"endingHistoryOverride:\"),\r\n        ).length > 0\r\n      ) {\r\n        return (state) => processUICommands(state);\r\n      }\r\n    });\r\n    return () => clearGameStateListener(\"appUiCommand\");\r\n  }, [processUICommands]);\r\n\r\n  const onMenuPress = useCallback(() => {\r\n    setMenuShown(!menuShown);\r\n    setRightMenuShown(\"none\");\r\n  }, [menuShown]);\r\n  const onMenuOpen = useCallback(() => {\r\n    setMenuShown(true);\r\n    setRightMenuShown(\"none\");\r\n  }, []);\r\n  const onMenuClose = useCallback(() => {\r\n    setMenuShown(false);\r\n  }, []);\r\n  const onEventMenuPress = useCallback(() => {\r\n    if (rightMenuShown !== \"event\") {\r\n      setRightMenuShown(\"event\");\r\n    } else {\r\n      setRightMenuShown(\"none\");\r\n    }\r\n    setMenuShown(false);\r\n  }, [rightMenuShown]);\r\n  const onEventMenuOpen = useCallback(() => {\r\n    setMenuShown(false);\r\n    setRightMenuShown(\"event\");\r\n  }, []);\r\n  const onSpellMenuOpen = useCallback(() => {\r\n    setMenuShown(false);\r\n    setRightMenuShown(\"spell\");\r\n  }, []);\r\n  const onRightMenuClose = useCallback(() => {\r\n    setMenuShown(false);\r\n    setRightMenuShown(\"none\");\r\n  }, []);\r\n  const onSpellMenuPress = useCallback(() => {\r\n    if (rightMenuShown !== \"spell\") {\r\n      setRightMenuShown(\"spell\");\r\n    } else {\r\n      setRightMenuShown(\"none\");\r\n    }\r\n    setMenuShown(false);\r\n  }, [rightMenuShown]);\r\n  const onNavigationPress = useCallback(\r\n    (section: string) => {\r\n      setSection(section);\r\n      setMenuShown(false);\r\n      setRightMenuShown(\"none\");\r\n    },\r\n    [setSection],\r\n  );\r\n\r\n  const ongoingEventCount = Object.values(state.run.eventOccurrences).filter(\r\n    (event) => {\r\n      return (\r\n        event.currentMessageId &&\r\n        !getEventMessageById(event.currentMessageId).isTerminal() &&\r\n        getEventMessageById(event.currentMessageId).isActionable(\r\n          state,\r\n          event.params,\r\n        )\r\n      );\r\n    },\r\n  ).length;\r\n\r\n  useEffect(() => {\r\n    setSection(\"Home\");\r\n    setPinnedSectionObjects([]);\r\n  }, [state.world.totalTimesResetted]);\r\n\r\n  const showBottomResourceBar =\r\n    !layout.wideLayout &&\r\n    !sectionData[activeSections[0]]?.hideBottomResourceBar &&\r\n    !state.options.hideBottomResourceViewer &&\r\n    keysOf(state.run.resources).length > 1;\r\n\r\n  const centerComponent = useMemo(\r\n    () => (\r\n      <View style={styles.centerText}>\r\n        <Text\r\n          accessibilityRole=\"header\"\r\n          style={{ color: theme.colors.primary }}\r\n        >\r\n          {activeSections.length == 1\r\n            ? activeSections[0]\r\n            : t(\"Magic Research 2\")}\r\n        </Text>\r\n      </View>\r\n    ),\r\n    [activeSections.join(), theme],\r\n  );\r\n\r\n  const scrollRefs = Object.fromEntries(\r\n    allSections.map((section) => [section.id, useRef<ScrollView>()]),\r\n  );\r\n  scrollRefs[\"Main\"] = useRef<ScrollView>();\r\n\r\n  const [scrollPositions, setScrollPositions] = useUIStateFromContext<\r\n    Record<string, number>\r\n  >(uiContext, \"mainScrollPositions\", {});\r\n  const onScrollPerSection = useMemo(() => {\r\n    return Object.fromEntries(\r\n      allSections.map((sectionData) => [\r\n        sectionData.id,\r\n        (event: any) => {\r\n          const scrollValue = event.nativeEvent.contentOffset.y;\r\n          scrollPositions[sectionData.id] = scrollValue;\r\n          // console.warn(\r\n          //   \"setting \" +\r\n          //     sectionData.id +\r\n          //     \" to \" +\r\n          //     scrollPositions?.[sectionData.id],\r\n          // );\r\n          setScrollPositions(scrollPositions);\r\n        },\r\n      ]),\r\n    );\r\n  }, []);\r\n  useEffect(() => {\r\n    for (let section of activeSections) {\r\n      if (!sectionData[section]?.scrollable) {\r\n        return;\r\n      }\r\n      const shouldScroll = Platform.select({ default: true, web: false });\r\n      if (!shouldScroll) {\r\n        return;\r\n      }\r\n      // console.warn(\"scrolling\" + section + \" to \" + scrollPositions?.[section]);\r\n      if (sectionData[section].scrollView) {\r\n        scrollRefs[\"Main\"].current.scrollTo({\r\n          y: scrollPositions?.[section] ?? 0,\r\n          animated: false,\r\n        });\r\n      } else {\r\n        scrollRefs[section]?.current?.scrollTo?.({\r\n          y: scrollPositions?.[section] ?? 0,\r\n          animated: false,\r\n        });\r\n      }\r\n    }\r\n  }, [activeSections.join(\",\")]);\r\n\r\n  const showBottomMenu = state.options.enableBottomMenu;\r\n  const leftHandedMode = state.options.leftHandedMode;\r\n  const putCastSpellOnBottomMenu = state.options.putCastSpellOnBottomMenu;\r\n\r\n  function wrapInSection(\r\n    component: React.ReactElement,\r\n    sectionTitle: string,\r\n    activeSection: string,\r\n    keepInMemory: boolean,\r\n    insets: { top?: number; bottom?: number },\r\n    fullScreen?: boolean,\r\n    backgroundColor?: string,\r\n  ) {\r\n    let contents = null;\r\n    if (!keepInMemory) {\r\n      contents =\r\n        activeSection != sectionTitle ? (\r\n          <View key={sectionTitle} />\r\n        ) : (\r\n          <View key={sectionTitle}>{component}</View>\r\n        );\r\n    } else {\r\n      contents = (\r\n        <View\r\n          key={sectionTitle}\r\n          style={activeSection != sectionTitle && { display: \"none\" }}\r\n        >\r\n          <GameStateFreezer isVisible={activeSection == sectionTitle}>\r\n            {component}\r\n          </GameStateFreezer>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    if (fullScreen) {\r\n      return activeSection == sectionTitle ? (\r\n        <Portal key={sectionTitle}>\r\n          <View\r\n            style={[\r\n              styles.fullscreenContainer,\r\n              {\r\n                backgroundColor,\r\n                paddingTop: insets?.top,\r\n                paddingBottom: insets?.bottom,\r\n              },\r\n            ]}\r\n          >\r\n            <ScrollView style={styles.fullscreenContainerInside}>\r\n              {contents}\r\n            </ScrollView>\r\n          </View>\r\n        </Portal>\r\n      ) : null;\r\n    } else {\r\n      return contents;\r\n    }\r\n  }\r\n\r\n  const onEndingClose = useCallback(() => {\r\n    if (endingHistoryIndex != null) {\r\n      setEndingHistoryIndex(null);\r\n      setSection(\"Stats\");\r\n    } else {\r\n      setSection(\"Home\");\r\n    }\r\n    stateRef.current.apply((state) => {\r\n      for (let listener of EndingCloseListeners.getAll()) {\r\n        state = listener(state);\r\n      }\r\n      return state;\r\n    });\r\n  }, [endingHistoryIndex]);\r\n\r\n  const sectionIndices = useMemo(() => {\r\n    const indices: number[] = [];\r\n    for (let i = 0; i < layout.activeContentTabs; i++) {\r\n      indices.push(i);\r\n    }\r\n    return indices;\r\n  }, [layout.activeContentTabs]);\r\n\r\n  const safeAreaInsets = useSafeAreaInsets();\r\n\r\n  const mainSections = useMemo(() => {\r\n    let unusedIndex = 1;\r\n    return (\r\n      <View\r\n        accessibilityElementsHidden={menuShown || rightMenuShown != \"none\"}\r\n        importantForAccessibility={\r\n          menuShown || rightMenuShown != \"none\" ? \"no-hide-descendants\" : \"auto\"\r\n        }\r\n        style={{\r\n          flex: 1,\r\n          flexDirection: \"row\",\r\n          alignItems: \"stretch\",\r\n          justifyContent: \"space-evenly\",\r\n        }}\r\n      >\r\n        {sectionIndices.map((index) => {\r\n          if (layout.activeContentTabs == 1 && index > 0) {\r\n            // Optimization for phones and similar\r\n            return null;\r\n          }\r\n          const currentSection =\r\n            index == 0\r\n              ? section\r\n              : pinnedSectionObjects[index - 1]?.section ?? \"-\";\r\n          let sectionKey =\r\n            index == 0 ? 0 : pinnedSectionObjects?.[index - 1]?.key;\r\n          if (sectionKey === undefined) {\r\n            while (pinnedSectionObjects.find((s) => s.key == unusedIndex)) {\r\n              unusedIndex++;\r\n            }\r\n            sectionKey = unusedIndex;\r\n            unusedIndex++;\r\n          }\r\n          const showHeader = pinnedSectionObjects.length > 0;\r\n\r\n          const scrollViewContents = (\r\n            <ScrollView\r\n              //@ts-ignore Not sure why this is giving error\r\n              ref={scrollRefs[\"Main\"]}\r\n              style={styles.mainContainer}\r\n              onScroll={onScrollPerSection[currentSection]}\r\n              contentContainerStyle={\r\n                currentSection != \"Inventory\" &&\r\n                currentSection != \"Transmute\" &&\r\n                styles.container\r\n              }\r\n            >\r\n              {wrapInSection(\r\n                <Study />,\r\n                \"Study\",\r\n                currentSection,\r\n                sectionData[\"Study\"]?.keepInMemory,\r\n                safeAreaInsets,\r\n              )}\r\n              {wrapInSection(\r\n                <Inventory />,\r\n                \"Inventory\",\r\n                currentSection,\r\n                sectionData[\"Inventory\"]?.keepInMemory,\r\n                safeAreaInsets,\r\n              )}\r\n              {wrapInSection(\r\n                <Transmute />,\r\n                \"Transmute\",\r\n                currentSection,\r\n                sectionData[\"Transmute\"]?.keepInMemory,\r\n                safeAreaInsets,\r\n              )}\r\n              {wrapInSection(\r\n                <Enhance />,\r\n                \"Enhance\",\r\n                currentSection,\r\n                sectionData[\"Enhance\"]?.keepInMemory,\r\n                safeAreaInsets,\r\n              )}\r\n              {wrapInSection(\r\n                <Boosts />,\r\n                \"Boosts\",\r\n                currentSection,\r\n                sectionData[\"Boosts\"]?.keepInMemory,\r\n                safeAreaInsets,\r\n              )}\r\n              {wrapInSection(\r\n                <FamiliarsComponent />,\r\n                \"Familiars\",\r\n                currentSection,\r\n                sectionData[\"Familiars\"]?.keepInMemory,\r\n                safeAreaInsets,\r\n              )}\r\n              {wrapInSection(\r\n                <SpellcraftsComponent />,\r\n                \"Spellcraft\",\r\n                currentSection,\r\n                sectionData[\"Spellcraft\"]?.keepInMemory,\r\n                safeAreaInsets,\r\n              )}\r\n              {wrapInSection(\r\n                <RitualsComponent />,\r\n                \"Rituals\",\r\n                currentSection,\r\n                sectionData[\"Rituals\"]?.keepInMemory,\r\n                safeAreaInsets,\r\n              )}\r\n              {wrapInSection(\r\n                <Ending\r\n                  close={onEndingClose}\r\n                  overrideEnding={\r\n                    endingHistoryIndex != null\r\n                      ? state.global.endingsHistory[endingHistoryIndex]\r\n                      : undefined\r\n                  }\r\n                />,\r\n                \"Ending\",\r\n                currentSection,\r\n                sectionData[\"Ending\"]?.keepInMemory,\r\n                safeAreaInsets,\r\n                sectionData[\"Ending\"]?.fullScreen,\r\n                theme.colors.background,\r\n              )}\r\n              {wrapInSection(\r\n                <Worlds />,\r\n                \"Worlds\",\r\n                currentSection,\r\n                sectionData[\"Worlds\"]?.keepInMemory,\r\n                safeAreaInsets,\r\n              )}\r\n              {wrapInSection(\r\n                <Retirement />,\r\n                \"Retirement\",\r\n                currentSection,\r\n                sectionData[\"Retirement\"]?.keepInMemory,\r\n                safeAreaInsets,\r\n              )}\r\n              {wrapInSection(\r\n                <Compendium />,\r\n                \"Compendium\",\r\n                currentSection,\r\n                sectionData[\"Compendium\"]?.keepInMemory,\r\n                safeAreaInsets,\r\n              )}\r\n              {wrapInSection(\r\n                <Stats />,\r\n                \"Stats\",\r\n                currentSection,\r\n                sectionData[\"Stats\"]?.keepInMemory,\r\n                safeAreaInsets,\r\n              )}\r\n              {wrapInSection(\r\n                <Options />,\r\n                \"Options\",\r\n                currentSection,\r\n                sectionData[\"Options\"]?.keepInMemory,\r\n                safeAreaInsets,\r\n              )}\r\n              {wrapInSection(\r\n                <Help />,\r\n                \"Help\",\r\n                currentSection,\r\n                sectionData[\"Help\"]?.keepInMemory,\r\n                safeAreaInsets,\r\n              )}\r\n              {wrapInSection(\r\n                <About />,\r\n                \"About\",\r\n                currentSection,\r\n                sectionData[\"About\"]?.keepInMemory,\r\n                safeAreaInsets,\r\n              )}\r\n              {currentSection === \"Debug\" && <Debug />}\r\n            </ScrollView>\r\n          );\r\n          const explorationContents = (\r\n            <View style={styles.mainContainer}>\r\n              <GameStateFreezer isVisible={currentSection == \"Exploration\"}>\r\n                <Exploration />\r\n              </GameStateFreezer>\r\n            </View>\r\n          );\r\n          const synchroContents = (\r\n            <View style={styles.mainContainer}>\r\n              <GameStateFreezer isVisible={currentSection == \"Synchro\"}>\r\n                <Synchro />\r\n              </GameStateFreezer>\r\n            </View>\r\n          );\r\n          return (\r\n            <VisibilityContext.Provider\r\n              key={sectionKey ?? index}\r\n              value={index < layout.activeContentTabs}\r\n            >\r\n              <View\r\n                key={sectionKey ?? index}\r\n                style={[\r\n                  showHeader && {\r\n                    marginHorizontal: 4,\r\n                    borderLeftWidth: 1,\r\n                    borderRightWidth: 1,\r\n                    borderColor: theme.colors.outlineVariant,\r\n                  },\r\n                  {\r\n                    flex: 1,\r\n                    display: currentSection == \"-\" ? \"none\" : undefined,\r\n                  },\r\n                ]}\r\n              >\r\n                {showHeader && (\r\n                  <View\r\n                    style={[\r\n                      {\r\n                        height: 56,\r\n                        paddingVertical: 8,\r\n                        paddingHorizontal: 16,\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: theme.colors.outlineVariant,\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <View style={{ flex: 1 }}>\r\n                      <UtilityText h2>{currentSection}</UtilityText>\r\n                    </View>\r\n                    {index > 0 && (\r\n                      <View\r\n                        style={{\r\n                          flexDirection: \"row\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <MaterialIcons\r\n                          name=\"close\"\r\n                          size={20}\r\n                          color={theme.colors.onBackground}\r\n                          onPress={() => togglePinnedSection(currentSection)}\r\n                          style={{ marginLeft: 8 }}\r\n                          accessibilityRole=\"button\"\r\n                          accessibilityLabel={\"Close Section\"}\r\n                        />\r\n                      </View>\r\n                    )}\r\n                  </View>\r\n                )}\r\n                <View\r\n                  style={[\r\n                    { flex: 1 },\r\n                    !sectionData[currentSection]?.scrollView && {\r\n                      display: \"none\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  {scrollViewContents}\r\n                </View>\r\n                <View\r\n                  style={[\r\n                    styles.mainContainer,\r\n                    currentSection !== \"Home\" && { display: \"none\" },\r\n                  ]}\r\n                >\r\n                  <GameStateFreezer isVisible={currentSection == \"Home\"}>\r\n                    <Home\r\n                      onScroll={onScrollPerSection[\"Home\"]}\r\n                      scrollRef={scrollRefs[\"Home\"]}\r\n                    />\r\n                  </GameStateFreezer>\r\n                </View>\r\n                <View\r\n                  style={[\r\n                    styles.mainContainer,\r\n                    currentSection !== \"Wizards\" && { display: \"none\" },\r\n                  ]}\r\n                >\r\n                  <GameStateFreezer isVisible={currentSection == \"Wizards\"}>\r\n                    <Wizards />\r\n                  </GameStateFreezer>\r\n                </View>\r\n                <View\r\n                  style={[\r\n                    styles.mainContainer,\r\n                    currentSection !== \"Exploration\" && { display: \"none\" },\r\n                  ]}\r\n                >\r\n                  {explorationContents}\r\n                </View>\r\n                <View\r\n                  style={[\r\n                    styles.mainContainer,\r\n                    currentSection !== \"Synchro\" && { display: \"none\" },\r\n                  ]}\r\n                >\r\n                  {synchroContents}\r\n                </View>\r\n              </View>\r\n            </VisibilityContext.Provider>\r\n          );\r\n        })}\r\n      </View>\r\n    );\r\n  }, [\r\n    theme,\r\n    menuShown,\r\n    rightMenuShown,\r\n    pinnedSectionObjects,\r\n    sectionIndices,\r\n    section,\r\n    togglePinnedSection,\r\n    endingHistoryIndex,\r\n    safeAreaInsets,\r\n  ]);\r\n\r\n  const backCallback = useCallback(() => {\r\n    if (menuShown) {\r\n      setMenuShown(false);\r\n      return true;\r\n    }\r\n    if (rightMenuShown != \"none\") {\r\n      setRightMenuShown(\"none\");\r\n      return true;\r\n    }\r\n    return false;\r\n  }, [menuShown, rightMenuShown, setMenuShown, setRightMenuShown]);\r\n\r\n  useEffect(() => {\r\n    const handler = BackHandler.addEventListener(\r\n      \"hardwareBackPress\",\r\n      backCallback,\r\n    );\r\n\r\n    return () => handler.remove();\r\n  }, [backCallback]);\r\n\r\n  const contentsWide = useMemo(\r\n    () => (\r\n      <View\r\n        style={[\r\n          styles.biggerContainer,\r\n          { backgroundColor: theme.colors.background },\r\n        ]}\r\n        onAccessibilityEscape={\r\n          menuShown || rightMenuShown != \"none\" ? backCallback : undefined\r\n        }\r\n      >\r\n        <View style={styles.horizontalContainer}>\r\n          <Drawer\r\n            drawerPosition=\"right\"\r\n            drawerType={layout.showEventsMenu ? \"permanent\" : \"front\"}\r\n            open={rightMenuShown == \"event\"}\r\n            onOpen={onEventMenuOpen}\r\n            onClose={onRightMenuClose}\r\n            swipeEnabled={rightMenuShown == \"event\"}\r\n            swipeEdgeWidth={SWIPE_EDGE_WIDTH_DEFAULT}\r\n            renderDrawerContent={() => (\r\n              <GameStateFreezer\r\n                isVisible={layout.showEventsMenu || rightMenuShown === \"event\"}\r\n              >\r\n                <EventList />\r\n              </GameStateFreezer>\r\n            )}\r\n          >\r\n            <Drawer\r\n              drawerPosition=\"right\"\r\n              drawerType={layout.showSpellMenu ? \"permanent\" : \"front\"}\r\n              open={rightMenuShown == \"spell\"}\r\n              onOpen={onSpellMenuOpen}\r\n              onClose={onRightMenuClose}\r\n              swipeEdgeWidth={SWIPE_EDGE_WIDTH_DEFAULT}\r\n              renderDrawerContent={() => (\r\n                <GameStateFreezer\r\n                  isVisible={layout.showSpellMenu || rightMenuShown === \"spell\"}\r\n                >\r\n                  <SpellMenu favoritesOnBottom={false} />\r\n                </GameStateFreezer>\r\n              )}\r\n            >\r\n              <Drawer\r\n                open={true}\r\n                drawerType=\"permanent\"\r\n                onOpen={onMenuOpen}\r\n                onClose={onMenuClose}\r\n                renderDrawerContent={() => (\r\n                  <MenuContents\r\n                    visible={true}\r\n                    wide={true}\r\n                    pinnedSections={pinnedSectionObjects.map((s) => s.section)}\r\n                    onPressFavorite={togglePinnedSection}\r\n                    onNavigationPress={onNavigationPress}\r\n                  />\r\n                )}\r\n              >\r\n                {mainSections}\r\n              </Drawer>\r\n            </Drawer>\r\n          </Drawer>\r\n        </View>\r\n\r\n        <ManaBar />\r\n      </View>\r\n    ),\r\n    [\r\n      theme,\r\n      JSON.stringify(layout),\r\n      height,\r\n      rightMenuShown,\r\n      mainSections,\r\n      JSON.stringify(pinnedSectionObjects),\r\n      backCallback,\r\n    ],\r\n  );\r\n\r\n  const contents = useMemo(\r\n    () => (\r\n      <View\r\n        style={[\r\n          styles.biggerContainer,\r\n          { backgroundColor: theme.colors.background },\r\n        ]}\r\n        onAccessibilityEscape={\r\n          menuShown || rightMenuShown != \"none\" ? backCallback : undefined\r\n        }\r\n      >\r\n        <Drawer\r\n          open={menuShown}\r\n          onOpen={onMenuOpen}\r\n          onClose={onMenuClose}\r\n          swipeEdgeWidth={\r\n            showBottomMenu\r\n              ? SWIPE_EDGE_WIDTH_LEFT_WITH_BOTTOM_MENU\r\n              : SWIPE_EDGE_WIDTH_DEFAULT\r\n          }\r\n          renderDrawerContent={() => (\r\n            <GameStateFreezer isVisible={menuShown}>\r\n              <MenuContents\r\n                visible={menuShown}\r\n                wide={false}\r\n                pinnedSections={pinnedSectionObjects.map((s) => s.section)}\r\n                onPressFavorite={togglePinnedSection}\r\n                onNavigationPress={onNavigationPress}\r\n              />\r\n            </GameStateFreezer>\r\n          )}\r\n        >\r\n          <View style={[Styles.flex, styles.mainContainerPhone]}>\r\n            <Drawer\r\n              drawerPosition=\"right\"\r\n              open={rightMenuShown == \"event\"}\r\n              onOpen={onEventMenuOpen}\r\n              onClose={onRightMenuClose}\r\n              swipeEdgeWidth={SWIPE_EDGE_WIDTH_DEFAULT}\r\n              swipeEnabled={rightMenuShown == \"event\"}\r\n              renderDrawerContent={() => (\r\n                <GameStateFreezer isVisible={rightMenuShown === \"event\"}>\r\n                  <EventList />\r\n                </GameStateFreezer>\r\n              )}\r\n            >\r\n              <Drawer\r\n                drawerPosition=\"right\"\r\n                open={rightMenuShown == \"spell\"}\r\n                onOpen={onSpellMenuOpen}\r\n                onClose={onRightMenuClose}\r\n                swipeEdgeWidth={SWIPE_EDGE_WIDTH_DEFAULT}\r\n                renderDrawerContent={() => (\r\n                  <GameStateFreezer isVisible={rightMenuShown === \"spell\"}>\r\n                    <SpellMenu favoritesOnBottom={putCastSpellOnBottomMenu} />\r\n                  </GameStateFreezer>\r\n                )}\r\n              >\r\n                <View style={Styles.flex}>{mainSections}</View>\r\n              </Drawer>\r\n            </Drawer>\r\n            {showBottomResourceBar && (\r\n              <Animated.View\r\n                style={[\r\n                  {\r\n                    borderTopWidth: 2.0,\r\n                    borderTopColor: theme.colors.outlineVariant,\r\n                  },\r\n                ]}\r\n              >\r\n                <View\r\n                  style={styles.accessibilityHidden}\r\n                  accessible={true}\r\n                  accessibilityLabel=\"Resources\"\r\n                  accessibilityRole=\"header\"\r\n                  accessibilityElementsHidden={false}\r\n                />\r\n                <BottomResourceViewer />\r\n              </Animated.View>\r\n            )}\r\n            {showBottomMenu && (\r\n              <>\r\n                {leftHandedMode && putCastSpellOnBottomMenu && (\r\n                  <View\r\n                    style={{\r\n                      left: -142,\r\n                      bottom: -122,\r\n                      position: \"absolute\",\r\n                      zIndex: 120,\r\n                    }}\r\n                  >\r\n                    <IconButton\r\n                      accessibilityLabel={t(\"Cast Spell\")}\r\n                      hitSlop={{ top: 50, left: 50, bottom: 20, right: 20 }}\r\n                      onPressIn={onSpellMenuPress}\r\n                      onPress={() => {}}\r\n                      mode=\"contained\"\r\n                      containerColor={theme.colors.primary}\r\n                      style={{\r\n                        borderRadius: 0,\r\n                        borderTopRightRadius: 100,\r\n                        width: 240,\r\n                        height: 168,\r\n                      }}\r\n                      icon={() => (\r\n                        <SimpleLineIcons\r\n                          style={{\r\n                            position: \"relative\",\r\n                            left: 50,\r\n                            bottom: 52,\r\n                            width: 24,\r\n                            height: 24,\r\n                            overflow: \"visible\",\r\n                          }}\r\n                          name=\"magic-wand\"\r\n                          color={theme.colors.primaryContainer}\r\n                          size={24}\r\n                        />\r\n                      )}\r\n                    ></IconButton>\r\n                  </View>\r\n                )}\r\n                <View\r\n                  style={{\r\n                    borderTopWidth: 2.0,\r\n                    borderTopColor: theme.colors.outlineVariant,\r\n                  }}\r\n                >\r\n                  <BottomMenu\r\n                    onNavigationPress={onNavigationPress}\r\n                    onSpellMenuPress={onSpellMenuPress}\r\n                    selected={activeSections[0]}\r\n                    leftHanded={leftHandedMode}\r\n                    showCastSpellButton={putCastSpellOnBottomMenu}\r\n                  />\r\n                </View>\r\n                {!leftHandedMode && putCastSpellOnBottomMenu && (\r\n                  <View\r\n                    style={{\r\n                      right: -142,\r\n                      bottom: -122,\r\n                      position: \"absolute\",\r\n                      zIndex: 120,\r\n                    }}\r\n                  >\r\n                    <IconButton\r\n                      accessibilityLabel={t(\"Cast Spell\")}\r\n                      hitSlop={{ top: 50, left: 50, bottom: 20, right: 20 }}\r\n                      onPressIn={onSpellMenuPress}\r\n                      onPress={() => {}}\r\n                      mode=\"contained\"\r\n                      containerColor={theme.colors.primary}\r\n                      style={{\r\n                        borderRadius: 0,\r\n                        borderTopLeftRadius: 100,\r\n                        width: 240,\r\n                        height: 168,\r\n                      }}\r\n                      icon={() => (\r\n                        <SimpleLineIcons\r\n                          style={{\r\n                            position: \"relative\",\r\n                            right: 50,\r\n                            bottom: 52,\r\n                            width: 24,\r\n                            height: 24,\r\n                            overflow: \"visible\",\r\n                          }}\r\n                          name=\"magic-wand\"\r\n                          color={theme.colors.primaryContainer}\r\n                          size={24}\r\n                        />\r\n                      )}\r\n                    ></IconButton>\r\n                  </View>\r\n                )}\r\n              </>\r\n            )}\r\n          </View>\r\n        </Drawer>\r\n        <ManaBar />\r\n      </View>\r\n    ),\r\n    [\r\n      theme,\r\n      menuShown,\r\n      mainSections,\r\n      onMenuPress,\r\n      onNavigationPress,\r\n      onSpellMenuPress,\r\n      height,\r\n      showBottomMenu,\r\n      putCastSpellOnBottomMenu,\r\n      leftHandedMode,\r\n      backCallback,\r\n      JSON.stringify(pinnedSectionObjects),\r\n      showBottomResourceBar,\r\n    ],\r\n  );\r\n\r\n  const headerContainerStyle = useMemo(\r\n    () => ({\r\n      borderBottomColor: theme.colors.outlineVariant,\r\n      borderBottomWidth: 2,\r\n      height: auxOptions.compactLayout ? 40 : 48,\r\n    }),\r\n    [auxOptions.compactLayout, theme],\r\n  );\r\n\r\n  const menuButton = useMemo(\r\n    () => (\r\n      <TouchableOpacity\r\n        accessibilityLabel=\"Menu\"\r\n        accessibilityRole=\"button\"\r\n        onPressIn={onMenuPress}\r\n        hitSlop={{ top: 20, left: 20, bottom: 20, right: 20 }}\r\n      >\r\n        <MaterialIcons name=\"menu\" size={24} color=\"#fff\" />\r\n      </TouchableOpacity>\r\n    ),\r\n    [onMenuPress],\r\n  );\r\n\r\n  const accessibilityContext = useContext(AccessibilityContext);\r\n\r\n  const onMagicTap = useCallback(() => {\r\n    if (!activeSections.includes(\"Exploration\")) {\r\n      return;\r\n    }\r\n    const isPaused = hasFlag(stateRef.current, \"combat_paused_magic_tap\");\r\n    stateRef.current.apply((state) =>\r\n      isPaused\r\n        ? clearFlag(\"combat_paused_magic_tap\")(state)\r\n        : setFlag(\"combat_paused_magic_tap\")(state),\r\n    );\r\n    accessibilityContext.announceForAccessibility(\r\n      isPaused ? t(\"Resuming Exploration\") : t(\"Pausing Exploration\"),\r\n    );\r\n  }, [accessibilityContext, activeSections.join()]);\r\n\r\n  return useMemo(() => {\r\n    if (layout.wideLayout) {\r\n      return (\r\n        <GestureHandlerRootView\r\n          style={[\r\n            styles.maxContainer,\r\n            { backgroundColor: theme.colors.background },\r\n          ]}\r\n          onMagicTap={onMagicTap}\r\n        >\r\n          <GameTickProcessor\r\n            setPlayerState={props.setPlayerState}\r\n            onLoadingProgress={props.onLoadingProgress}\r\n          />\r\n          <Appbar.Header style={headerContainerStyle}>\r\n            {centerComponent}\r\n            {!layout.showSpellMenu && (\r\n              <Appbar.Action\r\n                key=\"spellMenu\"\r\n                icon={() => (\r\n                  <SimpleLineIcons\r\n                    name=\"magic-wand\"\r\n                    size={24}\r\n                    color={theme.colors.primary}\r\n                  />\r\n                )}\r\n                onPress={onSpellMenuPress}\r\n              />\r\n            )}\r\n            {!layout.showEventsMenu && (\r\n              <Appbar.Action\r\n                key=\"eventsMenu\"\r\n                icon={() => (\r\n                  <>\r\n                    <MaterialIcons\r\n                      name=\"notifications\"\r\n                      size={24}\r\n                      color={theme.colors.primary}\r\n                    />\r\n                    {ongoingEventCount > 0 && (\r\n                      <Badge style={styles.notificationsBadge}>\r\n                        {ongoingEventCount}\r\n                      </Badge>\r\n                    )}\r\n                  </>\r\n                )}\r\n                onPress={onEventMenuPress}\r\n              />\r\n            )}\r\n          </Appbar.Header>\r\n          {contentsWide}\r\n          <EventOverlay />\r\n        </GestureHandlerRootView>\r\n      );\r\n    }\r\n    return (\r\n      <GestureHandlerRootView\r\n        style={[\r\n          styles.maxContainer,\r\n          { backgroundColor: theme.colors.background },\r\n        ]}\r\n        onMagicTap={onMagicTap}\r\n      >\r\n        <GameTickProcessor\r\n          setPlayerState={props.setPlayerState}\r\n          onLoadingProgress={props.onLoadingProgress}\r\n        />\r\n        <Appbar.Header style={headerContainerStyle}>\r\n          {!layout.showMenu && (\r\n            <Appbar.Action\r\n              key=\"menu\"\r\n              icon={() => (\r\n                <MaterialIcons\r\n                  name=\"menu\"\r\n                  size={24}\r\n                  color={theme.colors.primary}\r\n                />\r\n              )}\r\n              onPress={onMenuPress}\r\n            />\r\n          )}\r\n          {centerComponent}\r\n          {!layout.showSpellMenu &&\r\n            !(showBottomMenu && putCastSpellOnBottomMenu) && (\r\n              <Appbar.Action\r\n                key=\"spellMenu\"\r\n                icon={() => (\r\n                  <SimpleLineIcons\r\n                    name=\"magic-wand\"\r\n                    size={24}\r\n                    color={theme.colors.primary}\r\n                  />\r\n                )}\r\n                onPress={onSpellMenuPress}\r\n              />\r\n            )}\r\n          {!layout.showEventsMenu && (\r\n            <Appbar.Action\r\n              key=\"eventsMenu\"\r\n              icon={() => (\r\n                <>\r\n                  <MaterialIcons\r\n                    name=\"notifications\"\r\n                    size={24}\r\n                    color={theme.colors.primary}\r\n                  />\r\n                  {ongoingEventCount > 0 && (\r\n                    <Badge style={styles.notificationsBadge}>\r\n                      {ongoingEventCount}\r\n                    </Badge>\r\n                  )}\r\n                </>\r\n              )}\r\n              onPress={onEventMenuPress}\r\n            />\r\n          )}\r\n        </Appbar.Header>\r\n        {contents}\r\n        <EventOverlay />\r\n      </GestureHandlerRootView>\r\n    );\r\n  }, [\r\n    props.setPlayerState,\r\n    props.onLoadingProgress,\r\n    onMenuPress,\r\n    onSpellMenuPress,\r\n    onEventMenuPress,\r\n    mainSections,\r\n    ongoingEventCount,\r\n    menuShown,\r\n    rightMenuShown,\r\n    onNavigationPress,\r\n    JSON.stringify(layout),\r\n    height,\r\n    theme,\r\n    contents,\r\n    contentsWide,\r\n    headerContainerStyle,\r\n    menuButton,\r\n    onMagicTap,\r\n    showBottomMenu,\r\n    putCastSpellOnBottomMenu,\r\n  ]);\r\n}\r\n\r\nfunction OfflineProgress(props: { currentTicks: number; totalTicks: number }) {\r\n  const theme = useTheme();\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.offlineProgressContainer,\r\n        { backgroundColor: theme.colors.background },\r\n      ]}\r\n    >\r\n      <ActivityIndicator size=\"large\" />\r\n      <Text>\r\n        {t(\"Warping through time... {{current}} / {{total}}\", {\r\n          current: formatNumber(props.currentTicks, { showDecimals: false }),\r\n          total: formatNumber(props.totalTicks, { showDecimals: false }),\r\n        })}\r\n      </Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction AppContentsInner() {\r\n  const [playerState, setPlayerState] = useState(() => {\r\n    const state = clone(INITIAL_STATE);\r\n    state.temp = createTempState();\r\n    return state;\r\n  });\r\n  const [localUiState, setLocalUiState] = useState<any>({});\r\n\r\n  const [processingBigTime, setProcessingBigTime] = useState(false);\r\n  const [totalTicks, setTotalTicks] = useState(0);\r\n  const [currentTicks, setCurrentTicks] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (Platform.OS == \"android\") {\r\n      // enables edge-to-edge mode\r\n      NavigationBar.setPositionAsync(\"absolute\");\r\n      // transparent backgrounds to see through\r\n      NavigationBar.setBackgroundColorAsync(\"#ffffff00\");\r\n      // do not resize safe area\r\n      NavigationBar.setBehaviorAsync(\"overlay-swipe\");\r\n    }\r\n  }, []);\r\n\r\n  const onLoadingProgress = useCallback(\r\n    (currentTicks: number, totalTicks: number) => {\r\n      setCurrentTicks(currentTicks);\r\n      setTotalTicks(totalTicks);\r\n      if (currentTicks == totalTicks) {\r\n        setProcessingBigTime(false);\r\n      } else {\r\n        setProcessingBigTime(true);\r\n      }\r\n    },\r\n    [],\r\n  );\r\n\r\n  const uiContextValue = useMemo(() => {\r\n    return {\r\n      getUIState: (id: string) => {\r\n        return localUiState?.[id];\r\n      },\r\n      setUIState: (id: string, value: any) => {\r\n        localUiState[id] = value;\r\n        setLocalUiState(localUiState);\r\n      },\r\n    };\r\n  }, [localUiState, setLocalUiState]);\r\n\r\n  type TooltipData = {\r\n    content: TooltipContent;\r\n    position: TooltipPosition;\r\n    measurementId: number;\r\n    postMeasurementId: number;\r\n    mouseEnterTimestamp: number;\r\n    mouseLeaveTimestamp: number;\r\n  };\r\n  const [tooltips, setTooltips] = useState<Record<string, TooltipData>>({});\r\n\r\n  const tooltipsRef = useRef(tooltips);\r\n  tooltipsRef.current = tooltips;\r\n  const setTooltip = useCallback(\r\n    (\r\n      id: string,\r\n      tooltip: TooltipContent,\r\n      position: TooltipPosition,\r\n      measurementId?: number,\r\n    ) => {\r\n      const newTooltips = Object.assign({}, tooltipsRef.current);\r\n      if (!newTooltips[id]) {\r\n        newTooltips[id] = {\r\n          content: tooltip,\r\n          position: position,\r\n          postMeasurementId: 1,\r\n          measurementId: 0,\r\n          mouseEnterTimestamp: 0,\r\n          mouseLeaveTimestamp: 0,\r\n        };\r\n      }\r\n      newTooltips[id].content = tooltip;\r\n      newTooltips[id].position = position;\r\n      if (measurementId != null) {\r\n        newTooltips[id].postMeasurementId = measurementId;\r\n      }\r\n      tooltipsRef.current = newTooltips;\r\n      setTooltips(newTooltips);\r\n    },\r\n    [setTooltips],\r\n  );\r\n  const clearTooltip = useCallback(\r\n    (id: string) => {\r\n      const newTooltips = Object.assign({}, tooltipsRef.current);\r\n      const found = newTooltips[id] != null;\r\n      if (!found) {\r\n        return;\r\n      }\r\n      newTooltips[id].content = null;\r\n      tooltipsRef.current = newTooltips;\r\n      setTooltips(newTooltips);\r\n    },\r\n    [setTooltips],\r\n  );\r\n  const onUnmountTooltip = useCallback(\r\n    (id: string) => {\r\n      const newTooltips = tooltipsRef.current;\r\n      const found = newTooltips[id] != null;\r\n      if (!found) {\r\n        return;\r\n      }\r\n      delete newTooltips[id];\r\n      delete tooltipsRef.current[id];\r\n      setTooltips(Object.assign({}, newTooltips));\r\n    },\r\n    [setTooltips],\r\n  );\r\n  const onMouseLeave = useCallback(\r\n    (id: string) => {\r\n      if (!tooltipsRef.current?.[id]) {\r\n        return;\r\n      }\r\n      const newTooltips = Object.assign({}, tooltipsRef.current);\r\n      newTooltips[id].mouseLeaveTimestamp = Date.now();\r\n      tooltipsRef.current = newTooltips;\r\n      setTooltips(newTooltips);\r\n    },\r\n    [setTooltips],\r\n  );\r\n  const onMouseEnter = useCallback(\r\n    (id: string, measurementId: number) => {\r\n      const newTooltips = Object.assign({}, tooltipsRef.current);\r\n      if (!newTooltips[id]) {\r\n        newTooltips[id] = {\r\n          content: null,\r\n          position: { containerWidth: 1 },\r\n          postMeasurementId: 1,\r\n          measurementId: 0,\r\n          mouseEnterTimestamp: 0,\r\n          mouseLeaveTimestamp: 0,\r\n        };\r\n      }\r\n      newTooltips[id].measurementId = measurementId;\r\n      newTooltips[id].mouseEnterTimestamp = Date.now();\r\n      tooltipsRef.current = newTooltips;\r\n      setTooltips(newTooltips);\r\n    },\r\n    [setTooltips],\r\n  );\r\n  let tooltip: null | TooltipData = null;\r\n  for (let tooltipId in tooltips) {\r\n    if (\r\n      tooltips[tooltipId].mouseEnterTimestamp >\r\n        tooltips[tooltipId].mouseLeaveTimestamp &&\r\n      tooltips[tooltipId].measurementId ===\r\n        tooltips[tooltipId].postMeasurementId &&\r\n      tooltips[tooltipId].content != null\r\n    ) {\r\n      tooltip = tooltips[tooltipId];\r\n      break;\r\n    }\r\n  }\r\n  const tooltipContextValue = useMemo(() => {\r\n    return {\r\n      tooltip: tooltip?.content,\r\n      position: tooltip?.position ?? { containerWidth: 1 },\r\n    };\r\n  }, [tooltip?.content, tooltip?.position]);\r\n  const tooltipControlContextValue = useMemo(() => {\r\n    return {\r\n      setTooltip: setTooltip,\r\n      clearTooltip: clearTooltip,\r\n      onMouseLeave: onMouseLeave,\r\n      onMouseEnter: onMouseEnter,\r\n      onUnmountTooltip: onUnmountTooltip,\r\n    };\r\n  }, [setTooltip, clearTooltip, onMouseLeave, onMouseEnter, onUnmountTooltip]);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [criticalError, setCriticalError] = useState(false);\r\n  const [lessCriticalError, setLessCriticalError] = useState(false);\r\n\r\n  const playerStateRef = useRef(playerState);\r\n  playerStateRef.current = playerState;\r\n\r\n  const apply = useCallback(\r\n    (transform: GameStateTransform) => {\r\n      const newState = applyAllTransforms(playerStateRef.current, transform);\r\n      newState.global.appVersionTimestamp = getCurrentVersionTimestamp() || 0;\r\n      newState.global.appVersionString = getCurrentVersion() ?? \"0.0.0\";\r\n      newState.global.isFullVersionSave = true;\r\n\r\n      setPlayerState(newState);\r\n    },\r\n    [playerStateRef, setPlayerState],\r\n  );\r\n\r\n  const overwrite = useCallback(\r\n    (transform: GameStateTransform) => {\r\n      let transformedState = transform(playerStateRef.current);\r\n      transformedState = clearAllCaches(transformedState);\r\n      setPlayerState(transformedState);\r\n    },\r\n    [playerStateRef, setPlayerState],\r\n  );\r\n\r\n  const stateContextValue: StateContextValue = useMemo(() => {\r\n    return {\r\n      ...playerState,\r\n      apply: apply,\r\n      overwrite: overwrite,\r\n    };\r\n  }, [playerState, apply, overwrite]);\r\n\r\n  useEffect(() => {\r\n    updateGameState(stateContextValue);\r\n  }, [stateContextValue]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        let loadedState = await loadData();\r\n        loadedState = clearAllCaches(loadedState);\r\n        setPlayerState(loadedState);\r\n        await nextFrame();\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error loading data\");\r\n        setCriticalError(true);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const [lastTimeFailedToSave, setLastTimeFailedToSave] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const storeData = async () => {\r\n      if (lessCriticalError || criticalError) {\r\n        // Do not save if there's an error!!\r\n        return;\r\n      }\r\n      try {\r\n        await saveData(playerState);\r\n        if (lastTimeFailedToSave > 0) {\r\n          setLastTimeFailedToSave(0);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error saving data\", error);\r\n        if (\r\n          lastTimeFailedToSave > 0 &&\r\n          lastTimeFailedToSave <\r\n            Math.floor(getSecondsPlayed(playerState) / 5.0) - 10.0\r\n        ) {\r\n          setLessCriticalError(true);\r\n        } else {\r\n          if (lastTimeFailedToSave <= 0) {\r\n            setLastTimeFailedToSave(\r\n              Math.floor(getSecondsPlayed(playerState) / 5.0),\r\n            );\r\n          }\r\n        }\r\n      }\r\n    };\r\n    if (!loading && !processingBigTime) {\r\n      storeData();\r\n    }\r\n  }, [\r\n    Math.floor(getSecondsPlayed(playerState) / 5.0),\r\n    loading,\r\n    processingBigTime,\r\n    lastTimeFailedToSave,\r\n    setLastTimeFailedToSave,\r\n    lessCriticalError,\r\n    criticalError,\r\n  ]);\r\n\r\n  const [isTransition, setTransition] = useTransition();\r\n\r\n  const theme = getThemeByElementAndDarkMode(\r\n    stateContextValue.options.overrideElementDisplay != \"no\"\r\n      ? stateContextValue.options.overrideElementDisplay\r\n      : stateContextValue.run.primaryElement,\r\n    stateContextValue.options.themeMode === \"dark\",\r\n  );\r\n\r\n  const auxOptions = useMemo(\r\n    () => ({\r\n      compactLayout: stateContextValue.options.compactUI,\r\n    }),\r\n    [stateContextValue.options.compactUI],\r\n  );\r\n\r\n  const shouldShowIntro = stateContextValue.run.primaryElement == undefined;\r\n\r\n  const [showIntro, setShowIntro] = useState(shouldShowIntro);\r\n\r\n  useEffect(() => {\r\n    if (showIntro != shouldShowIntro) {\r\n      setTimeout(() => setShowIntro(shouldShowIntro), 0);\r\n    }\r\n  }, [showIntro, shouldShowIntro, setTransition, setShowIntro]);\r\n\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  const copyToClipboard = useCallback(async () => {\r\n    const serializedData = await serializeSaveData(playerStateRef.current);\r\n    await Clipboard.setStringAsync(serializedData);\r\n  }, []);\r\n\r\n  const saveToFileCallback = useCallback(async () => {\r\n    const result = await saveToFile(playerStateRef.current);\r\n  }, []);\r\n\r\n  const copyAsyncStorageToClipboard = useCallback(async () => {\r\n    const jsonValue = await AsyncStorage.getItem(\"GameState\");\r\n    await Clipboard.setStringAsync(jsonValue ?? \"null\");\r\n  }, []);\r\n\r\n  const criticalErrorView = useMemo(\r\n    () => (\r\n      <View style={styles.errorContainer}>\r\n        <View style={styles.errorWrapper}>\r\n          <View style={styles.errorHeader}>\r\n            <Text variant=\"headlineMedium\">\r\n              {t(\"Something went very wrong!\")}\r\n            </Text>\r\n          </View>\r\n          <Text>\r\n            {t(`It looks like an unexpected error happened while loading the game.\r\nPlease try closing the app and opening it again. If the error\r\npersists, please contact magic.research.game@gmail.com and send your\r\ndebug saved data for further support.`)}\r\n          </Text>\r\n          <PaperButton\r\n            onPress={copyAsyncStorageToClipboard}\r\n            style={styles.saveButton}\r\n          >\r\n            {t(\"Copy debug save data to clipboard\")}\r\n          </PaperButton>\r\n        </View>\r\n      </View>\r\n    ),\r\n    [copyAsyncStorageToClipboard],\r\n  );\r\n\r\n  const errorView = useMemo(\r\n    () => (\r\n      <View style={styles.errorContainer}>\r\n        <View style={styles.errorWrapper}>\r\n          <View style={styles.errorHeader}>\r\n            <Text variant=\"headlineMedium\">{t(\"Something went wrong!\")}</Text>\r\n          </View>\r\n          <Text>\r\n            {t(`It looks like an unexpected error happened. Please try closing the\r\napp and opening it again. If the error persists, please contact\r\nmagic.research.game@gmail.com and send your saved data for further\r\nsupport.`)}\r\n          </Text>\r\n          <PaperButton onPress={copyToClipboard} style={styles.saveButton}>\r\n            {t(\"Copy savefile to clipboard\")}\r\n          </PaperButton>\r\n          {SAVE_TO_FILE_SUPPORTED && (\r\n            <PaperButton onPress={saveToFileCallback} style={styles.saveButton}>\r\n              {t(\"Save to file\")}\r\n            </PaperButton>\r\n          )}\r\n        </View>\r\n      </View>\r\n    ),\r\n    [copyToClipboard, saveToFileCallback],\r\n  );\r\n\r\n  const [accessibilityItems, setAccessibilityItems] = useState<\r\n    { text: string; key: string }[]\r\n  >([]);\r\n\r\n  const wakeLock = useMemo(\r\n    () => (stateContextValue.options.wakeLock ? <KeepAwake /> : null),\r\n    [stateContextValue.options.wakeLock],\r\n  );\r\n\r\n  const accessibilityItemsRef = useRef(accessibilityItems);\r\n  accessibilityItemsRef.current = accessibilityItems;\r\n\r\n  const accessibilityContext = useMemo(() => {\r\n    return Platform.select({\r\n      default: {\r\n        announceForAccessibility: (announcement: string) =>\r\n          AccessibilityInfo.announceForAccessibilityWithOptions(announcement, {\r\n            queue: false,\r\n          }),\r\n      },\r\n      web: {\r\n        announceForAccessibility: (announcement: string) => {\r\n          const newItem = { text: announcement, key: Math.random().toString() };\r\n          const oldItem = accessibilityItemsRef.current?.[0];\r\n          if (oldItem?.text == newItem.text) {\r\n            setAccessibilityItems([]);\r\n            // Fix for same attack used in quick succession...\r\n            setTimeout(() => setAccessibilityItems([newItem]), 100);\r\n          } else {\r\n            setAccessibilityItems([newItem]);\r\n          }\r\n        },\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const [visibilityState, setVisibilityState] = useState(\"visible\");\r\n\r\n  useEffect(() => {\r\n    if (Platform.OS != \"web\") {\r\n      return;\r\n    }\r\n\r\n    const onVisibilityChange = () => {\r\n      setVisibilityState(document.visibilityState);\r\n    };\r\n\r\n    document.addEventListener(\"visibilitychange\", onVisibilityChange);\r\n\r\n    return () =>\r\n      document.removeEventListener(\"visibilitychange\", onVisibilityChange);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Platform.OS == \"web\" &&\r\n      visibilityState == \"visible\" &&\r\n      JSON.stringify(getLayoutType(stateContextValue, height, width)) ==\r\n        JSON.stringify(getLayoutType(stateContextValue, height, width + 1))\r\n    ) {\r\n      // Hack fix for alt tab out and back into window breaking screen readers\r\n      // Does not work if window is maximized\r\n      window.resizeBy(1, 0);\r\n      window.resizeBy(-1, 0);\r\n    }\r\n  }, [visibilityState]);\r\n\r\n  const offlineProgressView = useMemo(\r\n    () => (\r\n      <View style={[{ flex: 1 }, !processingBigTime && { display: \"none\" }]}>\r\n        <SafeAreaView style={[styles.safeAreaContainer, styles.centerAligned]}>\r\n          <OfflineProgress\r\n            currentTicks={currentTicks}\r\n            totalTicks={totalTicks}\r\n          />\r\n        </SafeAreaView>\r\n      </View>\r\n    ),\r\n    [currentTicks, totalTicks, processingBigTime],\r\n  );\r\n\r\n  const accessibilityView = useMemo(\r\n    () =>\r\n      Platform.OS === \"web\" &&\r\n      visibilityState == \"visible\" && (\r\n        <div style={styles.accessibilityView} aria-live=\"polite\" role=\"status\">\r\n          {accessibilityItems.map((item) => (\r\n            <div key={item.key} role=\"none\">\r\n              <UtilityText key={item.key}>{item.text}</UtilityText>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ),\r\n    [accessibilityItems.map((item) => item.key).join(), visibilityState],\r\n  );\r\n\r\n  const mainView = useMemo(\r\n    () => (\r\n      <View\r\n        style={[{ flex: 1 }, processingBigTime && { display: \"none\" }]}\r\n        nativeID={theme.dark ? \"dark\" : \"light\"}\r\n      >\r\n        <GameStateFreezer isVisible={!showIntro && !processingBigTime}>\r\n          <MainAppContents\r\n            setPlayerState={setPlayerState}\r\n            onLoadingProgress={onLoadingProgress}\r\n          />\r\n        </GameStateFreezer>\r\n      </View>\r\n    ),\r\n    [\r\n      processingBigTime,\r\n      theme.dark,\r\n      showIntro,\r\n      setPlayerState,\r\n      onLoadingProgress,\r\n    ],\r\n  );\r\n\r\n  const internalToPaperContextComponent = useMemo(\r\n    () => (\r\n      <PaperProvider theme={theme}>\r\n        <ErrorBoundary errorFallback={errorView}>\r\n          <AccessibilityContext.Provider value={accessibilityContext}>\r\n            <TooltipControlContext.Provider value={tooltipControlContextValue}>\r\n              <AuxOptionsContext.Provider value={auxOptions}>\r\n                <TooltipContext.Provider value={EMPTY_TOOLTIP_CONTEXT}>\r\n                  <ZoomChecker />\r\n                  <StatusBar style={theme.dark ? \"light\" : \"dark\"} />\r\n                  <FullScreenListener />\r\n                  <SaveDataBackupper />\r\n                  <OrientationLockManager />\r\n                  <DebugUPSOverlay />\r\n                  {wakeLock}\r\n                  {accessibilityView}\r\n                  {offlineProgressView}\r\n                  {mainView}\r\n                </TooltipContext.Provider>\r\n                {!stateContextValue.options.hideTooltips && <TooltipDisplay />}\r\n              </AuxOptionsContext.Provider>\r\n            </TooltipControlContext.Provider>\r\n          </AccessibilityContext.Provider>\r\n        </ErrorBoundary>\r\n      </PaperProvider>\r\n    ),\r\n    [\r\n      theme,\r\n      errorView,\r\n      accessibilityContext,\r\n      tooltipControlContextValue,\r\n      wakeLock,\r\n      accessibilityView,\r\n      offlineProgressView,\r\n      mainView,\r\n      auxOptions,\r\n      stateContextValue?.options?.hideTooltips,\r\n    ],\r\n  );\r\n\r\n  const internalToUIContextComponent = useMemo(\r\n    () => (\r\n      <UIContext.Provider value={uiContextValue}>\r\n        <TooltipContext.Provider value={tooltipContextValue}>\r\n          {internalToPaperContextComponent}\r\n        </TooltipContext.Provider>\r\n      </UIContext.Provider>\r\n    ),\r\n    [\r\n      initialWindowMetrics,\r\n      tooltipContextValue,\r\n      uiContextValue,\r\n      internalToPaperContextComponent,\r\n    ],\r\n  );\r\n\r\n  if (criticalError) {\r\n    return criticalErrorView;\r\n  }\r\n\r\n  if (lessCriticalError) {\r\n    return errorView;\r\n  }\r\n\r\n  if (loading || shouldShowIntro != showIntro) {\r\n    return (\r\n      <PaperProvider theme={theme}>\r\n        <ErrorBoundary errorFallback={errorView}>\r\n          <AccessibilityContext.Provider value={accessibilityContext}>\r\n            <Loading />\r\n          </AccessibilityContext.Provider>\r\n        </ErrorBoundary>\r\n      </PaperProvider>\r\n    );\r\n  }\r\n\r\n  if (showIntro) {\r\n    return (\r\n      <TooltipContext.Provider value={tooltipContextValue}>\r\n        <PaperProvider theme={theme}>\r\n          <ErrorBoundary errorFallback={errorView}>\r\n            <AccessibilityContext.Provider value={accessibilityContext}>\r\n              <TooltipControlContext.Provider\r\n                value={tooltipControlContextValue}\r\n              >\r\n                <AuxOptionsContext.Provider value={auxOptions}>\r\n                  {/* <StateContext.Provider value={stateContextValue}> */}\r\n                  <UIContext.Provider value={uiContextValue}>\r\n                    <ZoomChecker />\r\n                    <StatusBar style={theme.dark ? \"light\" : \"dark\"} />\r\n                    <FullScreenListener />\r\n                    {wakeLock}\r\n                    <IntroContents />\r\n                    {!stateContextValue.options.hideTooltips && (\r\n                      <TooltipDisplay />\r\n                    )}\r\n                  </UIContext.Provider>\r\n                  {/* </StateContext.Provider> */}\r\n                </AuxOptionsContext.Provider>\r\n              </TooltipControlContext.Provider>\r\n            </AccessibilityContext.Provider>\r\n          </ErrorBoundary>\r\n        </PaperProvider>\r\n      </TooltipContext.Provider>\r\n    );\r\n  }\r\n\r\n  return (\r\n    // <StateContext.Provider value={stateContextValue}>\r\n    internalToUIContextComponent\r\n    // </StateContext.Provider>\r\n  );\r\n}\r\n\r\nexport default function AppContents() {\r\n  const { height } = useWindowDimensions();\r\n  const safeAreaProviderStyle = useMemo(\r\n    () => Platform.OS === \"web\" && { height: height, flex: \"auto\" },\r\n    [height],\r\n  );\r\n  return (\r\n    <SafeAreaProvider\r\n      initialMetrics={initialWindowMetrics}\r\n      // @ts-expect-error In react-native-web, flex: \"auto\" works\r\n      style={safeAreaProviderStyle}\r\n    >\r\n      <AppContentsInner />\r\n    </SafeAreaProvider>\r\n  );\r\n}\r\n\r\n/*export default function Test() {\r\n  return (\r\n    <Markdown debugPrintTree>\r\n      Focus your thoughts :close: and gather mana. And don't forget to lock the\r\n      door!\r\n    </Markdown>\r\n  );\r\n}*/\r\n\r\nconst headerPadding =\r\n  Platform.OS === \"android\" ? 16 : Platform.OS === \"web\" ? 8 : 0;\r\n\r\nconst styles = StyleSheet.create({\r\n  headerContainer: {\r\n    paddingTop: headerPadding,\r\n  },\r\n  rightHeaderContainer: {\r\n    flexDirection: \"row\",\r\n  },\r\n  rightHeaderIcon: {\r\n    marginLeft: 20,\r\n  },\r\n  gestureRecognizer: {\r\n    flex: 1,\r\n  },\r\n  safeAreaContainer: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n  },\r\n  centerAligned: {\r\n    alignItems: \"center\",\r\n  },\r\n  maxContainer: {\r\n    flex: 1,\r\n    height: \"100%\",\r\n  },\r\n  biggerContainer: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  mainContainerPhone: {\r\n    overflow: \"hidden\",\r\n  },\r\n  introContainer: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n  },\r\n  horizontalContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"stretch\",\r\n    overflow: \"hidden\",\r\n    flex: 1,\r\n  },\r\n  mainContainer: {\r\n    flex: 1,\r\n  },\r\n  webMenuContainer: {\r\n    width: 284,\r\n    paddingRight: 8,\r\n  },\r\n  webRightMenuContainer: {\r\n    width: 300,\r\n    paddingLeft: 8,\r\n  },\r\n  notificationsBadge: {\r\n    position: \"absolute\",\r\n    top: -4,\r\n    right: -4,\r\n    fontWeight: \"bold\",\r\n  },\r\n  menuContainer: {\r\n    position: \"absolute\",\r\n  },\r\n  container: {\r\n    padding: 8,\r\n  },\r\n  centerText: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  offlineProgressContainer: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  saveButton: {\r\n    marginTop: 8,\r\n  },\r\n  errorContainer: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  errorWrapper: {\r\n    maxWidth: 600,\r\n    marginHorizontal: 16,\r\n  },\r\n  errorHeader: {\r\n    marginBottom: 8,\r\n  },\r\n  accessibilityView: {\r\n    height: 0,\r\n    width: 0,\r\n    overflow: \"hidden\",\r\n    position: \"absolute\",\r\n    left: 100,\r\n    top: 100,\r\n  },\r\n  accessibilityHidden: {\r\n    width: 1,\r\n    height: 1,\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n  },\r\n  closeButtonInner: {\r\n    paddingHorizontal: 0,\r\n    paddingVertical: 0,\r\n    height: 32,\r\n    width: 32,\r\n    borderRadius: 16,\r\n  },\r\n  pinButtonInner: {\r\n    paddingHorizontal: 0,\r\n    paddingVertical: 0,\r\n    height: 32,\r\n    width: 32,\r\n  },\r\n  fullscreenContainer: {\r\n    alignItems: \"center\",\r\n    flex: 1,\r\n  },\r\n  fullscreenContainerInside: {\r\n    marginHorizontal: 16,\r\n    marginVertical: 16,\r\n    maxWidth: 600,\r\n  },\r\n});\r\n","import { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { clearLandCache } from \"../../buildings/Buildings\";\r\nimport { Flag } from \"../../Flag\";\r\nimport { hasFlag } from \"../../Flags\";\r\nimport { GameState } from \"../../GameState\";\r\nimport {\r\n  clearResourceCapCache,\r\n  grantResource,\r\n  Resource,\r\n} from \"../../Resources\";\r\nimport { Storylines } from \"../../storylines/Storylines\";\r\nimport {\r\n  applyMultiplierTransformations,\r\n  applyTransformations,\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Action, DoActionArgs } from \"../Action\";\r\nimport { ActionArea, ActionSubcategories } from \"../ActionAreas\";\r\n\r\nclass ExpandHome extends Action {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return (\r\n      hasFlag(state, Flag.LandPurchaseUnlocked) &&\r\n      !Storylines.getByIdNullable(\"blessedLand\")?.isBonusActive?.(state)\r\n    );\r\n  }\r\n\r\n  getId(): string {\r\n    return \"expandHome\";\r\n  }\r\n\r\n  getAreas(): Partial<Record<ActionArea, ActionSubcategories[]>> {\r\n    return { HOME: [ActionSubcategories.ACTIONS] };\r\n  }\r\n\r\n  getDisplayName(state: GameState): string {\r\n    const amount = state.run.landPurchaseCount;\r\n    if (amount == 0) {\r\n      return t(\"Expand Home\");\r\n    } else {\r\n      return t(\"Expand Home ({{amount}})\", { amount: formatNumber(amount) });\r\n    }\r\n  }\r\n\r\n  getDisplayDescription(): string {\r\n    return t(\r\n      \"Get a new parcel of land for your home so you can have more space for furniture.\",\r\n    );\r\n  }\r\n\r\n  landCapTags = [TransformationTags.Land, TransformationTags.Cap];\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\"+{{amount}}:land:\", {\r\n      amount: formatNumber(\r\n        applyMultiplierTransformations(this.landCapTags, state, 20),\r\n      ),\r\n    });\r\n  }\r\n\r\n  getTags(): string[] {\r\n    return [...super.getTags(), TransformationTags.Land];\r\n  }\r\n\r\n  costScaleTags = [...this.getTags(), TransformationTags.CostScale];\r\n\r\n  getCost(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    const fractionAddedPerLandPurchase = applyTransformations(\r\n      this.costScaleTags,\r\n      state,\r\n      0.666667,\r\n    );\r\n    return {\r\n      resources: {\r\n        Coins:\r\n          Math.pow(\r\n            1.0 + fractionAddedPerLandPurchase,\r\n            state.run.landPurchaseCount,\r\n          ) * 1250,\r\n      },\r\n      items: {},\r\n    };\r\n  }\r\n\r\n  doAction(args: DoActionArgs, state: GameState): GameState {\r\n    if (!this.canAfford(state)) {\r\n      return state;\r\n    }\r\n    state = grantResource(\r\n      Resource.Coins,\r\n      -(this.getCost(state).resources.Coins ?? 0),\r\n    )(state);\r\n    state.run.landPurchaseCount += 1;\r\n    state.world.maxLandsPurchased = Math.max(\r\n      state.run.landPurchaseCount,\r\n      state.world.maxLandsPurchased,\r\n    );\r\n    state = clearLandCache(state);\r\n    state = clearResourceCapCache(state);\r\n    return state;\r\n  }\r\n\r\n  canAutoPurchaseMax(): boolean {\r\n    return true;\r\n  }\r\n}\r\n\r\nconst expandHome = new ExpandHome();\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.Land, TransformationTags.Cap]],\r\n  expandHome.getId(),\r\n  t(\"Purchased Land\"),\r\n  TransformationType.Addition,\r\n  (state, params) => 20 * state.run.landPurchaseCount,\r\n);\r\n\r\nexport default expandHome;\r\n","import { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport {\r\n  getResourceAmount,\r\n  getResourceCap,\r\n  grantResource,\r\n  Resource,\r\n} from \"../../Resources\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Action, ActionEffect, DoActionArgs } from \"../Action\";\r\nimport { ActionArea, ActionSubcategories } from \"../ActionAreas\";\r\n\r\nclass GatherMana extends Action {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getId(): string {\r\n    return \"gatherMana\";\r\n  }\r\n\r\n  getAreas(): Partial<Record<ActionArea, ActionSubcategories[]>> {\r\n    return { HOME: [ActionSubcategories.ACTIONS] };\r\n  }\r\n\r\n  getDisplayName(state: GameState): string {\r\n    return t(\"Gather Mana\");\r\n  }\r\n\r\n  isVisible(): boolean {\r\n    return true;\r\n  }\r\n\r\n  isEnabled(state: GameState): boolean {\r\n    return (\r\n      getResourceAmount(state, Resource.Mana) <\r\n      getResourceCap(state, Resource.Mana)\r\n    );\r\n  }\r\n\r\n  getTags(): string[] {\r\n    return [\r\n      ...super.getTags(),\r\n      TransformationTags.ManualGathering,\r\n      TransformationTags.Production,\r\n      Resource.Mana,\r\n    ];\r\n  }\r\n\r\n  getDisplayDescription(): string {\r\n    return t(\r\n      \"Focus your thoughts and gather mana. *Tip: You can press and hold buttons to auto-press them!*\",\r\n    );\r\n  }\r\n\r\n  getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      mana: { value: 1 },\r\n    };\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    return t(`+{{amount}}:mana:`, {\r\n      amount: formatNumber(effects.mana, {\r\n        showDecimals: true,\r\n      }),\r\n    });\r\n  }\r\n\r\n  getCost(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return { resources: {}, items: {} };\r\n  }\r\n\r\n  doAction(args: DoActionArgs, state: GameState): GameState {\r\n    return grantResource(\r\n      Resource.Mana,\r\n      this.getActionEffects(state).mana,\r\n    )(state);\r\n  }\r\n}\r\n\r\nexport default new GatherMana();\r\n","import { t } from \"../../../utils/I18n\";\r\nimport { Flag } from \"../../Flag\";\r\nimport { hasEverHadFlag } from \"../../Flags\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource, getResourceAmount, grantResource } from \"../../Resources\";\r\nimport { triggerRandomEvent } from \"../../events/autorandom/RandomEventTrigger\";\r\nimport { recordTimePieceConsumption } from \"../../timetick/TimePieces\";\r\nimport { Action, ActionEffect, DoActionArgs } from \"../Action\";\r\nimport {\r\n  ActionArea,\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../ActionAreas\";\r\n\r\nclass UseTimePiecesEvent extends Action {\r\n  getId(): string {\r\n    return \"useTimePiecesEvent\";\r\n  }\r\n\r\n  getDisplayName(state: GameState): string {\r\n    return t(\"Use Time Pieces (Event)\");\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return (\r\n      getResourceAmount(state, Resource.TimePiece) > 0 &&\r\n      hasEverHadFlag(state, Flag.ExplorationUnlocked)\r\n    );\r\n  }\r\n\r\n  getAreas(): Partial<Record<ActionArea, ActionSubcategory[]>> {\r\n    return {\r\n      HOME: [ActionSubcategories.TIME_PIECES],\r\n    };\r\n  }\r\n\r\n  getDisplayDescription(): string {\r\n    return \"Use your time pieces to immediately trigger a random occurrence.\";\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {};\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(`Instantly trigger the next random event`);\r\n  }\r\n\r\n  canAfford(state: GameState): boolean {\r\n    return (\r\n      super.canAfford(state) &&\r\n      getResourceAmount(state, Resource.TimePiece) >= 1800\r\n    );\r\n  }\r\n\r\n  getCost(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        TimePiece: 1800,\r\n      },\r\n      items: {},\r\n    };\r\n  }\r\n\r\n  doAction(args: DoActionArgs, state: GameState): GameState {\r\n    if (!this.canAfford(state)) {\r\n      return state;\r\n    }\r\n\r\n    state = grantResource(\r\n      Resource.TimePiece,\r\n      -(this.getCost(state).resources[Resource.TimePiece] ?? 0),\r\n    )(state);\r\n\r\n    state = recordTimePieceConsumption(\r\n      state,\r\n      this.getCost(state).resources[Resource.TimePiece] ?? 0,\r\n    );\r\n\r\n    return triggerRandomEvent(state);\r\n  }\r\n}\r\n\r\nexport default new UseTimePiecesEvent();\r\n","import { keysOf } from \"../../../utils/CoreUtils\";\r\nimport { formatNumber, formatTime } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { Flag } from \"../../Flag\";\r\nimport { hasFlag } from \"../../Flags\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource, getResourceAmount, grantResource } from \"../../Resources\";\r\nimport { grantElementExp } from \"../../spells/Elements\";\r\nimport {\r\n  BASE_RESEARCH_EXP_PER_SEC_PER_RESEARCHER,\r\n  getBaseResearchRate,\r\n} from \"../../study/Study\";\r\nimport { recordTimePieceConsumption } from \"../../timetick/TimePieces\";\r\nimport { applyTransformations } from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Action, ActionEffect, DoActionArgs } from \"../Action\";\r\nimport {\r\n  ActionArea,\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../ActionAreas\";\r\n\r\nclass UseTimePiecesStudy extends Action {\r\n  getId(): string {\r\n    return \"useTimePiecesStudy\";\r\n  }\r\n\r\n  getDisplayName(state: GameState): string {\r\n    return t(\"Use Time Pieces (Study)\");\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return (\r\n      getResourceAmount(state, Resource.TimePiece) > 0 &&\r\n      hasFlag(state, Flag.StudyUnlocked)\r\n    );\r\n  }\r\n\r\n  getAreas(): Partial<Record<ActionArea, ActionSubcategory[]>> {\r\n    return {\r\n      HOME: [ActionSubcategories.TIME_PIECES],\r\n      STUDY: [ActionSubcategories.TIME_PIECES],\r\n    };\r\n  }\r\n\r\n  getDisplayDescription(): string {\r\n    return \"Use your time pieces to fast-forward Studying.\";\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      timePiecesPerResearchSecond: {\r\n        value: 2,\r\n        tags: [TransformationTags.TimePiecePerStudy],\r\n      },\r\n    };\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const timePiecesPerResearchSecond =\r\n      this.getActionEffects(state).timePiecesPerResearchSecond;\r\n    const secs = 3000 / timePiecesPerResearchSecond;\r\n    const timeString = formatTime(secs, {\r\n      shortForm: true,\r\n      showDecimals: true,\r\n    });\r\n    const expPerResearcherPerSec = getBaseResearchRate(state);\r\n    const transformedSecs = applyTransformations(\r\n      [TransformationTags.GameSpeed],\r\n      state,\r\n      secs,\r\n      { isWarp: true },\r\n    );\r\n    const expPerResearcher = expPerResearcherPerSec * transformedSecs;\r\n    return t(\r\n      `Instantly obtain {{timeString}} (Real World time) of Study ({{exp}} exp per researcher)`,\r\n      {\r\n        timeString: timeString,\r\n        exp: formatNumber(expPerResearcher),\r\n      },\r\n    );\r\n  }\r\n\r\n  canAfford(state: GameState): boolean {\r\n    return (\r\n      super.canAfford(state) &&\r\n      getResourceAmount(state, Resource.TimePiece) >= 3000\r\n    );\r\n  }\r\n\r\n  getCost(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        TimePiece: 3000,\r\n      },\r\n      items: {},\r\n    };\r\n  }\r\n\r\n  isEnabled(state: GameState): boolean {\r\n    return (\r\n      super.isEnabled(state) &&\r\n      keysOf(state.run.studyAllocation).some(\r\n        (element) => (state.run.studyAllocation[element] ?? 0) > 0,\r\n      )\r\n    );\r\n  }\r\n\r\n  doAction(args: DoActionArgs, state: GameState): GameState {\r\n    if (!this.canAfford(state)) {\r\n      return state;\r\n    }\r\n\r\n    const timePiecesPerResearchSecond =\r\n      this.getActionEffects(state).timePiecesPerResearchSecond;\r\n    const timePieces = this.getCost(state).resources[Resource.TimePiece] ?? 0;\r\n    const secs = timePieces / timePiecesPerResearchSecond;\r\n    const transformedSecs = applyTransformations(\r\n      [TransformationTags.GameSpeed],\r\n      state,\r\n      secs,\r\n      { isWarp: true },\r\n    );\r\n\r\n    state = grantResource(Resource.TimePiece, -timePieces)(state);\r\n    state = recordTimePieceConsumption(state, timePieces);\r\n\r\n    keysOf(state.run.studyAllocation).forEach((element) => {\r\n      const researchersAllocated = state.run.studyAllocation[element] ?? 0;\r\n      if (researchersAllocated > 0) {\r\n        const expPerResearcherPerSec = applyTransformations(\r\n          [element, TransformationTags.Study, TransformationTags.ExpGain],\r\n          state,\r\n          BASE_RESEARCH_EXP_PER_SEC_PER_RESEARCHER,\r\n          { isWarp: true, fromResearch: true },\r\n        );\r\n        state = grantElementExp(\r\n          element,\r\n          researchersAllocated * expPerResearcherPerSec * transformedSecs,\r\n        )(state);\r\n      }\r\n    });\r\n\r\n    return state;\r\n  }\r\n}\r\n\r\nexport default new UseTimePiecesStudy();\r\n","import { formatTime } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { getResourceAmount, grantResource, Resource } from \"../../Resources\";\r\nimport { recordTimePieceConsumption } from \"../../timetick/TimePieces\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Action, ActionEffect, DoActionArgs } from \"../Action\";\r\nimport { ActionArea, ActionSubcategories } from \"../ActionAreas\";\r\n\r\nclass UseTimePiecesWarp extends Action {\r\n  getId(): string {\r\n    return \"useTimePiecesWarp\";\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return getResourceAmount(state, Resource.TimePiece) > 0;\r\n  }\r\n\r\n  getDisplayName(): string {\r\n    return t(\"Use Time Pieces (Warp)\");\r\n  }\r\n\r\n  getAreas(): Partial<Record<ActionArea, ActionSubcategories[]>> {\r\n    return { HOME: [ActionSubcategories.TIME_PIECES] };\r\n  }\r\n\r\n  getDisplayDescription(): string {\r\n    return \"Use your time pieces to warp time, affecting every aspect of the game.\";\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      timePiecePerWarpedSec: {\r\n        value: 5,\r\n        tags: [TransformationTags.TimePiecePerWarpedSec],\r\n      },\r\n    };\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const cost = this.getCost(state).resources[Resource.TimePiece] ?? 1;\r\n    const effect = this.getActionEffects(state);\r\n    const totalSecs = cost / effect.timePiecePerWarpedSec;\r\n    return t(\"Warp time forward by {{formattedTime}} (Real World)\", {\r\n      formattedTime: formatTime(totalSecs, {\r\n        shortForm: false,\r\n        showDecimals: false,\r\n      }),\r\n    });\r\n  }\r\n\r\n  canAfford(state: GameState): boolean {\r\n    return (\r\n      super.canAfford(state) &&\r\n      getResourceAmount(state, Resource.TimePiece) >= 3000\r\n    );\r\n  }\r\n\r\n  getCost(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        TimePiece: 3000,\r\n      },\r\n      items: {},\r\n    };\r\n  }\r\n\r\n  doAction(args: DoActionArgs, state: GameState): GameState {\r\n    if (!this.canAfford(state)) {\r\n      return state;\r\n    }\r\n    const cost = this.getCost(state).resources.TimePiece ?? 1;\r\n    const effect = this.getActionEffects(state);\r\n    const totalSecs = cost / effect.timePiecePerWarpedSec;\r\n    state = grantResource(Resource.TimePiece, -cost)(state);\r\n    state = recordTimePieceConsumption(state, cost);\r\n    state.run.warpTimeSecs = totalSecs;\r\n\r\n    return state;\r\n  }\r\n\r\n  canSpam(): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default new UseTimePiecesWarp();\r\n","import { loadActionsCommonLogic, registerAction } from \"./Actions\";\r\nimport ExpandHome from \"./actions/ExpandHome\";\r\nimport GatherMana from \"./actions/GatherMana\";\r\nimport UseTimePiecesEvent from \"./actions/UseTimePiecesEvent\";\r\nimport UseTimePiecesStudy from \"./actions/UseTimePiecesStudy\";\r\nimport UseTimePiecesWarp from \"./actions/UseTimePiecesWarp\";\r\n\r\nexport function loadActions() {\r\n  loadActionsCommonLogic();\r\n  registerAction(GatherMana);\r\n  registerAction(ExpandHome);\r\n  registerAction(UseTimePiecesWarp);\r\n  registerAction(UseTimePiecesStudy);\r\n  registerAction(UseTimePiecesEvent);\r\n}\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { Flag } from \"../../../Flag\";\r\nimport { hasFlag } from \"../../../Flags\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { Resource } from \"../../../Resources\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport { Item, ItemParams } from \"../../Item\";\r\nimport { ItemTagEnum } from \"../../ItemTagEnum\";\r\nimport { TransmutationSpell } from \"../TransmutationSpell\";\r\n\r\nclass MonstiumPaper extends Item {\r\n  getId(): string {\r\n    return \"monstiumPaper\";\r\n  }\r\n\r\n  getTags(): ItemTagEnum[] {\r\n    return [ItemTagEnum.Material];\r\n  }\r\n\r\n  getPicture() {\r\n    return require(\"./monstiumPaper.png\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Mind;\r\n  }\r\n\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Monstium Paper\");\r\n  }\r\n\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\"Monstium Paper. Used for stronger Enhancements.\");\r\n  }\r\n\r\n  getEffect(state: GameState, params: ItemParams): string | undefined {\r\n    return undefined;\r\n  }\r\n\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 2000;\r\n  }\r\n}\r\n\r\nexport const monstiumPaper = new MonstiumPaper();\r\n\r\nclass TransmuteMonstiumPaper extends TransmutationSpell {\r\n  getItem(): Item {\r\n    return monstiumPaper;\r\n  }\r\n\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Mind: 1,\r\n    };\r\n  }\r\n\r\n  canCraft(state: GameState): boolean {\r\n    return hasFlag(state, Flag.DeepCavernsUnlocked) && super.canCraft(state);\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return hasFlag(state, Flag.DeepCavernsUnlocked) && super.isVisible(state);\r\n  }\r\n\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 800,\r\n        Monstium: 4000,\r\n        MindEssence: 25000,\r\n      },\r\n      items: {\r\n        paper: 1,\r\n      },\r\n    };\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Mind;\r\n  }\r\n}\r\n\r\nexport const transmuteMonstiumPaper = new TransmuteMonstiumPaper();\r\n","import { GameState } from \"../GameState\";\r\nimport { DataStore } from \"../generic/DataStore\";\r\nimport { Enhancement } from \"./Enhancement\";\r\n\r\nexport const EnhancementPurchaseListeners = new DataStore<\r\n  (state: GameState, enhancement: Enhancement) => GameState\r\n>();\r\n","import { keysOf } from \"../../utils/CoreUtils\";\r\nimport { Action, DoActionArgs } from \"../action/Action\";\r\nimport { ActionArea, ActionSubcategory } from \"../action/ActionAreas\";\r\nimport { hasEverHadFlag, hasFlag, setFlag } from \"../Flags\";\r\nimport { GameState } from \"../GameState\";\r\nimport {\r\n  monstiumPaper,\r\n  transmuteMonstiumPaper,\r\n} from \"../items/transmute/materials/MonstiumPaper\";\r\nimport { Resource } from \"../Resources\";\r\nimport { EnhancementPurchaseListeners } from \"./EnhancementPurchaseListeners\";\r\n\r\nexport abstract class Enhancement extends Action {\r\n  abstract getBaseName(): string;\r\n  abstract getSubcategory(): ActionSubcategory;\r\n  abstract getBaseResourceCost(): Partial<Record<Resource, number>>;\r\n  abstract getItemCost(): Record<string, number>;\r\n\r\n  getAreas(): Partial<Record<ActionArea, ActionSubcategory[]>> {\r\n    return { ENHANCEMENT: [this.getSubcategory()] };\r\n  }\r\n\r\n  getDisplayName(state: GameState): string {\r\n    return this.getBaseName();\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return (\r\n      !this.isPurchased(state) &&\r\n      this.getRequiredEnhancements().every((enhancement) =>\r\n        enhancement.isPurchased(state),\r\n      )\r\n    );\r\n  }\r\n\r\n  getRequiredEnhancements(): Enhancement[] {\r\n    return [];\r\n  }\r\n\r\n  getCost(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    // TODO: transformations\r\n    return {\r\n      resources: this.getBaseResourceCost(),\r\n      items: this.getItemCost(),\r\n    };\r\n  }\r\n\r\n  isCapEnough(state: GameState): boolean {\r\n    return (\r\n      super.isCapEnough(state) &&\r\n      (keysOf(this.getItemCost()).includes(monstiumPaper.getId())\r\n        ? transmuteMonstiumPaper.isVisible(state)\r\n        : true)\r\n    );\r\n  }\r\n\r\n  isPurchased(state: GameState): boolean {\r\n    return hasFlag(state, \"enhancement-\" + this.getId());\r\n  }\r\n\r\n  hasEverBeenPurchased(state: GameState): boolean {\r\n    return hasEverHadFlag(state, \"enhancement-\" + this.getId());\r\n  }\r\n\r\n  setPurchased(state: GameState): GameState {\r\n    state = setFlag(\"enhancement-\" + this.getId())(state);\r\n    EnhancementPurchaseListeners.getAll().forEach((transform) => {\r\n      state = transform(state, this);\r\n    });\r\n    return state;\r\n  }\r\n\r\n  doAction(args: DoActionArgs, state: GameState): GameState {\r\n    if (!this.canAfford(state)) {\r\n      return state;\r\n    }\r\n\r\n    state = this.payCost(state);\r\n\r\n    return this.setPurchased(state);\r\n  }\r\n}\r\n","import { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Enhancement } from \"../Enhancement\";\r\n\r\nclass MonstiumCollection extends Enhancement {\r\n  getId(): string {\r\n    return \"monstiumCollection\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"Monstium Collection\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_EXPLORATION;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 400,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 4,\r\n    };\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\"Enhance your ability to collect loot from defeated enemies.\");\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\"+40%:monstium: obtained from Exploration\");\r\n  }\r\n}\r\n\r\nexport const monstiumCollection = new MonstiumCollection();\r\n\r\nregisterTransformation(\r\n  [\r\n    [\r\n      TransformationTags.Loot,\r\n      TransformationTags.FromExploration,\r\n      Resource.Monstium,\r\n    ],\r\n  ],\r\n  monstiumCollection.getId(),\r\n  monstiumCollection.getBaseName(),\r\n  TransformationType.Multiplier,\r\n  (state) => (monstiumCollection.isPurchased(state) ? 1.4 : 1.0),\r\n);\r\n","import { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { essenceCatalyst } from \"../../buildings/catalysts/EssenceCatalyst\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Enhancement } from \"../Enhancement\";\r\n\r\nclass SuperheatedCatalysts extends Enhancement {\r\n  getId(): string {\r\n    return \"superheatedCatalysts\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"Superheated Catalysts\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_CATALYSTS;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 400,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 3,\r\n    };\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Apply a special technique to Essence Catalysts to increase their effectivity.\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\"+15% effectivity of Essence Catalysts\");\r\n  }\r\n}\r\n\r\nconst superheatedCatalysts = new SuperheatedCatalysts();\r\n\r\nregisterTransformation(\r\n  [[essenceCatalyst.getId(), TransformationTags.CatalystEffectivity]],\r\n  superheatedCatalysts.getId(),\r\n  superheatedCatalysts.getBaseName(),\r\n  TransformationType.Multiplier,\r\n  (state) => (superheatedCatalysts.isPurchased(state) ? 1.15 : 1.0),\r\n);\r\n\r\nexport { superheatedCatalysts };\r\n","import { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport { getUnlockedElements, SpellElement } from \"../../spells/Elements\";\r\nimport { Enhancement } from \"../Enhancement\";\r\nimport { monstiumCollection } from \"../exploration/MonstiumCollection\";\r\nimport { superheatedCatalysts } from \"../production/SuperheatedCatalysts\";\r\n\r\nclass MonstiumCatalysts extends Enhancement {\r\n  getId(): string {\r\n    return \"monstiumCatalysts\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"Monstium Catalysts\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_CATALYSTS;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 2000,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 12,\r\n    };\r\n  }\r\n  getRequiredEnhancements(): Enhancement[] {\r\n    return [monstiumCollection, superheatedCatalysts];\r\n  }\r\n  isVisible(state: GameState): boolean {\r\n    return (\r\n      super.isVisible(state) &&\r\n      getUnlockedElements(state).includes(SpellElement.Poison)\r\n    );\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Discover a new type of furniture, which is able to increase the amount of Monstium obtained from enemies.\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t('Unlock furniture \"Monstium Catalyst\"');\r\n  }\r\n}\r\n\r\nexport const monstiumCatalysts = new MonstiumCatalysts();\r\n","import { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionArea,\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { monstiumCatalysts } from \"../../enhancement/other/MonstiumCatalysts\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport { SpellElement } from \"../../spells/Elements\";\r\nimport { registerSpell } from \"../../spells/Spells\";\r\nimport {\r\n  applyTransformationsCached,\r\n  explainTransformationsText,\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../transformation/TransformationTags\";\r\nimport { Building, BuildingSpell } from \"../Building\";\r\nimport { Buildings, getBuildingAmount } from \"../Buildings\";\r\n\r\nclass MonstiumCatalyst extends Building {\r\n  getId(): string {\r\n    return \"monstiumCatalyst\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Monstium Catalyst\");\r\n  }\r\n\r\n  catalystEffectivityTags = [\r\n    TransformationTags.CatalystEffectivity,\r\n    this.getId(),\r\n  ];\r\n\r\n  getPerCatalystBonusMultiplier(state: GameState): number {\r\n    return (\r\n      1.0 +\r\n      applyTransformationsCached(this.catalystEffectivityTags, state, 0.12)\r\n    );\r\n  }\r\n\r\n  catalystEffectivityParams = {\r\n    valueType: TransformationValueType.Percent,\r\n  };\r\n\r\n  getPerCatalystBonusMultiplierExplanation(state: GameState): string {\r\n    return explainTransformationsText(\r\n      this.catalystEffectivityTags,\r\n      state,\r\n      0.12,\r\n      this.catalystEffectivityParams,\r\n    );\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\"A catalyst that drastically improves Monstium gain.\");\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effectPct = (this.getPerCatalystBonusMultiplier(state) - 1.0) * 100;\r\n    return t(\r\n      \"^+{{effectPct}}%^<{{explanation}}>:monstium: obtained from enemies\",\r\n      {\r\n        effectPct: formatNumber(effectPct),\r\n        explanation: this.getPerCatalystBonusMultiplierExplanation(state),\r\n      },\r\n    );\r\n  }\r\n\r\n  getBaseLandRequired(): number {\r\n    return 10;\r\n  }\r\n\r\n  canTurnOff(): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const monstiumCatalyst = new MonstiumCatalyst();\r\n\r\nclass BuildMonstiumCatalyst extends BuildingSpell {\r\n  getAreas(): Partial<Record<ActionArea, ActionSubcategory[]>> {\r\n    return { HOME: [ActionSubcategories.CATALYSTS] };\r\n  }\r\n\r\n  getBuilding(): MonstiumCatalyst {\r\n    return monstiumCatalyst;\r\n  }\r\n\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      PoisonEssence: 4000,\r\n      FireEssence: 2000,\r\n    };\r\n  }\r\n\r\n  getBaseResourceScale(): Partial<Record<Resource, number>> {\r\n    return {\r\n      PoisonEssence: 1.8,\r\n      FireEssence: 1.8,\r\n    };\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return monstiumCatalysts.isPurchased(state) && super.isVisible(state);\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {};\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Poison;\r\n  }\r\n}\r\n\r\nexport const buildMonstiumCatalyst = new BuildMonstiumCatalyst();\r\n\r\nexport function loadMonstiumCatalysts() {\r\n  Buildings.register(monstiumCatalyst);\r\n  registerSpell(buildMonstiumCatalyst);\r\n\r\n  registerTransformation(\r\n    [[TransformationTags.Loot, Resource.Monstium]],\r\n    \"monstiumCatalyst\",\r\n    t(\"Monstium Catalyst\"),\r\n    TransformationType.Multiplier,\r\n    (state, params) => {\r\n      const building = monstiumCatalyst;\r\n      return Math.pow(\r\n        building.getPerCatalystBonusMultiplier(state),\r\n        getBuildingAmount(state, building),\r\n      );\r\n    },\r\n  );\r\n}\r\n","import { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport { clearVisibleSpellsCache } from \"../../spells/VisibleSpellsCache\";\r\nimport { Enhancement } from \"../Enhancement\";\r\nimport { EnhancementPurchaseListeners } from \"../EnhancementPurchaseListeners\";\r\n\r\nclass ManaSteamers extends Enhancement {\r\n  getId(): string {\r\n    return \"manaSteamers\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"Mana Steamers\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_OTHER;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 250,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 2,\r\n    };\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Discover a new type of furniture, that uses :wateressence: and :fireessence: to generate :mana:.\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t('Unlock furniture \"Mana Steamer\"');\r\n  }\r\n}\r\n\r\nconst manaSteamers = new ManaSteamers();\r\n\r\nEnhancementPurchaseListeners.register((state, enhancement) => {\r\n  if (enhancement == manaSteamers) {\r\n    return clearVisibleSpellsCache(state);\r\n  }\r\n  return state;\r\n}, manaSteamers.getId());\r\n\r\nexport { manaSteamers };\r\n","import memoize from \"sonic-memoize\";\r\nimport { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport {\r\n  ActionArea,\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { manaSteamers } from \"../../enhancement/other/ManaSteamers\";\r\nimport { SpellElement } from \"../../spells/Elements\";\r\nimport {\r\n  IncomeOverTimeProducer,\r\n  IncomeOverTimeProducers,\r\n  clearCalculatedIncomeCache,\r\n} from \"../../timetick/IncomeOverTime\";\r\nimport {\r\n  applyTransformations,\r\n  explainTransformationsText,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Building, BuildingSpell } from \"../Building\";\r\nimport {\r\n  BuildingAmountListeners,\r\n  getBuildingAmountTurnedOn,\r\n} from \"../Buildings\";\r\n\r\nconst manaTags = [TransformationTags.Production, Resource.Mana, \"manaSteamer\"];\r\nconst BASE_REGEN = 6.0;\r\nfunction getManaRegenPerSec(state: GameState): number {\r\n  return applyTransformations(manaTags, state, BASE_REGEN);\r\n}\r\nconst manaRegenUnit = memoize(() => ({\r\n  unit: t(\":mana:/sec\"),\r\n}));\r\nfunction getManaRegenPerSecExplanation(state: GameState): string {\r\n  return explainTransformationsText(\r\n    manaTags,\r\n    state,\r\n    BASE_REGEN,\r\n    manaRegenUnit(),\r\n  );\r\n}\r\n\r\nconst BASE_CONSUMPTION = 3.0;\r\nconst fireTags = [\r\n  TransformationTags.Consumption,\r\n  Resource.FireEssence,\r\n  \"manaSteamer\",\r\n];\r\nfunction getFireEssenceConsumptionPerSec(state: GameState): number {\r\n  return applyTransformations(fireTags, state, BASE_CONSUMPTION);\r\n}\r\nconst fireEssenceUnit = memoize(() => ({\r\n  unit: t(\":fireessence:/sec\"),\r\n}));\r\nfunction getFireEssenceConsumptionPerSecExplanation(state: GameState): string {\r\n  return explainTransformationsText(\r\n    fireTags,\r\n    state,\r\n    BASE_CONSUMPTION,\r\n    fireEssenceUnit(),\r\n  );\r\n}\r\n\r\nconst waterTags = [\r\n  TransformationTags.Consumption,\r\n  Resource.WaterEssence,\r\n  \"manaSteamer\",\r\n];\r\nfunction getWaterEssenceConsumptionPerSec(state: GameState): number {\r\n  return applyTransformations(waterTags, state, BASE_CONSUMPTION);\r\n}\r\nconst waterEssenceUnit = memoize(() => ({\r\n  unit: t(\":wateressence:/sec\"),\r\n}));\r\nfunction getWaterEssenceConsumptionPerSecExplanation(state: GameState): string {\r\n  return explainTransformationsText(\r\n    waterTags,\r\n    state,\r\n    BASE_CONSUMPTION,\r\n    waterEssenceUnit(),\r\n  );\r\n}\r\n\r\nclass ManaSteamer extends Building {\r\n  getId(): string {\r\n    return \"manaSteamer\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Mana Steamer\");\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\"A device that is able to use Water and Fire to produce Mana.\");\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\r\n      \"^+{{manaRegenPerSec}}^<{{manaRegenExplanation}}>:mana:/sec; ^-{{waterConsumptionPerSec}}^<{{waterConsumptionExplanation}}>:wateressence:/sec; ^-{{fireConsumptionPerSec}}^<{{fireConsumptionExplanation}}>:fireessence:/sec\",\r\n      {\r\n        manaRegenPerSec: formatNumber(getManaRegenPerSec(state), {\r\n          showDecimals: true,\r\n        }),\r\n        waterConsumptionPerSec: formatNumber(\r\n          getWaterEssenceConsumptionPerSec(state),\r\n          {\r\n            showDecimals: true,\r\n          },\r\n        ),\r\n        fireConsumptionPerSec: formatNumber(\r\n          getFireEssenceConsumptionPerSec(state),\r\n          {\r\n            showDecimals: true,\r\n          },\r\n        ),\r\n        manaRegenExplanation: getManaRegenPerSecExplanation(state),\r\n        waterConsumptionExplanation:\r\n          getWaterEssenceConsumptionPerSecExplanation(state),\r\n        fireConsumptionExplanation:\r\n          getFireEssenceConsumptionPerSecExplanation(state),\r\n      },\r\n    );\r\n  }\r\n\r\n  getBaseLandRequired(): number {\r\n    return 4;\r\n  }\r\n\r\n  canTurnOff(): boolean {\r\n    return true;\r\n  }\r\n}\r\n\r\nconst manaSteamer = new ManaSteamer();\r\n\r\nclass BuildManaSteamer extends BuildingSpell {\r\n  getAreas(): Partial<Record<ActionArea, ActionSubcategory[]>> {\r\n    return { HOME: [ActionSubcategories.MANA] };\r\n  }\r\n\r\n  getBuilding(): Building {\r\n    return manaSteamer;\r\n  }\r\n\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      WaterEssence: 3000,\r\n      FireEssence: 3000,\r\n    };\r\n  }\r\n\r\n  getBaseResourceScale(): Partial<Record<Resource, number>> {\r\n    return {\r\n      WaterEssence: 1.25,\r\n      FireEssence: 1.25,\r\n    };\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return manaSteamers.isPurchased(state) && super.isVisible(state);\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {};\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Fire;\r\n  }\r\n}\r\n\r\nconst buildManaSteamer = new BuildManaSteamer();\r\n\r\nIncomeOverTimeProducers.register(\r\n  new IncomeOverTimeProducer(\r\n    manaSteamer.getId(),\r\n    manaSteamer.getName(),\r\n    (state) => ({\r\n      Mana:\r\n        getManaRegenPerSec(state) *\r\n        getBuildingAmountTurnedOn(state, manaSteamer),\r\n      FireEssence:\r\n        -1 *\r\n        getFireEssenceConsumptionPerSec(state) *\r\n        getBuildingAmountTurnedOn(state, manaSteamer),\r\n      WaterEssence:\r\n        -1 *\r\n        getWaterEssenceConsumptionPerSec(state) *\r\n        getBuildingAmountTurnedOn(state, manaSteamer),\r\n    }),\r\n  ),\r\n);\r\n\r\nBuildingAmountListeners.register((state, building) => {\r\n  if (building == manaSteamer) {\r\n    state = clearCalculatedIncomeCache(state);\r\n  }\r\n  return state;\r\n});\r\n\r\nexport { buildManaSteamer, manaSteamer };\r\n","import { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport { getUnlockedElements, SpellElement } from \"../../spells/Elements\";\r\nimport { Enhancement } from \"../Enhancement\";\r\nimport { manaSteamers } from \"./ManaSteamers\";\r\n\r\nclass SewageSystem extends Enhancement {\r\n  getId(): string {\r\n    return \"sewageSystemEnhancement\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"Sewage System\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_PRODUCTION;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 600,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 10,\r\n    };\r\n  }\r\n  getRequiredEnhancements(): Enhancement[] {\r\n    return [manaSteamers];\r\n  }\r\n  isVisible(state: GameState): boolean {\r\n    return (\r\n      super.isVisible(state) &&\r\n      getUnlockedElements(state).includes(SpellElement.Poison)\r\n    );\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Discover a new type of furniture, which converts :poisonessence: automatically into large amounts of :fireessence:, :earthessence:, :wateressence: and :airessence:.\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t('Unlock furniture \"Sewage System\"');\r\n  }\r\n}\r\n\r\nexport const sewageSystemEnhancement = new SewageSystem();\r\n","import memoize from \"sonic-memoize\";\r\nimport { fromEntries } from \"../../../utils/CoreUtils\";\r\nimport { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { Flag } from \"../../Flag\";\r\nimport { hasFlag } from \"../../Flags\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport {\r\n  ActionArea,\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { sewageSystemEnhancement } from \"../../enhancement/other/SewageSystem\";\r\nimport { SpellElement, getUnlockedElements } from \"../../spells/Elements\";\r\nimport { registerSpell } from \"../../spells/Spells\";\r\nimport { RESOURCE_FOR_ELEMENT } from \"../../spells/channeling/ChannelingResources\";\r\nimport {\r\n  IncomeOverTimeProducer,\r\n  IncomeOverTimeProducers,\r\n  clearCalculatedIncomeCache,\r\n} from \"../../timetick/IncomeOverTime\";\r\nimport {\r\n  applyTransformations,\r\n  explainTransformationsText,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Building, BuildingSpell } from \"../Building\";\r\nimport {\r\n  BuildingAmountListeners,\r\n  Buildings,\r\n  getBuildingAmountTurnedOn,\r\n} from \"../Buildings\";\r\n\r\nconst productionTags = memoize((resource) => [\r\n  TransformationTags.Production,\r\n  resource,\r\n  \"sewageSystem\",\r\n]);\r\nconst unitForResource = memoize((resource) => ({\r\n  unit: t(\"{{resourceIcon}}/sec\", {\r\n    resourceIcon: `:${resource.toLowerCase()}:`,\r\n  }),\r\n}));\r\nconst BASE_PRODUCTION = 100.0;\r\nfunction getEssenceProductionPerSec(\r\n  state: GameState,\r\n  resource: Resource,\r\n): number {\r\n  return applyTransformations(productionTags(resource), state, BASE_PRODUCTION);\r\n}\r\nfunction getEssenceProductionPerSecExplanation(\r\n  state: GameState,\r\n  resource: Resource,\r\n): string {\r\n  return explainTransformationsText(\r\n    productionTags(resource),\r\n    state,\r\n    BASE_PRODUCTION,\r\n    unitForResource(resource),\r\n  );\r\n}\r\n\r\nconst poisonTags = [\r\n  TransformationTags.Consumption,\r\n  Resource.PoisonEssence,\r\n  \"sewageSystem\",\r\n];\r\nconst BASE_CONSUMPTION = 10.0;\r\nfunction getPoisonEssenceConsumptionPerSec(state: GameState): number {\r\n  return applyTransformations(poisonTags, state, BASE_CONSUMPTION);\r\n}\r\nconst unitForConsumption = memoize(() => ({\r\n  unit: t(\":poisonessence:/sec\"),\r\n}));\r\nfunction getPoisonEssenceConsumptionPerSecExplanation(\r\n  state: GameState,\r\n): string {\r\n  return explainTransformationsText(\r\n    poisonTags,\r\n    state,\r\n    BASE_CONSUMPTION,\r\n    unitForConsumption(),\r\n  );\r\n}\r\n\r\nfunction getResourcesProduced(state: GameState): Resource[] {\r\n  let baseEssences = [\r\n    Resource.FireEssence,\r\n    Resource.EarthEssence,\r\n    Resource.WaterEssence,\r\n    Resource.AirEssence,\r\n  ];\r\n  if (hasFlag(state, Flag.SewageSystemMakesAll)) {\r\n    baseEssences = getUnlockedElements(state)\r\n      .filter((element) => element != SpellElement.Poison)\r\n      .map((element) => RESOURCE_FOR_ELEMENT[element]);\r\n  }\r\n  if (hasFlag(state, \"enhancement-sewageParadox\")) {\r\n    baseEssences.push(Resource.PoisonEssence);\r\n  }\r\n  return baseEssences;\r\n}\r\n\r\nclass SewageSystem extends Building {\r\n  getId(): string {\r\n    return \"sewageSystem\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Sewage System\");\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"A nifty piece of furniture that converts Poison Essence into other elemental essences automatically.\",\r\n    );\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const resourcesProduced = getResourcesProduced(state);\r\n    const resourceStrings = [];\r\n    for (let resource of resourcesProduced) {\r\n      resourceStrings.push(\r\n        t(\"^+{{income}}^<{{explanation}}>:{{icon}}:/sec\", {\r\n          income: formatNumber(getEssenceProductionPerSec(state, resource), {\r\n            showDecimals: true,\r\n          }),\r\n          explanation: getEssenceProductionPerSecExplanation(state, resource),\r\n          icon: resource.toLowerCase(),\r\n        }),\r\n      );\r\n    }\r\n    const productionString = resourceStrings.join(t(\", \"));\r\n    if (hasFlag(state, \"enhancement-sewageParadox\")) {\r\n      return productionString;\r\n    }\r\n    return t(\r\n      \"{{productionString}}; ^-{{consumption}}^<{{consumptionExplanation}}>:poisonessence:/sec\",\r\n      {\r\n        productionString,\r\n        consumption: formatNumber(getPoisonEssenceConsumptionPerSec(state), {\r\n          showDecimals: true,\r\n        }),\r\n        consumptionExplanation:\r\n          getPoisonEssenceConsumptionPerSecExplanation(state),\r\n      },\r\n    );\r\n  }\r\n\r\n  getBaseLandRequired(): number {\r\n    return 6;\r\n  }\r\n\r\n  canTurnOff(): boolean {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport const sewageSystem = new SewageSystem();\r\n\r\nclass BuildSewageSystem extends BuildingSpell {\r\n  getAreas(): Partial<Record<ActionArea, ActionSubcategory[]>> {\r\n    return { HOME: [ActionSubcategories.OTHER] };\r\n  }\r\n\r\n  getBuilding(): Building {\r\n    return sewageSystem;\r\n  }\r\n\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      PoisonEssence: 6000,\r\n      WaterEssence: 5000,\r\n      AirEssence: 5000,\r\n    };\r\n  }\r\n\r\n  getBaseResourceScale(): Partial<Record<Resource, number>> {\r\n    return {\r\n      PoisonEssence: 1.25,\r\n      WaterEssence: 1.25,\r\n      AirEssence: 1.25,\r\n    };\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return sewageSystemEnhancement.isPurchased(state) && super.isVisible(state);\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {};\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Poison;\r\n  }\r\n}\r\n\r\nexport const buildSewageSystem = new BuildSewageSystem();\r\n\r\nexport function loadSewageSystem() {\r\n  Buildings.register(sewageSystem);\r\n  registerSpell(buildSewageSystem);\r\n\r\n  IncomeOverTimeProducers.register(\r\n    new IncomeOverTimeProducer(\r\n      sewageSystem.getId(),\r\n      sewageSystem.getName(),\r\n      (state) => {\r\n        const resources = getResourcesProduced(state);\r\n        const resourcesPerSec = fromEntries(\r\n          resources.map((resource) => [\r\n            resource,\r\n            getEssenceProductionPerSec(state, resource) *\r\n              getBuildingAmountTurnedOn(state, sewageSystem),\r\n          ]),\r\n        );\r\n        if (!hasFlag(state, \"enhancement-sewageParadox\")) {\r\n          resourcesPerSec.PoisonEssence =\r\n            -1 *\r\n            getPoisonEssenceConsumptionPerSec(state) *\r\n            getBuildingAmountTurnedOn(state, sewageSystem);\r\n        }\r\n        return resourcesPerSec;\r\n      },\r\n    ),\r\n  );\r\n\r\n  BuildingAmountListeners.register((state, building) => {\r\n    if (building == sewageSystem) {\r\n      state = clearCalculatedIncomeCache(state);\r\n    }\r\n    return state;\r\n  });\r\n}\r\n","import { t } from \"../../utils/I18n\";\r\nimport {\r\n  ActionArea,\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../action/ActionAreas\";\r\nimport { Flag } from \"../Flag\";\r\nimport { hasFlag } from \"../Flags\";\r\nimport { GameState } from \"../GameState\";\r\nimport { Resource } from \"../Resources\";\r\nimport { SpellElement } from \"../spells/Elements\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { Building, BuildingSpell } from \"./Building\";\r\nimport { getBuildingAmount } from \"./Buildings\";\r\n\r\nclass ResearcherDesk extends Building {\r\n  getId(): string {\r\n    return \"researcherDesk\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Researcher Desk\");\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"A flat surface, perfect for the focused study of Magic. The spot for a hired Researcher!\",\r\n    );\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\"+1 Researcher\");\r\n  }\r\n\r\n  getBaseLandRequired(): number {\r\n    return 4;\r\n  }\r\n\r\n  canTurnOff(): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const researcherDesk = new ResearcherDesk();\r\n\r\nclass BuildResearcherDesk extends BuildingSpell {\r\n  getAreas(): Partial<Record<ActionArea, ActionSubcategory[]>> {\r\n    return { HOME: [ActionSubcategories.OTHER] };\r\n  }\r\n\r\n  getBuilding(): Building {\r\n    return researcherDesk;\r\n  }\r\n\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Coins: 500,\r\n      WaterEssence: 500,\r\n      FireEssence: 150,\r\n    };\r\n  }\r\n\r\n  getBaseResourceScale(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Coins: 1.5,\r\n      WaterEssence: 1.35,\r\n      FireEssence: 1.35,\r\n    };\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return hasFlag(state, Flag.ResearchersUnlocked) && super.isVisible(state);\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {};\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Air;\r\n  }\r\n}\r\n\r\nexport const buildResearcherDesk = new BuildResearcherDesk();\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.ResearcherAmount]],\r\n  \"researcherDesks\",\r\n  t(\"Researcher Desks\"),\r\n  TransformationType.Addition,\r\n  (state, params) => getBuildingAmount(state, researcherDesk),\r\n);\r\n","import memoize from \"sonic-memoize\";\r\nimport { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { Flag } from \"../../Flag\";\r\nimport { hasFlag } from \"../../Flags\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource, clearResourceCapCache } from \"../../Resources\";\r\nimport {\r\n  ActionArea,\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { SpellElement } from \"../../spells/Elements\";\r\nimport { registerSpell } from \"../../spells/Spells\";\r\nimport {\r\n  TransformationType,\r\n  applyTransformations,\r\n  explainTransformationsText,\r\n  registerTransformation,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Building, BuildingSpell } from \"../Building\";\r\nimport {\r\n  BuildingAmountListeners,\r\n  Buildings,\r\n  getBuildingAmount,\r\n} from \"../Buildings\";\r\n\r\nclass Monstruarium extends Building {\r\n  getId(): string {\r\n    return \"monstruarium\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Monstruarium\");\r\n  }\r\n\r\n  perBuildingCapTags = [\r\n    TransformationTags.PerBuildingCap,\r\n    Resource.Monstium,\r\n    this.getId(),\r\n  ];\r\n\r\n  getPerStorageBonusCap(state: GameState): number {\r\n    return applyTransformations(this.perBuildingCapTags, state, 3000, {\r\n      resource: Resource.Monstium,\r\n    });\r\n  }\r\n\r\n  explanationParams = memoize(() => ({\r\n    resource: Resource.Monstium,\r\n    unit: t(\" Max:monstium:\"),\r\n  }));\r\n\r\n  getPerStorageBonusCapExplanation(state: GameState): string {\r\n    return explainTransformationsText(\r\n      this.perBuildingCapTags,\r\n      state,\r\n      3000,\r\n      this.explanationParams(),\r\n    );\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\"A special kind of storage, built specifically for :monstium:.\");\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\"^+{{amount}}^<{{explanation}}> Max:monstium:\", {\r\n      amount: formatNumber(this.getPerStorageBonusCap(state)),\r\n      explanation: this.getPerStorageBonusCapExplanation(state),\r\n    });\r\n  }\r\n\r\n  getBaseLandRequired(): number {\r\n    return 3;\r\n  }\r\n\r\n  canTurnOff(): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const monstruarium = new Monstruarium();\r\n\r\nclass BuildMonstruarium extends BuildingSpell {\r\n  getAreas(): Partial<Record<ActionArea, ActionSubcategory[]>> {\r\n    return { HOME: [ActionSubcategories.STORAGE] };\r\n  }\r\n\r\n  getBuilding(): Monstruarium {\r\n    return monstruarium;\r\n  }\r\n\r\n  shouldNeverHaveDemolishBlockers(): boolean {\r\n    return false;\r\n  }\r\n\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return { PoisonEssence: 6000, WaterEssence: 4000, EarthEssence: 4000 };\r\n  }\r\n\r\n  getBaseResourceScale(): Partial<Record<Resource, number>> {\r\n    return {\r\n      PoisonEssence: 1.4,\r\n      WaterEssence: 1.4,\r\n      EarthEssence: 1.4,\r\n    };\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return hasFlag(state, Flag.MonstruariumsUnlocked);\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {};\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Poison;\r\n  }\r\n}\r\n\r\nexport const buildMonstruarium = new BuildMonstruarium();\r\n\r\nexport function loadMonstruarium() {\r\n  Buildings.register(monstruarium);\r\n  registerSpell(buildMonstruarium);\r\n\r\n  registerTransformation(\r\n    [[TransformationTags.Cap, Resource.Monstium]],\r\n    \"monstruariumMonstium\",\r\n    t(\"Monstruarium\"),\r\n    TransformationType.Addition,\r\n    (state, params) => {\r\n      return (\r\n        getBuildingAmount(state, monstruarium) *\r\n        monstruarium.getPerStorageBonusCap(state)\r\n      );\r\n    },\r\n  );\r\n\r\n  BuildingAmountListeners.register((state, building) => {\r\n    if (building == monstruarium) {\r\n      state = clearResourceCapCache(state);\r\n    }\r\n    return state;\r\n  }, monstruarium.getId());\r\n}\r\n","import { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport { Enhancement } from \"../Enhancement\";\r\n\r\nclass TreasureChests extends Enhancement {\r\n  getId(): string {\r\n    return \"treasureChests\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"Safes\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_STORAGE;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 400,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 1,\r\n    };\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Discover a new type of furniture, that allows safeguarding of a large amount of :coins:.\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t('Unlock furniture \"Safe\"');\r\n  }\r\n}\r\n\r\nconst treasureChests = new TreasureChests();\r\n\r\nexport { treasureChests };\r\n","import memoize from \"sonic-memoize\";\r\nimport { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource, clearResourceCapCache } from \"../../Resources\";\r\nimport {\r\n  ActionArea,\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { treasureChests } from \"../../enhancement/other/TreasureChests\";\r\nimport { SpellElement } from \"../../spells/Elements\";\r\nimport { registerSpell } from \"../../spells/Spells\";\r\nimport {\r\n  TransformationType,\r\n  applyTransformations,\r\n  explainTransformationsText,\r\n  registerTransformation,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Building, BuildingSpell } from \"../Building\";\r\nimport {\r\n  BuildingAmountListeners,\r\n  Buildings,\r\n  getBuildingAmount,\r\n} from \"../Buildings\";\r\n\r\nclass TreasureChest extends Building {\r\n  getId(): string {\r\n    return \"treasureChest\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Safe\");\r\n  }\r\n\r\n  perBuildingCapTags = [\r\n    TransformationTags.PerBuildingCap,\r\n    Resource.Coins,\r\n    this.getId(),\r\n  ];\r\n\r\n  getPerStorageBonusCap(state: GameState): number {\r\n    return applyTransformations(this.perBuildingCapTags, state, 70000, {\r\n      resource: Resource.Coins,\r\n    });\r\n  }\r\n\r\n  perBuildingCapParams = memoize(() => ({\r\n    resource: Resource.Coins,\r\n    unit: t(\" Max:coins:\"),\r\n  }));\r\n\r\n  getPerStorageBonusCapExplanation(state: GameState): string {\r\n    return explainTransformationsText(\r\n      this.perBuildingCapTags,\r\n      state,\r\n      70000,\r\n      this.perBuildingCapParams(),\r\n    );\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\"A large safe. Allows you to store large amounts of :coins:.\");\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\"^+{{amount}}^<{{explanation}}> Max:coins:\", {\r\n      amount: formatNumber(this.getPerStorageBonusCap(state)),\r\n      explanation: this.getPerStorageBonusCapExplanation(state),\r\n    });\r\n  }\r\n\r\n  getBaseLandRequired(): number {\r\n    return 4;\r\n  }\r\n\r\n  canTurnOff(): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nconst treasureChest = new TreasureChest();\r\n\r\nclass BuildTreasureChest extends BuildingSpell {\r\n  getAreas(): Partial<Record<ActionArea, ActionSubcategory[]>> {\r\n    return { HOME: [ActionSubcategories.STORAGE] };\r\n  }\r\n\r\n  getBuilding(): TreasureChest {\r\n    return treasureChest;\r\n  }\r\n\r\n  shouldNeverHaveDemolishBlockers(): boolean {\r\n    return false;\r\n  }\r\n\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return { EarthEssence: 4000, FireEssence: 2000 };\r\n  }\r\n\r\n  getBaseResourceScale(): Partial<Record<Resource, number>> {\r\n    return {\r\n      EarthEssence: 1.4,\r\n      FireEssence: 1.4,\r\n    };\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return treasureChests.isPurchased(state) && super.isVisible(state);\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {};\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Earth;\r\n  }\r\n}\r\n\r\nconst buildTreasureChest = new BuildTreasureChest();\r\n\r\nexport function loadTreasureChest() {\r\n  Buildings.register(treasureChest);\r\n  registerSpell(buildTreasureChest);\r\n\r\n  registerTransformation(\r\n    [[TransformationTags.Cap, Resource.Coins]],\r\n    \"treasureChestCoins\",\r\n    t(\"Safe\"),\r\n    TransformationType.Addition,\r\n    (state, params) => {\r\n      return (\r\n        getBuildingAmount(state, treasureChest) *\r\n        treasureChest.getPerStorageBonusCap(state)\r\n      );\r\n    },\r\n  );\r\n\r\n  BuildingAmountListeners.register((state, building) => {\r\n    if (building == treasureChest) {\r\n      state = clearResourceCapCache(state);\r\n    }\r\n    return state;\r\n  }, treasureChest.getId());\r\n}\r\n\r\nexport {\r\n  buildTreasureChest as BuildTreasureChest,\r\n  treasureChest as TreasureChest,\r\n};\r\n","import { t } from \"../../utils/I18n\";\r\nimport {\r\n  ActionArea,\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../action/ActionAreas\";\r\nimport { isAutocastUnlocked } from \"../autocast/Autocast\";\r\nimport { GameState } from \"../GameState\";\r\nimport { Resource } from \"../Resources\";\r\nimport { SpellElement } from \"../spells/Elements\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationTags } from \"../transformation/TransformationTags\";\r\nimport { Building, BuildingSpell } from \"./Building\";\r\nimport { getBuildingAmount } from \"./Buildings\";\r\n\r\nclass WizardChamber extends Building {\r\n  getId(): string {\r\n    return \"wizardChamber\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Wizard Chamber\");\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"A specially prepared area of your home that serves as a workstation for a hired Wizard.\",\r\n    );\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\"+1 Wizard\");\r\n  }\r\n\r\n  getBaseLandRequired(): number {\r\n    return 3;\r\n  }\r\n\r\n  canTurnOff(): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nconst wizardChamber = new WizardChamber();\r\n\r\nclass BuildWizardChamber extends BuildingSpell {\r\n  getAreas(): Partial<Record<ActionArea, ActionSubcategory[]>> {\r\n    return { HOME: [ActionSubcategories.OTHER] };\r\n  }\r\n\r\n  getBuilding(): Building {\r\n    return wizardChamber;\r\n  }\r\n\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Coins: 200,\r\n      AirEssence: 120,\r\n      FireEssence: 100,\r\n    };\r\n  }\r\n\r\n  getBaseResourceScale(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Coins: 1.25,\r\n      AirEssence: 1.25,\r\n      FireEssence: 1.25,\r\n    };\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return isAutocastUnlocked(state) && super.isVisible(state);\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {};\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Air;\r\n  }\r\n}\r\n\r\nconst buildWizardChamber = new BuildWizardChamber();\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.WizardAmount]],\r\n  \"wizardChambers\",\r\n  t(\"Wizard Chambers\"),\r\n  TransformationType.Addition,\r\n  (state, params) => getBuildingAmount(state, wizardChamber),\r\n);\r\n\r\nexport {\r\n  buildWizardChamber as BuildWizardChamber,\r\n  wizardChamber as WizardChamber,\r\n};\r\n","import { registerSpell } from \"../spells/Spells\";\r\nimport { Buildings } from \"./Buildings\";\r\nimport { loadEssenceCatalysts } from \"./catalysts/EssenceCatalyst\";\r\nimport { loadMonstiumCatalysts } from \"./catalysts/MonstiumCatalyst\";\r\nimport { BuildManaSpout, ManaSpout } from \"./mana/ManaSpout\";\r\nimport { buildManaSteamer, manaSteamer } from \"./mana/ManaSteamer\";\r\nimport { loadSewageSystem } from \"./production/SewageSystem\";\r\nimport { buildResearcherDesk, researcherDesk } from \"./ResearcherDesk\";\r\nimport { BuildSaleStall, SaleStall } from \"./SaleStall\";\r\nimport { loadEssenceStorages } from \"./storages/EssenceStorage\";\r\nimport { BuildManaShard, ManaShard } from \"./storages/ManaShard\";\r\nimport { loadMonstruarium } from \"./storages/Monstruarium\";\r\nimport { loadTreasureChest } from \"./storages/TreasureChest\";\r\nimport { BuildWizardChamber, WizardChamber } from \"./WizardChamber\";\r\n\r\nexport function loadBuildingsDemo() {\r\n  Buildings.register(ManaSpout);\r\n  registerSpell(BuildManaSpout);\r\n  Buildings.register(ManaShard);\r\n  registerSpell(BuildManaShard);\r\n\r\n  loadEssenceStorages();\r\n  loadEssenceCatalysts();\r\n\r\n  Buildings.register(WizardChamber);\r\n  registerSpell(BuildWizardChamber);\r\n  Buildings.register(SaleStall);\r\n  registerSpell(BuildSaleStall);\r\n  Buildings.register(researcherDesk);\r\n  registerSpell(buildResearcherDesk);\r\n\r\n  loadTreasureChest();\r\n  Buildings.register(manaSteamer);\r\n  registerSpell(buildManaSteamer);\r\n\r\n  loadMonstruarium();\r\n  loadSewageSystem();\r\n  loadMonstiumCatalysts();\r\n}\r\n","import { formatMultiplier } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { ActionEffect } from \"../action/Action\";\r\nimport { AttackTarget } from \"../exploration/AttackTarget\";\r\nimport { CombatStat } from \"../exploration/CombatStats\";\r\nimport { GameState } from \"../GameState\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport { TransformationValueType } from \"../transformation/TransformationTags\";\r\nimport { CombatClass } from \"./CombatClasses\";\r\n\r\nclass Battlemage extends CombatClass {\r\n  getId(): string {\r\n    return \"battlemage\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Battlemage\");\r\n  }\r\n  protected getBaseClassEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      attackAndDefense: {\r\n        value: 0.1,\r\n        valueType: TransformationValueType.Percent,\r\n      },\r\n    };\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Particularly strong physically, a Battlemage has undergone special training to make their body adept at combat, much like a knight - but while still being able to use potent magic.\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getClassEffects(state);\r\n    const explanations = this.getClassEffectExplanations(state);\r\n    return t(\r\n      \"^{{attackMultiplier}}^<{{attackExplanation}}>:attack:, ^{{attackMultiplier}}^<{{attackExplanation}}>:defense:\",\r\n      {\r\n        attackMultiplier: formatMultiplier(1.0 + effects.attackAndDefense),\r\n        attackExplanation: explanations.attackAndDefense,\r\n      },\r\n    );\r\n  }\r\n}\r\n\r\nexport const battlemage = new Battlemage();\r\n\r\nregisterTransformation(\r\n  [\r\n    [AttackTarget.Player, CombatStat.Attack],\r\n    [AttackTarget.Player, CombatStat.Defense],\r\n  ],\r\n  battlemage.getId(),\r\n  battlemage.getDisplayName(),\r\n  TransformationType.Multiplier,\r\n  (state) =>\r\n    battlemage.isActive(state)\r\n      ? 1.0 + battlemage.getClassEffects(state).attackAndDefense\r\n      : 1.0,\r\n);\r\n","import { formatMultiplier } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { ActionEffect } from \"../action/Action\";\r\nimport { GameState } from \"../GameState\";\r\nimport { Storylines } from \"../storylines/Storylines\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../transformation/TransformationTags\";\r\nimport { CombatClass } from \"./CombatClasses\";\r\n\r\nclass Builder extends CombatClass {\r\n  getId(): string {\r\n    return \"builder\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Builder\");\r\n  }\r\n  protected getBaseClassEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      land: {\r\n        value: 0.12,\r\n        valueType: TransformationValueType.Percent,\r\n      },\r\n      buildingCost: {\r\n        value: 1.5,\r\n        valueType: TransformationValueType.Divisor,\r\n      },\r\n    };\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"A wizard that recognizes furniture is the cornerstone to success, and is able to maximize space in their home - to have even more furniture.\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getClassEffects(state);\r\n    const explanations = this.getClassEffectExplanations(state);\r\n    if (Storylines.getByIdNullable(\"blessedLand\")?.isBonusActive?.(state)) {\r\n      return t(\r\n        \"^{{buildingCostMultiplier}}^<{{buildingCostExplanation}}> cost of all furniture\",\r\n        {\r\n          buildingCostMultiplier: formatMultiplier(\r\n            1.0 / (1.0 + effects.buildingCost),\r\n          ),\r\n          buildingCostExplanation: explanations.buildingCost,\r\n        },\r\n      );\r\n    }\r\n    return t(\"^{{landMultiplier}}^<{{landExplanation}}>:land:\", {\r\n      landMultiplier: formatMultiplier(1.0 + effects.land),\r\n      landExplanation: explanations.land,\r\n    });\r\n  }\r\n}\r\n\r\nexport const builder = new Builder();\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.Land, TransformationTags.Cap]],\r\n  builder.getId(),\r\n  builder.getDisplayName(),\r\n  TransformationType.Multiplier,\r\n  (state) =>\r\n    builder.isActive(state) ? 1.0 + builder.getClassEffects(state).land : 1.0,\r\n);\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.Cost, TransformationTags.Building]],\r\n  builder.getId() + \"buildingCost\",\r\n  builder.getDisplayName(),\r\n  TransformationType.Multiplier,\r\n  (state) =>\r\n    builder.isActive(state) &&\r\n    Storylines.getByIdNullable(\"blessedLand\")?.isBonusActive?.(state)\r\n      ? 1.0 / (1.0 + builder.getClassEffects(state).buildingCost)\r\n      : 1.0,\r\n);\r\n","import { formatMultiplier } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { ActionEffect } from \"../action/Action\";\r\nimport { GameState } from \"../GameState\";\r\nimport { Resource } from \"../Resources\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../transformation/TransformationTags\";\r\nimport { CombatClass } from \"./CombatClasses\";\r\n\r\nclass Spellslinger extends CombatClass {\r\n  getId(): string {\r\n    return \"spellslinger\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Spellslinger\");\r\n  }\r\n  protected getBaseClassEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      mana: {\r\n        value: 0.3,\r\n        valueType: TransformationValueType.Percent,\r\n      },\r\n    };\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"A wizard that simply loves to cast spells. Spells require Mana - a Spellslinger has mastered the ability to produce it.\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getClassEffects(state);\r\n    const explanations = this.getClassEffectExplanations(state);\r\n    return t(\"^{{mana}}^<{{manaExplanation}}> :mana: production\", {\r\n      mana: formatMultiplier(1.0 + effects.mana),\r\n      manaExplanation: explanations.mana,\r\n    });\r\n  }\r\n}\r\n\r\nexport const spellslinger = new Spellslinger();\r\n\r\nregisterTransformation(\r\n  [[Resource.Mana, TransformationTags.Production]],\r\n  spellslinger.getId(),\r\n  spellslinger.getDisplayName(),\r\n  TransformationType.Multiplier,\r\n  (state) =>\r\n    spellslinger.isActive(state)\r\n      ? 1.0 + spellslinger.getClassEffects(state).mana\r\n      : 1.0,\r\n);\r\n","import { battlemage } from \"./Battlemage\";\r\nimport { builder } from \"./Builder\";\r\nimport { CombatClasses } from \"./CombatClasses\";\r\nimport { loadCombatClassesUnlocker } from \"./CombatClassesUnlocker\";\r\nimport { spellslinger } from \"./Spellslinger\";\r\n\r\nexport function loadCombatClassesDemo() {\r\n  CombatClasses.register(battlemage);\r\n  CombatClasses.register(spellslinger);\r\n  CombatClasses.register(builder);\r\n\r\n  loadCombatClassesUnlocker();\r\n}\r\n","import { t } from \"../../utils/I18n\";\r\nimport { buildEvent } from \"../events/EventMessageBuilder\";\r\nimport { triggerEvent } from \"../events/Events\";\r\nimport { EventTag } from \"../events/GameEvent\";\r\nimport { Flag } from \"../Flag\";\r\nimport { SetFlagListeners } from \"../Flags\";\r\nimport { Storylines } from \"../storylines/Storylines\";\r\nimport { CombatClassesStoryline } from \"./CombatClassesStoryline\";\r\n\r\nexport function loadCombatClassesUnlocker() {\r\n  Storylines.register(CombatClassesStoryline);\r\n  const combatClassesUnlockEventBuilder = buildEvent(\r\n    \"typesOfWizards\",\r\n    t(\"(Storyline) Types of Wizards\"),\r\n    [EventTag.STORYLINE],\r\n  ).setStorylineIds(CombatClassesStoryline.getId());\r\n\r\n  combatClassesUnlockEventBuilder\r\n    .message(\r\n      t(`You exit the Tower of Training, eager to get back home to apply what you have just learned, but you are stopped in your tracks as soon as you step out of the door. \"I'm sorry - there is one last thing.\" The familiar voice of the Head Instructor Giselle comes from behind. In her hand is a book. The title: *\"Classes\"*\r\n    \r\n\"This was always meant to be the reward for finishing the training. It is a book on various wizard specializations. It almost slipped my mind, because I got carried away with the explanation about Enhancements.\"`),\r\n    )\r\n    .option(\r\n      t(\"Continue\"),\r\n      {\r\n        transform: (state) => {\r\n          state = CombatClassesStoryline.complete(state);\r\n          state = CombatClassesStoryline.activateBonus(state);\r\n          return state;\r\n        },\r\n      },\r\n      \"end\",\r\n    );\r\n  combatClassesUnlockEventBuilder\r\n    .message(\r\n      t(`You accept the book, and you quickly skim through it. There are a few pictures: a Wizard wielding a large sword and a shield, another shooting a Fireball, yet another one building home furniture. And big, long pages of explanation for each of them, it appears.\r\n      \r\nYou are not sure if you will have time to actually look at this or learn much out of it. But you think of keeping the book in your library anyhow...\r\n\r\n**You have completed the \"Types of Wizards\" Storyline and permanently unlocked the ability to select a Class after retiring! Your choice of Class at the beginning of the game gives you a powerful bonus for the duration of that retirement; you can choose a new Class by retiring again.**`),\r\n    )\r\n    .tag(\"end\");\r\n\r\n  const combatClassesUnlockEvent = combatClassesUnlockEventBuilder.build();\r\n\r\n  SetFlagListeners.register((state, flag) => {\r\n    if (\r\n      flag == Flag.EnhancementsUnlocked &&\r\n      !combatClassesUnlockEvent.hasTriggered(state) &&\r\n      !CombatClassesStoryline.isCompleted(state)\r\n    ) {\r\n      state = triggerEvent(combatClassesUnlockEvent)(state);\r\n    }\r\n    return state;\r\n  });\r\n}\r\n","import { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Enhancement } from \"../Enhancement\";\r\n\r\nclass EfficientExploration extends Enhancement {\r\n  getId(): string {\r\n    return \"efficientExploration\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"Efficient Exploration\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_EXPLORATION;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 200,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 1,\r\n    };\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\"Refine your scanning techniques in order to explore faster.\");\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\"-25% Exploration delay\");\r\n  }\r\n}\r\n\r\nexport const efficientExploration = new EfficientExploration();\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.ExplorationDelay]],\r\n  efficientExploration.getId(),\r\n  efficientExploration.getBaseName(),\r\n  TransformationType.Multiplier,\r\n  (state) => (efficientExploration.isPurchased(state) ? 0.75 : 1.0),\r\n);\r\n","import { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Enhancement } from \"../Enhancement\";\r\nimport { efficientExploration } from \"./EfficientExploration\";\r\n\r\nclass Compass extends Enhancement {\r\n  getId(): string {\r\n    return \"compass\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"Compass\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_EXPLORATION;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 4500,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 5,\r\n    };\r\n  }\r\n  getRequiredEnhancements(): Enhancement[] {\r\n    return [efficientExploration];\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"A compass while exploring means you will find your way much quicker and get lost much less.\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\"-30% Exploration delay\");\r\n  }\r\n}\r\n\r\nexport const compass = new Compass();\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.ExplorationDelay]],\r\n  compass.getId(),\r\n  compass.getBaseName(),\r\n  TransformationType.Multiplier,\r\n  (state) => (compass.isPurchased(state) ? 0.7 : 1.0),\r\n);\r\n","import { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { AttackTarget } from \"../../exploration/AttackTarget\";\r\nimport {\r\n  clearCombatStatCache,\r\n  CombatStat,\r\n} from \"../../exploration/CombatStats\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport { Enhancement } from \"../Enhancement\";\r\nimport { EnhancementPurchaseListeners } from \"../EnhancementPurchaseListeners\";\r\n\r\nclass HealthBoost extends Enhancement {\r\n  getId(): string {\r\n    return \"healthBoost\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"Health Boost\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_EXPLORATION;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 250,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 2,\r\n    };\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\"Enhance your body, so you can resist more blows.\");\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\"+20 Max:hp:\");\r\n  }\r\n}\r\n\r\nexport const healthBoost = new HealthBoost();\r\n\r\nregisterTransformation(\r\n  [[CombatStat.MaxHP, AttackTarget.Player]],\r\n  healthBoost.getId(),\r\n  healthBoost.getBaseName(),\r\n  TransformationType.Addition,\r\n  (state) => (healthBoost.isPurchased(state) ? 20 : 0),\r\n);\r\n\r\nEnhancementPurchaseListeners.register((state, enhancement) => {\r\n  if (enhancement == healthBoost) {\r\n    state = clearCombatStatCache(state, AttackTarget.Player);\r\n  }\r\n  return state;\r\n}, healthBoost.getId());\r\n","import { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { AttackTarget } from \"../../exploration/AttackTarget\";\r\nimport {\r\n  clearCombatStatCache,\r\n  CombatStat,\r\n} from \"../../exploration/CombatStats\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport { Enhancement } from \"../Enhancement\";\r\nimport { EnhancementPurchaseListeners } from \"../EnhancementPurchaseListeners\";\r\nimport { healthBoost } from \"./HealthBoost\";\r\n\r\nclass DoubleHealthBoost extends Enhancement {\r\n  getId(): string {\r\n    return \"doubleHealthBoost\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"Double Health Boost\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_EXPLORATION;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 2500,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 8,\r\n    };\r\n  }\r\n  getRequiredEnhancements(): Enhancement[] {\r\n    return [healthBoost];\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Enhance your body a second time, so you can resist even more blows.\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\"+40 Max:hp:\");\r\n  }\r\n}\r\n\r\nexport const doubleHealthBoost = new DoubleHealthBoost();\r\n\r\nregisterTransformation(\r\n  [[CombatStat.MaxHP, AttackTarget.Player]],\r\n  doubleHealthBoost.getId(),\r\n  doubleHealthBoost.getBaseName(),\r\n  TransformationType.Addition,\r\n  (state) => (doubleHealthBoost.isPurchased(state) ? 40 : 0),\r\n);\r\n\r\nEnhancementPurchaseListeners.register((state, enhancement) => {\r\n  if (enhancement == doubleHealthBoost) {\r\n    state = clearCombatStatCache(state, AttackTarget.Player);\r\n  }\r\n  return state;\r\n}, doubleHealthBoost.getId());\r\n","import { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Enhancement } from \"../Enhancement\";\r\nimport { healthBoost } from \"./HealthBoost\";\r\n\r\nclass EnlargedPouch extends Enhancement {\r\n  getId(): string {\r\n    return \"enlargedPouch\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"Enlarged Pouch\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_EXPLORATION;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 600,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 6,\r\n    };\r\n  }\r\n  getRequiredEnhancements(): Enhancement[] {\r\n    return [healthBoost];\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Upgrade the size of your pouch, so you can use more items in battle.\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\"+1 Pouch size\");\r\n  }\r\n}\r\n\r\nexport const enlargedPouch = new EnlargedPouch();\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.PouchSize]],\r\n  enlargedPouch.getId(),\r\n  enlargedPouch.getBaseName(),\r\n  TransformationType.Addition,\r\n  (state) => (enlargedPouch.isPurchased(state) ? 1 : 0),\r\n);\r\n","import { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { AttackTarget } from \"../../exploration/AttackTarget\";\r\nimport {\r\n  clearCombatStatCache,\r\n  CombatStat,\r\n} from \"../../exploration/CombatStats\";\r\nimport { ExplorationStatus } from \"../../exploration/ExplorationStatus\";\r\nimport { getExplorationStatus } from \"../../exploration/ExplorationUtils\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport { Enhancement } from \"../Enhancement\";\r\nimport { EnhancementPurchaseListeners } from \"../EnhancementPurchaseListeners\";\r\nimport { healthBoost } from \"./HealthBoost\";\r\n\r\nclass FirstAid extends Enhancement {\r\n  getId(): string {\r\n    return \"firstAid\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"First Aid\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_EXPLORATION;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 450,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 5,\r\n    };\r\n  }\r\n  getRequiredEnhancements(): Enhancement[] {\r\n    return [healthBoost];\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Develop first aid techniques which allow you to heal wounds much faster when not fighting.\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\"+50% :hp: recovery speed when outside of battle\");\r\n  }\r\n}\r\n\r\nexport const firstAid = new FirstAid();\r\n\r\nregisterTransformation(\r\n  [[CombatStat.HPRegen, AttackTarget.Player]],\r\n  firstAid.getId(),\r\n  firstAid.getBaseName(),\r\n  TransformationType.Multiplier,\r\n  (state) =>\r\n    firstAid.isPurchased(state) &&\r\n    getExplorationStatus(state) != ExplorationStatus.Combat\r\n      ? 1.5\r\n      : 1.0,\r\n);\r\n\r\nEnhancementPurchaseListeners.register((state, enhancement) => {\r\n  if (enhancement == firstAid) {\r\n    state = clearCombatStatCache(state, AttackTarget.Player);\r\n  }\r\n  return state;\r\n}, firstAid.getId());\r\n","import { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Enhancement } from \"../Enhancement\";\r\nimport { enlargedPouch } from \"./EnlargedPouch\";\r\n\r\nclass ProfessionalPouch extends Enhancement {\r\n  getId(): string {\r\n    return \"professionalPouch\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"Professional Pouch\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_EXPLORATION;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 3000,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 12,\r\n    };\r\n  }\r\n  getRequiredEnhancements(): Enhancement[] {\r\n    return [enlargedPouch];\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Fancy yourself a professional wizard? You heard they needed a pouch to match...\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\"+1 Pouch size\");\r\n  }\r\n}\r\n\r\nexport const professionalPouch = new ProfessionalPouch();\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.PouchSize]],\r\n  professionalPouch.getId(),\r\n  professionalPouch.getBaseName(),\r\n  TransformationType.Addition,\r\n  (state) => (professionalPouch.isPurchased(state) ? 1 : 0),\r\n);\r\n","import { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Enhancement } from \"../Enhancement\";\r\nimport { professionalPouch } from \"./ProfessionalPouch\";\r\n\r\nclass GiantPouch extends Enhancement {\r\n  getId(): string {\r\n    return \"giantPouch\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"Giant Pouch\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_EXPLORATION;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 25000,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 30,\r\n    };\r\n  }\r\n  getRequiredEnhancements(): Enhancement[] {\r\n    return [professionalPouch];\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Enhance your pouch even further, to hold yet another extra item.\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\"+1 Pouch size\");\r\n  }\r\n}\r\n\r\nexport const giantPouch = new GiantPouch();\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.PouchSize]],\r\n  giantPouch.getId(),\r\n  giantPouch.getBaseName(),\r\n  TransformationType.Addition,\r\n  (state) => (giantPouch.isPurchased(state) ? 1 : 0),\r\n);\r\n","import { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { HealthPotion } from \"../../items/equipment/pouch/HealthPotion\";\r\nimport { Resource } from \"../../Resources\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Enhancement } from \"../Enhancement\";\r\nimport { healthBoost } from \"./HealthBoost\";\r\n\r\nclass HealthPotionEffectivity extends Enhancement {\r\n  getId(): string {\r\n    return \"healthPotionEffectivity\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"Health Potion Effectivity\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_EXPLORATION;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 2000,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 10,\r\n    };\r\n  }\r\n  getRequiredEnhancements(): Enhancement[] {\r\n    return [healthBoost];\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Enhance how you gain effects from Health Potions, to increase their effectivity.\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\"Health Potions can be used 1 extra time per combat\");\r\n  }\r\n}\r\n\r\nexport const healthPotionEffectivity = new HealthPotionEffectivity();\r\n\r\nregisterTransformation(\r\n  [[HealthPotion.getId(), TransformationTags.PouchItemUses]],\r\n  healthPotionEffectivity.getId(),\r\n  healthPotionEffectivity.getBaseName(),\r\n  TransformationType.Addition,\r\n  (state) => (healthPotionEffectivity.isPurchased(state) ? 1 : 0),\r\n);\r\n","import { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { AttackTarget } from \"../../exploration/AttackTarget\";\r\nimport {\r\n  clearCombatStatCache,\r\n  CombatStat,\r\n} from \"../../exploration/CombatStats\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport { Enhancement } from \"../Enhancement\";\r\nimport { EnhancementPurchaseListeners } from \"../EnhancementPurchaseListeners\";\r\nimport { doubleHealthBoost } from \"./DoubleHealthBoost\";\r\n\r\nclass TripleHealthBoost extends Enhancement {\r\n  getId(): string {\r\n    return \"tripleHealthBoost\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"Triple Health Boost\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_EXPLORATION;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 21000,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 18,\r\n    };\r\n  }\r\n  getRequiredEnhancements(): Enhancement[] {\r\n    return [doubleHealthBoost];\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Enhance your body a third time. Your survivability has come a long way.\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\"+70 Max:hp:\");\r\n  }\r\n}\r\n\r\nexport const tripleHealthBoost = new TripleHealthBoost();\r\n\r\nregisterTransformation(\r\n  [[CombatStat.MaxHP, AttackTarget.Player]],\r\n  tripleHealthBoost.getId(),\r\n  tripleHealthBoost.getBaseName(),\r\n  TransformationType.Addition,\r\n  (state) => (tripleHealthBoost.isPurchased(state) ? 70 : 0),\r\n);\r\n\r\nEnhancementPurchaseListeners.register((state, enhancement) => {\r\n  if (enhancement == tripleHealthBoost) {\r\n    state = clearCombatStatCache(state, AttackTarget.Player);\r\n  }\r\n  return state;\r\n}, tripleHealthBoost.getId());\r\n","import { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { clearLandCache, getTotalLand } from \"../../buildings/Buildings\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { clearResourceCapCache, Resource } from \"../../Resources\";\r\nimport { Storylines } from \"../../storylines/Storylines\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Enhancement } from \"../Enhancement\";\r\nimport { EnhancementPurchaseListeners } from \"../EnhancementPurchaseListeners\";\r\n\r\nclass FurnitureOrganization extends Enhancement {\r\n  getId(): string {\r\n    return \"furnitureOrganization\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"Furniture Organization\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_LAND;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 500,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 3,\r\n    };\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Sort furniture in a neater way at your home to improve the amount of space available.\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\"+10% (+{{absoluteAmount}}):land:\", {\r\n      absoluteAmount: formatNumber(getTotalLand(state) * 0.1),\r\n    });\r\n  }\r\n  isVisible(state: GameState): boolean {\r\n    return (\r\n      !Storylines.getByIdNullable(\"blessedLand\")?.isBonusActive?.(state) &&\r\n      super.isVisible(state)\r\n    );\r\n  }\r\n}\r\n\r\nconst furnitureOrganization = new FurnitureOrganization();\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.Land, TransformationTags.Cap]],\r\n  furnitureOrganization.getId(),\r\n  furnitureOrganization.getBaseName(),\r\n  TransformationType.Multiplier,\r\n  (state) => (furnitureOrganization.isPurchased(state) ? 1.1 : 1.0),\r\n);\r\n\r\nEnhancementPurchaseListeners.register((state, enhancement) => {\r\n  if (enhancement == furnitureOrganization) {\r\n    state = clearResourceCapCache(state);\r\n    state = clearLandCache(state);\r\n  }\r\n  return state;\r\n}, furnitureOrganization.getId());\r\n\r\nexport { furnitureOrganization };\r\n","import { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport expandHome from \"../../action/actions/ExpandHome\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport { Storylines } from \"../../storylines/Storylines\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Enhancement } from \"../Enhancement\";\r\n\r\nclass LandTreaty extends Enhancement {\r\n  getId(): string {\r\n    return \"landTreaty\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"Land Treaty\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_LAND;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 900,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 7,\r\n    };\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Make a deal with the town to be able to purchase land for cheaper.\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\"Reduces the cost to expand your home\");\r\n  }\r\n  isVisible(state: GameState): boolean {\r\n    return (\r\n      !Storylines.getByIdNullable(\"blessedLand\")?.isBonusActive?.(state) &&\r\n      super.isVisible(state)\r\n    );\r\n  }\r\n}\r\n\r\nconst landTreaty = new LandTreaty();\r\n\r\nregisterTransformation(\r\n  [[expandHome.getId(), TransformationTags.CostScale]],\r\n  landTreaty.getId(),\r\n  landTreaty.getBaseName(),\r\n  TransformationType.Multiplier,\r\n  (state) => (landTreaty.isPurchased(state) ? 0.7 : 1.0),\r\n);\r\n\r\nexport { landTreaty };\r\n","import { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport expandHome from \"../../action/actions/ExpandHome\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport { Storylines } from \"../../storylines/Storylines\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Enhancement } from \"../Enhancement\";\r\nimport { landTreaty } from \"./LandTreaty\";\r\n\r\nclass HouseExpansionContract extends Enhancement {\r\n  getId(): string {\r\n    return \"houseExpansionContract\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"House Expansion Contract\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_LAND;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 4000,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 15,\r\n    };\r\n  }\r\n  getRequiredEnhancements(): Enhancement[] {\r\n    return [landTreaty];\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Negotiate a detailed contract to reduce barriers when enlargening your residence.\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\"Further reduces the cost to expand your home\");\r\n  }\r\n  isVisible(state: GameState): boolean {\r\n    return (\r\n      !Storylines.getByIdNullable(\"blessedLand\")?.isBonusActive?.(state) &&\r\n      super.isVisible(state)\r\n    );\r\n  }\r\n}\r\n\r\nexport const houseExpansionContract = new HouseExpansionContract();\r\n\r\nregisterTransformation(\r\n  [[expandHome.getId(), TransformationTags.CostScale]],\r\n  houseExpansionContract.getId(),\r\n  houseExpansionContract.getBaseName(),\r\n  TransformationType.Multiplier,\r\n  (state) => (houseExpansionContract.isPurchased(state) ? 0.75 : 1.0),\r\n);\r\n","import { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport { clearResearcherExpCache } from \"../../study/Study\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Enhancement } from \"../Enhancement\";\r\nimport { EnhancementPurchaseListeners } from \"../EnhancementPurchaseListeners\";\r\n\r\nclass UnderstandingOfMagic extends Enhancement {\r\n  getId(): string {\r\n    return \"understandingOfMagic\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"Understanding of Magic\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_OTHER;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 200,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 4,\r\n    };\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Study how magic works in order to better be able to understand how to use it.\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\"+100% Element exp earned from Studying\");\r\n  }\r\n}\r\n\r\nconst understandingOfMagic = new UnderstandingOfMagic();\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.ExpGain, TransformationTags.Study]],\r\n  understandingOfMagic.getId(),\r\n  understandingOfMagic.getBaseName(),\r\n  TransformationType.Multiplier,\r\n  (state) => (understandingOfMagic.isPurchased(state) ? 2.0 : 1.0),\r\n);\r\n\r\nEnhancementPurchaseListeners.register((state, enhancement) => {\r\n  if (enhancement == understandingOfMagic) {\r\n    state = clearResearcherExpCache(state);\r\n  }\r\n  return state;\r\n}, understandingOfMagic.getId());\r\n\r\nexport { understandingOfMagic };\r\n","import { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport { clearResearcherExpCache } from \"../../study/Study\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Enhancement } from \"../Enhancement\";\r\nimport { EnhancementPurchaseListeners } from \"../EnhancementPurchaseListeners\";\r\nimport { understandingOfMagic } from \"./UnderstandingOfMagic\";\r\n\r\nclass DeeperUnderstandingOfMagic extends Enhancement {\r\n  getId(): string {\r\n    return \"deeperUnderstandingOfMagic\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"Deeper Understanding of Magic\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_OTHER;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 3000,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 8,\r\n    };\r\n  }\r\n  getRequiredEnhancements(): Enhancement[] {\r\n    return [understandingOfMagic];\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Study how magic works even deeper, to be able to discover new applications more efficiently.\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\"+60% Element exp earned from Studying\");\r\n  }\r\n}\r\n\r\nexport const deeperUnderstandingOfMagic = new DeeperUnderstandingOfMagic();\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.ExpGain, TransformationTags.Study]],\r\n  deeperUnderstandingOfMagic.getId(),\r\n  deeperUnderstandingOfMagic.getBaseName(),\r\n  TransformationType.Multiplier,\r\n  (state) => (deeperUnderstandingOfMagic.isPurchased(state) ? 1.6 : 1.0),\r\n);\r\n\r\nEnhancementPurchaseListeners.register((state, enhancement) => {\r\n  if (enhancement == deeperUnderstandingOfMagic) {\r\n    state = clearResearcherExpCache(state);\r\n  }\r\n  return state;\r\n}, deeperUnderstandingOfMagic.getId());\r\n","import { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Enhancement } from \"../Enhancement\";\r\n\r\nclass GlitteringStalls extends Enhancement {\r\n  getId(): string {\r\n    return \"glitteringStalls\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"Glittering Stalls\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_OTHER;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 300,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 2,\r\n    };\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Enhance your Market Stalls so that the goods sold appear to be of higher quality than usual.\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\"+100%:coins: obtained from items sold from Market Stalls\");\r\n  }\r\n}\r\n\r\nexport const glitteringStalls = new GlitteringStalls();\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.SaleStallRevenue]],\r\n  glitteringStalls.getId(),\r\n  glitteringStalls.getBaseName(),\r\n  TransformationType.Multiplier,\r\n  (state) => (glitteringStalls.isPurchased(state) ? 2.0 : 1.0),\r\n);\r\n","import { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { buildResearcherDesk } from \"../../buildings/ResearcherDesk\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Enhancement } from \"../Enhancement\";\r\nimport { understandingOfMagic } from \"./UnderstandingOfMagic\";\r\n\r\nclass HiringSpree extends Enhancement {\r\n  getId(): string {\r\n    return \"hiringSpree\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"Hiring Spree\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_OTHER;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 1500,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 12,\r\n    };\r\n  }\r\n  getRequiredEnhancements(): Enhancement[] {\r\n    return [understandingOfMagic];\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Publish information about how you are recruiting researchers to the town board. You are hiring!\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\"Reduces the cost needed to build Researcher Desks\");\r\n  }\r\n}\r\n\r\nexport const hiringSpree = new HiringSpree();\r\n\r\nregisterTransformation(\r\n  [[buildResearcherDesk.getId(), TransformationTags.CostScale]],\r\n  hiringSpree.getId(),\r\n  hiringSpree.getBaseName(),\r\n  TransformationType.Multiplier,\r\n  (state) => (hiringSpree.isPurchased(state) ? 0.75 : 1.0),\r\n);\r\n","import { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { BuildWizardChamber } from \"../../buildings/WizardChamber\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Enhancement } from \"../Enhancement\";\r\n\r\nclass ScalableChambers extends Enhancement {\r\n  getId(): string {\r\n    return \"scalableChambers\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"Scalable Chambers\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_OTHER;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 400,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 5,\r\n    };\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Tweak the way you build Wizard Chambers, to make them more affordable.\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\"Reduces the cost to build Wizard Chambers\");\r\n  }\r\n}\r\n\r\nexport const scalableChambers = new ScalableChambers();\r\n\r\nregisterTransformation(\r\n  [[BuildWizardChamber.getId(), TransformationTags.CostScale]],\r\n  scalableChambers.getId(),\r\n  scalableChambers.getBaseName(),\r\n  TransformationType.Multiplier,\r\n  (state) => (scalableChambers.isPurchased(state) ? 0.7 : 1.0),\r\n);\r\n","import { valuesOf } from \"../../../utils/CoreUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport { SpellElement } from \"../../spells/Elements\";\r\nimport {\r\n  clearAutocastPointsCache,\r\n  clearManaCostCache,\r\n} from \"../../spells/Spells\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Enhancement } from \"../Enhancement\";\r\nimport { EnhancementPurchaseListeners } from \"../EnhancementPurchaseListeners\";\r\n\r\nclass ShardDiligence extends Enhancement {\r\n  getId(): string {\r\n    return \"shardDiligence\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"Shard Diligence\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_OTHER;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 400,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 4,\r\n    };\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Make your hired wizards (and yourself) more diligent and effective when transmuting elemental Shards.\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\r\n      \"Elemental Shard Transmutation spells require -75%:mana: and -90%:wizardpower:\",\r\n    );\r\n  }\r\n}\r\n\r\nexport const shardDiligence = new ShardDiligence();\r\n\r\nregisterTransformation(\r\n  [\r\n    ...valuesOf(SpellElement).map((element) => [\r\n      TransformationTags.ItemCost,\r\n      Resource.Mana,\r\n      \"transmute-elementalShard\" + element,\r\n    ]),\r\n  ],\r\n  shardDiligence.getId(),\r\n  shardDiligence.getBaseName(),\r\n  TransformationType.Multiplier,\r\n  (state) => (shardDiligence.isPurchased(state) ? 0.25 : 1.0),\r\n);\r\nregisterTransformation(\r\n  [\r\n    ...valuesOf(SpellElement).map((element) => [\r\n      TransformationTags.AutocastPointsConsumption,\r\n      \"transmute-elementalShard\" + element,\r\n    ]),\r\n  ],\r\n  shardDiligence.getId() + \"autocast\",\r\n  shardDiligence.getBaseName(),\r\n  TransformationType.Multiplier,\r\n  (state) => (shardDiligence.isPurchased(state) ? 0.1 : 1.0),\r\n);\r\n\r\nEnhancementPurchaseListeners.register((state, enhancement) => {\r\n  if (enhancement == shardDiligence) {\r\n    state = clearAutocastPointsCache(state);\r\n    state = clearManaCostCache(state);\r\n  }\r\n  return state;\r\n}, shardDiligence.getId());\r\n","import { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { sewageSystem } from \"../../buildings/production/SewageSystem\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport { clearCalculatedIncomeCache } from \"../../timetick/IncomeOverTime\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Enhancement } from \"../Enhancement\";\r\nimport { EnhancementPurchaseListeners } from \"../EnhancementPurchaseListeners\";\r\nimport { sewageSystemEnhancement } from \"../other/SewageSystem\";\r\n\r\nclass ImprovedPurification extends Enhancement {\r\n  getId(): string {\r\n    return \"improvedPurification\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"Improved Purification\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_PRODUCTION;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 15000,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 20,\r\n    };\r\n  }\r\n  getRequiredEnhancements(): Enhancement[] {\r\n    return [sewageSystemEnhancement];\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Rearrange the Sewage System workings, so that they can produce much more Essence, although at a much lower effectivity.\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\r\n      \"2.5x essence production; 5x :poisonessence: consumption of Sewage System\",\r\n    );\r\n  }\r\n}\r\n\r\nconst improvedPurification = new ImprovedPurification();\r\n\r\nregisterTransformation(\r\n  [[sewageSystem.getId(), TransformationTags.Production]],\r\n  improvedPurification.getId(),\r\n  improvedPurification.getBaseName(),\r\n  TransformationType.Multiplier,\r\n  (state) => (improvedPurification.isPurchased(state) ? 2.5 : 1.0),\r\n);\r\n\r\nregisterTransformation(\r\n  [[sewageSystem.getId(), TransformationTags.Consumption]],\r\n  improvedPurification.getId() + \"consumption\",\r\n  improvedPurification.getBaseName(),\r\n  TransformationType.Multiplier,\r\n  (state) => (improvedPurification.isPurchased(state) ? 5.0 : 1.0),\r\n);\r\n\r\nEnhancementPurchaseListeners.register((state, enhancement) => {\r\n  if (enhancement == improvedPurification) {\r\n    state = clearCalculatedIncomeCache(state);\r\n  }\r\n  return state;\r\n});\r\n\r\nexport { improvedPurification };\r\n","import { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { manaSteamer } from \"../../buildings/mana/ManaSteamer\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport { clearCalculatedIncomeCache } from \"../../timetick/IncomeOverTime\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Enhancement } from \"../Enhancement\";\r\nimport { EnhancementPurchaseListeners } from \"../EnhancementPurchaseListeners\";\r\nimport { manaSteamers } from \"../other/ManaSteamers\";\r\n\r\nclass SuperheatedSteamers extends Enhancement {\r\n  getId(): string {\r\n    return \"superheatedSteamers\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"Superheated Steamers\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_PRODUCTION;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 20000,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 30,\r\n    };\r\n  }\r\n  getRequiredEnhancements(): Enhancement[] {\r\n    return [manaSteamers];\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Enhance your Mana Steamers so they produce and consume much faster than before.\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\r\n      \"+50% :mana: production; 4x :fireessence: and :wateressence: consumption of Mana Steamers\",\r\n    );\r\n  }\r\n}\r\n\r\nconst superheatedSteamers = new SuperheatedSteamers();\r\n\r\nregisterTransformation(\r\n  [[manaSteamer.getId(), TransformationTags.Production]],\r\n  superheatedSteamers.getId(),\r\n  superheatedSteamers.getBaseName(),\r\n  TransformationType.Multiplier,\r\n  (state) => (superheatedSteamers.isPurchased(state) ? 1.5 : 1.0),\r\n);\r\n\r\nregisterTransformation(\r\n  [[manaSteamer.getId(), TransformationTags.Consumption]],\r\n  superheatedSteamers.getId() + \"consumption\",\r\n  superheatedSteamers.getBaseName(),\r\n  TransformationType.Multiplier,\r\n  (state) => (superheatedSteamers.isPurchased(state) ? 4.0 : 1.0),\r\n);\r\n\r\nEnhancementPurchaseListeners.register((state, enhancement) => {\r\n  if (enhancement == superheatedSteamers) {\r\n    state = clearCalculatedIncomeCache(state);\r\n  }\r\n  return state;\r\n});\r\n\r\nexport { superheatedSteamers };\r\n","import { valuesOf } from \"../../../utils/CoreUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { essenceStorage } from \"../../buildings/storages/EssenceStorage\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { clearResourceCapCache, Resource } from \"../../Resources\";\r\nimport { RESOURCE_FOR_ELEMENT } from \"../../spells/channeling/ChannelingResources\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Enhancement } from \"../Enhancement\";\r\nimport { EnhancementPurchaseListeners } from \"../EnhancementPurchaseListeners\";\r\n\r\nclass CompressedEssence extends Enhancement {\r\n  getId(): string {\r\n    return \"compressedEssence\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"Compressed Essence\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_STORAGE;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 300,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 1,\r\n    };\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Improve the way you store Essence in your Essence Storages so that you can store more with less.\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\"4x maximum Essence from Essence Storages\");\r\n  }\r\n}\r\n\r\nconst compressedEssence = new CompressedEssence();\r\n\r\nregisterTransformation(\r\n  valuesOf(RESOURCE_FOR_ELEMENT).map((resource) => [\r\n    resource,\r\n    TransformationTags.PerBuildingCap,\r\n    essenceStorage.getId(),\r\n  ]),\r\n  compressedEssence.getId(),\r\n  compressedEssence.getBaseName(),\r\n  TransformationType.Multiplier,\r\n  (state) => (compressedEssence.isPurchased(state) ? 4.0 : 1.0),\r\n);\r\n\r\nEnhancementPurchaseListeners.register((state, enhancement) => {\r\n  if (enhancement == compressedEssence) {\r\n    state = clearResourceCapCache(state);\r\n  }\r\n  return state;\r\n}, compressedEssence.getId());\r\n\r\nexport { compressedEssence };\r\n","import { valuesOf } from \"../../../utils/CoreUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { essenceStorage } from \"../../buildings/storages/EssenceStorage\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { clearResourceCapCache, Resource } from \"../../Resources\";\r\nimport { RESOURCE_FOR_ELEMENT } from \"../../spells/channeling/ChannelingResources\";\r\nimport { getPrimaryElements } from \"../../spells/Elements\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Enhancement } from \"../Enhancement\";\r\nimport { EnhancementPurchaseListeners } from \"../EnhancementPurchaseListeners\";\r\nimport { compressedEssence } from \"./CompressedEssence\";\r\n\r\nclass PrimaryStorage extends Enhancement {\r\n  getId(): string {\r\n    return \"primaryStorage\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"Primary Storage\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_STORAGE;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 2000,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 8,\r\n    };\r\n  }\r\n  getRequiredEnhancements(): Enhancement[] {\r\n    return [compressedEssence];\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Use the knowledge about your primary Element to become able to store extra of that Essence in particular.\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\r\n      \"2x maximum {{essenceIcon}}{{essenceIconExtra}} from Essence Storages\",\r\n      {\r\n        essenceIcon: `:${RESOURCE_FOR_ELEMENT[\r\n          state.run.primaryElement\r\n        ].toLowerCase()}:`,\r\n        essenceIconExtra:\r\n          state.run.secondaryElement != null\r\n            ? t(\" and {{secondaryEssenceIcon}}\", {\r\n                secondaryEssenceIcon: `:${RESOURCE_FOR_ELEMENT[\r\n                  state.run.secondaryElement\r\n                ].toLowerCase()}:`,\r\n              })\r\n            : \"\",\r\n      },\r\n    );\r\n  }\r\n}\r\n\r\nexport const primaryStorage = new PrimaryStorage();\r\n\r\nregisterTransformation(\r\n  valuesOf(RESOURCE_FOR_ELEMENT).map((resource) => [\r\n    resource,\r\n    TransformationTags.PerBuildingCap,\r\n    essenceStorage.getId(),\r\n  ]),\r\n  primaryStorage.getId(),\r\n  primaryStorage.getBaseName(),\r\n  TransformationType.Multiplier,\r\n  (state, params) =>\r\n    primaryStorage.isPurchased(state) &&\r\n    getPrimaryElements(state)\r\n      .map((element) => RESOURCE_FOR_ELEMENT[element])\r\n      .includes(params.resource)\r\n      ? 2.0\r\n      : 1.0,\r\n);\r\n\r\nEnhancementPurchaseListeners.register((state, enhancement) => {\r\n  if (enhancement == primaryStorage) {\r\n    state = clearResourceCapCache(state);\r\n  }\r\n  return state;\r\n}, primaryStorage.getId());\r\n","import { valuesOf } from \"../../../utils/CoreUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport {\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { essenceStorage } from \"../../buildings/storages/EssenceStorage\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { clearResourceCapCache, Resource } from \"../../Resources\";\r\nimport { RESOURCE_FOR_ELEMENT } from \"../../spells/channeling/ChannelingResources\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { Enhancement } from \"../Enhancement\";\r\nimport { EnhancementPurchaseListeners } from \"../EnhancementPurchaseListeners\";\r\nimport { compressedEssence } from \"./CompressedEssence\";\r\n\r\nclass WideStorage extends Enhancement {\r\n  getId(): string {\r\n    return \"wideStorage\";\r\n  }\r\n  getBaseName(): string {\r\n    return t(\"Wide Storage\");\r\n  }\r\n  getSubcategory(): ActionSubcategory {\r\n    return ActionSubcategories.ENHANCE_STORAGE;\r\n  }\r\n  getBaseResourceCost(): Partial<Record<Resource, number>> {\r\n    return {\r\n      Monstium: 6000,\r\n    };\r\n  }\r\n  getItemCost(): Record<string, number> {\r\n    return {\r\n      paper: 6,\r\n    };\r\n  }\r\n  getRequiredEnhancements(): Enhancement[] {\r\n    return [compressedEssence];\r\n  }\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Improve your Essence Storages so that they have even more room to store Essence.\",\r\n    );\r\n  }\r\n  getDisplayEffect(state: GameState): string {\r\n    return t(\"3x maximum Essence from Essence Storages\");\r\n  }\r\n}\r\n\r\nconst wideStorage = new WideStorage();\r\n\r\nregisterTransformation(\r\n  valuesOf(RESOURCE_FOR_ELEMENT).map((resource) => [\r\n    resource,\r\n    TransformationTags.PerBuildingCap,\r\n    essenceStorage.getId(),\r\n  ]),\r\n  wideStorage.getId(),\r\n  wideStorage.getBaseName(),\r\n  TransformationType.Multiplier,\r\n  (state) => (wideStorage.isPurchased(state) ? 3.0 : 1.0),\r\n);\r\n\r\nEnhancementPurchaseListeners.register((state, enhancement) => {\r\n  if (enhancement == wideStorage) {\r\n    state = clearResourceCapCache(state);\r\n  }\r\n  return state;\r\n}, wideStorage.getId());\r\n\r\nexport { wideStorage };\r\n","import { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport {\r\n  getCurrentDungeonFloor,\r\n  modifyPlayerCurrentHP,\r\n} from \"../../exploration/Exploration\";\r\nimport { ExplorationStatus } from \"../../exploration/ExplorationStatus\";\r\nimport { getExplorationStatus } from \"../../exploration/ExplorationUtils\";\r\nimport { addToInventory } from \"../../items/Inventory\";\r\nimport { ItemStack } from \"../../items/Item\";\r\nimport { Items } from \"../../items/Items\";\r\nimport { registerRandomEventTrigger } from \"../autorandom/RandomEventTrigger\";\r\nimport { buildEvent } from \"../EventMessageBuilder\";\r\nimport { EventTag, EventTransform, GameEvent } from \"../GameEvent\";\r\n\r\nexport function createChestEvent(\r\n  eventId: string,\r\n  dungeonFloorIds: string[],\r\n  weight: number,\r\n  contents: ItemStack[],\r\n): GameEvent {\r\n  const newChestEventBuilder = buildEvent(eventId, \"Found a chest\", [\r\n    EventTag.INCONSEQUENTIAL_RANDOM_EVENT,\r\n    EventTag.DO_NOT_AUTO_TRIGGER_IF_ONGOING,\r\n  ]);\r\n\r\n  newChestEventBuilder\r\n    .message(\r\n      t(\r\n        `While exploring, you find a suspicious chest in the middle of your path. What do you do?`,\r\n      ),\r\n    )\r\n    .option(\r\n      t(\"Open the chest\"),\r\n      {\r\n        transform: (state) => {\r\n          for (let itemStack of contents) {\r\n            const item = Items.getById(itemStack.itemOccurrence.itemId);\r\n            state = addToInventory(\r\n              {\r\n                itemId: item.getId(),\r\n                params: item.getDefaultParams(),\r\n              },\r\n              itemStack.amount,\r\n              state,\r\n            );\r\n          }\r\n          return state;\r\n        },\r\n      },\r\n      \"open\",\r\n    )\r\n    .option(t(\"Do not open\"), \"notOpen\")\r\n    .option(t(\"Decide later\"))\r\n    .end();\r\n\r\n  newChestEventBuilder\r\n    .message(\r\n      t(\r\n        `You open the chest. There's something inside! You pick it up and take it.\r\n    \r\n  **You obtained the following item(s): {{items}}!**`,\r\n        {\r\n          items: contents\r\n            .map((itemStack) => {\r\n              const item = Items.getById(itemStack.itemOccurrence.itemId);\r\n              return t(\"{{amount}}{{itemIcon}}{{itemName}}\", {\r\n                amount:\r\n                  itemStack.amount > 1\r\n                    ? t(\"{{amount}} \", {\r\n                        amount: formatNumber(itemStack.amount),\r\n                      })\r\n                    : \"\",\r\n                itemIcon: `:${item.getId()}:`,\r\n                itemName: item.getName(itemStack.itemOccurrence.params),\r\n              });\r\n            })\r\n            .join(t(\", \")),\r\n        },\r\n      ),\r\n    )\r\n    .tag(\"open\")\r\n    .end();\r\n\r\n  newChestEventBuilder\r\n    .message(\r\n      t(\r\n        `You decide not to open the chest. You think it might be a trap. Best to be careful...`,\r\n      ),\r\n    )\r\n    .tag(\"notOpen\")\r\n    .end();\r\n  const newChestEvent = newChestEventBuilder.build();\r\n\r\n  registerRandomEventTrigger(\r\n    newChestEvent,\r\n    weight,\r\n    (state) =>\r\n      getExplorationStatus(state) != ExplorationStatus.None &&\r\n      dungeonFloorIds.includes(getCurrentDungeonFloor(state)?.getId()),\r\n  );\r\n\r\n  return newChestEvent;\r\n}\r\n\r\nexport function createBadChestEvent(\r\n  eventId: string,\r\n  weight: number,\r\n  lastMessage: string,\r\n  transform: EventTransform,\r\n  dungeonFloorIds?: string[],\r\n): GameEvent {\r\n  const newChestEventBuilder = buildEvent(eventId, \"Found a chest\", [\r\n    EventTag.INCONSEQUENTIAL_RANDOM_EVENT,\r\n    EventTag.DO_NOT_AUTO_TRIGGER_IF_ONGOING,\r\n  ]);\r\n\r\n  newChestEventBuilder\r\n    .message(\r\n      t(\r\n        `While exploring, you find a suspicious chest in the middle of your path. What do you do?`,\r\n      ),\r\n    )\r\n    .option(\r\n      t(\"Open the chest\"),\r\n      {\r\n        transform: transform,\r\n      },\r\n      \"open\",\r\n    )\r\n    .option(t(\"Do not open\"), \"notOpen\")\r\n    .option(t(\"Decide later\"))\r\n    .end();\r\n\r\n  newChestEventBuilder.message(lastMessage).tag(\"open\").end();\r\n  newChestEventBuilder\r\n    .message(\r\n      t(\r\n        `You decide not to open the chest. You think it might be a trap. Best to be careful...`,\r\n      ),\r\n    )\r\n    .tag(\"notOpen\")\r\n    .end();\r\n\r\n  const newChestEvent = newChestEventBuilder.build();\r\n\r\n  registerRandomEventTrigger(\r\n    newChestEvent,\r\n    weight,\r\n    (state) =>\r\n      getExplorationStatus(state) != ExplorationStatus.None &&\r\n      (dungeonFloorIds == null ||\r\n        dungeonFloorIds.includes(getCurrentDungeonFloor(state)?.getId())),\r\n  );\r\n\r\n  return newChestEvent;\r\n}\r\n\r\nexport function loadBadChestEvent() {\r\n  createBadChestEvent(\r\n    \"badChestEvent\",\r\n    15,\r\n    `You open the chest. All of a sudden, you feel *pain* and fall to your knees! When you finally look at yourself, you notice a slight wound - as if something had pierced your leg. The chest must have been a trap! Thankfully the wound doesn't look too serious, but you'll need to wait and recover before you can continue to explore...\r\n      \r\n**You lose all your :hp:!**`,\r\n    (state) => {\r\n      state = modifyPlayerCurrentHP(state, -Infinity, \"Chest\");\r\n      return state;\r\n    },\r\n  );\r\n\r\n  createBadChestEvent(\r\n    \"emptyChestEvent\",\r\n    20,\r\n    `You open the chest. You look inside, but... there's nothing that you can see. You try to feel around to see if you missed anything, but still, there is nothing. What a letdown...`,\r\n    (state) => {\r\n      return state;\r\n    },\r\n  );\r\n}\r\n","import { getRandomElementFromArray } from \"../../../utils/CoreUtils\";\r\nimport { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { getBuildingAmount } from \"../../buildings/Buildings\";\r\nimport { essenceCatalyst } from \"../../buildings/catalysts/EssenceCatalyst\";\r\nimport { monstiumCatalyst } from \"../../buildings/catalysts/MonstiumCatalyst\";\r\nimport { ManaSpout } from \"../../buildings/mana/ManaSpout\";\r\nimport { BuildSaleStall, SaleStall } from \"../../buildings/SaleStall\";\r\nimport { AttackTarget } from \"../../exploration/AttackTarget\";\r\nimport { Flag } from \"../../Flag\";\r\nimport { hasFlag } from \"../../Flags\";\r\nimport { GameState } from \"../../GameState\";\r\nimport {\r\n  getResourceAmount,\r\n  getResourceCap,\r\n  getResourceInfo,\r\n  grantResource,\r\n  Resource,\r\n} from \"../../Resources\";\r\nimport { RESOURCE_FOR_ELEMENT } from \"../../spells/channeling/ChannelingResources\";\r\nimport {\r\n  getUnlockedElements,\r\n  grantElementExp,\r\n  translateElement,\r\n} from \"../../spells/Elements\";\r\nimport {\r\n  getResearcherExpPerSecAndResearcher,\r\n  getTotalResearchers,\r\n  isStudyUnlocked,\r\n} from \"../../study/Study\";\r\nimport { TemporaryEffect } from \"../../temporaryeffects/TemporaryEffect\";\r\nimport {\r\n  getTemporaryEffectData,\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n  registerTemporaryEffectListener,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport {\r\n  clearCalculatedIncomeCache,\r\n  IncomeOverTimeProducer,\r\n  IncomeOverTimeProducers,\r\n} from \"../../timetick/IncomeOverTime\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { buildEvent } from \"../EventMessageBuilder\";\r\nimport { EventTag } from \"../GameEvent\";\r\nimport { loadBadChestEvent } from \"./Chest\";\r\nimport { registerRandomEventTrigger } from \"./RandomEventTrigger\";\r\n\r\nclass PoolOfManaTemporaryEffect extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"poolOfMana\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Pool of Mana\");\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"+100%:mana:/sec from Mana Spouts\");\r\n  }\r\n}\r\n\r\nclass EssenceCatalystResonanceTemporaryEffect extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"essenceCatalystResonance\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Essence Catalyst Resonance\");\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"+25% Essence Catalyst effect\");\r\n  }\r\n}\r\n\r\nclass SaleRushTemporaryEffect extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"saleRush\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Sale Rush!\");\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"Market Stalls work twice as fast and sell for +50% more :coins:\");\r\n  }\r\n}\r\n\r\nclass ElementalGatheringTemporaryEffect extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"elementalGathering\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Elemental Gathering\");\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    const resource = temporaryEffectData.params.resource;\r\n    const amountPerSec = temporaryEffectData.params.amountPerSec;\r\n    return t(\"+{{amount}}:{{resourceIcon}}:/sec\", {\r\n      amount: formatNumber(amountPerSec),\r\n      resourceIcon: getResourceInfo(resource).icon,\r\n    });\r\n  }\r\n}\r\n\r\nclass MonstiumCatalystResonanceTemporaryEffect extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"monstiumCatalystResonance\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Monstium Catalyst Resonance\");\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"+25% Monstium Catalyst effect\");\r\n  }\r\n}\r\n\r\nconst poolOfManaTemporaryEffect = new PoolOfManaTemporaryEffect();\r\n\r\nconst essenceCatalystResonanceTemporaryEffect =\r\n  new EssenceCatalystResonanceTemporaryEffect();\r\n\r\nconst saleRushTemporaryEffect = new SaleRushTemporaryEffect();\r\n\r\nconst elementalGatheringTemporaryEffect =\r\n  new ElementalGatheringTemporaryEffect();\r\n\r\nconst monstiumCatalystResonanceTemporaryEffect =\r\n  new MonstiumCatalystResonanceTemporaryEffect();\r\n\r\nexport function loadRandomRepeatableEvents() {\r\n  // Pool of Mana\r\n  TemporaryEffects.register(poolOfManaTemporaryEffect);\r\n  registerTransformation(\r\n    [[TransformationTags.Production, Resource.Mana, ManaSpout.getId()]],\r\n    poolOfManaTemporaryEffect.getId(),\r\n    poolOfManaTemporaryEffect.getDisplayName(),\r\n    TransformationType.Multiplier,\r\n    (state) =>\r\n      hasTemporaryEffect(state, poolOfManaTemporaryEffect.getId()) ? 2.0 : 1.0,\r\n  );\r\n  registerTemporaryEffectListener(\r\n    poolOfManaTemporaryEffect.getId(),\r\n    (state, effect) => {\r\n      if (effect.id == poolOfManaTemporaryEffect.getId()) {\r\n        state = clearCalculatedIncomeCache(state);\r\n      }\r\n      return effect;\r\n    },\r\n    true,\r\n  );\r\n  const manaSpoutEventBuilder = buildEvent(\r\n    \"manaSpoutEvent\",\r\n    t(\"Pool of Mana\"),\r\n    [EventTag.INCONSEQUENTIAL_RANDOM_EVENT],\r\n  ).setOnTrigger(\r\n    grantTemporaryEffect(poolOfManaTemporaryEffect.getId(), 300, {\r\n      target: AttackTarget.Player,\r\n    }),\r\n  );\r\n  manaSpoutEventBuilder.message(\r\n    t(`You hear a sound coming from one of your Mana Spouts. When you investigate, you notice it is overflowing with Mana! It appears you've gotten lucky - they've found a pool of it!\r\n  \r\n**Your Mana Spouts will produce double the :mana: for the next 5 minutes!**`),\r\n  );\r\n  const manaSpoutEvent = manaSpoutEventBuilder.build();\r\n  registerRandomEventTrigger(\r\n    manaSpoutEvent,\r\n    100,\r\n    (state) => getBuildingAmount(state, ManaSpout) > 0,\r\n  );\r\n\r\n  // Essence Catalyst Resonance\r\n  TemporaryEffects.register(essenceCatalystResonanceTemporaryEffect);\r\n  registerTransformation(\r\n    [[TransformationTags.CatalystEffectivity, essenceCatalyst.getId()]],\r\n    essenceCatalystResonanceTemporaryEffect.getId(),\r\n    essenceCatalystResonanceTemporaryEffect.getDisplayName(),\r\n    TransformationType.Multiplier,\r\n    (state) =>\r\n      hasTemporaryEffect(state, essenceCatalystResonanceTemporaryEffect.getId())\r\n        ? 1.25\r\n        : 1.0,\r\n  );\r\n  const essenceCatalystEventBuilder = buildEvent(\r\n    \"essenceCatalystEvent\",\r\n    t(\"Essence Catalyst Resonance\"),\r\n    [EventTag.INCONSEQUENTIAL_RANDOM_EVENT],\r\n  ).setOnTrigger(\r\n    grantTemporaryEffect(essenceCatalystResonanceTemporaryEffect.getId(), 300, {\r\n      target: AttackTarget.Player,\r\n    }),\r\n  );\r\n  essenceCatalystEventBuilder.message(\r\n    t(`Oddly, your Essence Catalysts begin to glow. Something is happening! They appear to be resonating with each other and becoming stronger. You wonder how long this will last...\r\n  \r\n**Your Essence Catalysts will be 25% more effective for the next 5 minutes!**`),\r\n  );\r\n  const essenceCatalystEvent = essenceCatalystEventBuilder.build();\r\n  registerRandomEventTrigger(\r\n    essenceCatalystEvent,\r\n    100,\r\n    (state) => getBuildingAmount(state, essenceCatalyst) > 0,\r\n  );\r\n\r\n  // Sale Rush!\r\n  TemporaryEffects.register(saleRushTemporaryEffect);\r\n  registerTransformation(\r\n    [[TransformationTags.SaleStallRevenue]],\r\n    saleRushTemporaryEffect.getId() + \"1\",\r\n    saleRushTemporaryEffect.getDisplayName(),\r\n    TransformationType.Multiplier,\r\n    (state) =>\r\n      hasTemporaryEffect(state, saleRushTemporaryEffect.getId()) ? 1.5 : 1.0,\r\n  );\r\n  registerTransformation(\r\n    [[TransformationTags.TimePerAutoSalePerStall]],\r\n    saleRushTemporaryEffect.getId() + \"2\",\r\n    saleRushTemporaryEffect.getDisplayName(),\r\n    TransformationType.Multiplier,\r\n    (state) =>\r\n      hasTemporaryEffect(state, saleRushTemporaryEffect.getId()) ? 0.5 : 1.0,\r\n  );\r\n  const saleRushEventBuilder = buildEvent(\"saleRushEvent\", t(\"Sale Rush!\"), [\r\n    EventTag.INCONSEQUENTIAL_RANDOM_EVENT,\r\n  ]).setOnTrigger(\r\n    grantTemporaryEffect(saleRushTemporaryEffect.getId(), 300, {\r\n      target: AttackTarget.Player,\r\n    }),\r\n  );\r\n  saleRushEventBuilder.message(\r\n    t(`The number of people coming to your home to buy items has suddenly become very high. It's a Sale Rush event! You decide to leverage this and make as much money as you can - while it lasts!\r\n  \r\n**Your Market Stalls will sell items twice as fast and earn 50% more :coins: per sale for the next 5 minutes!**`),\r\n  );\r\n  const saleRushEvent = saleRushEventBuilder.build();\r\n  registerRandomEventTrigger(\r\n    saleRushEvent,\r\n    100,\r\n    (state) => getBuildingAmount(state, SaleStall) > 0,\r\n  );\r\n\r\n  // Elemental Gathering\r\n  TemporaryEffects.register(elementalGatheringTemporaryEffect);\r\n  IncomeOverTimeProducers.register(\r\n    new IncomeOverTimeProducer(\r\n      \"elementalGathering\",\r\n      t(\"Elemental Gathering\"),\r\n      (state) => {\r\n        if (\r\n          !hasTemporaryEffect(state, elementalGatheringTemporaryEffect.getId())\r\n        ) {\r\n          return {};\r\n        }\r\n        const income = {};\r\n        const effectData = getTemporaryEffectData(\r\n          state,\r\n          elementalGatheringTemporaryEffect.getId(),\r\n        );\r\n        income[effectData.params.resource] = effectData.params.amountPerSec;\r\n        return income;\r\n      },\r\n    ),\r\n  );\r\n  const elementalGatheringEventBuilder = buildEvent(\r\n    \"elementalGatheringEvent\",\r\n    t(\"Elemental Gathering\"),\r\n    [EventTag.INCONSEQUENTIAL_RANDOM_EVENT],\r\n  ).setOnTrigger((state, eventParams) => {\r\n    state = grantTemporaryEffect(\r\n      elementalGatheringTemporaryEffect.getId(),\r\n      300,\r\n      {\r\n        target: AttackTarget.Player,\r\n        params: {\r\n          resource: eventParams.resource,\r\n          amountPerSec: eventParams.amountPerSec,\r\n        },\r\n      },\r\n    )(state);\r\n    return state;\r\n  });\r\n  elementalGatheringEventBuilder.message(\r\n    t(`You stumble upon an incredible cache of :/essenceIcon/:. It'll take a little time, but there is so much of it that it'll fill your storages!\r\n  \r\n**You will obtain /essenceString/ for the next 5 minutes!**`),\r\n  );\r\n  const elementalGatheringEvent = elementalGatheringEventBuilder.build();\r\n  registerRandomEventTrigger(\r\n    elementalGatheringEvent,\r\n    100,\r\n    (state) => hasFlag(state, Flag.TransmutationUnlocked),\r\n    (state) => {\r\n      const element = getRandomElementFromArray(getUnlockedElements(state));\r\n      const resource = RESOURCE_FOR_ELEMENT[element];\r\n      const resourceCap = getResourceCap(state, resource);\r\n      const amountPerSec = resourceCap / 10; // Fill in 10 seconds\r\n      return {\r\n        resource,\r\n        amountPerSec,\r\n        essenceIcon: getResourceInfo(resource).icon,\r\n        essenceString: t(\"+{{amount}}:{{essenceIcon}}:/sec\", {\r\n          amount: formatNumber(amountPerSec),\r\n          essenceIcon: getResourceInfo(resource).icon,\r\n        }),\r\n      };\r\n    },\r\n  );\r\n  registerTemporaryEffectListener(\r\n    elementalGatheringTemporaryEffect.getId(),\r\n    (state, effect) => {\r\n      if (effect.id == elementalGatheringTemporaryEffect.getId()) {\r\n        state = clearCalculatedIncomeCache(state);\r\n      }\r\n      return effect;\r\n    },\r\n    true,\r\n  );\r\n  // Monstium Catalyst Resonance\r\n  TemporaryEffects.register(monstiumCatalystResonanceTemporaryEffect);\r\n  registerTransformation(\r\n    [[TransformationTags.CatalystEffectivity, monstiumCatalyst.getId()]],\r\n    monstiumCatalystResonanceTemporaryEffect.getId(),\r\n    monstiumCatalystResonanceTemporaryEffect.getDisplayName(),\r\n    TransformationType.Multiplier,\r\n    (state) =>\r\n      hasTemporaryEffect(\r\n        state,\r\n        monstiumCatalystResonanceTemporaryEffect.getId(),\r\n      )\r\n        ? 1.25\r\n        : 1.0,\r\n  );\r\n  const monstiumCatalystEventBuilder = buildEvent(\r\n    \"monstiumCatalystEvent\",\r\n    t(\"Monstium Catalyst Resonance\"),\r\n    [EventTag.INCONSEQUENTIAL_RANDOM_EVENT],\r\n  ).setOnTrigger(\r\n    grantTemporaryEffect(\r\n      monstiumCatalystResonanceTemporaryEffect.getId(),\r\n      300,\r\n      {\r\n        target: AttackTarget.Player,\r\n      },\r\n    ),\r\n  );\r\n  monstiumCatalystEventBuilder.message(\r\n    t(`Oddly, your Monstium Catalysts begin to glow purple. Are they resonating with each other? It might be a great time to Explore!\r\n  \r\n**Your Monstium Catalysts will be 25% more effective for the next 5 minutes!**`),\r\n  );\r\n  const monstiumCatalystEvent = monstiumCatalystEventBuilder.build();\r\n  registerRandomEventTrigger(\r\n    monstiumCatalystEvent,\r\n    100,\r\n    (state) => getBuildingAmount(state, monstiumCatalyst) > 0,\r\n  );\r\n\r\n  // Pile of Coins\r\n  // Only triggers if max coins are less than 1M, for balance\r\n  const pileOfCoinsEventBuilder = buildEvent(\r\n    \"pileOfCoinsEvent\",\r\n    t(\"Pile of Coins\"),\r\n    [EventTag.INCONSEQUENTIAL_RANDOM_EVENT],\r\n  ).setOnTrigger((state, params) =>\r\n    grantResource(Resource.Coins, params.amount)(state),\r\n  );\r\n  pileOfCoinsEventBuilder.message(\r\n    t(`It's your lucky day! You stumble upon a large pile of :coins:Coins on the ground. You take them - they'll certainly come in handy!\r\n    \r\n**You have obtained /amountText/:coins:!**`),\r\n  );\r\n  const pileOfCoinsEvent = pileOfCoinsEventBuilder.build();\r\n  registerRandomEventTrigger(\r\n    pileOfCoinsEvent,\r\n    100,\r\n    (state) =>\r\n      BuildSaleStall.isVisible(state) &&\r\n      getResourceCap(state, Resource.Coins) < 1000000,\r\n    (state) => {\r\n      const amount =\r\n        (Math.random() * 0.5 + 0.3) * getResourceCap(state, Resource.Coins);\r\n      const amountText = formatNumber(amount);\r\n      return {\r\n        amount,\r\n        amountText,\r\n      };\r\n    },\r\n  );\r\n\r\n  const elementBookEventBuilder = buildEvent(\r\n    \"elementBookEvent\",\r\n    t(\"An Offer of /elementText/\"),\r\n    [EventTag.INCONSEQUENTIAL_RANDOM_EVENT],\r\n  );\r\n  elementBookEventBuilder\r\n    .message(\r\n      t(`You stumble upon a traveling merchant who demands your attention!\r\n\r\n\"Hello there! You look like a wizard of some renown. I have a deal for you! I have this \"Book of /elementText/\" that I've come across, and it seems like it could be *perfect* for you! You're certain to get a nice proficiency boost with it - it's worth every coin! What do you say? Interested?\"\r\n    \r\nYou ponder whether the steep price might be worthwhile...`),\r\n    )\r\n    .option(\r\n      t(\"Buy the Book (/coinAmountText/ Coins)\"),\r\n      {\r\n        transform(state, params) {\r\n          state = grantResource(Resource.Coins, -params.coinAmount)(state);\r\n          state = grantElementExp(params.element, params.exp)(state);\r\n          return state;\r\n        },\r\n        isEnabled: (state, params) =>\r\n          getResourceAmount(state, Resource.Coins) >= params.coinAmount,\r\n      },\r\n      \"purchased\",\r\n    )\r\n    .option(t(\"Decline\"), \"declined\")\r\n    .option(t(\"Maybe later\"))\r\n    .end();\r\n  elementBookEventBuilder\r\n    .message(\r\n      t(`You decide to buy the book. The merchant smiles while taking your :coins:. \"Nice doing business with you,\" he says, then hands over the book. He walks away soon afterward.\r\n  \r\nYou flip through the book. It has information about /elementText/ that you had no idea of! You feel like you might have made a good purchase.\r\n\r\n**You have obtained /expText/ /elementText/ exp!**`),\r\n    )\r\n    .tag(\"purchased\")\r\n    .end();\r\n  elementBookEventBuilder\r\n    .message(\r\n      t(\r\n        `You decide not to buy the book. The merchant nods. \"I understand. See you next time!\" Casually waving at you, he walks away.`,\r\n      ),\r\n    )\r\n    .tag(\"declined\")\r\n    .end();\r\n  const elementBookEvent = elementBookEventBuilder.build();\r\n  registerRandomEventTrigger(\r\n    elementBookEvent,\r\n    100,\r\n    (state) => isStudyUnlocked(state),\r\n    (state) => {\r\n      const element = getRandomElementFromArray(getUnlockedElements(state));\r\n\r\n      // Exp gained is equal to the one generated by SQRT(researchers) in element for 30 in-game minutes\r\n      // Example: At base rates and 4 researchers, it will be 1 researcher hour of exp: 10800 Exp\r\n      // (non - Primary, brings Lv1 -> Lv7)\r\n      // Late game, with 64 researchers, it will be 4 researcher hours of exp, or about a quarter of the\r\n      // impact of the early game one\r\n      const exp =\r\n        Math.sqrt(getTotalResearchers(state)) *\r\n        getResearcherExpPerSecAndResearcher(state)[element] *\r\n        60 *\r\n        30;\r\n      const coinAmount =\r\n        getResourceCap(state, Resource.Coins) * (Math.random() * 0.45 + 0.5);\r\n      const elementText = translateElement(element);\r\n      const expText = formatNumber(exp);\r\n      const coinAmountText = formatNumber(coinAmount);\r\n      return {\r\n        element,\r\n        exp,\r\n        coinAmount,\r\n        elementText,\r\n        expText,\r\n        coinAmountText,\r\n      };\r\n    },\r\n  );\r\n\r\n  loadBadChestEvent();\r\n}\r\n","import { GameState } from \"../GameState\";\r\nimport { addGameStateListener } from \"../GameStateListeners\";\r\nimport { DataStore } from \"../generic/DataStore\";\r\nimport { Identifiable } from \"../generic/Identifiable\";\r\nimport { getGameEventById } from \"./Events\";\r\nimport { GameEvent } from \"./GameEvent\";\r\n\r\nexport type DungeonEvent = {\r\n  event: GameEvent;\r\n  getWeight: (state: GameState) => number;\r\n};\r\n\r\nexport class DungeonEventGroup implements Identifiable {\r\n  id: string;\r\n  events: DungeonEvent[] = [];\r\n\r\n  constructor(id: string) {\r\n    this.id = id;\r\n  }\r\n\r\n  getId(): string {\r\n    return this.id;\r\n  }\r\n\r\n  addEvent(event: DungeonEvent): DungeonEventGroup {\r\n    this.events.push(event);\r\n    return this;\r\n  }\r\n\r\n  getSelectedEvent(state: GameState): GameEvent | undefined {\r\n    return getGameEventById(\r\n      state.run.variables?.[\"dungeonEventGroup_\" + this.id] as\r\n        | string\r\n        | undefined,\r\n    );\r\n  }\r\n\r\n  hasFinishedSelecting(state: GameState): boolean {\r\n    return state.run.variables[\"dungeonEventGroup_\" + this.id] != null;\r\n  }\r\n\r\n  hasFinishedTriggeringThisRun(state: GameState): boolean {\r\n    const event = this.getSelectedEvent(state);\r\n    const triggered = event == null || event.hasTriggered(state);\r\n    return triggered;\r\n  }\r\n\r\n  selectEvent(state: GameState): GameState {\r\n    if (this.hasFinishedSelecting(state)) {\r\n      return state;\r\n    }\r\n\r\n    const totalWeight = this.events.reduce(\r\n      (sum, current) => sum + current.getWeight(state),\r\n      0,\r\n    );\r\n    if (totalWeight <= 0) {\r\n      state.run.variables[\"dungeonEventGroup_\" + this.id] =\r\n        \"dungeonEventGroup_allCompleted\";\r\n      return state;\r\n    }\r\n\r\n    let randomValue = Math.random() * totalWeight;\r\n    for (let event of this.events) {\r\n      randomValue -= event.getWeight(state);\r\n      if (randomValue < 0) {\r\n        state.run.variables[\"dungeonEventGroup_\" + this.id] =\r\n          event.event.getId();\r\n        return state;\r\n      }\r\n    }\r\n\r\n    return state;\r\n  }\r\n}\r\n\r\nconst DungeonEventGroups = new DataStore<DungeonEventGroup>();\r\n\r\nexport function getOrCreateDungeonEventGroup(id: string): DungeonEventGroup {\r\n  let dungeonEventGroup = DungeonEventGroups.getByIdNullable(id);\r\n  if (dungeonEventGroup == null) {\r\n    dungeonEventGroup = new DungeonEventGroup(id);\r\n    DungeonEventGroups.register(dungeonEventGroup);\r\n  }\r\n  return dungeonEventGroup;\r\n}\r\n\r\nexport function loadDungeonEventGroups() {\r\n  addGameStateListener(\"dungeonEventGroupTriggerer\", (state) => {\r\n    DungeonEventGroups.getAll()\r\n      .filter((group) => !group.hasFinishedSelecting(state))\r\n      .forEach((group) => group.selectEvent(state));\r\n  });\r\n}\r\n","export enum Achievement {\r\n  // Defeating specific enemies\r\n  HEAD_INSTRUCTOR_GISELLE = \"headInstructorGiselle\",\r\n  HEADMASTER = \"headmaster\",\r\n  LYTHA_DOOM_SORCERESS = \"lythaDoomSorceress\",\r\n\r\n  // Endings\r\n  TO_SAVE_A_LIFE = \"toSaveALife\",\r\n  A_TERRIBLE_MISTAKE = \"aTerribleMistake\",\r\n  REDEMPTION = \"redemption\",\r\n  TRANSCEND_HUMANITY = \"transcendHumanity\",\r\n  CREATORS_LAST_WORD = \"creatorsLastWord\",\r\n\r\n  // Specific Storylines\r\n  ZOOM_THROUGH_TRAINING = \"zoomThroughTraining\",\r\n  TIC_TAC_TOE = \"ticTacToe\",\r\n  A_FANCY_PAPERWEIGHT = \"aFancyPaperweight\",\r\n  WIZARDS_BEST_FRIEND = \"wizardsBestFriend\",\r\n  SCHEMATICS = \"schematics\",\r\n  ARTISAN_OF_MAGIC = \"artisanOfMagic\",\r\n  RITUALISTS_SECRET = \"ritualistsSecret\",\r\n  THE_BIG_PURCHASE = \"theBigPurchase\",\r\n  BLESSED_LAND = \"blessedLand\",\r\n  EMINENCE = \"eminence\",\r\n\r\n  // Elements\r\n  TOME_OF_TOXIC_KNOWLEDGE = \"tomeOfToxicKnowledge\",\r\n  TOME_OF_MENTAL_KNOWLEDGE = \"tomeOfMentalKnowledge\",\r\n  TOME_OF_LIVING_KNOWLEDGE = \"tomeOfLivingKnowledge\",\r\n  TOME_OF_ELECTRICAL_KNOWLEDGE = \"tomeOfElectricalKnowledge\",\r\n  TOME_OF_DEATHLY_KNOWLEDGE = \"tomeOfDeathlyKnowledge\",\r\n  TOME_OF_DIVINE_KNOWLEDGE = \"tomeOfDivineKnowledge\",\r\n  MYSTERIOUS_BOX = \"mysteriousBox\",\r\n  STARRY_NIGHT = \"starryNight\",\r\n\r\n  // Challenges\r\n  POUCHLESS_CHALLENGE = \"pouchlessChallenge\",\r\n  TIMED_CHALLENGE = \"timedChallenge\",\r\n  DANGER_CHALLENGE = \"dangerChallenge\",\r\n  UNSKILLED_CHALLENGE = \"unskilledChallenge\",\r\n  PRIMARY_CHALLENGE = \"primaryChallenge\",\r\n\r\n  // Other\r\n  EXPLORATION = \"exploration\",\r\n  RETIREMENT = \"retirement\",\r\n  MAGIC_RESEARCH_2 = \"magicResearch2\",\r\n}\r\n","import { nullthrows, valuesOf } from \"../../../utils/CoreUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { Achievement } from \"../../Achievement\";\r\nimport { registerAchievementUnlockerFromFlag } from \"../../Achievements\";\r\nimport { Flag } from \"../../Flag\";\r\nimport { hasFlag, setFlag } from \"../../Flags\";\r\nimport { addGameStateListener } from \"../../GameStateListeners\";\r\nimport { Resource, getResourceAmount, getResourceCap } from \"../../Resources\";\r\nimport { getBuildingAmount, getUsedLand } from \"../../buildings/Buildings\";\r\nimport { essenceCatalyst } from \"../../buildings/catalysts/EssenceCatalyst\";\r\nimport {\r\n  SpellElement,\r\n  getElementLevel,\r\n  getPrimaryElementMaxLevelForRun,\r\n  translateElement,\r\n} from \"../../spells/Elements\";\r\nimport { clearVisibleSpellsCache } from \"../../spells/VisibleSpellsCache\";\r\nimport { RESOURCE_FOR_ELEMENT } from \"../../spells/channeling/ChannelingResources\";\r\nimport { buildEvent } from \"../EventMessageBuilder\";\r\nimport { triggerEvent } from \"../Events\";\r\nimport { EventTag } from \"../GameEvent\";\r\n\r\nexport function loadPreTrainingProgression() {\r\n  const channelingUnlockerEventBuilder = buildEvent(\r\n    \"channelingUnlocker\",\r\n    t(\"The Power of Magic\"),\r\n    [EventTag.MAIN_QUEST],\r\n  ).setOnTrigger((state) => {\r\n    state = setFlag(Flag.ChannelingUnlocked)(state);\r\n    state = clearVisibleSpellsCache(state);\r\n    return state;\r\n  });\r\n\r\n  channelingUnlockerEventBuilder.message(\r\n    t(`It hasn't been very long since you completed your magical studies, but you still feel like you barely learned anything. But even among the little things you did learn, you remember: after gathering Mana, you are supposed to use it to channel it into elemental Essences...\r\n    \r\n  **You have gained the ability to Channel elemental Essences! You can do so from the Home screen or from the Spell menu.**`),\r\n  );\r\n\r\n  const channelingUnlockerEvent = channelingUnlockerEventBuilder.build();\r\n\r\n  addGameStateListener(\"channelingUnlocker\", (state) => {\r\n    if (\r\n      !channelingUnlockerEvent.hasTriggered(state) &&\r\n      !hasFlag(state, Flag.ChannelingUnlocked) &&\r\n      getResourceAmount(state, Resource.Mana) >= 10\r\n    ) {\r\n      return triggerEvent(channelingUnlockerEvent);\r\n    }\r\n  });\r\n\r\n  const manaSpoutUnlockerEventBuilder = buildEvent(\r\n    \"manaSpoutUnlocker\",\r\n    t(\"Mana Spouts\"),\r\n    [EventTag.MAIN_QUEST],\r\n  ).setOnTrigger(setFlag(Flag.ManaSpoutsUnlocked));\r\n\r\n  manaSpoutUnlockerEventBuilder.message(\r\n    t(`You are already pretty tired of gathering Mana on your own. Luckily, you remember something else from your studies: neat little objects that automatically generate it. And you also recall how to make them...\r\n    \r\n**You can now build Mana Spouts!**`),\r\n  );\r\n\r\n  const manaSpoutUnlockerEvent = manaSpoutUnlockerEventBuilder.build();\r\n\r\n  addGameStateListener(\"manaSpoutUnlocker\", (state) => {\r\n    if (\r\n      !manaSpoutUnlockerEvent.hasTriggered(state) &&\r\n      !hasFlag(state, Flag.ManaSpoutsUnlocked) &&\r\n      getResourceAmount(state, Resource.AirEssence) > 0 &&\r\n      getResourceAmount(state, Resource.WaterEssence) > 0\r\n    ) {\r\n      return triggerEvent(manaSpoutUnlockerEvent);\r\n    }\r\n  });\r\n\r\n  const manaShardUnlockerEventBuilder = buildEvent(\r\n    \"manaShardUnlocker\",\r\n    t(\"Mana Capacity\"),\r\n    [EventTag.MAIN_QUEST],\r\n  ).setOnTrigger(setFlag(Flag.ManaShardsUnlocked));\r\n\r\n  manaShardUnlockerEventBuilder.message(\r\n    t(`With a more stable Mana income, you feel a little relieved - it is one less problem off your hands. However, your reserves are still not very large. It would be great if you could cast more powerful spells, but that requires more Mana...\r\n\r\nYou remember your basic lessons, that spoke of earthern shards that could increase this capacity, which can also be easily built. You will need to try that...\r\n    \r\n**You can now build Mana Shards!**`),\r\n  );\r\n\r\n  const manaShardUnlockerEvent = manaShardUnlockerEventBuilder.build();\r\n\r\n  addGameStateListener(\"manaShardUnlocker\", (state) => {\r\n    if (\r\n      !manaShardUnlockerEvent.hasTriggered(state) &&\r\n      !hasFlag(state, Flag.ManaShardsUnlocked) &&\r\n      hasFlag(state, Flag.ManaSpoutsUnlocked) &&\r\n      getResourceAmount(state, Resource.EarthEssence) >= 30\r\n    ) {\r\n      return triggerEvent(manaShardUnlockerEvent);\r\n    }\r\n  });\r\n\r\n  const storagesUnlockerEventBuilder = buildEvent(\r\n    \"storagesUnlocker\",\r\n    t(\"Full of Essence\"),\r\n    [EventTag.MAIN_QUEST],\r\n  ).setOnTrigger(setFlag(Flag.StoragesUnlocked));\r\n\r\n  storagesUnlockerEventBuilder.message(\r\n    t(`With more Mana reserves, you have managed to stockpile some elemental Essence. You think of saving some room in your home for magical storage furniture, so you can stockpile even more.\r\n\r\nYou briefly ask yourself: why would you even want more? But you rid yourself of that thought - with this much Essence, the magical power you have is still very limited... you will surely need to accumulate more.\r\n    \r\n**You can now build Essence Storages, which allow you to hold more elemental Essence at once!**`),\r\n  );\r\n\r\n  const storagesUnlockerEvent = storagesUnlockerEventBuilder.build();\r\n\r\n  addGameStateListener(\"storagesUnlocker\", (state) => {\r\n    if (\r\n      !storagesUnlockerEvent.hasTriggered(state) &&\r\n      !hasFlag(state, Flag.StoragesUnlocked) &&\r\n      hasFlag(state, Flag.ManaShardsUnlocked) &&\r\n      getResourceCap(state, Resource.Mana) >= 200 &&\r\n      valuesOf(RESOURCE_FOR_ELEMENT).some(\r\n        (resource) => getResourceAmount(state, resource) >= 100,\r\n      )\r\n    ) {\r\n      return triggerEvent(storagesUnlockerEvent);\r\n    }\r\n  });\r\n\r\n  const catalystUnlockerEventBuilder = buildEvent(\r\n    \"catalystUnlocker\",\r\n    t(\"Channeling Catalysts\"),\r\n    [EventTag.MAIN_QUEST],\r\n  ).setOnTrigger(setFlag(Flag.CatalystsUnlocked));\r\n\r\n  catalystUnlockerEventBuilder.message(\r\n    t(`You are slowly feeling like you are beginning to master Channeling, but something bothers you. You get so little Essence for your efforts.\r\n\r\nOnce more, you recall the words of your teachers at your school. *\"A strong, capable wizard has an elaborate home full of magical furniture.\"* You remember one more such piece of furniture: *Essence Catalysts*, which use Fire to improve Channeling efficiency.\r\n\r\nYou contemplate giving that a try...\r\n    \r\n**You can now build Essence Catalysts!**`),\r\n  );\r\n\r\n  const catalystUnlockerEvent = catalystUnlockerEventBuilder.build();\r\n\r\n  addGameStateListener(\"catalystUnlocker\", (state) => {\r\n    if (\r\n      !catalystUnlockerEvent.hasTriggered(state) &&\r\n      !hasFlag(state, Flag.CatalystsUnlocked) &&\r\n      hasFlag(state, Flag.StoragesUnlocked) &&\r\n      getResourceAmount(state, Resource.FireEssence) >= 110\r\n    ) {\r\n      return triggerEvent(catalystUnlockerEvent);\r\n    }\r\n  });\r\n\r\n  const studyUnlockerEventBuilder = buildEvent(\r\n    \"studyUnlocker\",\r\n    t(\"Must Keep Learning\"),\r\n    [EventTag.MAIN_QUEST],\r\n  ).setOnTrigger(setFlag(Flag.StudyUnlocked));\r\n\r\n  studyUnlockerEventBuilder.message(\r\n    t(`The Essence Catalyst is up and running! You feel a little proud of it - you notice right away that your channeling spells have become stronger.\r\n\r\nNow that you are starting to put what you were meant to have learned from the school into practice, you realize that there is just so much you don't know. You wish you had paid more attention. But at the very least, now that you are starting to see its application, you feel like it would be worthwhile to spend some effort studying it...\r\n\r\nYou never liked studying - but you finally understand! You even feel like calling yourself a Magic Researcher. You laugh a little at your own thoughts. Why not?\r\n    \r\n**You can now Study the various Elements! Studying earns you experience in the Elements, which eventually increases their level, unlocking new spells. You can Study from the Study screen!**`),\r\n  );\r\n\r\n  const studyUnlockerEvent = studyUnlockerEventBuilder.build();\r\n\r\n  addGameStateListener(\"studyUnlocker\", (state) => {\r\n    if (\r\n      !studyUnlockerEvent.hasTriggered(state) &&\r\n      !hasFlag(state, Flag.StudyUnlocked) &&\r\n      hasFlag(state, Flag.CatalystsUnlocked) &&\r\n      getBuildingAmount(state, essenceCatalyst) > 0\r\n    ) {\r\n      return triggerEvent(studyUnlockerEvent);\r\n    }\r\n  });\r\n\r\n  const transmuteUnlockerEventBuilder = buildEvent(\r\n    \"transmuteUnlocker\",\r\n    t(\"Transmutation\"),\r\n    [EventTag.MAIN_QUEST],\r\n  ).setOnTrigger(setFlag(Flag.TransmutationUnlocked));\r\n\r\n  transmuteUnlockerEventBuilder.message(\r\n    t(`As you hone your skills, you recall another way to use elemental Essences. By using magic, you can reshape them into solid objects of great power. It was called *Transmutation* magic. That was it! It has to be how you would make the Philosopher's Stone, isn't it? You avidly pull your notes from the school.\r\n\r\nHowever, your excitement vanishes when you realize most of them are still unintelligible. You turn back to the beginning page. There's a diagram here - but this one feels like it might be simple enough. You remember not understanding heads nor tails of the explanation at the time, but it feels like now that you have finally put some things into practice, your understanding has grown...\r\n    \r\n**You can now cast Transmutation spells! Transmutation spells allow you to convert elemental Essences and other materials into various items. You can do so from the Transmutation screen!**`),\r\n  );\r\n\r\n  const transmuteUnlockerEvent = transmuteUnlockerEventBuilder.build();\r\n\r\n  addGameStateListener(\"transmuteUnlocker\", (state) => {\r\n    if (\r\n      state.run.primaryElement != null &&\r\n      !transmuteUnlockerEvent.hasTriggered(state) &&\r\n      !hasFlag(state, Flag.TransmutationUnlocked) &&\r\n      hasFlag(state, Flag.StudyUnlocked) &&\r\n      getPrimaryElementMaxLevelForRun(state) >= 2\r\n    ) {\r\n      return triggerEvent(transmuteUnlockerEvent);\r\n    }\r\n  });\r\n\r\n  const wizardsUnlockerEventBuilder = buildEvent(\r\n    \"wizardsUnlocker\",\r\n    t(\"A Strange Visitor\"),\r\n    [EventTag.MAIN_QUEST],\r\n  );\r\n\r\n  wizardsUnlockerEventBuilder.message(\r\n    t(`*Knock, knock.* Someone is at the door of your home. You decide to open it, and meet face to face with a woman. From her attire, she appears to be a wizard. But something feels a little off about her. Her robes are somewhat worn down, and she is oddly carrying a leather bag strapped to her shoulder.\r\n    \r\n*\"Wizard for hire from the Wizards' Guild\"*, she exclaims, while giving you a paper. You skim through it very quickly. It appears to be a resume listing her skills. It looks impressive indeed, almost too good to be true. You look back at her. She continues: \"You only need to tell me what to do, and I will do it for you!\"\r\n\r\nShe must have followed you from the short trip you just did to sell your items...`),\r\n  );\r\n  wizardsUnlockerEventBuilder\r\n    .message(\r\n      t(`\"As a special offer, I will join you entirely *for free*!\" As she says this, she decides to come inside your home. You are shocked - you didn't agree to anything yet! You are ready to kick her out. But before you reply, you pause and think about it some more. Having someone else helping you cast all those spells would certainly be a big help. Even more so if for free.\r\n    \r\nYou ask her to channel some Water, and then you notice her struggling. Beads of sweat start forming on her forehead as she tries to focus to show you her supposed skills. Eventually, she comes through, although she appears to be pretty exhausted. She surprisingly appears to be even less skilled than you are... *no wonder* the offer was actually free.`),\r\n    )\r\n    .option(t(\"Continue\"), { transform: setFlag(Flag.WizardsUnlocked) }, \"end\");\r\n  wizardsUnlockerEventBuilder\r\n    .message(\r\n      t(`Nevertheless, you help her get set up on a corner of your home. She appears quite excited and thanks you. You know that paper was a complete lie, but the idea still stands: if you are going to create or find the Philosopher's Stone, more helping hands - of any kind - could end up being key to getting there.\r\n    \r\nAnd maybe it is even worthwhile to have more than one extra pair...\r\n\r\n**You have unlocked the ability to direct a team of Wizards to help you cast spells of various kinds! You can do so from the Wizards screen. In addition, you can now build Wizard Chambers, which allow you to hire more Wizards from the Guild!**`),\r\n    )\r\n    .tag(\"end\")\r\n    .end();\r\n\r\n  const wizardsUnlockerEvent = wizardsUnlockerEventBuilder.build();\r\n\r\n  addGameStateListener(\"wizardsUnlocker\", (state) => {\r\n    if (\r\n      !wizardsUnlockerEvent.hasTriggered(state) &&\r\n      !hasFlag(state, Flag.WizardsUnlocked) &&\r\n      hasFlag(state, Flag.TransmutationUnlocked) &&\r\n      getResourceAmount(state, Resource.Coins) >= 500\r\n    ) {\r\n      return triggerEvent(wizardsUnlockerEvent);\r\n    }\r\n  });\r\n\r\n  const marketUnlockerEventBuilder = buildEvent(\r\n    \"marketUnlocker\",\r\n    t(\"Start of a Business\"),\r\n    [EventTag.MAIN_QUEST],\r\n  ).setOnTrigger(setFlag(Flag.SaleStallsUnlocked));\r\n\r\n  marketUnlockerEventBuilder.message(\r\n    t(`You have already gone to the town so many times to sell your items. It is a bit of a trip. It would be much more convenient if instead of you having to go there, customers could simply *come* instead and buy your items...\r\n    \r\nYou decide to ask the town hall about this. The town officer tells you that you are, in fact, allowed to do so if you wish - and they will even spread the word so that people know about it! She quickly corrects herself - they will spread the word *a little*, at least until your \"store\" becomes more famous... You decide to give it a try and see if it leads anywhere - having a solid source of income means you can devote your attention to your ultimate goal.\r\n\r\n**You can now build Market Stalls to automatically sell items - and as a bonus, they will sell them for higher than their normal sale price!**`),\r\n  );\r\n\r\n  const marketUnlockerEvent = marketUnlockerEventBuilder.build();\r\n\r\n  addGameStateListener(\"marketUnlocker\", (state) => {\r\n    if (\r\n      !marketUnlockerEvent.hasTriggered(state) &&\r\n      !hasFlag(state, Flag.SaleStallsUnlocked) &&\r\n      hasFlag(state, Flag.WizardsUnlocked) &&\r\n      getResourceAmount(state, Resource.Coins) >= 1000\r\n    ) {\r\n      return triggerEvent(marketUnlockerEvent);\r\n    }\r\n  });\r\n\r\n  const researchersUnlockerEventBuilder = buildEvent(\r\n    \"researchersUnlocker\",\r\n    t(\"A Helping Hand\"),\r\n    [EventTag.MAIN_QUEST],\r\n  ).setOnTrigger(setFlag(Flag.ResearchersUnlocked));\r\n\r\n  researchersUnlockerEventBuilder.message(\r\n    t(`The new member of your house grabs your attention. \"Hey! I've noticed you have been attempting to study very hard. But studying stinks, doesn't it?\" She wrinkles her nose in a funny way. \"Nowadays, you're meant to get others to do the studying for you! ...Although I think it might cost some :coins:.\"\r\n    \r\nGetting others to do the studying? You are not very surprised *she* is saying this. But - you recognize that with the growing amount of things to do, it might be a good idea. Perhaps with a specially built furniture and some money, you might just be able to find people who can help...\r\n\r\n**You can now build Researcher Desks! Having Researcher Desks will grant you extra Researchers, which can Study the various elements and let you get experience faster!**`),\r\n  );\r\n\r\n  const researchersUnlockerEvent = researchersUnlockerEventBuilder.build();\r\n\r\n  addGameStateListener(\"researchersUnlocker\", (state) => {\r\n    if (\r\n      !researchersUnlockerEvent.hasTriggered(state) &&\r\n      !hasFlag(state, Flag.ResearchersUnlocked) &&\r\n      hasFlag(state, Flag.SaleStallsUnlocked) &&\r\n      getResourceAmount(state, Resource.Coins) >= 1500\r\n    ) {\r\n      return triggerEvent(researchersUnlockerEvent);\r\n    }\r\n  });\r\n\r\n  const expandHomeUnlockerEventBuilder = buildEvent(\r\n    \"expandHomeUnlocker\",\r\n    t(\"A Bigger House?\"),\r\n    [EventTag.MAIN_QUEST],\r\n  ).setOnTrigger(setFlag(Flag.LandPurchaseUnlocked));\r\n\r\n  expandHomeUnlockerEventBuilder.message(\r\n    t(`Your home is getting full of furniture. You start wondering if there is a way for you to expand it.\r\n    \r\nPromptly, you go to the town hall again, where the clerk you are informed that you are in luck - there are actually many possibilities for enlargening your :land:Land, and they are quite cheap! But she quickly corrects herself - only *a few of them* are cheap. You thank her for the information regardless. It might be time to start saving up...\r\n\r\n**You can now purchase additional land to expand your Home!**`),\r\n  );\r\n\r\n  const expandHomeUnlockerEvent = expandHomeUnlockerEventBuilder.build();\r\n\r\n  addGameStateListener(\"expandHomeUnlocker\", (state) => {\r\n    if (\r\n      !expandHomeUnlockerEvent.hasTriggered(state) &&\r\n      !hasFlag(state, Flag.LandPurchaseUnlocked) &&\r\n      hasFlag(state, Flag.ResearchersUnlocked) &&\r\n      getUsedLand(state) >= 120\r\n    ) {\r\n      return triggerEvent(expandHomeUnlockerEvent);\r\n    }\r\n  });\r\n\r\n  const explorationUnlockerEventBuilder = buildEvent(\r\n    \"explorationUnlocker\",\r\n    t(\"Training\"),\r\n    [EventTag.MAIN_QUEST],\r\n  );\r\n\r\n  explorationUnlockerEventBuilder.message(\r\n    t(`You receive a familiar letter on your mail today. You sit down and begin to read it. It appears to be from your magic school. It reads:\r\n    \r\n*\"Esteemed Student: We would like to extend you an extra free training course on combat. If you are interested, please report to the Tower of /element/ Training. We expect you soon.*\"`),\r\n  );\r\n  explorationUnlockerEventBuilder\r\n    .message(\r\n      t(`You are then surprised by a short squeal behind you. It came straight from the first wizard you \"hired\" - the one that decided to work completely for free. She was standing behind you the entire time, *peeking at the letter* over your shoulder! Angry, you are about to reprimand her, but she exclaims:\r\n    \r\n\"*Combat* training? That sounds really exciting! You should definitely participate!\" You remind her that your goal is to find or create the Philosopher's Stone and not to get into fights, but she overrides you: \"If you are looking for an immensely powerful magical object, don't you think it's going to be hidden and guarded behind enemies that are just as powerful, or worse?\"\r\n\r\nShe might be right...`),\r\n    )\r\n    .option(\r\n      t(\"Continue\"),\r\n      {\r\n        transform: (state) => {\r\n          state = setFlag(Flag.ExplorationUnlocked)(state);\r\n          state = clearVisibleSpellsCache(state);\r\n          return state;\r\n        },\r\n      },\r\n      \"end\",\r\n    );\r\n  explorationUnlockerEventBuilder\r\n    .message(\r\n      t(`She continues, excited: \"So, when are we leaving?\" You notice her picking up her robe as if ready to go. You tell her to wait a little. You've made up your mind about this training, but you feel you should at least prepare yourself and get some combat equipment in order first before attending...\r\n    \r\n**You have unlocked Exploration! Venture into various different areas and fight powerful foes. What will you find?**\r\n\r\n**You can explore a new dungeon: \"Tower of /element/ Training\"!**\r\n\r\n**You can also now Transmute equipment, including Hand and Body equipment!**`),\r\n    )\r\n    .tag(\"end\")\r\n    .end();\r\n\r\n  const explorationUnlockerEvent = explorationUnlockerEventBuilder.build();\r\n\r\n  addGameStateListener(\"explorationUnlocker\", (state) => {\r\n    if (\r\n      state.run.primaryElement != null &&\r\n      !explorationUnlockerEvent.hasTriggered(state) &&\r\n      !hasFlag(state, Flag.ExplorationUnlocked) &&\r\n      hasFlag(state, Flag.LandPurchaseUnlocked) &&\r\n      [\r\n        SpellElement.Fire,\r\n        SpellElement.Earth,\r\n        SpellElement.Water,\r\n        SpellElement.Air,\r\n      ].includes(state.run.primaryElement) &&\r\n      getElementLevel(state, nullthrows(state.run.primaryElement)) >= 6\r\n    ) {\r\n      return triggerEvent(explorationUnlockerEvent, {\r\n        element: translateElement(nullthrows(state.run.primaryElement)),\r\n      });\r\n    }\r\n  });\r\n  loadOtherElementExplorationUnlocker();\r\n}\r\n\r\nfunction loadOtherElementExplorationUnlocker() {\r\n  const explorationUnlockerEventBuilder = buildEvent(\r\n    \"explorationUnlockerOtherElement\",\r\n    t(\"Training\"),\r\n    [EventTag.MAIN_QUEST],\r\n  );\r\n  explorationUnlockerEventBuilder.message(\r\n    t(`You receive a familiar letter on your mail today. You sit down and begin to read it. It appears to be from your magic school. It reads:\r\n    \r\n*\"Esteemed Student: We would like to extend you an extra free training course on combat. If you are interested, please report to the Towers of Training. We expect you soon.*\"`),\r\n  );\r\n  explorationUnlockerEventBuilder\r\n    .message(\r\n      t(`You are then surprised by a short squeal behind you. It came straight from the first wizard you \"hired\" - the one that decided to work completely for free. She was standing behind you the entire time, *peeking at the letter* over your shoulder! Angry, you are about to reprimand her, but she exclaims:\r\n    \r\n\"*Combat* training? That sounds really exciting! You should definitely participate!\" You remind her that your goal is to find or create the Philosopher's Stone and not to get into fights, but she overrides you: \"If you are looking for an immensely powerful magical object, don't you think it's going to be hidden and guarded behind enemies that are just as powerful, or worse?\"\r\n\r\nShe might be right...`),\r\n    )\r\n    .option(\r\n      t(\"Continue\"),\r\n      { transform: setFlag(Flag.ExplorationUnlocked) },\r\n      \"end\",\r\n    );\r\n  explorationUnlockerEventBuilder\r\n    .message(\r\n      t(`She continues, excited: \"So, when are we leaving?\" You notice her picking up her robe as if ready to go. You tell her to wait a little. You've made up your mind about this training, but you feel you should at least prepare yourself and get some combat equipment in order first before attending...\r\n    \r\n**You have unlocked Exploration! Venture into various different areas and fight powerful foes. What will you find?**\r\n\r\n**You can explore four new dungeons: \"Tower of Fire Training\", \"Tower of Earth Training\", \"Tower of Water Training\" and \"Tower of Air Training\"!**\r\n\r\n**You can also now Transmute equipment, including Hand and Body equipment!**`),\r\n    )\r\n    .tag(\"end\")\r\n    .end();\r\n\r\n  const explorationUnlockerEvent = explorationUnlockerEventBuilder.build();\r\n\r\n  addGameStateListener(\"explorationUnlockerOtherElement\", (state) => {\r\n    if (\r\n      state.run.primaryElement != null &&\r\n      !explorationUnlockerEvent.hasTriggered(state) &&\r\n      !hasFlag(state, Flag.ExplorationUnlocked) &&\r\n      hasFlag(state, Flag.LandPurchaseUnlocked) &&\r\n      ![\r\n        SpellElement.Fire,\r\n        SpellElement.Earth,\r\n        SpellElement.Water,\r\n        SpellElement.Air,\r\n      ].includes(state.run.primaryElement) &&\r\n      getElementLevel(state, nullthrows(state.run.primaryElement)) >= 5\r\n    ) {\r\n      return triggerEvent(explorationUnlockerEvent, {\r\n        element: translateElement(nullthrows(state.run.primaryElement)),\r\n      });\r\n    }\r\n  });\r\n\r\n  registerAchievementUnlockerFromFlag(\r\n    Flag.ExplorationUnlocked,\r\n    Achievement.EXPLORATION,\r\n  );\r\n}\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport Wildgrass from \"../../../items/material/Wildgrass\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport { grantTemporaryEffect } from \"../../../temporaryeffects/TemporaryEffects\";\r\nimport { Wet } from \"../../../temporaryeffects/Wet\";\r\nimport { getSecondsPlayed } from \"../../../timetick/TotalTimePlayed\";\r\nimport { AttackTarget } from \"../../AttackTarget\";\r\nimport { setDungeonFloorCompleted } from \"../../dungeons/Dungeons\";\r\nimport {\r\n  modifyEnemyCurrentHP,\r\n  standardEnemyAttackEffect,\r\n} from \"../../Exploration\";\r\nimport { pushCombatActionResult } from \"../../ExplorationActionResult\";\r\nimport { BattlerAction, BattlerStats, Enemy, EnemyLoot } from \"../Enemy\";\r\n\r\nclass AnimatedSnowman extends Enemy {\r\n  getId(): string {\r\n    return \"animatedSnowman\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Animated Snowman\");\r\n  }\r\n\r\n  getBaseStats(): BattlerStats {\r\n    return {\r\n      maxHP: 1500,\r\n      attack: 20,\r\n      defense: 0,\r\n      attackDelay: 3.0,\r\n      accuracy: 100,\r\n      dodge: 100,\r\n      crit: 0,\r\n    };\r\n  }\r\n\r\n  getPicture(state: GameState) {\r\n    return require(\"./animatedSnowman.png\");\r\n  }\r\n\r\n  getLevel(): number {\r\n    return 4;\r\n  }\r\n\r\n  getCoinsAwardedBase(state: GameState): number {\r\n    return 40;\r\n  }\r\n\r\n  getMonstiumAwardedBase(state: GameState): number {\r\n    return 6;\r\n  }\r\n\r\n  getNextAction(state: GameState): BattlerAction {\r\n    if (Math.random() < 0.1) {\r\n      return {\r\n        name: t(\"Splash\"),\r\n        delay: this.getAttackDelay(state) * 1.2,\r\n        transform: (state) => {\r\n          state = standardEnemyAttackEffect(\r\n            state,\r\n            this.getAttack(state) * 1.1,\r\n            {\r\n              tags: [SpellElement.Water],\r\n              cause: t(\"Splash\"),\r\n              onHit: (state, result) => {\r\n                if (result.isHit) {\r\n                  state = grantTemporaryEffect(Wet.getId(), 15, {\r\n                    target: result.target,\r\n                  })(state);\r\n                }\r\n                return state;\r\n              },\r\n            },\r\n          );\r\n\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n    if (Math.random() < 0.5) {\r\n      return {\r\n        name: t(\"Droplet of Healing\"),\r\n        delay: this.getAttackDelay(state) * 1.0,\r\n        transform: (state) => {\r\n          const healAmt = this.getMaxHP(state) * (0.02 + Math.random() * 0.005);\r\n          state = modifyEnemyCurrentHP(state, healAmt);\r\n          const actionResult = {\r\n            id: Math.random().toString(),\r\n            damage: -healAmt,\r\n            isCrit: false,\r\n            isHit: true,\r\n            time: getSecondsPlayed(state),\r\n            source: AttackTarget.Enemy,\r\n            target: AttackTarget.Enemy,\r\n            tags: [],\r\n          };\r\n          state = pushCombatActionResult(state, actionResult);\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n    return {\r\n      name: t(\"Attack\"),\r\n      delay: this.getAttackDelay(state),\r\n      transform: (state) =>\r\n        standardEnemyAttackEffect(state, this.getAttack(state)),\r\n    };\r\n  }\r\n\r\n  isBoss(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getItemsAwardedBase(state: GameState): EnemyLoot[] {\r\n    return [\r\n      {\r\n        itemId: Wildgrass.getId(),\r\n        amount: 2,\r\n        chance: 1.0,\r\n      },\r\n    ];\r\n  }\r\n\r\n  onDeath(\r\n    state: GameState,\r\n    isFromCreatures: boolean,\r\n    familiarId?: string,\r\n  ): GameState {\r\n    state = super.onDeath(state, isFromCreatures, familiarId);\r\n    state = setDungeonFloorCompleted(state, \"trainingTowerAir\");\r\n    return state;\r\n  }\r\n\r\n  getTips(): string {\r\n    return t(\r\n      \"Wow! The guardian of the Tower of Air Training looks like a snowman that is able to move on its own through some sort of magic. It has a lot of health, and is able to heal itself. That is annoying! On the other hand, attacks deal quite a bit of damage, even weak ones. Using Air Blast or other attack spells, a weak but speedy weapon, and having some way to heal like a few potions should do the trick!\",\r\n    );\r\n  }\r\n}\r\n\r\nexport default new AnimatedSnowman();\r\n","import { formatNumber } from \"../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../utils/I18n\";\r\nimport { ActionEffect } from \"../../../action/Action\";\r\nimport { AttackTarget } from \"../../../exploration/AttackTarget\";\r\nimport { calculatePlayerMaxHP } from \"../../../exploration/CombatStats\";\r\nimport {\r\n  getCurrentPlayerHP,\r\n  modifyPlayerCurrentHP,\r\n} from \"../../../exploration/Exploration\";\r\nimport { pushCombatActionResult } from \"../../../exploration/ExplorationActionResult\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { isHealingPossible } from \"../../../temporaryeffects/CommonTemporaryEffects\";\r\nimport { getSecondsPlayed } from \"../../../timetick/TotalTimePlayed\";\r\nimport { ItemParams } from \"../../Item\";\r\nimport { PouchItem } from \"../PouchItem\";\r\n\r\nclass Cherry extends PouchItem {\r\n  getId(): string {\r\n    return \"cherry\";\r\n  }\r\n\r\n  getPicture() {\r\n    return require(\"./cherry.png\");\r\n  }\r\n\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Cherry\");\r\n  }\r\n\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"They say a cherry a day keeps the doctor away... wait, something is off. Restores a little :hp:.\",\r\n    );\r\n  }\r\n\r\n  hpHealTags = [];\r\n  protected getBaseExtraItemEffects(\r\n    params: ItemParams,\r\n  ): Record<string, ActionEffect> {\r\n    return {\r\n      hpHeal: {\r\n        value: 10,\r\n        tags: this.hpHealTags,\r\n        unit: \":hp:\",\r\n      },\r\n    };\r\n  }\r\n\r\n  getHPHealAmount(state: GameState, params: ItemParams): number {\r\n    return this.getItemEffects(state, params, \"hpHeal\").hpHeal;\r\n  }\r\n\r\n  getEffect(state: GameState, params: ItemParams): string {\r\n    return t(\"^+{{amount}}^<{{explanation}}>:hp:\", {\r\n      amount: formatNumber(this.getHPHealAmount(state, params)),\r\n      explanation: this.getItemEffectExplanations(state, params, \"hpHeal\")\r\n        .hpHeal,\r\n    });\r\n  }\r\n\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 30;\r\n  }\r\n\r\n  doPouchItemEffect(state: GameState, params: ItemParams): GameState {\r\n    const healAmt = this.getHPHealAmount(state, params);\r\n    state = modifyPlayerCurrentHP(state, healAmt, this.getBaseName(params));\r\n    const actionResult = {\r\n      id: Math.random().toString(),\r\n      damage: -healAmt,\r\n      isCrit: false,\r\n      isHit: true,\r\n      time: getSecondsPlayed(state),\r\n      source: AttackTarget.Player,\r\n      target: AttackTarget.Player,\r\n      tags: this.getTags(),\r\n    };\r\n    state = pushCombatActionResult(state, actionResult);\r\n    return state;\r\n  }\r\n\r\n  shouldAutoUse(state: GameState, params: ItemParams): boolean {\r\n    const maxHP = calculatePlayerMaxHP(state);\r\n    const currentHP = getCurrentPlayerHP(state);\r\n    return (\r\n      (maxHP - currentHP > this.getHPHealAmount(state, params) ||\r\n        currentHP / maxHP < 0.3) &&\r\n      isHealingPossible(state, AttackTarget.Player)\r\n    );\r\n  }\r\n\r\n  getUsesPerCombatBase(params: ItemParams): number {\r\n    return 3;\r\n  }\r\n}\r\n\r\nconst cherry = new Cherry();\r\n\r\nexport { cherry as Cherry };\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { Cherry } from \"../../../items/equipment/pouch/Cherry\";\r\nimport Wildgrass from \"../../../items/material/Wildgrass\";\r\nimport { standardEnemyAttackEffect } from \"../../Exploration\";\r\nimport { BattlerAction, BattlerStats, Enemy, EnemyLoot } from \"../Enemy\";\r\n\r\nclass Goat extends Enemy {\r\n  getId(): string {\r\n    return \"goat\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Goat\");\r\n  }\r\n\r\n  getBaseStats(): BattlerStats {\r\n    return {\r\n      maxHP: 180,\r\n      attack: 18,\r\n      defense: 0,\r\n      attackDelay: 2.8,\r\n      accuracy: 100,\r\n      dodge: 100,\r\n      crit: 0,\r\n    };\r\n  }\r\n\r\n  getPicture(state: GameState) {\r\n    return require(\"./goat.png\");\r\n  }\r\n\r\n  getLevel(): number {\r\n    return 2;\r\n  }\r\n\r\n  getCoinsAwardedBase(state: GameState): number {\r\n    return 14;\r\n  }\r\n\r\n  getMonstiumAwardedBase(state: GameState): number {\r\n    return 3;\r\n  }\r\n\r\n  getNextAction(state: GameState): BattlerAction {\r\n    if (Math.random() < 0.1) {\r\n      return {\r\n        name: t(\"Baa!\"),\r\n        delay: this.getAttackDelay(state),\r\n        transform: (state) => state,\r\n      };\r\n    }\r\n    if (Math.random() < 0.25) {\r\n      return {\r\n        name: t(\"Strong Attack\"),\r\n        delay: this.getAttackDelay(state) * 2.0,\r\n        transform: (state) => {\r\n          state = standardEnemyAttackEffect(state, this.getAttack(state) * 2.0);\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n    return {\r\n      name: t(\"Attack\"),\r\n      delay: this.getAttackDelay(state),\r\n      transform: (state) =>\r\n        standardEnemyAttackEffect(state, this.getAttack(state)),\r\n    };\r\n  }\r\n\r\n  getItemsAwardedBase(state: GameState): EnemyLoot[] {\r\n    return [\r\n      {\r\n        itemId: Wildgrass.getId(),\r\n        amount: 3,\r\n        chance: 0.15,\r\n      },\r\n      {\r\n        itemId: Cherry.getId(),\r\n        amount: 1,\r\n        chance: 0.005,\r\n      },\r\n    ];\r\n  }\r\n}\r\n\r\nexport default new Goat();\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { Flag } from \"../../../Flag\";\r\nimport { hasFlag } from \"../../../Flags\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport { Enemy } from \"../../enemies/Enemy\";\r\nimport AnimatedSnowman from \"../../enemies/training/AnimatedSnowman\";\r\nimport Goat from \"../../enemies/training/Goat\";\r\nimport Slime from \"../../enemies/training/Slime\";\r\nimport {\r\n  DungeonFloor,\r\n  encounterEnemy,\r\n  ExplorationPossibility,\r\n} from \"../DungeonFloor\";\r\n\r\nconst EXPLORATION_POSSIBILTIIES = [\r\n  {\r\n    weight: 100,\r\n    transforms: encounterEnemy(Slime),\r\n  },\r\n  {\r\n    weight: 150,\r\n    transforms: encounterEnemy(Goat),\r\n  },\r\n];\r\n\r\nclass TrainingTowerAir extends DungeonFloor {\r\n  getId(): string {\r\n    return \"trainingTowerAir\";\r\n  }\r\n  getFloorName(): string {\r\n    return t(\"Tower of Air Training\");\r\n  }\r\n  getBoss(state: GameState): Enemy {\r\n    return AnimatedSnowman;\r\n  }\r\n  getBreedingLevel(): number {\r\n    return 1;\r\n  }\r\n  isMainStoryDungeonFloor(): boolean {\r\n    return true;\r\n  }\r\n  getExplorationRequiredTimeSecBase(): number {\r\n    return 4.0;\r\n  }\r\n  _getExplorationSuccessesForBossBase(): number {\r\n    return 30;\r\n  }\r\n  getBaseExplorationPossibilities(state: GameState): ExplorationPossibility[] {\r\n    return EXPLORATION_POSSIBILTIIES;\r\n  }\r\n  isUnlocked(state: GameState): boolean {\r\n    return (\r\n      ![SpellElement.Earth, SpellElement.Fire, SpellElement.Water].includes(\r\n        state.run.primaryElement,\r\n      ) || hasFlag(state, Flag.RestOfTrainingUnlocked)\r\n    );\r\n  }\r\n}\r\n\r\nexport default new TrainingTowerAir();\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { Cherry } from \"../../../items/equipment/pouch/Cherry\";\r\nimport { standardEnemyAttackEffect } from \"../../Exploration\";\r\nimport { BattlerAction, BattlerStats, Enemy, EnemyLoot } from \"../Enemy\";\r\n\r\nclass BreezyRabbit extends Enemy {\r\n  getId(): string {\r\n    return \"breezyRabbit\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Breezy Rabbit\");\r\n  }\r\n\r\n  getBaseStats(): BattlerStats {\r\n    return {\r\n      maxHP: 65,\r\n      attack: 13,\r\n      defense: 3,\r\n      attackDelay: 1.0,\r\n      accuracy: 100,\r\n      dodge: 100,\r\n      crit: 0,\r\n    };\r\n  }\r\n\r\n  getPicture(state: GameState) {\r\n    return require(\"./breezyRabbit.png\");\r\n  }\r\n\r\n  getLevel(): number {\r\n    return 2;\r\n  }\r\n\r\n  getCoinsAwardedBase(state: GameState): number {\r\n    return 20;\r\n  }\r\n\r\n  getMonstiumAwardedBase(state: GameState): number {\r\n    return 3;\r\n  }\r\n\r\n  getNextAction(state: GameState): BattlerAction {\r\n    if (Math.random() < 0.1) {\r\n      return {\r\n        name: t(\"Jump adorably\"),\r\n        delay: this.getAttackDelay(state),\r\n        transform: (state) => state,\r\n      };\r\n    }\r\n    if (Math.random() < 0.2) {\r\n      return {\r\n        name: t(\"Double Attack\"),\r\n        delay: this.getAttackDelay(state) * 1.3,\r\n        transform: (state) => {\r\n          state = standardEnemyAttackEffect(state, this.getAttack(state) * 0.8);\r\n          state = standardEnemyAttackEffect(state, this.getAttack(state) * 0.8);\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n    return {\r\n      name: t(\"Attack\"),\r\n      delay: this.getAttackDelay(state),\r\n      transform: (state) =>\r\n        standardEnemyAttackEffect(state, this.getAttack(state)),\r\n    };\r\n  }\r\n\r\n  getItemsAwardedBase(state: GameState): EnemyLoot[] {\r\n    return [\r\n      {\r\n        itemId: Cherry.getId(),\r\n        amount: 1,\r\n        chance: 0.05,\r\n      },\r\n    ];\r\n  }\r\n}\r\n\r\nexport default new BreezyRabbit();\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport Wildgrass from \"../../../items/material/Wildgrass\";\r\nimport { HasteTemporaryEffect } from \"../../../spells/air/Haste\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport {\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../../temporaryeffects/TemporaryEffects\";\r\nimport { AttackTarget } from \"../../AttackTarget\";\r\nimport { setDungeonFloorCompleted } from \"../../dungeons/Dungeons\";\r\nimport {\r\n  getCurrentEnemyHPFraction,\r\n  standardEnemyAttackEffect,\r\n} from \"../../Exploration\";\r\nimport { BattlerAction, BattlerStats, Enemy, EnemyLoot } from \"../Enemy\";\r\n\r\nclass Windglider extends Enemy {\r\n  getId(): string {\r\n    return \"windglider\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Windglider\");\r\n  }\r\n\r\n  getBaseStats(): BattlerStats {\r\n    return {\r\n      maxHP: 700,\r\n      attack: 16,\r\n      defense: 5,\r\n      attackDelay: 1.0,\r\n      accuracy: 100,\r\n      dodge: 100,\r\n      crit: 0,\r\n    };\r\n  }\r\n\r\n  getPicture(state: GameState) {\r\n    return require(\"./windglider.png\");\r\n  }\r\n\r\n  getLevel(): number {\r\n    return 4;\r\n  }\r\n\r\n  getCoinsAwardedBase(state: GameState): number {\r\n    return 60;\r\n  }\r\n\r\n  getMonstiumAwardedBase(state: GameState): number {\r\n    return 4;\r\n  }\r\n\r\n  getNextAction(state: GameState): BattlerAction {\r\n    if (\r\n      !hasTemporaryEffect(\r\n        state,\r\n        HasteTemporaryEffect.getId(),\r\n        AttackTarget.Enemy,\r\n      ) &&\r\n      getCurrentEnemyHPFraction(state) < 0.5\r\n    ) {\r\n      return {\r\n        name: t(\"Haste\"),\r\n        delay: this.getAttackDelay(state) * 1.0,\r\n        transform: grantTemporaryEffect(HasteTemporaryEffect.getId(), 15, {\r\n          target: AttackTarget.Enemy,\r\n          params: { commonBuff: { AttackDelayMultiplier: 0.85 } },\r\n        }),\r\n      };\r\n    }\r\n    if (Math.random() < 0.3) {\r\n      return {\r\n        name: t(\"Air Blast\"),\r\n        delay: this.getAttackDelay(state) * 1.3,\r\n        transform: (state) =>\r\n          standardEnemyAttackEffect(state, this.getAttack(state) * 1.3, {\r\n            tags: [SpellElement.Air],\r\n            cause: t(\"Air Blast\"),\r\n          }),\r\n      };\r\n    }\r\n    return {\r\n      name: t(\"Attack\"),\r\n      delay: this.getAttackDelay(state),\r\n      transform: (state) =>\r\n        standardEnemyAttackEffect(state, this.getAttack(state)),\r\n    };\r\n  }\r\n\r\n  getItemsAwardedBase(state: GameState): EnemyLoot[] {\r\n    return [\r\n      {\r\n        itemId: Wildgrass.getId(),\r\n        amount: 2,\r\n        chance: 1.0,\r\n      },\r\n    ];\r\n  }\r\n\r\n  isBoss(): boolean {\r\n    return true;\r\n  }\r\n\r\n  onDeath(\r\n    state: GameState,\r\n    isFromCreatures: boolean,\r\n    familiarId?: string,\r\n  ): GameState {\r\n    state = super.onDeath(state, isFromCreatures, familiarId);\r\n    state = setDungeonFloorCompleted(state, \"trainingTowerEarth\");\r\n    return state;\r\n  }\r\n\r\n  getTips(): string {\r\n    return t(\r\n      \"The guardian of the Tower of Earth Training is an avian embodying Air. How does that make any sense?! Well... it attacks very fast, and will attack even faster after it uses Haste. You will need high :defense: for this one! Make sure to also have at least one way to heal! It is not too resilient, so just try to take down its health.\",\r\n    );\r\n  }\r\n}\r\n\r\nexport default new Windglider();\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { Flag } from \"../../../Flag\";\r\nimport { hasFlag } from \"../../../Flags\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport { Enemy } from \"../../enemies/Enemy\";\r\nimport BreezyRabbit from \"../../enemies/training/BreezyRabbit\";\r\nimport Slime from \"../../enemies/training/Slime\";\r\nimport FamiliarOfWind from \"../../enemies/training/Windglider\";\r\nimport {\r\n  DungeonFloor,\r\n  encounterEnemy,\r\n  ExplorationPossibility,\r\n} from \"../DungeonFloor\";\r\n\r\nconst EXPLORATION_POSSIBILITIES = [\r\n  {\r\n    weight: 100,\r\n    transforms: encounterEnemy(Slime),\r\n  },\r\n  {\r\n    weight: 150,\r\n    transforms: encounterEnemy(BreezyRabbit),\r\n  },\r\n];\r\n\r\nclass TrainingTowerEarth extends DungeonFloor {\r\n  getId(): string {\r\n    return \"trainingTowerEarth\";\r\n  }\r\n  getFloorName(): string {\r\n    return t(\"Tower of Earth Training\");\r\n  }\r\n  getBoss(state: GameState): Enemy {\r\n    return FamiliarOfWind;\r\n  }\r\n  getBreedingLevel(): number {\r\n    return 1;\r\n  }\r\n  isMainStoryDungeonFloor(): boolean {\r\n    return true;\r\n  }\r\n  getExplorationRequiredTimeSecBase(): number {\r\n    return 4.0;\r\n  }\r\n  _getExplorationSuccessesForBossBase(): number {\r\n    return 30;\r\n  }\r\n  getBaseExplorationPossibilities(state: GameState): ExplorationPossibility[] {\r\n    return EXPLORATION_POSSIBILITIES;\r\n  }\r\n  isUnlocked(state: GameState): boolean {\r\n    return (\r\n      ![SpellElement.Air, SpellElement.Fire, SpellElement.Water].includes(\r\n        state.run.primaryElement,\r\n      ) || hasFlag(state, Flag.RestOfTrainingUnlocked)\r\n    );\r\n  }\r\n}\r\n\r\nexport default new TrainingTowerEarth();\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { Cherry } from \"../../../items/equipment/pouch/Cherry\";\r\nimport Wildgrass from \"../../../items/material/Wildgrass\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport { standardEnemyAttackEffect } from \"../../Exploration\";\r\nimport { BattlerAction, BattlerStats, Enemy, EnemyLoot } from \"../Enemy\";\r\n\r\nclass FlyingRock extends Enemy {\r\n  getId(): string {\r\n    return \"flyingRock\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Flying Rock\");\r\n  }\r\n\r\n  getBaseStats(): BattlerStats {\r\n    return {\r\n      maxHP: 45,\r\n      attack: 16,\r\n      defense: 50,\r\n      attackDelay: 3.6,\r\n      accuracy: 100,\r\n      dodge: 100,\r\n      crit: 0,\r\n    };\r\n  }\r\n\r\n  getPicture(state: GameState) {\r\n    return require(\"./flyingRock.png\");\r\n  }\r\n\r\n  getLevel(): number {\r\n    return 2;\r\n  }\r\n\r\n  getCoinsAwardedBase(state: GameState): number {\r\n    return 16;\r\n  }\r\n\r\n  getMonstiumAwardedBase(state: GameState): number {\r\n    return 3;\r\n  }\r\n\r\n  getNextAction(state: GameState): BattlerAction {\r\n    if (Math.random() < 0.2) {\r\n      return {\r\n        name: t(\"Stone Strike\"),\r\n        delay: this.getAttackDelay(state) * 1.3,\r\n        transform: (state) =>\r\n          standardEnemyAttackEffect(state, this.getAttack(state) * 1.5, {\r\n            tags: [SpellElement.Earth],\r\n            cause: t(\"Stone Strike\"),\r\n          }),\r\n      };\r\n    }\r\n    return {\r\n      name: t(\"Attack\"),\r\n      delay: this.getAttackDelay(state),\r\n      transform: (state) =>\r\n        standardEnemyAttackEffect(state, this.getAttack(state)),\r\n    };\r\n  }\r\n\r\n  getItemsAwardedBase(state: GameState): EnemyLoot[] {\r\n    return [\r\n      {\r\n        itemId: Wildgrass.getId(),\r\n        amount: 1,\r\n        chance: 0.4,\r\n      },\r\n      {\r\n        itemId: Cherry.getId(),\r\n        amount: 1,\r\n        chance: 0.01,\r\n      },\r\n    ];\r\n  }\r\n}\r\n\r\nexport default new FlyingRock();\r\n","import { formatMultiplier, formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport { ActionEffect, DoActionArgs } from \"../../action/Action\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { CombatStat } from \"../../exploration/CombatStats\";\r\nimport { TemporaryEffect } from \"../../temporaryeffects/TemporaryEffect\";\r\nimport {\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n  grantTemporaryEffect,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport { TransformationType } from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { CombatSpellBase } from \"../CombatSpellBase\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport { registerEmpowerEffects } from \"../Spells\";\r\n\r\nclass StoneskinTemporaryEffect extends TemporaryEffect {\r\n  getId() {\r\n    return \"stoneskin\";\r\n  }\r\n\r\n  getDisplayName(): string {\r\n    return t(\"Stoneskin\");\r\n  }\r\n\r\n  getIcon() {\r\n    return require(\"./stoneskin.png\");\r\n  }\r\n\r\n  isCommonBuffEnabled(): { stat: CombatStat; type: TransformationType }[] {\r\n    return [\r\n      { stat: CombatStat.Defense, type: TransformationType.Addition },\r\n      { stat: CombatStat.Defense, type: TransformationType.Multiplier },\r\n    ];\r\n  }\r\n\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    const defense = temporaryEffectData.params.commonBuff.Defense;\r\n    if (!defense) {\r\n      const defenseRatio =\r\n        temporaryEffectData.params.commonBuff.DefenseMultiplier;\r\n      return t(\"{{ratio}}:defense:\", {\r\n        ratio: formatMultiplier(defenseRatio),\r\n      });\r\n    }\r\n    return t(\"+{{amount}}:defense:\", {\r\n      amount: formatNumber(defense),\r\n    });\r\n  }\r\n}\r\n\r\nconst temporaryEffect = new StoneskinTemporaryEffect();\r\nTemporaryEffects.register(temporaryEffect);\r\n\r\nclass Stoneskin extends CombatSpellBase {\r\n  getId(): string {\r\n    return \"stoneskin\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Stoneskin\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Earth;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.COMBAT_BUFF;\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 400;\r\n  }\r\n\r\n  canUseOutsideOfCombat(): boolean {\r\n    return true;\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 9,\r\n        tags: [TransformationTags.TemporaryEffectMagnitude],\r\n        unit: \":defense:\",\r\n      },\r\n      duration: {\r\n        value: 60.0,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n        unit: t(\" sec\"),\r\n      },\r\n    };\r\n  }\r\n\r\n  doSpellAction(state: GameState, args: DoActionArgs): GameState {\r\n    const effects = this.getActionEffects(state);\r\n    return grantTemporaryEffect(temporaryEffect.getId(), effects.duration, {\r\n      params: { commonBuff: { Defense: effects.magnitude } },\r\n    })(state);\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\"Harden your skin, to protect yourself against blows.\");\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanations = this.getActionEffectExplanations(state);\r\n    return t(\r\n      \"^+{{amount}}^<{{amountExplanation}}>:defense: for ^{{duration}}^<{{durationExplanation}}> sec\",\r\n      {\r\n        amount: formatNumber(effects.magnitude),\r\n        amountExplanation: explanations.magnitude,\r\n        duration: formatNumber(effects.duration),\r\n        durationExplanation: explanations.duration,\r\n      },\r\n    );\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Earth: 4 };\r\n  }\r\n\r\n  protected isEmpowerable(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getEmpoweringLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Earth: 54 };\r\n  }\r\n}\r\n\r\nconst stoneskin = new Stoneskin();\r\n\r\nregisterEmpowerEffects(stoneskin, [TransformationTags.Cost, Resource.Mana], 40);\r\nregisterEmpowerEffects(\r\n  stoneskin,\r\n  [TransformationTags.TemporaryEffectMagnitude],\r\n  7,\r\n);\r\n\r\nexport { stoneskin as Stoneskin, temporaryEffect as StoneskinTemporaryEffect };\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport Wildgrass from \"../../../items/material/Wildgrass\";\r\nimport { StoneskinTemporaryEffect } from \"../../../spells/earth/Stoneskin\";\r\nimport {\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../../temporaryeffects/TemporaryEffects\";\r\nimport { AttackTarget } from \"../../AttackTarget\";\r\nimport { setDungeonFloorCompleted } from \"../../dungeons/Dungeons\";\r\nimport {\r\n  getCurrentEnemyHPFraction,\r\n  standardEnemyAttackEffect,\r\n} from \"../../Exploration\";\r\nimport { BattlerAction, BattlerStats, Enemy, EnemyLoot } from \"../Enemy\";\r\n\r\nclass RockGolem extends Enemy {\r\n  getId(): string {\r\n    return \"rockGolem\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Rock Golem\");\r\n  }\r\n\r\n  getBaseStats(): BattlerStats {\r\n    return {\r\n      maxHP: 300,\r\n      attack: 21,\r\n      defense: 65,\r\n      attackDelay: 3.5,\r\n      accuracy: 100,\r\n      dodge: 100,\r\n      crit: 0,\r\n    };\r\n  }\r\n\r\n  getPicture(state: GameState) {\r\n    return require(\"./rockGolem.png\");\r\n  }\r\n\r\n  getLevel(): number {\r\n    return 4;\r\n  }\r\n\r\n  getCoinsAwardedBase(state: GameState): number {\r\n    return 40;\r\n  }\r\n\r\n  getMonstiumAwardedBase(state: GameState): number {\r\n    return 8;\r\n  }\r\n\r\n  getNextAction(state: GameState): BattlerAction {\r\n    if (\r\n      !hasTemporaryEffect(\r\n        state,\r\n        StoneskinTemporaryEffect.getId(),\r\n        AttackTarget.Enemy,\r\n      ) &&\r\n      getCurrentEnemyHPFraction(state) < 0.5 &&\r\n      Math.random() < 0.5\r\n    ) {\r\n      return {\r\n        name: t(\"Stoneskin\"),\r\n        delay: this.getAttackDelay(state) * 1.0,\r\n        transform: grantTemporaryEffect(StoneskinTemporaryEffect.getId(), 20, {\r\n          target: AttackTarget.Enemy,\r\n          params: { commonBuff: { DefenseMultiplier: 1.3 } },\r\n        }),\r\n      };\r\n    }\r\n    if (Math.random() < 0.3) {\r\n      return {\r\n        name: t(\"Stone Strike\"),\r\n        delay: this.getAttackDelay(state) * 1.3,\r\n        transform: (state) =>\r\n          standardEnemyAttackEffect(state, this.getAttack(state) * 1.5),\r\n      };\r\n    }\r\n    return {\r\n      name: t(\"Attack\"),\r\n      delay: this.getAttackDelay(state),\r\n      transform: (state) =>\r\n        standardEnemyAttackEffect(state, this.getAttack(state)),\r\n    };\r\n  }\r\n\r\n  isBoss(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getItemsAwardedBase(state: GameState): EnemyLoot[] {\r\n    return [\r\n      {\r\n        itemId: Wildgrass.getId(),\r\n        amount: 2,\r\n        chance: 1.0,\r\n      },\r\n    ];\r\n  }\r\n\r\n  onDeath(\r\n    state: GameState,\r\n    isFromCreatures: boolean,\r\n    familiarId?: string,\r\n  ): GameState {\r\n    state = super.onDeath(state, isFromCreatures, familiarId);\r\n    state = setDungeonFloorCompleted(state, \"trainingTowerFire\");\r\n    return state;\r\n  }\r\n\r\n  getTips(): string {\r\n    return t(\r\n      \"This moving Rock Golem is the guardian of the Tower of Fire Training. It has quite low maximum :hp:, but its :defense: is extremely high, and it can get it even higher! You will need weapons and spells that have a lot of :attack: to pierce through, such as axes or Fireball.\",\r\n    );\r\n  }\r\n}\r\n\r\nexport default new RockGolem();\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { Flag } from \"../../../Flag\";\r\nimport { hasFlag } from \"../../../Flags\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport { Enemy } from \"../../enemies/Enemy\";\r\nimport FlyingRock from \"../../enemies/training/FlyingRock\";\r\nimport RockGolem from \"../../enemies/training/RockGolem\";\r\nimport Slime from \"../../enemies/training/Slime\";\r\nimport {\r\n  DungeonFloor,\r\n  encounterEnemy,\r\n  ExplorationPossibility,\r\n} from \"../DungeonFloor\";\r\n\r\nconst EXPLORATION_POSSIBILITIES = [\r\n  {\r\n    weight: 100,\r\n    transforms: encounterEnemy(Slime),\r\n  },\r\n  {\r\n    weight: 150,\r\n    transforms: encounterEnemy(FlyingRock),\r\n  },\r\n];\r\nclass TrainingTowerFire extends DungeonFloor {\r\n  getId(): string {\r\n    return \"trainingTowerFire\";\r\n  }\r\n  getFloorName(): string {\r\n    return t(\"Tower of Fire Training\");\r\n  }\r\n  getBoss(state: GameState): Enemy {\r\n    return RockGolem;\r\n  }\r\n  getBreedingLevel(): number {\r\n    return 1;\r\n  }\r\n  isMainStoryDungeonFloor(): boolean {\r\n    return true;\r\n  }\r\n  getExplorationRequiredTimeSecBase(): number {\r\n    return 4.0;\r\n  }\r\n  _getExplorationSuccessesForBossBase(): number {\r\n    return 30;\r\n  }\r\n  getBaseExplorationPossibilities(state: GameState): ExplorationPossibility[] {\r\n    return EXPLORATION_POSSIBILITIES;\r\n  }\r\n  isUnlocked(state: GameState): boolean {\r\n    return (\r\n      ![SpellElement.Air, SpellElement.Earth, SpellElement.Water].includes(\r\n        state.run.primaryElement,\r\n      ) || hasFlag(state, Flag.RestOfTrainingUnlocked)\r\n    );\r\n  }\r\n}\r\n\r\nexport default new TrainingTowerFire();\r\n","import { DungeonFloor } from \"../../exploration/dungeons/DungeonFloor\";\r\nimport {\r\n  addEnemyDeathListener,\r\n  getCurrentDungeonFloor,\r\n  getSuccessfulExplorationsForFloor,\r\n} from \"../../exploration/Exploration\";\r\nimport { ExplorationStatus } from \"../../exploration/ExplorationStatus\";\r\nimport { getExplorationStatus } from \"../../exploration/ExplorationUtils\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { DataStore } from \"../../generic/DataStore\";\r\nimport { Identifiable } from \"../../generic/Identifiable\";\r\nimport { triggerEvent } from \"../Events\";\r\nimport { GameEvent } from \"../GameEvent\";\r\n\r\nexport type ExplorationEvent = {\r\n  event: GameEvent;\r\n  getWeight: (state: GameState) => number;\r\n  getParams?: (state: GameState) => any;\r\n};\r\n\r\nexport abstract class ExplorationTriggerGroup implements Identifiable {\r\n  explorationEvents: ExplorationEvent[] = [];\r\n\r\n  abstract getId(): string;\r\n\r\n  abstract getExplorationSuccessesBase(): number;\r\n\r\n  abstract getDungeonFloors(): DungeonFloor[];\r\n\r\n  abstract getHintMessageWhenPossible(state: GameState): string;\r\n  abstract getHintMessageWhenNotPossible(state: GameState): string;\r\n\r\n  getHintMessage(state: GameState): string {\r\n    if (this.isDoneForThisRun(state)) {\r\n      return this.getHintMessageWhenNotPossible(state);\r\n    }\r\n    return this.getHintMessageWhenPossible(state);\r\n  }\r\n\r\n  maxTriggersPerRun(): number | undefined {\r\n    return undefined;\r\n  }\r\n\r\n  isDoneForThisRun(state: GameState): boolean {\r\n    const maxTriggers = this.maxTriggersPerRun();\r\n    if (maxTriggers === undefined) {\r\n      return false;\r\n    }\r\n\r\n    const timesTriggered =\r\n      state.run.explorationTriggers[this.getId()]?.timesTriggered ?? 0;\r\n    if (timesTriggered >= maxTriggers) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  addExplorationEvent(event: ExplorationEvent) {\r\n    this.explorationEvents.push(event);\r\n  }\r\n\r\n  getExplorationAmountNeeded(state: GameState): number {\r\n    if (state.run.explorationTriggers[this.getId()] == undefined) {\r\n      state.run.explorationTriggers[this.getId()] = {\r\n        timesTriggered: 0,\r\n        next:\r\n          this.getExplorationSuccessesBase() *\r\n          (1 + 0.5 * (0.5 - Math.random())),\r\n      };\r\n    }\r\n    return state.run.explorationTriggers[this.getId()].next;\r\n  }\r\n\r\n  getTotalExplorationSuccesses(state: GameState): number {\r\n    return this.getDungeonFloors().reduce(\r\n      (accumulated, floor) =>\r\n        accumulated + getSuccessfulExplorationsForFloor(state, floor.getId()),\r\n      0,\r\n    );\r\n  }\r\n\r\n  checkAndTrigger(state: GameState): GameState {\r\n    const totalExplorations = this.getTotalExplorationSuccesses(state);\r\n    if (\r\n      getExplorationStatus(state) != ExplorationStatus.None &&\r\n      this.getDungeonFloors().includes(getCurrentDungeonFloor(state)) &&\r\n      totalExplorations >= this.getExplorationAmountNeeded(state)\r\n    ) {\r\n      const totalWeight = this.explorationEvents.reduce(\r\n        (sum, current) => sum + current.getWeight(state),\r\n        0,\r\n      );\r\n      if (totalWeight <= 0) {\r\n        return state;\r\n      }\r\n\r\n      let randomValue = Math.random() * totalWeight;\r\n      for (let event of this.explorationEvents) {\r\n        randomValue -= event.getWeight(state);\r\n        if (randomValue < 0) {\r\n          // We have selected an event and should trigger it\r\n          const timesTriggered =\r\n            state.run.explorationTriggers[this.getId()].timesTriggered + 1;\r\n          state.run.explorationTriggers[this.getId()].timesTriggered =\r\n            timesTriggered;\r\n          state.run.explorationTriggers[this.getId()].next =\r\n            totalExplorations +\r\n            Math.pow(timesTriggered + 1, 1.9) *\r\n              this.getExplorationSuccessesBase() *\r\n              (1 + 0.3 * (0.5 - Math.random()));\r\n          state = triggerEvent(\r\n            event.event,\r\n            event?.getParams?.(state) ?? {},\r\n          )(state);\r\n          return state;\r\n        }\r\n      }\r\n    }\r\n    return state;\r\n  }\r\n}\r\n\r\nexport const ExplorationTriggerGroups =\r\n  new DataStore<ExplorationTriggerGroup>();\r\n\r\naddEnemyDeathListener(\"explorationTriggerGroups\", (state) => {\r\n  ExplorationTriggerGroups.getAll().forEach((group) => {\r\n    state = group.checkAndTrigger(state);\r\n  });\r\n  return state;\r\n});\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass FeatheredHat extends EquippableItem {\r\n  getId(): string {\r\n    return \"featheredHat\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Accessory;\r\n  }\r\n  getPicture() {\r\n    return require(\"./featheredHat.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Feathered Hat\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"A hat decorated with a feather. Not too strong, but it makes you feel light.\",\r\n    );\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 400;\r\n  }\r\n\r\n  getDefenseBonusBase(params: ItemParams): number {\r\n    return 2;\r\n  }\r\n\r\n  getAttackDelayBonusRatioBase(params: ItemParams): number {\r\n    return -0.05;\r\n  }\r\n}\r\n\r\nconst featheredHat = new FeatheredHat();\r\n\r\nclass TransmuteFeatheredHat extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return featheredHat;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Air: 4,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 200,\r\n        AirEssence: 2000,\r\n      },\r\n      items: {\r\n        elementalShardAir: 4,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Air;\r\n  }\r\n}\r\n\r\nconst transmuteFeatheredHat = new TransmuteFeatheredHat();\r\nexport {\r\n  featheredHat as FeatheredHat,\r\n  transmuteFeatheredHat as TransmuteFeatheredHat,\r\n};\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass StoneMail extends EquippableItem {\r\n  getId(): string {\r\n    return \"stoneMail\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Body;\r\n  }\r\n  getPicture() {\r\n    return require(\"./stoneMail.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Stone Mail\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"Armor that is particularly protective, but with a drawback to mobility.\",\r\n    );\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 700;\r\n  }\r\n\r\n  getDefenseBonusBase(params: ItemParams): number {\r\n    return 28;\r\n  }\r\n\r\n  getAttackDelayBonusRatioBase(params: ItemParams): number {\r\n    return 0.2;\r\n  }\r\n}\r\n\r\nconst stoneMail = new StoneMail();\r\n\r\nclass TransmuteStoneMail extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return stoneMail;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Earth: 5,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 200,\r\n        EarthEssence: 3000,\r\n      },\r\n      items: {\r\n        elementalShardEarth: 15,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Earth;\r\n  }\r\n}\r\n\r\nconst transmuteStoneMail = new TransmuteStoneMail();\r\nexport { stoneMail as StoneMail, transmuteStoneMail as TransmuteStoneMail };\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass WizardsRobe extends EquippableItem {\r\n  getId(): string {\r\n    return \"wizardsRobe\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Body;\r\n  }\r\n  getPicture() {\r\n    return require(\"./wizardsRobe.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Wizard's Robe\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\"Basic clothing for a wizard. Enhances spellcasting ability.\");\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 500;\r\n  }\r\n\r\n  getDefenseBonusBase(params: ItemParams): number {\r\n    return 10;\r\n  }\r\n\r\n  getManaRegenBonusBase(params: ItemParams): number {\r\n    return 6;\r\n  }\r\n\r\n  getMaxManaBonusBase(params: ItemParams): number {\r\n    return 500;\r\n  }\r\n}\r\n\r\nconst wizardsRobe = new WizardsRobe();\r\n\r\nclass TransmuteWizardsRobe extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return wizardsRobe;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Water: 5,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 200,\r\n        WaterEssence: 2500,\r\n      },\r\n      items: {\r\n        elementalShardWater: 10,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Water;\r\n  }\r\n}\r\n\r\nconst transmuteWizardsRobe = new TransmuteWizardsRobe();\r\nexport {\r\n  wizardsRobe as WizardsRobe,\r\n  transmuteWizardsRobe as TransmuteWizardsRobe,\r\n};\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass Glaive extends EquippableItem {\r\n  getId(): string {\r\n    return \"glaive\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Hand;\r\n  }\r\n  getPicture() {\r\n    return require(\"./glaive.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Glaive\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\"A fairly speedy weapon. It can attack from some distance.\");\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 1300;\r\n  }\r\n\r\n  getAttackBonusBase(params: ItemParams): number {\r\n    return 45;\r\n  }\r\n\r\n  getAttackDelayBonusRatioBase(params: ItemParams): number {\r\n    return -0.2;\r\n  }\r\n}\r\n\r\nexport const glaive = new Glaive();\r\n\r\nclass TransmuteGlaive extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return glaive;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Air: 12,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 300,\r\n        AirEssence: 4200,\r\n        WaterEssence: 3500,\r\n      },\r\n      items: {\r\n        elementalShardAir: 35,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Air;\r\n  }\r\n}\r\n\r\nexport const transmuteGlaive = new TransmuteGlaive();\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass BastardSword extends EquippableItem {\r\n  getId(): string {\r\n    return \"bastardSword\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Hand;\r\n  }\r\n  getPicture() {\r\n    return require(\"./bastardSword.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Bastard Sword\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"A sword that is much like a longsword, but slightly more elaborate.\",\r\n    );\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 900;\r\n  }\r\n\r\n  getAttackBonusBase(params: ItemParams): number {\r\n    return 50;\r\n  }\r\n}\r\n\r\nconst bastardSword = new BastardSword();\r\n\r\nclass TransmuteBastardSword extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return bastardSword;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Earth: 10,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 300,\r\n        EarthEssence: 4000,\r\n      },\r\n      items: {\r\n        elementalShardEarth: 25,\r\n        elementalShardFire: 4,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Earth;\r\n  }\r\n}\r\n\r\nconst transmuteBastardSword = new TransmuteBastardSword();\r\nexport { bastardSword, transmuteBastardSword };\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass BattleAxe extends EquippableItem {\r\n  getId(): string {\r\n    return \"battleAxe\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Hand;\r\n  }\r\n  getExtraSlots(): EquipmentSlot[] {\r\n    return [EquipmentSlot.Accessory];\r\n  }\r\n  getPicture() {\r\n    return require(\"./battleAxe.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Battle Axe\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\"A large axe. Very strong, but difficult to swing.\");\r\n  }\r\n  getEffectExtra(state: GameState, params: ItemParams): string {\r\n    return t(\"Extra large\");\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 900;\r\n  }\r\n\r\n  getAttackBonusBase(params: ItemParams): number {\r\n    return 95;\r\n  }\r\n\r\n  getAttackDelayBonusRatioBase(params: ItemParams): number {\r\n    return 0.6;\r\n  }\r\n}\r\n\r\nconst battleAxe = new BattleAxe();\r\n\r\nclass TransmuteBattleAxe extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return battleAxe;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Fire: 11,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 300,\r\n        FireEssence: 4000,\r\n      },\r\n      items: {\r\n        elementalShardFire: 20,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Fire;\r\n  }\r\n}\r\n\r\nconst transmuteBattleAxe = new TransmuteBattleAxe();\r\nexport { battleAxe as BattleAxe, transmuteBattleAxe as TransmuteBattleAxe };\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass HandAxe extends EquippableItem {\r\n  getId(): string {\r\n    return \"handAxe\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Hand;\r\n  }\r\n  getPicture() {\r\n    return require(\"./handAxe.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Hand Axe\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"A small axe, meant to be carried in one hand. Heavy and slow, but damaging.\",\r\n    );\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 500;\r\n  }\r\n\r\n  getAttackBonusBase(params: ItemParams): number {\r\n    return 50;\r\n  }\r\n\r\n  getAttackDelayBonusRatioBase(params: ItemParams): number {\r\n    return 0.5;\r\n  }\r\n}\r\n\r\nconst handAxe = new HandAxe();\r\n\r\nclass TransmuteHandAxe extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return handAxe;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Fire: 5,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 200,\r\n        FireEssence: 1800,\r\n      },\r\n      items: {\r\n        elementalShardFire: 6,\r\n        elementalShardEarth: 2,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Fire;\r\n  }\r\n}\r\n\r\nconst transmuteHandAxe = new TransmuteHandAxe();\r\nexport { handAxe as HandAxe, transmuteHandAxe as TransmuteHandAxe };\r\n","import { formatMultiplier } from \"../../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../../utils/I18n\";\r\nimport { ActionEffect } from \"../../../../action/Action\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../../../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../../../transformation/TransformationTags\";\r\nimport { EquipmentSlot, getEquippedItem } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass WandOfWater extends EquippableItem {\r\n  getId(): string {\r\n    return \"wandOfWater\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Hand;\r\n  }\r\n  getPicture() {\r\n    return require(\"./wandOfWater.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Wand of Water\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"A magical wand with a special affinity for Water. Increases power of Water spells.\",\r\n    );\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 1800;\r\n  }\r\n\r\n  getAttackBonusBase(params: ItemParams): number {\r\n    return 27;\r\n  }\r\n\r\n  getManaRegenBonusBase(params: ItemParams): number {\r\n    return 16;\r\n  }\r\n\r\n  getMaxManaBonusBase(params: ItemParams): number {\r\n    return 700;\r\n  }\r\n\r\n  protected getBaseExtraItemEffects(\r\n    params: ItemParams,\r\n  ): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 0.15,\r\n        valueType: TransformationValueType.Percent,\r\n      },\r\n    };\r\n  }\r\n\r\n  getEffectExtra(state: GameState, params: ItemParams): string {\r\n    const effects = this.getItemEffects(state, params);\r\n    const explanations = this.getItemEffectExplanations(state, params);\r\n    return t(\r\n      \"^{{magnitude}}^<{{explanation}}> power of Water elemental spells\",\r\n      {\r\n        magnitude: formatMultiplier(1.0 + effects.magnitude),\r\n        explanation: explanations.magnitude,\r\n      },\r\n    );\r\n  }\r\n}\r\n\r\nexport const wandOfWater = new WandOfWater();\r\n\r\nregisterTransformation(\r\n  [\r\n    [\r\n      TransformationTags.ActionEffect,\r\n      TransformationTags.ActionMagnitude,\r\n      SpellElement.Water,\r\n    ],\r\n    [\r\n      TransformationTags.ActionEffect,\r\n      TransformationTags.TemporaryEffectMagnitude,\r\n      SpellElement.Water,\r\n    ],\r\n  ],\r\n  wandOfWater.getId(),\r\n  wandOfWater.getName(wandOfWater.getDefaultParams()),\r\n  TransformationType.Multiplier,\r\n  (state) =>\r\n    getEquippedItem(state, EquipmentSlot.Hand)?.itemId == wandOfWater.getId()\r\n      ? wandOfWater.getEquippedItemEffect(state, \"magnitude\").magnitude + 1.0\r\n      : 1.0,\r\n);\r\n\r\nclass TransmuteWandOfWater extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return wandOfWater;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Water: 14,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 400,\r\n        WaterEssence: 5000,\r\n      },\r\n      items: {\r\n        elementalShardWater: 65,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Water;\r\n  }\r\n}\r\n\r\nexport const transmuteWandOfWater = new TransmuteWandOfWater();\r\n","import {\r\n  DungeonEventGroup,\r\n  getOrCreateDungeonEventGroup,\r\n} from \"../../events/DungeonEventGroup\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Identifiable } from \"../../generic/Identifiable\";\r\nimport { DungeonFloor } from \"./DungeonFloor\";\r\n\r\nexport abstract class Dungeon implements Identifiable {\r\n  abstract getId(): string;\r\n  abstract getName(): string;\r\n  abstract getDungeonFloors(): DungeonFloor[];\r\n  abstract isUnlocked(state: GameState): boolean;\r\n\r\n  getDungeonEventGroup(): DungeonEventGroup {\r\n    return getOrCreateDungeonEventGroup(this.getId());\r\n  }\r\n\r\n  hasTriggeredEvent(state: GameState): boolean {\r\n    const triggered =\r\n      this.getDungeonEventGroup().hasFinishedTriggeringThisRun(state);\r\n    return triggered;\r\n  }\r\n}\r\n","import { formatMultiplier, formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport { ActionEffect, DoActionArgs } from \"../../action/Action\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { CombatStat } from \"../../exploration/CombatStats\";\r\nimport { TemporaryEffect } from \"../../temporaryeffects/TemporaryEffect\";\r\nimport {\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n  grantTemporaryEffect,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport { TransformationType } from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { CombatSpellBase } from \"../CombatSpellBase\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport { registerEmpowerEffects } from \"../Spells\";\r\n\r\nclass StrengthTemporaryEffect extends TemporaryEffect {\r\n  getId() {\r\n    return \"strength\";\r\n  }\r\n\r\n  getDisplayName(): string {\r\n    return t(\"Strength\");\r\n  }\r\n\r\n  getIcon() {\r\n    return require(\"./strength.png\");\r\n  }\r\n\r\n  isCommonBuffEnabled(): { stat: CombatStat; type: TransformationType }[] {\r\n    return [\r\n      { stat: CombatStat.Attack, type: TransformationType.Addition },\r\n      { stat: CombatStat.Attack, type: TransformationType.Multiplier },\r\n    ];\r\n  }\r\n\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    const attack = temporaryEffectData.params.commonBuff.Attack;\r\n    if (!attack) {\r\n      const attackRatio =\r\n        temporaryEffectData.params.commonBuff.AttackMultiplier;\r\n      return t(\"{{ratio}}:attack:\", {\r\n        ratio: formatMultiplier(attackRatio),\r\n      });\r\n    }\r\n    return t(\"+{{amount}}:attack:\", {\r\n      amount: formatNumber(attack),\r\n    });\r\n  }\r\n}\r\n\r\nconst temporaryEffect = new StrengthTemporaryEffect();\r\nTemporaryEffects.register(temporaryEffect);\r\n\r\nclass Strength extends CombatSpellBase {\r\n  getId(): string {\r\n    return \"strength\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Strength\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Fire;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.COMBAT_BUFF;\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 650;\r\n  }\r\n\r\n  canUseOutsideOfCombat(): boolean {\r\n    return true;\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 8,\r\n        tags: [TransformationTags.TemporaryEffectMagnitude],\r\n        unit: \":attack:\",\r\n      },\r\n      duration: {\r\n        value: 60.0,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n        unit: t(\" sec\"),\r\n      },\r\n    };\r\n  }\r\n\r\n  doSpellAction(state: GameState, args: DoActionArgs): GameState {\r\n    const effects = this.getActionEffects(state);\r\n    return grantTemporaryEffect(temporaryEffect.getId(), effects.duration, {\r\n      params: { commonBuff: { Attack: effects.magnitude } },\r\n    })(state);\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Increase your physical strength through a temporary enchantment.\",\r\n    );\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanations = this.getActionEffectExplanations(state);\r\n    return t(\r\n      \"^+{{amount}}^<{{amountExplanation}}>:attack: for ^{{duration}}^<{{durationExplanation}}> sec\",\r\n      {\r\n        amount: formatNumber(effects.magnitude),\r\n        amountExplanation: explanations.magnitude,\r\n        duration: formatNumber(effects.duration),\r\n        durationExplanation: explanations.duration,\r\n      },\r\n    );\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Fire: 8 };\r\n  }\r\n\r\n  protected isEmpowerable(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getEmpoweringLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Fire: 52 };\r\n  }\r\n}\r\n\r\nconst strength = new Strength();\r\n\r\nregisterEmpowerEffects(strength, [TransformationTags.Cost, Resource.Mana], 20);\r\nregisterEmpowerEffects(\r\n  strength,\r\n  [TransformationTags.TemporaryEffectMagnitude],\r\n  4,\r\n);\r\n\r\nexport { strength as Strength, temporaryEffect as StrengthTemporaryEffect };\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { getCombatVariable, setCombatVariable } from \"../../../Flags\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport Wildgrass from \"../../../items/material/Wildgrass\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport { StrengthTemporaryEffect } from \"../../../spells/fire/Strength\";\r\nimport {\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../../temporaryeffects/TemporaryEffects\";\r\nimport { AttackTarget } from \"../../AttackTarget\";\r\nimport { setDungeonFloorCompleted } from \"../../dungeons/Dungeons\";\r\nimport {\r\n  getCurrentEnemyHPFraction,\r\n  standardEnemyAttackEffect,\r\n} from \"../../Exploration\";\r\nimport { BattlerAction, BattlerStats, Enemy, EnemyLoot } from \"../Enemy\";\r\n\r\nclass BlazingTurtle extends Enemy {\r\n  getId(): string {\r\n    return \"blazingTurtle\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Blazing Turtle\");\r\n  }\r\n\r\n  getBaseStats(): BattlerStats {\r\n    return {\r\n      maxHP: 700,\r\n      attack: 40,\r\n      defense: 32,\r\n      attackDelay: 6.0,\r\n      accuracy: 100,\r\n      dodge: 100,\r\n      crit: 0,\r\n    };\r\n  }\r\n\r\n  getPicture(state: GameState) {\r\n    return require(\"./blazingTurtle.png\");\r\n  }\r\n\r\n  getLevel(): number {\r\n    return 4;\r\n  }\r\n\r\n  getCoinsAwardedBase(state: GameState): number {\r\n    return 55;\r\n  }\r\n\r\n  getMonstiumAwardedBase(state: GameState): number {\r\n    return 5;\r\n  }\r\n\r\n  getNextAction(state: GameState): BattlerAction {\r\n    if (\r\n      getCurrentEnemyHPFraction(state) < 0.5 &&\r\n      !getCombatVariable(state, \"hasUsedFireball\")\r\n    ) {\r\n      return {\r\n        name: t(\"Fireball\"),\r\n        delay: this.getAttackDelay(state) * 3.0,\r\n        transform: (state) => {\r\n          state = standardEnemyAttackEffect(\r\n            state,\r\n            this.getAttack(state) * 2.0,\r\n            {\r\n              tags: [SpellElement.Fire],\r\n            },\r\n          );\r\n          state = setCombatVariable(\"hasUsedFireball\", true)(state);\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n    if (\r\n      Math.random() < 0.2 &&\r\n      !hasTemporaryEffect(\r\n        state,\r\n        StrengthTemporaryEffect.getId(),\r\n        AttackTarget.Enemy,\r\n      )\r\n    ) {\r\n      return {\r\n        name: t(\"Strength\"),\r\n        delay: this.getAttackDelay(state) * 1.2,\r\n        transform: (state) =>\r\n          grantTemporaryEffect(StrengthTemporaryEffect.getId(), 30, {\r\n            target: AttackTarget.Enemy,\r\n            params: { commonBuff: { AttackMultiplier: 1.25 } },\r\n          })(state),\r\n      };\r\n    }\r\n    return {\r\n      name: t(\"Attack\"),\r\n      delay: this.getAttackDelay(state),\r\n      transform: (state) =>\r\n        standardEnemyAttackEffect(state, this.getAttack(state)),\r\n    };\r\n  }\r\n\r\n  isBoss(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getItemsAwardedBase(state: GameState): EnemyLoot[] {\r\n    return [\r\n      {\r\n        itemId: Wildgrass.getId(),\r\n        amount: 2,\r\n        chance: 1.0,\r\n      },\r\n    ];\r\n  }\r\n\r\n  onDeath(\r\n    state: GameState,\r\n    isFromCreatures: boolean,\r\n    familiarId?: string,\r\n  ): GameState {\r\n    state = super.onDeath(state, isFromCreatures, familiarId);\r\n    state = setDungeonFloorCompleted(state, \"trainingTowerWater\");\r\n    return state;\r\n  }\r\n\r\n  getTips(): string {\r\n    return t(\r\n      \"This guardian... It is literally a turtle in flames! Its attacks are extremely strong and easily pierce through any amount of defense, but they are very slow. It also has a fair amount of defense. Using effects that increase your maximum :hp: might be the best way to survive Fireball. But you will also need to have a good source of healing that you can repeat, because it does a lot of damage! A weapon with high :attack: might also be effective.\",\r\n    );\r\n  }\r\n}\r\n\r\nexport default new BlazingTurtle();\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { Cherry } from \"../../../items/equipment/pouch/Cherry\";\r\nimport Wildgrass from \"../../../items/material/Wildgrass\";\r\nimport { standardEnemyAttackEffect } from \"../../Exploration\";\r\nimport { BattlerAction, BattlerStats, Enemy, EnemyLoot } from \"../Enemy\";\r\n\r\nclass FireBat extends Enemy {\r\n  getId(): string {\r\n    return \"fireBat\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Fire Bat\");\r\n  }\r\n\r\n  getBaseStats(): BattlerStats {\r\n    return {\r\n      maxHP: 60,\r\n      attack: 27,\r\n      defense: 8,\r\n      attackDelay: 4.5,\r\n      accuracy: 100,\r\n      dodge: 100,\r\n      crit: 0,\r\n    };\r\n  }\r\n\r\n  getPicture(state: GameState) {\r\n    return require(\"./fireBat.png\");\r\n  }\r\n\r\n  getLevel(): number {\r\n    return 2;\r\n  }\r\n\r\n  getCoinsAwardedBase(state: GameState): number {\r\n    return 17;\r\n  }\r\n\r\n  getMonstiumAwardedBase(state: GameState): number {\r\n    return 3;\r\n  }\r\n\r\n  getNextAction(state: GameState): BattlerAction {\r\n    if (Math.random() < 0.25) {\r\n      return {\r\n        name: t(\"Burning Bite\"),\r\n        delay: this.getAttackDelay(state) * 2.0,\r\n        transform: (state) => {\r\n          state = standardEnemyAttackEffect(state, this.getAttack(state) * 1.5);\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n    return {\r\n      name: t(\"Attack\"),\r\n      delay: this.getAttackDelay(state),\r\n      transform: (state) =>\r\n        standardEnemyAttackEffect(state, this.getAttack(state)),\r\n    };\r\n  }\r\n\r\n  getItemsAwardedBase(state: GameState): EnemyLoot[] {\r\n    return [\r\n      {\r\n        itemId: Wildgrass.getId(),\r\n        amount: 1,\r\n        chance: 0.2,\r\n      },\r\n      {\r\n        itemId: Cherry.getId(),\r\n        amount: 1,\r\n        chance: 0.02,\r\n      },\r\n    ];\r\n  }\r\n}\r\n\r\nexport default new FireBat();\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { Flag } from \"../../../Flag\";\r\nimport { hasFlag } from \"../../../Flags\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport { Enemy } from \"../../enemies/Enemy\";\r\nimport BlazingTurtle from \"../../enemies/training/BlazingTurtle\";\r\nimport FireBat from \"../../enemies/training/FireBat\";\r\nimport Slime from \"../../enemies/training/Slime\";\r\nimport {\r\n  DungeonFloor,\r\n  encounterEnemy,\r\n  ExplorationPossibility,\r\n} from \"../DungeonFloor\";\r\n\r\nconst EXPLORATION_POSSIBILITIES = [\r\n  {\r\n    weight: 100,\r\n    transforms: encounterEnemy(Slime),\r\n  },\r\n  {\r\n    weight: 150,\r\n    transforms: encounterEnemy(FireBat),\r\n  },\r\n];\r\nclass TrainingTowerAir extends DungeonFloor {\r\n  getId(): string {\r\n    return \"trainingTowerWater\";\r\n  }\r\n  getFloorName(): string {\r\n    return t(\"Tower of Water Training\");\r\n  }\r\n  getBoss(state: GameState): Enemy {\r\n    return BlazingTurtle;\r\n  }\r\n  getBreedingLevel(): number {\r\n    return 1;\r\n  }\r\n  isMainStoryDungeonFloor(): boolean {\r\n    return true;\r\n  }\r\n  getExplorationRequiredTimeSecBase(): number {\r\n    return 4.0;\r\n  }\r\n  _getExplorationSuccessesForBossBase(): number {\r\n    return 30;\r\n  }\r\n  getBaseExplorationPossibilities(state: GameState): ExplorationPossibility[] {\r\n    return EXPLORATION_POSSIBILITIES;\r\n  }\r\n  isUnlocked(state: GameState): boolean {\r\n    return (\r\n      ![SpellElement.Earth, SpellElement.Fire, SpellElement.Air].includes(\r\n        state.run.primaryElement,\r\n      ) || hasFlag(state, Flag.RestOfTrainingUnlocked)\r\n    );\r\n  }\r\n}\r\n\r\nexport default new TrainingTowerAir();\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { createChestEvent } from \"../../../events/autorandom/Chest\";\r\nimport { ExplorationTriggerGroup } from \"../../../events/autorandom/ExplorationTrigger\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { FeatheredHat } from \"../../../items/equipment/accessory/air/FeatheredHat\";\r\nimport { StoneMail } from \"../../../items/equipment/body/earth/StoneMail\";\r\nimport { WizardsRobe } from \"../../../items/equipment/body/water/WizardsRobe\";\r\nimport { glaive } from \"../../../items/equipment/hand/air/Glaive\";\r\nimport { bastardSword } from \"../../../items/equipment/hand/earth/BastardSword\";\r\nimport { BattleAxe } from \"../../../items/equipment/hand/fire/BattleAxe\";\r\nimport { HandAxe } from \"../../../items/equipment/hand/fire/HandAxe\";\r\nimport { wandOfWater } from \"../../../items/equipment/hand/water/WandOfWater\";\r\nimport { HealthPotion } from \"../../../items/equipment/pouch/HealthPotion\";\r\nimport Wildgrass from \"../../../items/material/Wildgrass\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport { Dungeon } from \"../Dungeon\";\r\nimport { DungeonFloor } from \"../DungeonFloor\";\r\nimport TrainingTowerAir from \"./TrainingTowerAir\";\r\nimport TrainingTowerEarth from \"./TrainingTowerEarth\";\r\nimport TrainingTowerFire from \"./TrainingTowerFire\";\r\nimport TrainingTowerWater from \"./TrainingTowerWater\";\r\n\r\nclass TrainingTowers extends Dungeon {\r\n  getId(): string {\r\n    return \"trainingTowers\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Training Towers\");\r\n  }\r\n\r\n  getDungeonFloors(): DungeonFloor[] {\r\n    return [\r\n      TrainingTowerFire,\r\n      TrainingTowerEarth,\r\n      TrainingTowerWater,\r\n      TrainingTowerAir,\r\n    ];\r\n  }\r\n\r\n  isUnlocked(state: GameState): boolean {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport const FLOOR_FOR_ELEMENT: Partial<Record<SpellElement, DungeonFloor>> = {\r\n  Fire: TrainingTowerFire,\r\n  Earth: TrainingTowerEarth,\r\n  Water: TrainingTowerWater,\r\n  Air: TrainingTowerAir,\r\n};\r\n\r\nexport const trainingTowers = new TrainingTowers();\r\n\r\nclass TrainingTowersExplorationGroup extends ExplorationTriggerGroup {\r\n  getHintMessageWhenPossible(): string {\r\n    return t(\"Explore the Training Towers\");\r\n  }\r\n  getHintMessageWhenNotPossible(): string {\r\n    return t(\r\n      \"This Storyline can be found by exploring the Training Towers, but you cannot get it this run\",\r\n    );\r\n  }\r\n  maxTriggersPerRun(): number {\r\n    return 2;\r\n  }\r\n  getId(): string {\r\n    return \"trainingTowers\";\r\n  }\r\n  getExplorationSuccessesBase(): number {\r\n    return 110;\r\n  }\r\n  getDungeonFloors(): DungeonFloor[] {\r\n    return trainingTowers.getDungeonFloors();\r\n  }\r\n}\r\n\r\nexport const trainingTowersExplorationGroup =\r\n  new TrainingTowersExplorationGroup();\r\n\r\nexport function loadTrainingTowerChests() {\r\n  createChestEvent(\r\n    \"trainingTowersChestCommon1\",\r\n    [\r\n      TrainingTowerFire.getId(),\r\n      TrainingTowerEarth.getId(),\r\n      TrainingTowerWater.getId(),\r\n      TrainingTowerAir.getId(),\r\n    ],\r\n    40,\r\n    [\r\n      {\r\n        itemOccurrence: { itemId: Wildgrass.getId(), params: {} },\r\n        amount: 10,\r\n      },\r\n    ],\r\n  );\r\n\r\n  createChestEvent(\r\n    \"trainingTowersChestUncommon2\",\r\n    [\r\n      TrainingTowerFire.getId(),\r\n      TrainingTowerEarth.getId(),\r\n      TrainingTowerWater.getId(),\r\n      TrainingTowerAir.getId(),\r\n    ],\r\n    10,\r\n    [\r\n      {\r\n        itemOccurrence: { itemId: HealthPotion.getId(), params: {} },\r\n        amount: 1,\r\n      },\r\n    ],\r\n  );\r\n\r\n  createChestEvent(\r\n    \"fireTrainingTowersChestUncommon\",\r\n    [TrainingTowerFire.getId()],\r\n    18,\r\n    [\r\n      {\r\n        itemOccurrence: { itemId: HandAxe.getId(), params: {} },\r\n        amount: 1,\r\n      },\r\n    ],\r\n  );\r\n\r\n  createChestEvent(\r\n    \"fireTrainingTowersChestRare\",\r\n    [TrainingTowerFire.getId()],\r\n    9,\r\n    [\r\n      {\r\n        itemOccurrence: { itemId: BattleAxe.getId(), params: {} },\r\n        amount: 1,\r\n      },\r\n    ],\r\n  );\r\n\r\n  createChestEvent(\r\n    \"earthTrainingTowersChestUncommon\",\r\n    [TrainingTowerEarth.getId()],\r\n    18,\r\n    [\r\n      {\r\n        itemOccurrence: { itemId: StoneMail.getId(), params: {} },\r\n        amount: 1,\r\n      },\r\n    ],\r\n  );\r\n\r\n  createChestEvent(\r\n    \"earthTrainingTowersChestRare\",\r\n    [TrainingTowerEarth.getId()],\r\n    10,\r\n    [\r\n      {\r\n        itemOccurrence: { itemId: bastardSword.getId(), params: {} },\r\n        amount: 1,\r\n      },\r\n    ],\r\n  );\r\n\r\n  createChestEvent(\r\n    \"waterTrainingTowersChestUncommon\",\r\n    [TrainingTowerWater.getId()],\r\n    15,\r\n    [\r\n      {\r\n        itemOccurrence: { itemId: WizardsRobe.getId(), params: {} },\r\n        amount: 1,\r\n      },\r\n    ],\r\n  );\r\n\r\n  createChestEvent(\r\n    \"waterTrainingTowersChestRare\",\r\n    [TrainingTowerWater.getId()],\r\n    5,\r\n    [\r\n      {\r\n        itemOccurrence: { itemId: wandOfWater.getId(), params: {} },\r\n        amount: 1,\r\n      },\r\n    ],\r\n  );\r\n\r\n  createChestEvent(\r\n    \"airTrainingTowersChestUncommon\",\r\n    [TrainingTowerAir.getId()],\r\n    12,\r\n    [\r\n      {\r\n        itemOccurrence: { itemId: FeatheredHat.getId(), params: {} },\r\n        amount: 1,\r\n      },\r\n    ],\r\n  );\r\n\r\n  createChestEvent(\r\n    \"airTrainingTowersChestRare\",\r\n    [TrainingTowerAir.getId()],\r\n    6,\r\n    [\r\n      {\r\n        itemOccurrence: { itemId: glaive.getId(), params: {} },\r\n        amount: 1,\r\n      },\r\n    ],\r\n  );\r\n}\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { Achievement } from \"../../../Achievement\";\r\nimport { registerAchievementUnlockerFromEnemy } from \"../../../Achievements\";\r\nimport { jumpEventToMessageIfExists } from \"../../../events/Events\";\r\nimport { Flag } from \"../../../Flag\";\r\nimport { setFlag } from \"../../../Flags\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport { Chilled } from \"../../../temporaryeffects/Chilled\";\r\nimport {\r\n  getTemporaryEffectEndTime,\r\n  grantTemporaryEffect,\r\n} from \"../../../temporaryeffects/TemporaryEffects\";\r\nimport { Wet } from \"../../../temporaryeffects/Wet\";\r\nimport { getSecondsPlayed } from \"../../../timetick/TotalTimePlayed\";\r\nimport { AttackTarget } from \"../../AttackTarget\";\r\nimport {\r\n  getCurrentEnemyHPFraction,\r\n  modifyEnemyCurrentHP,\r\n  standardEnemyAttackEffect,\r\n} from \"../../Exploration\";\r\nimport { pushCombatActionResult } from \"../../ExplorationActionResult\";\r\nimport { BattlerAction, BattlerStats, Enemy, EnemyLoot } from \"../Enemy\";\r\n\r\nclass HeadInstructor extends Enemy {\r\n  getId(): string {\r\n    return \"headInstructor\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Head Instructor Giselle\");\r\n  }\r\n\r\n  getBaseStats(): BattlerStats {\r\n    return {\r\n      maxHP: 1800,\r\n      attack: 30,\r\n      defense: 25,\r\n      attackDelay: 2.5,\r\n      accuracy: 100,\r\n      dodge: 100,\r\n      crit: 0,\r\n    };\r\n  }\r\n\r\n  getPicture(state: GameState) {\r\n    return require(\"./headInstructor.png\");\r\n  }\r\n\r\n  getLevel(): number {\r\n    return 10;\r\n  }\r\n\r\n  getCoinsAwardedBase(state: GameState): number {\r\n    return 150;\r\n  }\r\n\r\n  getMonstiumAwardedBase(state: GameState): number {\r\n    return 50;\r\n  }\r\n\r\n  getNextAction2(state: GameState): BattlerAction {\r\n    if (Math.random() < 0.2) {\r\n      return {\r\n        name: t(\"Fireball\"),\r\n        delay: this.getAttackDelay(state) * 1.8,\r\n        transform: (state) => {\r\n          state = standardEnemyAttackEffect(\r\n            state,\r\n            this.getAttack(state) * 2.1,\r\n            {\r\n              tags: [SpellElement.Fire],\r\n            },\r\n          );\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n\r\n    if (Math.random() < 0.5) {\r\n      return {\r\n        name: t(\"Air Blast\"),\r\n        delay: this.getAttackDelay(state) * 0.35,\r\n        transform: (state) => {\r\n          state = standardEnemyAttackEffect(\r\n            state,\r\n            this.getAttack(state) * 0.5,\r\n            {\r\n              tags: [SpellElement.Air],\r\n            },\r\n          );\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n\r\n    return {\r\n      name: t(\"Attack\"),\r\n      delay: this.getAttackDelay(state),\r\n      transform: (state) =>\r\n        standardEnemyAttackEffect(state, this.getAttack(state)),\r\n    };\r\n  }\r\n\r\n  getNextAction(state: GameState): BattlerAction {\r\n    // Strategy:\r\n    // First half is similar to the Animated Snowman\r\n    // Second half is similar to the Blazing Turtle\r\n    if (getCurrentEnemyHPFraction(state) < 0.5) {\r\n      return this.getNextAction2(state);\r\n    }\r\n\r\n    if (\r\n      Math.random() < 0.2 &&\r\n      getTemporaryEffectEndTime(state, Wet.getId(), AttackTarget.Player) -\r\n        getSecondsPlayed(state) >\r\n        5\r\n    ) {\r\n      return {\r\n        name: t(\"Frost\"),\r\n        delay: this.getAttackDelay(state) * 1.4,\r\n        transform: (state) => {\r\n          state = standardEnemyAttackEffect(\r\n            state,\r\n            this.getAttack(state) * 1.4,\r\n            {\r\n              tags: [SpellElement.Water],\r\n              onHit: (state, result) => {\r\n                if (result.isHit) {\r\n                  state = grantTemporaryEffect(Chilled.getId(), 15, {\r\n                    target: result.target,\r\n                  })(state);\r\n                }\r\n                return state;\r\n              },\r\n            },\r\n          );\r\n\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n    if (Math.random() < 0.2) {\r\n      return {\r\n        name: t(\"Splash\"),\r\n        delay: this.getAttackDelay(state) * 1.2,\r\n        transform: (state) => {\r\n          state = standardEnemyAttackEffect(\r\n            state,\r\n            this.getAttack(state) * 1.1,\r\n            {\r\n              tags: [SpellElement.Water],\r\n              onHit: (state, result) => {\r\n                if (result.isHit) {\r\n                  state = grantTemporaryEffect(Wet.getId(), 15, {\r\n                    target: result.target,\r\n                  })(state);\r\n                }\r\n                return state;\r\n              },\r\n            },\r\n          );\r\n\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n    if (Math.random() < 0.3 && getCurrentEnemyHPFraction(state) < 0.9) {\r\n      return {\r\n        name: t(\"Droplet of Healing\"),\r\n        delay: this.getAttackDelay(state) * 1.0,\r\n        transform: (state) => {\r\n          const healAmt = this.getMaxHP(state) * (0.02 + Math.random() * 0.005);\r\n          state = modifyEnemyCurrentHP(state, healAmt);\r\n          const actionResult = {\r\n            id: Math.random().toString(),\r\n            damage: -healAmt,\r\n            isCrit: false,\r\n            isHit: true,\r\n            time: getSecondsPlayed(state),\r\n            source: AttackTarget.Enemy,\r\n            target: AttackTarget.Enemy,\r\n            tags: [],\r\n          };\r\n          state = pushCombatActionResult(state, actionResult);\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n\r\n    return {\r\n      name: t(\"Attack\"),\r\n      delay: this.getAttackDelay(state),\r\n      transform: (state) =>\r\n        standardEnemyAttackEffect(state, this.getAttack(state)),\r\n    };\r\n  }\r\n\r\n  isBoss(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getBackdropColor(): string {\r\n    return \"#fd7\";\r\n  }\r\n\r\n  getItemsAwardedBase(state: GameState): EnemyLoot[] {\r\n    return [\r\n      {\r\n        itemId: \"paper\",\r\n        amount: 3,\r\n        chance: 1.0,\r\n      },\r\n    ];\r\n  }\r\n\r\n  onDeath(\r\n    state: GameState,\r\n    isFromCreatures: boolean,\r\n    familiarId?: string,\r\n  ): GameState {\r\n    state = super.onDeath(state, isFromCreatures, familiarId);\r\n    state = jumpEventToMessageIfExists(state, \"finalTraining\", \"afterFight\");\r\n    state = setFlag(Flag.HeadInstructorDefeated)(state);\r\n    return state;\r\n  }\r\n\r\n  getTips(): string {\r\n    return t(\r\n      \"Ah, the Head Instructor of Combat! She is proficient in Water, Air and Fire spells, making her quite the force to be reckoned with. She will begin with Water spells only, and follow through with Fire and Air spells. Let's make sure to have solid buffs, such as from potions or spells, before the battle. Don't forget to ask me - well, us, your hired Wizards - to keep up your buffs for you, so you can focus on fighting!\",\r\n    );\r\n  }\r\n}\r\n\r\nconst headInstructor = new HeadInstructor();\r\n\r\nregisterAchievementUnlockerFromEnemy(\r\n  headInstructor,\r\n  Achievement.HEAD_INSTRUCTOR_GISELLE,\r\n);\r\n\r\nexport default headInstructor;\r\n","import { loadPreTrainingProgression } from \"./PreTrainingProgression\";\r\nimport { loadSewersProgression } from \"./SewersProgression\";\r\nimport { loadTrainingTowerProgression } from \"./TrainingTowerProgression\";\r\n\r\nexport function loadProgressionEventsDemo() {\r\n  loadPreTrainingProgression();\r\n  loadTrainingTowerProgression();\r\n  loadSewersProgression();\r\n}\r\n","import { t } from \"../../../utils/I18n\";\r\nimport { isDungeonFloorCompletedThisRun } from \"../../exploration/dungeons/Dungeons\";\r\nimport TrainingTowerAir from \"../../exploration/dungeons/training/TrainingTowerAir\";\r\nimport TrainingTowerEarth from \"../../exploration/dungeons/training/TrainingTowerEarth\";\r\nimport TrainingTowerFire from \"../../exploration/dungeons/training/TrainingTowerFire\";\r\nimport { FLOOR_FOR_ELEMENT } from \"../../exploration/dungeons/training/TrainingTowers\";\r\nimport TrainingTowerWater from \"../../exploration/dungeons/training/TrainingTowerWater\";\r\nimport HeadInstructor from \"../../exploration/enemies/training/HeadInstructor\";\r\nimport {\r\n  addEnemyDeathListener,\r\n  startCombat,\r\n} from \"../../exploration/Exploration\";\r\nimport { Flag } from \"../../Flag\";\r\nimport { hasFlag, setFlag } from \"../../Flags\";\r\nimport { TransmuteHealthPotion } from \"../../items/equipment/pouch/HealthPotion\";\r\nimport { SpellCastListeners } from \"../../spells/SpellCastListeners\";\r\nimport { addUICommand } from \"../../UICommands\";\r\nimport { buildEvent } from \"../EventMessageBuilder\";\r\nimport { triggerEvent } from \"../Events\";\r\nimport { EventTag } from \"../GameEvent\";\r\n\r\nexport function loadTrainingTowerProgression() {\r\n  const firstBossUnlockedEventBuilder = buildEvent(\r\n    \"firstBossUnlocker\",\r\n    t(\"One More Test\"),\r\n    [EventTag.MAIN_QUEST],\r\n  );\r\n\r\n  firstBossUnlockedEventBuilder.message(\r\n    t(`You have made a lot of progress fighting enemies left and right in this combat training. You feel quite strong!\r\n    \r\nYou encounter a door, more ornately decorated than the rest. It appears you are at the top of the tower. A sign reads to the side: *\"/enemyName/\"*. You sense this is probably some sort of final test for the tower, and ready up for a tough battle...\r\n\r\n**You can now fight the boss of /dungeonFloorName/! You can do so by pressing the \"Fight Boss\" button in the Exploration screen.**\"`),\r\n  );\r\n  const firstBossUnlockedEvent = firstBossUnlockedEventBuilder.build();\r\n\r\n  addEnemyDeathListener(\r\n    firstBossUnlockedEvent.getId() + \"Triggerer\",\r\n    (state) => {\r\n      if (!state.run.primaryElement) {\r\n        return state;\r\n      }\r\n      const floor = FLOOR_FOR_ELEMENT[state.run.primaryElement];\r\n\r\n      if (\r\n        !firstBossUnlockedEvent.hasTriggered(state) &&\r\n        floor?.canFightBoss?.(state) &&\r\n        !isDungeonFloorCompletedThisRun(state, floor)\r\n      ) {\r\n        return triggerEvent(firstBossUnlockedEvent, {\r\n          dungeonFloorName: floor.getFloorName(),\r\n          enemyName: floor.getBoss(state).getName(),\r\n        })(state);\r\n      }\r\n      return state;\r\n    },\r\n  );\r\n\r\n  const restOfTrainingTowersUnlockerEventBuilder = buildEvent(\r\n    \"restOfTrainingTowersUnlocker\",\r\n    t(\"Training is Not Over\"),\r\n    [EventTag.MAIN_QUEST],\r\n  ).setOnTrigger(setFlag(Flag.RestOfTrainingUnlocked));\r\n\r\n  restOfTrainingTowersUnlockerEventBuilder.message(\r\n    t(`You fell the enemy after what felt like a longer battle than the others. It felt slightly challenging. More than that, however, you feel excited and exhilarated - you seem to enjoy combat much more than you thought you would!\r\n  \r\nIt appears that is not enough. You find a paper in this last room, which mentions that there are other training towers, meant for those who specialize in the other elements - but a true Wizard should be able to triumph over all of them, it says. You decide to take it up to the challenge - you could use some more difficult combat...\r\n\r\n**You have unlocked three more Training Towers in Exploration!**`),\r\n  );\r\n\r\n  const restOfTrainingTowersUnlockerEvent =\r\n    restOfTrainingTowersUnlockerEventBuilder.build();\r\n\r\n  addEnemyDeathListener(\r\n    restOfTrainingTowersUnlockerEvent.getId() + \"Triggerer\",\r\n    (state) => {\r\n      const floor = FLOOR_FOR_ELEMENT[state.run.primaryElement];\r\n      if (floor == null) {\r\n        return state;\r\n      }\r\n      if (\r\n        !restOfTrainingTowersUnlockerEvent.hasTriggered(state) &&\r\n        !hasFlag(state, Flag.RestOfTrainingUnlocked) &&\r\n        isDungeonFloorCompletedThisRun(state, floor)\r\n      ) {\r\n        return triggerEvent(restOfTrainingTowersUnlockerEvent)(state);\r\n      }\r\n      return state;\r\n    },\r\n  );\r\n\r\n  const finalTrainingEventBuilder = buildEvent(\r\n    \"finalTraining\",\r\n    t(\"Final Exam\"),\r\n    [EventTag.MAIN_QUEST],\r\n  );\r\n\r\n  finalTrainingEventBuilder.message(\r\n    t(\r\n      `As you defeat the strongest enemy of the last Training Tower, you hear clapping from behind you. You turn around, and you see a stylish woman, dressed in white robes and holding a staff with her arm against her body. She appears to be a capable wizard. She is the one clapping at you.`,\r\n    ),\r\n  );\r\n  finalTrainingEventBuilder.message(\r\n    t(`\"Congratulations on your victory\", she exclaims. \"You've certainly come a long way, haven't you?\"\r\n    \r\n\"Let me introduce myself\", she continues. \"I am the head instructor of combat - my name is Giselle. I am the one who extended you the invitation for this extra training course at these four Towers of Training. I don't think you have noticed me, but I saw you at the top of each of the Towers - and noticed your fights against the four guardians at the top. You did an excellent job.\" You thank her for the kind words.`),\r\n  );\r\n  finalTrainingEventBuilder.message(\r\n    t(`\"You have yet one more challenge to go through before you can complete the training, however\", she says. \"Each of those Towers tested your ability and affinity with a different Element. But, in actual combat against real adversaries, a Wizard will need to know the strengths and the weakness of each element, and combine them in order to craft the right strategy. It is a very important lesson.\"\r\n    \r\nThen she tells you more: \"Because of that reason, I will see how you do in battle by myself, in a duel. If you are able to hold your own against me, I will deem you worthy of having finished the training.\"`),\r\n  );\r\n  finalTrainingEventBuilder\r\n    .message(\r\n      t(`You shudder a little. She looks quite strong, a lot stronger than anything you've fought so far.\r\n    \r\nRegardless, it really does seem like this is the final test in this special course. You ready yourself for combat against the powerful foe.`),\r\n    )\r\n    .option(t(\"Fight the Head Instructor\"), {\r\n      transform: (state) => {\r\n        state = addUICommand(state, \"goToExploration\");\r\n        state = addUICommand(state, \"closeAllMenus\");\r\n        state = addUICommand(state, \"closeEventOverlay\");\r\n        state = startCombat(HeadInstructor)(state);\r\n        return state;\r\n      },\r\n    })\r\n    .option(t(\"Maybe later\"))\r\n    .end();\r\n\r\n  finalTrainingEventBuilder\r\n    .message(\r\n      t(`Another Fireball? You strike at the Head Instructor before she has the chance to finish her spell. She flinches! She asks you to stop. Then she looks at you - she looks quite visibly tired - and nods.\r\n      \r\n\"*You pass*\", she exclaims. \"Impressive performance. You have definitely understood how to combine all the elements together and become a strong all-around combatant.\" You thank her.`),\r\n    )\r\n    .tag(\"afterFight\");\r\n\r\n  finalTrainingEventBuilder.message(\r\n    t(`\"With what you've learned in this special training, you should now be ready for some of the challenges in the wide world outside\", she says. \"I am hoping the experience you got has increased your confidence.\" She is right. You feel a lot stronger.\r\n        \r\n\"I will leave you with one last thing, however - have you ever wondered what to do with the :monstium:Monstium that you have been finding from all those enemies?\"\r\n\r\nThe question stumps you. You have, indeed, wondered what was the purpose, and you have been keeping much of it...`),\r\n  );\r\n\r\n  finalTrainingEventBuilder\r\n    .message(\r\n      t(`\"Monstium is a key material used for *Enhancements*, medium-to-long-term all-encompassing magical effects that radically affect so many different things\", she explains. \"For example, there are Enhancements for greatly increasing your Essence storage, giving you extra combat power, enabling you to build new types of furniture, and many more.\"\r\n     \r\nShe also tells you about Paper, another important requirement for Enhancements. Thankfully, Paper can apparently be transmuted quite easily - she also tells you how to do so.\r\n\r\nShe tells you about a few Enhancements and what you need in order to activate them. You listen intently, while realizing how deeply transformative those Enhancements could be. You want to take notes, but you did not bring such material with you - but you think you can remember, at least this time.`),\r\n    )\r\n    .option(\r\n      t(\"Continue\"),\r\n      { transform: setFlag(Flag.EnhancementsUnlocked) },\r\n      \"end\",\r\n    )\r\n    .end();\r\n\r\n  finalTrainingEventBuilder\r\n    .message(\r\n      t(`The instructor finally finishes her narration. You thank her - you are certain this will come in useful for the future. And then, finally, you head back home - you can't wait to apply those Enhancements, and head beyond the boundaries of your house, to see what you can learn... You are not sure if this gets you any closer, but you feel renewed enthusiasm about your quest to obtain the Philosopher's Stone.\r\n    \r\n**You have unlocked the ability to transmute Paper!**\r\n\r\n**You have unlocked Enhancements! Enhancements use :monstium:Monstium, as well as other items, to improve many aspects of the game. The effects do *not* persist through Retirement. You can find these on the Enhance screen!**`),\r\n    )\r\n    .tag(\"end\");\r\n\r\n  const finalTrainingEvent = finalTrainingEventBuilder.build();\r\n\r\n  addEnemyDeathListener(finalTrainingEvent.getId() + \"Triggerer\", (state) => {\r\n    if (\r\n      !hasFlag(state, Flag.EnhancementsUnlocked) &&\r\n      !finalTrainingEvent.hasTriggered(state) &&\r\n      [\r\n        TrainingTowerFire,\r\n        TrainingTowerEarth,\r\n        TrainingTowerWater,\r\n        TrainingTowerAir,\r\n      ].every((floor) => isDungeonFloorCompletedThisRun(state, floor))\r\n    ) {\r\n      return triggerEvent(finalTrainingEvent)(state);\r\n    }\r\n    return state;\r\n  });\r\n\r\n  const potionCraftedEventBuilder = buildEvent(\r\n    \"potionFirstCrafted\",\r\n    t(\"Pouch Items\"),\r\n    [],\r\n  );\r\n\r\n  potionCraftedEventBuilder.message(\r\n    t(`After gathering many materials, you finally managed to follow the recipe to Transmute your first :healthPotion:Health Potion!\r\n    \r\nYou quickly check out the reference on it, searching through your notes. How were you meant to use it...?`),\r\n  );\r\n  potionCraftedEventBuilder.message(\r\n    t(`Ah, you finally found the right page! There's *two* large messages. You read the first one: *\"Potions are Pouch Items. **Pouch Items are not consumable, and they will not disappear when used.** They are considered pieces of equipment.\"*\r\n      \r\nThat sounds... convenient. So you can drink it *and it will never run out*? You continue reading the second one: *\"Pouch items can **only be used during combat**, and each one will have **a certain amount of uses per combat**. For example, :healthPotion:Health Potions have 3 uses per combat. **Entering a new combat will refresh the pouch items and restore their uses.**\"*\r\n\r\nYou think about what you've just read... These potions sound extremely useful. You're eager to equip it - right away.\r\n\r\n*Tip: You can review this information or read more about Pouch Items in the :help:Help screen!*`),\r\n  );\r\n  const potionCraftedEvent = potionCraftedEventBuilder.build();\r\n\r\n  SpellCastListeners.register((state, spell) => {\r\n    if (\r\n      spell == TransmuteHealthPotion &&\r\n      !potionCraftedEvent.hasEverTriggered(state)\r\n    ) {\r\n      state = triggerEvent(potionCraftedEvent)(state);\r\n    }\r\n    return state;\r\n  });\r\n}\r\n","import { t } from \"../../../utils/I18n\";\r\nimport { CombatClassesStoryline } from \"../../classes/CombatClassesStoryline\";\r\nimport { isDungeonFloorCompletedThisRun } from \"../../exploration/dungeons/Dungeons\";\r\nimport SewerEntrance from \"../../exploration/dungeons/sewers/SewerEntrance\";\r\nimport SewerHazardousSector from \"../../exploration/dungeons/sewers/SewerHazardousSector\";\r\nimport SewerHideout from \"../../exploration/dungeons/sewers/SewerHideout\";\r\nimport { addEnemyDeathListener } from \"../../exploration/Exploration\";\r\nimport { Flag } from \"../../Flag\";\r\nimport { hasFlag, setFlag, SetFlagListeners } from \"../../Flags\";\r\nimport {\r\n  getUnlockedElements,\r\n  partiallyUnlockElement,\r\n  SpellElement,\r\n} from \"../../spells/Elements\";\r\nimport { buildEvent } from \"../EventMessageBuilder\";\r\nimport { triggerEvent } from \"../Events\";\r\nimport { EventTag } from \"../GameEvent\";\r\n\r\nexport function loadSewersProgression() {\r\n  const sewersUnlockEventBuilder = buildEvent(\r\n    \"sewersUnlock\",\r\n    t(\"A Stinky Adventure\"),\r\n    [EventTag.MAIN_QUEST],\r\n  );\r\n\r\n  sewersUnlockEventBuilder.message(\r\n    t(`With your combat abilities, you now feel ready to begin your actual search for the Philosopher's Stone. You start thinking about what should be the next area you should be heading to, when you hear a knock on your door.\r\n  \r\nWhen you check, there is no one... Oddly, you open the door, and you notice a pamphlet on the ground. \"*Wanted: Mad Alchemist*\", it says, with a crude drawing of a deformed person. You take it, and show it to your hired wizard.`),\r\n  );\r\n  sewersUnlockEventBuilder\r\n    .message(\r\n      t(`\"A wanted poster? We get several of those, fairly often, at the guild\", she mentions. \"It looks like this one references a nefarious alchemist that seems to be running experiments somewhere in the town sewers. It appears the wells in some places in town have become poisoned, and the town suspects this alchemist.\"\r\n  \r\nThen something she says catches your attention: \"It says here that the experiments have something to do with creating a Philosopher's Stone...\" *Your blood freezes.* You ask her to repeat and confirm the fact. She is not lying to you: that is what it says on the paper.`),\r\n    )\r\n    .option(t(\"Continue\"), { transform: setFlag(Flag.SewersUnlocked) }, \"end\");\r\n  sewersUnlockEventBuilder\r\n    .message(\r\n      t(`It surely can't be... out of all the places in the world where you could be starting your search, the *sewers* are your first lead?\r\n  \r\nYour hired wizard seems to have noticed your reaction, and makes a face of disgust. \"You can't possibly be thinking of *going in there*, can you?\"\r\n\r\nBut you are... you certainly are. Or so you tell yourself, conflicted, as you try to convince yourself that your loved one's illness was much worse than *just a stench*...\r\n\r\n**You can now explore the Sewers!**`),\r\n    )\r\n    .tag(\"end\");\r\n\r\n  const sewersUnlockEvent = sewersUnlockEventBuilder.build();\r\n\r\n  SetFlagListeners.register((state, flag) => {\r\n    if (\r\n      ((flag == Flag.EnhancementsUnlocked &&\r\n        CombatClassesStoryline.isCompleted(state)) ||\r\n        flag == CombatClassesStoryline.getCompletedFlag()) &&\r\n      !hasFlag(state, Flag.SewersUnlocked) &&\r\n      !sewersUnlockEvent.hasTriggered(state)\r\n    ) {\r\n      return triggerEvent(sewersUnlockEvent)(state);\r\n    }\r\n    return state;\r\n  }, \"sewersUnlockEventTriggerer\");\r\n\r\n  const sewersEntranceBossUnlockEventBuilder = buildEvent(\r\n    \"sewersEntranceBossUnlock\",\r\n    t(\"A Challenger from the Deep?\"),\r\n    [EventTag.MAIN_QUEST],\r\n  );\r\n\r\n  sewersEntranceBossUnlockEventBuilder.message(\r\n    t(`While exploring, you find a large circular room filled with shallow water and a tunnel entrance on the other side. Your hired wizard comments: \"I think all paths end up coming here\".\r\n  \r\nAs you begin crossing, you are stopped on your tracks. There is something in the water. It looks a little like a Sewer Fish, but it is green and deformed - and very aggressive, moving faster than what you are used to. You ready for combat.\r\n\r\n**You have unlocked the boss of Sewer Entrance!**`),\r\n  );\r\n\r\n  const sewersEntranceBossUnlockEvent =\r\n    sewersEntranceBossUnlockEventBuilder.build();\r\n\r\n  addEnemyDeathListener(\r\n    sewersEntranceBossUnlockEvent.getId() + \"Triggerer\",\r\n    (state) => {\r\n      if (\r\n        !sewersEntranceBossUnlockEvent.hasTriggered(state) &&\r\n        SewerEntrance.canFightBoss(state)\r\n      ) {\r\n        return triggerEvent(sewersEntranceBossUnlockEvent)(state);\r\n      }\r\n      return state;\r\n    },\r\n  );\r\n\r\n  const sewersEntranceBossDefeatedMainEventBuilder = buildEvent(\r\n    \"sewersEntranceBossDefeatedMain\",\r\n    t(\"Mimicking the Poison\"),\r\n    [EventTag.MAIN_QUEST],\r\n  ).setOnTrigger((state) => {\r\n    state = partiallyUnlockElement(SpellElement.Poison)(state);\r\n    return state;\r\n  });\r\n\r\n  sewersEntranceBossDefeatedMainEventBuilder.message(\r\n    t(`You defeat the Mutated Fish! Your hired wizard yells from the thrill. You check the floating corpse one last time to make sure it is truly dead. Although you can move on, you are noticing that the sewer enemies seem to be able to use a different type of magic entirely. A different *element*, perhaps? You are not sure about it, but you want to try and mimic it.\r\n\r\n**You have discovered the \"Poison\" element! It is only *partially unlocked*, so it will not persist through retirement, and you will have a very hard time using it.**\r\n\r\n**You can now also access a new Exploration area: \"Hazardous Sector\"!**`),\r\n  );\r\n\r\n  const sewersEntranceBossDefeatedMainEvent =\r\n    sewersEntranceBossDefeatedMainEventBuilder.build();\r\n\r\n  const sewersEntranceBossDefeatedAltEventBuilder = buildEvent(\r\n    \"sewersEntranceBossDefeatedAlt\",\r\n    t(\"Hazardous Sector\"),\r\n    [EventTag.MAIN_QUEST],\r\n  );\r\n\r\n  sewersEntranceBossDefeatedAltEventBuilder.message(\r\n    t(`You defeat the Mutated Fish! Your hired wizard yells from the thrill. You check the floating corpse one last time to make sure it is truly dead, and after doing so, move on past it to the next area of the Sewers.\r\n\r\n**You can now also access a new Exploration area: \"Hazardous Sector\"!**`),\r\n  );\r\n\r\n  const sewersEntranceBossDefeatedAltEvent =\r\n    sewersEntranceBossDefeatedAltEventBuilder.build();\r\n\r\n  addEnemyDeathListener(\r\n    sewersEntranceBossDefeatedMainEvent.getId() + \"Triggerer\",\r\n    (state) => {\r\n      if (\r\n        !sewersEntranceBossDefeatedAltEvent.hasTriggered(state) &&\r\n        !sewersEntranceBossDefeatedMainEvent.hasTriggered(state) &&\r\n        isDungeonFloorCompletedThisRun(state, SewerEntrance)\r\n      ) {\r\n        if (getUnlockedElements(state).includes(SpellElement.Poison)) {\r\n          return triggerEvent(sewersEntranceBossDefeatedAltEvent)(state);\r\n        } else {\r\n          return triggerEvent(sewersEntranceBossDefeatedMainEvent)(state);\r\n        }\r\n      }\r\n      return state;\r\n    },\r\n  );\r\n\r\n  const hazardousSectorBossDefeatedMainEventBuilder = buildEvent(\r\n    \"hazardousSectorBossDefeatedMain\",\r\n    t(\"Hoarding Monstium\"),\r\n    [EventTag.MAIN_QUEST],\r\n  ).setOnTrigger(setFlag(Flag.MonstruariumsUnlocked));\r\n\r\n  hazardousSectorBossDefeatedMainEventBuilder.message(\r\n    t(`The Sludge Mass is finally no more! You still feel somewhat sick; you try and catch your breath in the corner of the room, waiting until it gets better. You notice it left behind a big pile of :monstium:, and wonder - it would be great if you could store more of this resource. You then realize that perhaps there could be a way to have a storage, similarly to how this enemy did it - leveraging Poison (or :poisonessence:) to hold it together...\r\n\r\n**You can now build Monstruariums, a new furniture that allows you to store more :monstium:!**\r\n\r\n**You can now also access a new Exploration area: \"The Hideout\"!**`),\r\n  );\r\n\r\n  const hazardousSectorBossDefeatedMainEvent =\r\n    hazardousSectorBossDefeatedMainEventBuilder.build();\r\n\r\n  addEnemyDeathListener(\r\n    hazardousSectorBossDefeatedMainEvent.getId() + \"Triggerer\",\r\n    (state) => {\r\n      if (\r\n        !hasFlag(state, Flag.MonstruariumsUnlocked) &&\r\n        !hazardousSectorBossDefeatedMainEvent.hasTriggered(state) &&\r\n        isDungeonFloorCompletedThisRun(state, SewerHazardousSector)\r\n      ) {\r\n        return triggerEvent(hazardousSectorBossDefeatedMainEvent)(state);\r\n      }\r\n      return state;\r\n    },\r\n  );\r\n\r\n  const sewersHideoutBossUnlockEventBuilder = buildEvent(\r\n    \"sewersHideoutBossUnlock\",\r\n    t(\"Carnivorous Guardian\"),\r\n    [EventTag.MAIN_QUEST],\r\n  );\r\n\r\n  sewersHideoutBossUnlockEventBuilder.message(\r\n    t(`The Sewers have gotten deeper and deeper, and more dangerous. You are certain that by now, you must have explored almost every corner, but you haven't found the wanted alchemist just yet.\r\n    \r\nIn what you feel is the last tunnel, you see a door. It appears to have been used recently, and you spot a light from the other side. But something is right in front of the door. There is a pile of... waste, and a giant Man-Eating Plant growing right on top of it. It takes notice of you and makes an awful sound - and it looks extremely dangerous. You are afraid, but you know you're going to have to get past it to get to that door. You get ready for a very tough battle...\r\n\r\n**You have unlocked the boss of The Hideout!**`),\r\n  );\r\n\r\n  const sewersHideoutBossUnlockEvent =\r\n    sewersHideoutBossUnlockEventBuilder.build();\r\n\r\n  addEnemyDeathListener(\r\n    sewersHideoutBossUnlockEvent.getId() + \"Triggerer\",\r\n    (state) => {\r\n      if (\r\n        !sewersHideoutBossUnlockEvent.hasTriggered(state) &&\r\n        SewerHideout.canFightBoss(state)\r\n      ) {\r\n        return triggerEvent(sewersHideoutBossUnlockEvent)(state);\r\n      }\r\n      return state;\r\n    },\r\n  );\r\n\r\n  const sewersCompletedEventBuilder = buildEvent(\r\n    \"sewersCompleted\",\r\n    t(\"The Mad Alchemist\"),\r\n    [EventTag.MAIN_QUEST],\r\n  );\r\n\r\n  sewersCompletedEventBuilder.message(\r\n    t(`Frantically moving left and right to try and avoid the multiple incoming attacks from each of the three heads, you deal one more blow in the tough fight. The plant gets pushed back and stops moving. Tricked twice already, you brace yourself, low in supplies, for a fourth head to pop up - but this time, it doesn't appear. You must have succeeded!\r\n    \r\nYour hired wizard jumps cheerfully and high-fives you. You are glad the fight is over - it was very difficult!\r\n\r\nWith the Man-Eating Plant out of the way, the door is now reachable. Inside must be the person you have been looking for all this time: the wanted \"Mad Alchemist\".`),\r\n  );\r\n\r\n  sewersCompletedEventBuilder.message(\r\n    t(`\"Is someone there?\" The coarse voice comes from inside. \"Come in.\"\r\n    \r\nYour hired wizard and you hesitantly enter. On the other side of the door is a room that is fancied like a study, or a lab perhaps - shelves full of potions and substances of various colors, several books, and a large desk in the center with flasks and other glass containers. On the other side of the desk is the so-called \"Mad Alchemist\": a man in their later years, with grey curly hair, a furrowed brow, and a peculiar scent.`),\r\n  );\r\n\r\n  sewersCompletedEventBuilder.message(\r\n    t(`Your hired wizard begins talking: \"Are you the one who has been poisoning...\" You interrupt her. The reason you are here is not to apprehend the wanted man, even though it is possible that he has been running potentially harmful experiments in these sewers. Instead, you ask him about what has been in your mind all this time: the *Philosopher's Stone*.\r\n    \r\n\"The Philosopher's Stone...\" He begins to talk, and closes his eyes. \"Do you really think I would be living here, in seclusion, away from people, if I had such an object?\"\r\n\r\n\"The answer is obvious, but... no, I don't have a Philosopher's Stone.\"`),\r\n  );\r\n\r\n  sewersCompletedEventBuilder.message(\r\n    t(\r\n      `He continues to talk. \"The Philosopher's Stone is the ultimate aspiration of any alchemist. It is only spoken of in legends, and as far as I know, nobody has been able to create such an item. But, what they say in the city is true: I have been trying, for many years, to create one, and yet - have not had any success.\"\r\n      \r\nYou ask him for more details. He readily gives out an answer, but it is not exactly what you are looking for: \"The Ancient Legends speak of a Philosopher's Stone that was given to the leader of Zeth, an ancient kingdom that used to be somewhere in the Vast Desert. Shortly after, the kingdom fell to unknown ruin. Nobody really knows what happened.\"`,\r\n    ),\r\n  );\r\n\r\n  sewersCompletedEventBuilder.message(\r\n    t(`He continues: \"I have also considered exploring the Vast Desert, but... I am old, as you see, and quite frail now... not ready for the physical toughness and combat prowess that are needed there.\" He lets out a small sigh.\r\n    \r\nYou symphatize with him. You do not know his motivation for the Philosopher's Stone, but you can tell he does not have many more years left to live.`),\r\n  );\r\n\r\n  sewersCompletedEventBuilder\r\n    .message(\r\n      t(`You close your eyes for a while. The Vast Desert... The place is actually quite close. You've heard it is quite dangerous, and have always been discouraged to step in there. The desert extends as far out as the eye can see, and there is no clear path. It is easy to get lost, and the conditions can be fairly extreme to endure.\r\n    \r\nYou feel a renewed urge to search it. If the legends are true, you are bound to find clues about the Philosopher's Stone there. Or maybe even find the object itself...?\r\n\r\nYou tell the Alchemist this much, and he offers you a map of the Desert. But with one condition: to not turn him in to the authorities for what he has done. Without thinking, you accept, getting a stern look from your hired wizard, and take the map.`),\r\n    )\r\n    .option(\r\n      t(\"Continue\"),\r\n      { transform: setFlag(Flag.VastDesertUnlocked) },\r\n      \"end\",\r\n    )\r\n    .end();\r\n\r\n  sewersCompletedEventBuilder\r\n    .message(\r\n      t(`As you receive the map, you thank the old man - though, you do ask him to try to be careful with the city's water supply.\r\n    \r\nAnd finally, you turn back and head out. You are ready to trip through the Vast Desert. You ask the hired wizard to follow you, and she replies enthusiastically: \"Of course!\" But she quickly adds to it, wrinkling her nose: \"But only after taking a bath...\"\r\n\r\n**You can now explore the Vast Desert!**`),\r\n    )\r\n    .tag(\"end\");\r\n\r\n  const sewersCompletedEvent = sewersCompletedEventBuilder.build();\r\n\r\n  addEnemyDeathListener(sewersCompletedEvent.getId() + \"Triggerer\", (state) => {\r\n    if (\r\n      !sewersCompletedEvent.hasTriggered(state) &&\r\n      isDungeonFloorCompletedThisRun(state, SewerHideout)\r\n    ) {\r\n      return triggerEvent(sewersCompletedEvent)(state);\r\n    }\r\n    return state;\r\n  });\r\n}\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { getAccumulatorVariable } from \"../../../AccumulatorVariables\";\r\nimport { addGameStateListener } from \"../../../GameStateListeners\";\r\nimport { getResourceAmount, grantResource, Resource } from \"../../../Resources\";\r\nimport { Storyline } from \"../../../storylines/Storyline\";\r\nimport { Storylines } from \"../../../storylines/Storylines\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../../transformation/TransformationTags\";\r\nimport { buildEvent } from \"../../EventMessageBuilder\";\r\nimport { triggerEvent } from \"../../Events\";\r\nimport { EventTag } from \"../../GameEvent\";\r\n\r\nconst advertisingManual = new Storyline(\r\n  \"advertisingManual\",\r\n  t(\"Advertising Manual\"),\r\n  20,\r\n  10,\r\n  t(\"Sell a total of 1000 items or more\"),\r\n  t(\"+50%:coins: from selling items\"),\r\n  (state) => true,\r\n);\r\n\r\nexport function loadAdvertisingManual() {\r\n  Storylines.register(advertisingManual);\r\n\r\n  const advertisingManualEventBuilder = buildEvent(\r\n    \"advertisingManual\",\r\n    t(\"(Storyline) Advertising Manual\"),\r\n    [EventTag.STORYLINE],\r\n  ).setStorylineIds(advertisingManual.getId());\r\n\r\n  advertisingManualEventBuilder.message(\r\n    t(`After finishing a recent transaction, you're delighted - you managed to get a fair amount of :coins: for a simple item!\r\n  \r\nYou walk back home, but you are interrupted in your tracks by a man with a huge backpack. \"Excuse me,\" he says, \"may I have a few moments of your attention?\"`),\r\n  );\r\n  advertisingManualEventBuilder.message(\r\n    t(`He introduces himself: \"I am a traveling merchant. I buy and sell things for a living.\" Then he continues: \"I couldn't help but note how... *simple*... that last sale was. You just went right up to your buyer, and... handed over your good for the posted price.\"\r\n  \r\nIt feels like a reprimand: \"That's definitely not how you should do things. When you are selling a product, any price you see posted is just *the bare minimum* you could manage to sell it for. You have gone through quite some effort just acquiring your item, and they are giving you *a misery* for it!\"\r\n\r\nYou haven't had much experience as a merchant, and really didn't think much about it...`),\r\n  );\r\n  advertisingManualEventBuilder\r\n    .message(\r\n      t(`\"I have something just for you. This *book*,\" he exclaims, while taking something out from his backpack and showing it to you. It is, indeed, a book: the cover reads \"The Basics of Advertising\".\r\n  \r\n\"With this book, you'll be able to get much more value out of the things that you decide to sell - if you do a lot of this, it will *definitely* come in handy!\"\r\n\r\nIt sounds like a good idea, until he says: \"I'd be happy to sell it to you for *10K:coins:*. Which I'm sure you'll be able to make back in no time!\" That price feels very *steep*. You really feel like this merchant is using that very technique on you. You're not sure of whether you should buy it or not...`),\r\n    )\r\n    .option(\r\n      t(\"Buy the book (10K Coins)\"),\r\n      {\r\n        transform: (state, params) =>\r\n          grantResource(Resource.Coins, -10000)(state),\r\n        isEnabled: (state, params) =>\r\n          getResourceAmount(state, Resource.Coins) >= 10000,\r\n      },\r\n      \"purchased\",\r\n    )\r\n    .option(\"Maybe later\")\r\n    .end();\r\n  advertisingManualEventBuilder\r\n    .message(\r\n      t(`You decide to give over the money. It was difficult to accumulate that much, but you are convinced this book could really be valuable. The merchant smiles while taking your :coins:. \"Nice doing business with you,\" he says, then hands over the book. \"Best of luck on your future sales!\" He waves at you and walks away.\r\n  \r\nYou decide to head home...`),\r\n    )\r\n    .tag(\"purchased\")\r\n    .option(t(\"Continue\"), {\r\n      transform: (state, params) => advertisingManual.complete(state),\r\n    });\r\n  advertisingManualEventBuilder.message(\r\n    t(`From the comfort of your home, you finally decide to take out the book and read it so you can apply it right away. Then you feel heartbroken. It does indeed describe techniques about how to advertise, but... they seem *so complex and difficult to understand*! You begin to regret your purchase. Will you ever be able to master this?\r\n  \r\nFor now, you decide to put it away. You don't feel like this is going to help you very much right now. But you think that perhaps someone in the future might be able to use it...\r\n\r\n**You have completed the \"Advertising Manual\" Storyline! In future runs, you will gain +50%:coins: when selling items!**`),\r\n  );\r\n\r\n  const advertisingManualEvent = advertisingManualEventBuilder.build();\r\n\r\n  addGameStateListener(\"advertisingManualTriggerer\", (state) => {\r\n    if (\r\n      !advertisingManual.isCompleted(state) &&\r\n      !advertisingManualEvent.hasTriggered(state) &&\r\n      getAccumulatorVariable(state, \"itemsSold\") >= 1000\r\n    ) {\r\n      return triggerEvent(advertisingManualEvent);\r\n    }\r\n  });\r\n\r\n  registerTransformation(\r\n    [[TransformationTags.ItemSalePrice]],\r\n    advertisingManual.getId(),\r\n    advertisingManual.getName(),\r\n    TransformationType.Multiplier,\r\n    (state) => (advertisingManual.isBonusActive(state) ? 1.5 : 1.0),\r\n  );\r\n}\r\n\r\nexport { advertisingManual };\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { Storyline } from \"../../../storylines/Storyline\";\r\n\r\nconst storyline = new Storyline(\r\n  \"bookOfMonsters\",\r\n  t(\"Compendium\"),\r\n  30,\r\n  10,\r\n  t(\"Defeat at least 5 different enemies\"),\r\n  t('Permanently unlock \"Compendium\"'),\r\n  (state) => true,\r\n);\r\n\r\nexport { storyline as BookOfMonsters };\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { isAutocastUnlocked } from \"../../../autocast/Autocast\";\r\nimport {\r\n  getElementLevel,\r\n  getPrimaryElementMaxLevelForRun,\r\n  SpellElement,\r\n} from \"../../../spells/Elements\";\r\nimport { Storyline } from \"../../../storylines/Storyline\";\r\nimport { Storylines } from \"../../../storylines/Storylines\";\r\nimport { buildEvent } from \"../../EventMessageBuilder\";\r\nimport { triggerEvent } from \"../../Events\";\r\nimport { EventTag } from \"../../GameEvent\";\r\nimport { LevelUpListeners } from \"../../progression/LevelUp\";\r\n\r\nconst simultaneousChanneling = new Storyline(\r\n  \"simultaneousChanneling\",\r\n  t(\"Simultaneous Channeling\"),\r\n  10,\r\n  10,\r\n  t(\"Reach Lv8 on your primary Element\"),\r\n  t('Unlock spell \"Channel Four\"'),\r\n  (state) => true,\r\n);\r\n\r\nexport function loadSimultaneousChanneling() {\r\n  Storylines.register(simultaneousChanneling);\r\n\r\n  const simultaneousChannelingEventBuilder = buildEvent(\r\n    \"simultaneousChanneling\",\r\n    t(\"(Storyline) Simultaneous Channeling\"),\r\n    [EventTag.STORYLINE],\r\n  ).setStorylineIds(simultaneousChanneling.getId());\r\n\r\n  simultaneousChannelingEventBuilder\r\n    .message(\r\n      t(`Your expertise with magic continues to increase. Once more, you think about Channeling - getting essences of your primary element is proving fruitful, but you begin to think that it is actually a lot of work to have to think about many elements at once...\r\n    \r\nYou wonder if perhaps there could be a spell that could channel many elements at once... You think you will probably need even more expertise to figure this out.`),\r\n    )\r\n    .option(\r\n      t(\r\n        \"Research a new spell (Requires Fire Lv7, Earth Lv7, Water Lv7, Air Lv7)\",\r\n      ),\r\n      {\r\n        transform: (state) => simultaneousChanneling.complete(state),\r\n        isEnabled: (state) =>\r\n          getElementLevel(state, SpellElement.Fire) >= 7 &&\r\n          getElementLevel(state, SpellElement.Earth) >= 7 &&\r\n          getElementLevel(state, SpellElement.Water) >= 7 &&\r\n          getElementLevel(state, SpellElement.Air) >= 7,\r\n      },\r\n      \"end\",\r\n    )\r\n    .option(t(\"Maybe later\"))\r\n    .end();\r\n  simultaneousChannelingEventBuilder\r\n    .message(\r\n      t(`You come up with a new idea! You prepare yourself and get ready to cast the spell, and then you do so... and you are startled as a sudden explosion happens in front of you! You hear giggles from behind you - your hired wizard has definitely taken notice of your failure.\r\n    \r\nIt appears that isn't going to be enough. You are convinced it has something to do with your skills, but you make sure to write down your ideas in your diary, so that if anyone else sees it in the future they would be able to try it...\r\n\r\n**You have completed the \"Simultaneous Channeling\" Storyline! In future runs, you will have a new spell available, to channel Fire, Earth, Water and Air at once: \"Channel Four\"!**`),\r\n    )\r\n    .tag(\"end\");\r\n\r\n  const simultaneousChannelingEvent =\r\n    simultaneousChannelingEventBuilder.build();\r\n\r\n  LevelUpListeners.register((state, element) => {\r\n    if (!state.run.primaryElement) {\r\n      return state;\r\n    }\r\n    if (\r\n      !simultaneousChanneling.isCompleted(state) &&\r\n      !simultaneousChannelingEvent.hasTriggered(state) &&\r\n      getPrimaryElementMaxLevelForRun(state) >= 8 &&\r\n      isAutocastUnlocked(state)\r\n    ) {\r\n      return triggerEvent(simultaneousChannelingEvent)(state);\r\n    }\r\n    return state;\r\n  }, simultaneousChannelingEvent.getId());\r\n}\r\n\r\nexport { simultaneousChanneling };\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { Storyline } from \"../../../storylines/Storyline\";\r\n\r\nconst storyline = new Storyline(\r\n  \"posterity\",\r\n  t(\"Posterity\"),\r\n  1,\r\n  10,\r\n  t(\"Reach Lv7 on your primary element\"),\r\n  t('Permanently unlock \"Retirement\"'),\r\n  (state) => true,\r\n);\r\n\r\nexport { storyline as Posterity };\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { jumpEventToMessageIfExists } from \"../../../events/Events\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { getResourceAmount, grantResource, Resource } from \"../../../Resources\";\r\nimport { StoneskinTemporaryEffect } from \"../../../spells/earth/Stoneskin\";\r\nimport { StrengthTemporaryEffect } from \"../../../spells/fire/Strength\";\r\nimport {\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../../temporaryeffects/TemporaryEffects\";\r\nimport { AttackTarget } from \"../../AttackTarget\";\r\nimport {\r\n  calculateAttackTarget,\r\n  getCurrentEnemyHPFraction,\r\n  standardEnemyAttackEffect,\r\n} from \"../../Exploration\";\r\nimport { BattlerAction, BattlerStats, Enemy, EnemyLoot } from \"../Enemy\";\r\n\r\nclass GoblinChief extends Enemy {\r\n  getId(): string {\r\n    return \"goblinChief\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Goblin Chief\");\r\n  }\r\n\r\n  getBaseStats(): BattlerStats {\r\n    return {\r\n      maxHP: 5000,\r\n      attack: 55,\r\n      defense: 50,\r\n      attackDelay: 2.7,\r\n      accuracy: 100,\r\n      dodge: 100,\r\n      crit: 0,\r\n    };\r\n  }\r\n\r\n  getPicture(state: GameState) {\r\n    return require(\"./goblinChief.png\");\r\n  }\r\n\r\n  isBoss(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getLevel(): number {\r\n    return 18;\r\n  }\r\n\r\n  getCoinsAwardedBase(state: GameState): number {\r\n    return 10000;\r\n  }\r\n\r\n  getMonstiumAwardedBase(state: GameState): number {\r\n    return 100;\r\n  }\r\n\r\n  getNextAction(state: GameState): BattlerAction {\r\n    const target = calculateAttackTarget(state);\r\n    if (getCurrentEnemyHPFraction(state) < 0.5) {\r\n      if (\r\n        !hasTemporaryEffect(\r\n          state,\r\n          StoneskinTemporaryEffect.getId(),\r\n          AttackTarget.Enemy,\r\n        )\r\n      ) {\r\n        return {\r\n          name: t(\"Goblin Stoneskin\"),\r\n          delay: this.getAttackDelay(state),\r\n          transform: grantTemporaryEffect(\r\n            StoneskinTemporaryEffect.getId(),\r\n            180,\r\n            {\r\n              target: AttackTarget.Enemy,\r\n              params: { commonBuff: { DefenseMultiplier: 1.25 } },\r\n            },\r\n          ),\r\n        };\r\n      }\r\n      if (\r\n        !hasTemporaryEffect(\r\n          state,\r\n          StrengthTemporaryEffect.getId(),\r\n          AttackTarget.Enemy,\r\n        )\r\n      ) {\r\n        return {\r\n          name: t(\"Goblin Strength\"),\r\n          delay: this.getAttackDelay(state),\r\n          transform: grantTemporaryEffect(\r\n            StrengthTemporaryEffect.getId(),\r\n            180,\r\n            {\r\n              target: AttackTarget.Enemy,\r\n              params: { commonBuff: { AttackMultiplier: 1.2 } },\r\n            },\r\n          ),\r\n        };\r\n      }\r\n    }\r\n    if (\r\n      getResourceAmount(state, Resource.Coins) >= 10000 &&\r\n      Math.random() < 0.2\r\n    ) {\r\n      return {\r\n        name: t(\"Steal Lots of Coins!\"),\r\n        delay: this.getAttackDelay(state),\r\n        transform: (state) =>\r\n          grantResource(Resource.Coins, -(1000 + 4000 * Math.random()))(state),\r\n      };\r\n    }\r\n    if (Math.random() < 0.4) {\r\n      return {\r\n        name: t(\"Strong Attack\"),\r\n        delay: this.getAttackDelay(state) * 2,\r\n        transform: (state) =>\r\n          standardEnemyAttackEffect(state, this.getAttack(state) * 2),\r\n      };\r\n    }\r\n    return super.getNextAction(state);\r\n  }\r\n\r\n  getItemsAwardedBase(state: GameState): EnemyLoot[] {\r\n    return [];\r\n  }\r\n\r\n  onDeath(\r\n    state: GameState,\r\n    isFromCreatures: boolean,\r\n    familiarId?: string,\r\n  ): GameState {\r\n    state = super.onDeath(state, isFromCreatures, familiarId);\r\n    state = jumpEventToMessageIfExists(state, \"goblinDen\", \"afterFight\");\r\n    return state;\r\n  }\r\n\r\n  getTips(): string {\r\n    return t(\r\n      \"This Goblin is much larger than the others we have gotten used to fighting. It is really quite strong, with high :attack: and :defense:, and it will become even stronger once it is wounded enough. What's worse is, it will steal a ton of :coins: from us - by the thousands! We should probably not fight it if we are not ready to lose our stockpile. On the other hand, if it just ends up stealing our :coins:, that is one less attack we need to endure... right?\",\r\n    );\r\n  }\r\n}\r\n\r\nexport default new GoblinChief();\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { getAccumulatorVariable } from \"../../../AccumulatorVariables\";\r\nimport GoblinChief from \"../../../exploration/enemies/sewers/GoblinChief\";\r\nimport {\r\n  addEnemyDeathListener,\r\n  startCombat,\r\n} from \"../../../exploration/Exploration\";\r\nimport { Storyline } from \"../../../storylines/Storyline\";\r\nimport { Storylines } from \"../../../storylines/Storylines\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../../transformation/TransformationTags\";\r\nimport { addUICommand } from \"../../../UICommands\";\r\nimport { buildEvent } from \"../../EventMessageBuilder\";\r\nimport { triggerEvent } from \"../../Events\";\r\nimport { EventTag } from \"../../GameEvent\";\r\n\r\nconst goblinDenStoryline = new Storyline(\r\n  \"goblinDen\",\r\n  t(\"Goblin Den\"),\r\n  240,\r\n  20,\r\n  t(\"Defeat at least 80 Goblins of any kind in the Sewers this retirement\"),\r\n  t(\"+40:land:\"),\r\n  (_state) => true,\r\n);\r\n\r\nexport function loadGoblinDen() {\r\n  Storylines.register(goblinDenStoryline);\r\n\r\n  const goblinDenEventBuilder = buildEvent(\r\n    \"goblinDen\",\r\n    t(\"(Storyline) Goblin Den\"),\r\n    [EventTag.STORYLINE],\r\n  ).setStorylineIds([goblinDenStoryline.getId()]);\r\n\r\n  goblinDenEventBuilder.message(\r\n    t(`\"There are a lot of Goblins down here!\"\r\n    \r\nYou hear that from your hired wizard, who has been accompanying you through the disgusting traversal of the Sewers. You agree. You have seen - and felled - quite a few; you wonder if they might be nesting in this place.\r\n\r\nWhile you think about this, you spot a room to the side of the tunnel you are walking through. It is half open, and light is seeping out of the door. You decide to peek inside... and you end up finding something very interesting.`),\r\n  );\r\n  goblinDenEventBuilder\r\n    .message(\r\n      t(\r\n        `The room looks like a makeshift camp. There are a few crude tents laid on the ground, and there is an active bonfire in the center, which illuminates the room. You spot a large figure towards the back - it is a Goblin, but it is larger than the others. It appears to be quite dangerous.\r\n      \r\nYou show the room to your hired wizard, and then she asks you in whispers: \"Should we eliminate it and inspect the room?\"\r\n\r\nThe prospect of loot tempts you, though it's going to be a tough fight... you want to make sure you are ready first.`,\r\n      ),\r\n    )\r\n    .option(t(\"Fight the Goblin Chief\"), {\r\n      transform: (state) => {\r\n        state = addUICommand(state, \"goToExploration\");\r\n        state = addUICommand(state, \"closeAllMenus\");\r\n        state = addUICommand(state, \"closeEventOverlay\");\r\n        state = startCombat(GoblinChief)(state);\r\n        return state;\r\n      },\r\n    })\r\n    .option(t(\"Maybe later\"))\r\n    .end();\r\n\r\n  goblinDenEventBuilder\r\n    .message(\r\n      t(`The Goblin Chief falls to the ground, unconscious, as you manage to succeed and overpower it. You somehow feel bad for the other Goblins - you decide to refrain from killing it.\r\n      \r\nBut you *are* going to get a helping out of the loot of this room.`),\r\n    )\r\n    .tag(\"afterFight\");\r\n\r\n  goblinDenEventBuilder.message(\r\n    t(`You search everywhere - inside the tents, around the room, even the Goblin Chief itself. Very disappointingly, though, you find nothing of value. The hired wizard also looks disappointed.\r\n      \r\nBut you did find something. It's a ladder on the back side of the room, which goes up towards the ceiling. And on the ceiling, there is a trap door with a safety lock. You decide to check it out - you carefully climb the ladder, undo the safety lock, and push the trap door upwards. Then you carefully peek through the hole.\r\n\r\nWhat you see, however, *really* surprises you. *It is your own home's basement!*`),\r\n  );\r\n\r\n  goblinDenEventBuilder\r\n    .message(\r\n      t(`Without believing your eyes, you go back up and scream at the hired wizard to follow you. She does so - and after seeing the other side, she becomes just as dumbfounded as you.\r\n      \r\nThen your mind begins to race. *You had a Goblin Den right below your basement, this entire time.* You were not able to see it because it was locked from the other side - but it meant those goblins could have *come in*!\r\n\r\nYou can't let that happen. You race back down, push the Goblin Chief out of the door of the room, and then lock it - from the inside. You check one more time for any other Goblins, but there are none - and you breathe a sigh of relief.`),\r\n    )\r\n    .option(\r\n      t(\"Continue\"),\r\n      { transform: (state) => goblinDenStoryline.complete(state) },\r\n      \"end\",\r\n    );\r\n\r\n  goblinDenEventBuilder\r\n    .message(\r\n      t(`Then you start thinking about what this also means. This means your basement is actually connected to an *extra room*. But - as you look around - the room is entirely unusable right now. It will take a lot of time to clean this room up, get rid of all of the things the Goblins set in this room, and more cleanly separate it from the rest of the Sewers.\r\n  \r\nYou don't have time to do that, not right now. But at some point, you tell yourself, you should - you jot down some notes in your diary, hoping you (or at least someone else!) will remember about it...\r\n\r\n**You have completed the \"Goblin Den\" Storyline! In future runs, the extra room will give you +40:land:!**`),\r\n    )\r\n    .tag(\"end\")\r\n    .end();\r\n\r\n  const goblinDenEvent = goblinDenEventBuilder.build();\r\n\r\n  addEnemyDeathListener(goblinDenEvent.getId() + \"Triggerer\", (state) => {\r\n    if (\r\n      !goblinDenEvent.hasTriggered(state) &&\r\n      !goblinDenStoryline.isCompleted(state) &&\r\n      getAccumulatorVariable(state, \"goblinKills\") >= 80\r\n    ) {\r\n      return triggerEvent(goblinDenEvent)(state);\r\n    }\r\n    return state;\r\n  });\r\n\r\n  registerTransformation(\r\n    [[TransformationTags.Land, TransformationTags.Cap]],\r\n    \"goblinDen\",\r\n    goblinDenStoryline.getName(),\r\n    TransformationType.Addition,\r\n    (state) => (goblinDenStoryline.isBonusActive(state) ? 40 : 0),\r\n  );\r\n}\r\n\r\nexport { goblinDenStoryline };\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { Flag } from \"../../../Flag\";\r\nimport { hasFlag } from \"../../../Flags\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { Resource } from \"../../../Resources\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport { Item, ItemParams } from \"../../Item\";\r\nimport { ItemTagEnum } from \"../../ItemTagEnum\";\r\nimport { TransmutationSpell } from \"../TransmutationSpell\";\r\n\r\nclass Paper extends Item {\r\n  getId(): string {\r\n    return \"paper\";\r\n  }\r\n\r\n  getTags(): ItemTagEnum[] {\r\n    return [ItemTagEnum.Material];\r\n  }\r\n\r\n  getPicture() {\r\n    return require(\"./paper.png\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Earth;\r\n  }\r\n\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Paper\");\r\n  }\r\n\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\"Paper. Used for Enhancements, but also for many more things.\");\r\n  }\r\n\r\n  getEffect(state: GameState, params: ItemParams): string | undefined {\r\n    return undefined;\r\n  }\r\n\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 200;\r\n  }\r\n}\r\n\r\nconst paper = new Paper();\r\n\r\nclass TransmutePaper extends TransmutationSpell {\r\n  getItem(): Item {\r\n    return paper;\r\n  }\r\n\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Earth: 1,\r\n    };\r\n  }\r\n\r\n  canCraft(state: GameState): boolean {\r\n    return hasFlag(state, Flag.EnhancementsUnlocked) && super.canCraft(state);\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return hasFlag(state, Flag.EnhancementsUnlocked) && super.isVisible(state);\r\n  }\r\n\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 300,\r\n        EarthEssence: 2000,\r\n      },\r\n      items: {},\r\n    };\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Earth;\r\n  }\r\n}\r\n\r\nconst transmutePaper = new TransmutePaper();\r\n\r\nexport { transmutePaper, paper };\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { Storyline } from \"../../../storylines/Storyline\";\r\n\r\nconst storyline = new Storyline(\r\n  \"locationEncyclopedia\",\r\n  t(\"Location Encyclopedia\"),\r\n  220,\r\n  20,\r\n  t(\"Defeat at least 15 enemies in the Hazardous Sector of the Sewers\"),\r\n  t(\r\n    \"Subsequent retirements will need 35% less Exploration to unlock the boss of areas you have unlocked the boss of, to a minimum of 1\",\r\n  ),\r\n  (state) => true,\r\n);\r\n\r\nexport { storyline as LocationEncyclopedia };\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport {\r\n  getWorldAccumulatorVariable,\r\n  incrementAccumulatorVariable,\r\n} from \"../../../AccumulatorVariables\";\r\nimport { DungeonFloors } from \"../../../exploration/dungeons/Dungeons\";\r\nimport {\r\n  addEnemyDeathListener,\r\n  getCurrentDungeonFloor,\r\n  getSuccessfulExplorationsForFloor,\r\n} from \"../../../exploration/Exploration\";\r\nimport { hasFlag, setFlag } from \"../../../Flags\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { addGameStateListener } from \"../../../GameStateListeners\";\r\nimport {\r\n  getTotalAmountOfItem,\r\n  removeFromInventoryWithAnyParams,\r\n} from \"../../../items/Inventory\";\r\nimport { Items } from \"../../../items/Items\";\r\nimport { paper } from \"../../../items/transmute/materials/Paper\";\r\nimport { Storylines } from \"../../../storylines/Storylines\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../../transformation/TransformationTags\";\r\nimport { buildEvent } from \"../../EventMessageBuilder\";\r\nimport { triggerEvent } from \"../../Events\";\r\nimport { EventTag } from \"../../GameEvent\";\r\nimport { LocationEncyclopedia } from \"./LocationEncyclopediaStoryline\";\r\n\r\nexport function loadLocationEncyclopedia() {\r\n  Storylines.register(LocationEncyclopedia);\r\n  const locationEncyclopediaEventBuilder = buildEvent(\r\n    \"locationEncyclopedia\",\r\n    t(\"(Storyline) Location Encyclopedia\"),\r\n    [EventTag.STORYLINE],\r\n  ).setStorylineIds(LocationEncyclopedia.getId());\r\n\r\n  locationEncyclopediaEventBuilder.message(\r\n    t(`Exploring the Sewers is proving to be quite annoying. Having to deal with countless enemies and extreme disappointment every time you reach a dead end is... not good.\r\n    \r\nYou wish you had a map - so you'd be able to take the correct path, without so much wasted time.`),\r\n  );\r\n  locationEncyclopediaEventBuilder\r\n    .message(\r\n      t(`Except, you don't know where you could get one.\r\n      \r\nInstead, you think about building a map yourself. It shouldn't save you effort, but maybe you could sell it to others. Or, even better - maybe someone else might find a better use for it?\r\n\r\nYou think about what you would need to make such a map - or rather, an *encyclopedia* of those places. You'll certainly need Paper, and some Shards for gluing. But you know how to make that by now...`),\r\n    )\r\n    .option(\r\n      t(\"Craft a map (20 Paper, 10 Poison Shards)\"),\r\n      {\r\n        transform: (state) => {\r\n          state = removeFromInventoryWithAnyParams(paper, 20, state);\r\n          state = removeFromInventoryWithAnyParams(\r\n            Items.getById(\"elementalShardPoison\"),\r\n            10,\r\n            state,\r\n          );\r\n          state = LocationEncyclopedia.complete(state);\r\n          state = tallyAll(state);\r\n          return state;\r\n        },\r\n        isEnabled: (state) =>\r\n          getTotalAmountOfItem(paper, state) >= 20 &&\r\n          getTotalAmountOfItem(Items.getById(\"elementalShardPoison\"), state) >=\r\n            10,\r\n      },\r\n      \"end\",\r\n    )\r\n    .option(t(\"Maybe later\"))\r\n    .end();\r\n  locationEncyclopediaEventBuilder\r\n    .message(\r\n      t(`You put together all the pages and proceed to carefully glue them. You wrap it with a makeshift book cover, and write a grand name: \"Location Encyclopedia\". You chuckle - it is just a blank book!\r\n    \r\nBut it won't be blank for long. You start scribbling information that you still remember about the areas you have already visited. You are very hopeful this will be useful in the future!\r\n\r\n**You have completed the \"Location Encyclopedia\" Storyline! Unlocking the boss of a location will reduce the amount of required Exploration on that area by 35% after retiring. This will stack every retirement you clear the location, to a minimum of 1 exploration required!**`),\r\n    )\r\n    .tag(\"end\")\r\n    .end();\r\n\r\n  const locationEncyclopediaEvent = locationEncyclopediaEventBuilder.build();\r\n\r\n  addGameStateListener(\"locationEncyclopediaListener\", (state) => {\r\n    if (\r\n      !locationEncyclopediaEvent.hasTriggered(state) &&\r\n      !LocationEncyclopedia.isCompleted(state) &&\r\n      getSuccessfulExplorationsForFloor(state, \"sewerHazardousSector\") >= 5\r\n    ) {\r\n      return triggerEvent(locationEncyclopediaEvent);\r\n    }\r\n  });\r\n\r\n  function tallyAll(state: GameState): GameState {\r\n    if (LocationEncyclopedia.isCompleted(state)) {\r\n      if (state.temp.locationEncyclopediaCache == undefined) {\r\n        state.temp.locationEncyclopediaCache = [].concat(\r\n          DungeonFloors.getAll(),\r\n        );\r\n      }\r\n      const remainingFloors = state.temp.locationEncyclopediaCache;\r\n\r\n      let floorsToTally = [];\r\n      let talliedFloors = [];\r\n\r\n      for (let floorIdx = 0; floorIdx < remainingFloors.length; floorIdx++) {\r\n        const floor = remainingFloors[floorIdx];\r\n        const isTallied = hasFlag(\r\n          state,\r\n          \"locationEncyclopediaTally-\" + floor.getIdForTallyingClears(),\r\n        );\r\n        if (isTallied) {\r\n          talliedFloors.push(floor);\r\n          continue;\r\n        }\r\n        if (\r\n          !isTallied &&\r\n          floor.isUnlocked(state) &&\r\n          floor.canFightBoss(state)\r\n        ) {\r\n          floorsToTally.push(floor);\r\n        }\r\n      }\r\n\r\n      if (talliedFloors.length > 0) {\r\n        state.temp.locationEncyclopediaCache = remainingFloors.filter(\r\n          (floor) => !talliedFloors.includes(floor),\r\n        );\r\n      }\r\n\r\n      if (floorsToTally.length > 0) {\r\n        for (let floor of floorsToTally) {\r\n          state = incrementAccumulatorVariable(\r\n            state,\r\n            \"clearedTally-\" + floor.getIdForTallyingClears(),\r\n            1,\r\n          );\r\n          state = setFlag(\r\n            \"locationEncyclopediaTally-\" + floor.getIdForTallyingClears(),\r\n          )(state);\r\n        }\r\n      }\r\n    }\r\n    return state;\r\n  }\r\n\r\n  addEnemyDeathListener(locationEncyclopediaEvent.getId(), (state, _enemy) => {\r\n    if (LocationEncyclopedia.isCompleted(state)) {\r\n      const floor = getCurrentDungeonFloor(state);\r\n\r\n      const isTallied = hasFlag(\r\n        state,\r\n        \"locationEncyclopediaTally-\" + floor.getIdForTallyingClears(),\r\n      );\r\n      if (!isTallied && floor.isUnlocked(state) && floor.canFightBoss(state)) {\r\n        state = incrementAccumulatorVariable(\r\n          state,\r\n          \"clearedTally-\" + floor.getIdForTallyingClears(),\r\n          1,\r\n        );\r\n        state = setFlag(\r\n          \"locationEncyclopediaTally-\" + floor.getIdForTallyingClears(),\r\n        )(state);\r\n      }\r\n    }\r\n    return state;\r\n  });\r\n\r\n  registerTransformation(\r\n    [[TransformationTags.ExplorationBossRequirement]],\r\n    \"locationEncyclopedia\",\r\n    LocationEncyclopedia.getName(),\r\n    TransformationType.Multiplier,\r\n    (state, params) => {\r\n      if (LocationEncyclopedia.isBonusActive(state)) {\r\n        const tally = getWorldAccumulatorVariable(\r\n          state,\r\n          \"clearedTally-\" + params.floor.getIdForTallyingClears(),\r\n        );\r\n        return Math.pow(0.65, tally);\r\n      }\r\n      return 1.0;\r\n    },\r\n  );\r\n}\r\n","import { formatNumber } from \"../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../utils/I18n\";\r\nimport { getBuildingAmount } from \"../../../buildings/Buildings\";\r\nimport { essenceCatalyst } from \"../../../buildings/catalysts/EssenceCatalyst\";\r\nimport { addGameStateListener } from \"../../../GameStateListeners\";\r\nimport { getResourceAmount, grantResource, Resource } from \"../../../Resources\";\r\nimport { Storyline } from \"../../../storylines/Storyline\";\r\nimport { Storylines } from \"../../../storylines/Storylines\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../../transformation/TransformationTags\";\r\nimport { buildEvent } from \"../../EventMessageBuilder\";\r\nimport { triggerEvent } from \"../../Events\";\r\nimport { EventTag } from \"../../GameEvent\";\r\nimport { advertisingManual } from \"../pretraining/AdvertisingManual\";\r\n\r\nexport const outessencedStoryline = new Storyline(\r\n  \"outessenced\",\r\n  t(\"Outessenced\"),\r\n  290,\r\n  25,\r\n  (state) => t(\"Build at least 10 Essence Catalysts\"),\r\n  (state) =>\r\n    t(\r\n      \"Obtain a bonus to channeling of half the effect of an Essence Catalyst for each Essence Catalyst you have less than the maximum you have ever had across any retirement ({{max}})\",\r\n      {\r\n        max: formatNumber(\r\n          state.world.maxFurnitureNumbers[essenceCatalyst.getId()],\r\n        ),\r\n      },\r\n    ),\r\n  (state) => advertisingManual.isCompleted(state),\r\n);\r\n\r\nexport function loadOutessenced() {\r\n  Storylines.register(outessencedStoryline);\r\n  const eventBuilder = buildEvent(\"outessenced\", t(\"(Storyline) Outessenced\"), [\r\n    EventTag.STORYLINE,\r\n  ]).setStorylineIds(outessencedStoryline.getId());\r\n\r\n  eventBuilder.message(\r\n    t(`You finish putting together that last Essence Catalyst. They are so incredibly useful - each one of them has saved you so much work channeling Essence, you feel you cannot live without them!\r\n    \r\n\"Excuse me,\" you hear from outside your door. \"May I have a few moments of your attention?\"\r\n\r\nYou take a peek, and you spot someone that seems... familiar: a man with a huge backpack. They're a traveling merchant! You get the feeling you might have seen him before.`),\r\n  );\r\n  eventBuilder.message(\r\n    t(`\"I happened to be walking through, and I heard something about some Essence Catalyst,\" he explains. \"I'm well aware just how important these are to wizards of all skill levels.\"\r\n      \r\n\"But wasn't it *difficult* to build them? Wasn't it slow, channeling all that :fireessence:? Well... *I have a solution!*\"\r\n\r\nThe merchant pulls out a book from his bag. It reads: *\"Outessenced\"*. There is a drawing of an Essence Catalyst on the cover, but next to it, there appear to be many, many other Essence Catalysts drawn, except these are only outlined. The book catches your interest. What could this possibly be about?`),\r\n  );\r\n  eventBuilder\r\n    .message(\r\n      t(`\"Ah, I see it's caught your eye,\" exclaims the merchant. \"This was written by a celebrity professor of a school of magic. It describes a way to *record* Essence Catalysts somehow, so that they can be used even when they are no longer there... how is that even possible, I wouldn't know, I'm not a wizard,\" he says.\r\n      \r\nYou are intrigued. That could be so useful - how much easier would it have been to set up your home if that was possible?! Until he says: \"Very useful, isn't it? It can be yours for *500K:coins:*. And not a single one less!\"\r\n\r\nThat's... a lot of :coins:, and you did already set up your Essence Catalysts, after all. You think again about whether it's worth buying the book...`),\r\n    )\r\n    .option(\r\n      t(\"Buy the book (500K Coins)\"),\r\n      {\r\n        transform: (state, params) =>\r\n          grantResource(Resource.Coins, -500000)(state),\r\n        isEnabled: (state, params) =>\r\n          getResourceAmount(state, Resource.Coins) >= 500000,\r\n      },\r\n      \"purchased\",\r\n    )\r\n    .option(\"Maybe later\")\r\n    .end();\r\n  eventBuilder\r\n    .message(\r\n      t(`You decide to purchase the book, after all that hard work building up your :coins:. You have a hunch this book could be valuable... as long as it does what the merchant said it did.\r\n      \r\nThe merchant smiles while taking your :coins:. \"Nice doing business with you,\" he says, then hands over the book. \"Best of luck on your future furnishing!\" He waves at you and walks away.\r\n\r\nThe book feels very light...`),\r\n    )\r\n    .tag(\"purchased\")\r\n    .option(\r\n      t(\"Continue\"),\r\n      {\r\n        transform: (state) => {\r\n          state = outessencedStoryline.complete(state);\r\n          state = outessencedStoryline.activateBonus(state);\r\n          return state;\r\n        },\r\n      },\r\n      \"end\",\r\n    )\r\n    .end();\r\n\r\n  eventBuilder\r\n    .message(\r\n      t(`You skim through it. But you realize the book is actually light because it describes a simple concept. A *really* simple concept - that you weren't aware of at all!\r\n      \r\nYou figure out you got scammed. There is no way this book was worth 500K:coins:. But on the other hand... you can tell right away that the idea works. And you can apply it right away!\r\n\r\n**You have completed the \"Outessenced\" Storyline! From now on, you will gain a bonus to channeling of half the effect of an Essence Catalyst, for each Essence Catalyst you have less than the maximum you have ever had across all retirements! This will allow you to channel Essence a lot more effectively at the beginning of a run!**`),\r\n    )\r\n    .tag(\"end\");\r\n\r\n  const event = eventBuilder.build();\r\n\r\n  addGameStateListener(event.getId(), (state) => {\r\n    if (\r\n      !event.hasTriggered(state) &&\r\n      !outessencedStoryline.isCompleted(state) &&\r\n      advertisingManual.isCompleted(state) &&\r\n      getBuildingAmount(state, essenceCatalyst) >= 10\r\n    ) {\r\n      return triggerEvent(event);\r\n    }\r\n  });\r\n\r\n  registerTransformation(\r\n    [[TransformationTags.ChannelingEfficiency]],\r\n    outessencedStoryline.getId(),\r\n    outessencedStoryline.getName(),\r\n    TransformationType.Multiplier,\r\n    (state) => {\r\n      if (!outessencedStoryline.isBonusActive(state)) {\r\n        return 1.0;\r\n      }\r\n      const catalystAmount = getBuildingAmount(state, essenceCatalyst);\r\n      const maxAmount =\r\n        state.world.maxFurnitureNumbers[essenceCatalyst.getId()] ?? 0;\r\n      if (catalystAmount < maxAmount) {\r\n        const multiplierPerCatalyst =\r\n          (essenceCatalyst.getPerCatalystBonusMultiplier(state) - 1) / 2 + 1;\r\n        return Math.max(\r\n          1.0,\r\n          Math.pow(multiplierPerCatalyst, maxAmount - catalystAmount),\r\n        );\r\n      }\r\n      return 1.0;\r\n    },\r\n  );\r\n}\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass CopperGauntlet extends EquippableItem {\r\n  getId(): string {\r\n    return \"copperGauntlet\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Hand;\r\n  }\r\n  getPicture() {\r\n    return require(\"./copperGauntlet.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Copper Gauntlet\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"A gauntlet made from reinforced copper. An upgrade from basic knuckles, easily fits into your hand.\",\r\n    );\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 2600;\r\n  }\r\n\r\n  getAttackBonusBase(params: ItemParams): number {\r\n    return 50;\r\n  }\r\n\r\n  getAttackDelayBonusRatioBase(params: ItemParams): number {\r\n    return -0.4;\r\n  }\r\n}\r\n\r\nexport const copperGauntlet = new CopperGauntlet();\r\n\r\nclass TransmuteCopperGauntlet extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return copperGauntlet;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Air: 17,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 400,\r\n        AirEssence: 12000,\r\n      },\r\n      items: {\r\n        elementalShardAir: 40,\r\n        copperIngot: 7,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Air;\r\n  }\r\n}\r\n\r\nexport const transmuteCopperGauntlet = new TransmuteCopperGauntlet();\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass CopperRapier extends EquippableItem {\r\n  getId(): string {\r\n    return \"copperRapier\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Hand;\r\n  }\r\n  getPicture() {\r\n    return require(\"./copperRapier.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Copper Rapier\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\"A stabbing sword made from reinforced copper.\");\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 1700;\r\n  }\r\n\r\n  getAttackBonusBase(params: ItemParams): number {\r\n    return 66;\r\n  }\r\n\r\n  getAttackDelayBonusRatioBase(params: ItemParams): number {\r\n    return -0.05;\r\n  }\r\n}\r\n\r\nexport const copperRapier = new CopperRapier();\r\n\r\nclass TransmuteCopperRapier extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return copperRapier;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Earth: 15,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 400,\r\n        EarthEssence: 10000,\r\n      },\r\n      items: {\r\n        elementalShardEarth: 30,\r\n        copperIngot: 5,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Earth;\r\n  }\r\n}\r\n\r\nexport const transmuteCopperRapier = new TransmuteCopperRapier();\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass CopperTomahawk extends EquippableItem {\r\n  getId(): string {\r\n    return \"copperTomahawk\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Hand;\r\n  }\r\n  getPicture() {\r\n    return require(\"./copperTomahawk.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Copper Tomahawk\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"An axe, made from reinforced copper. Strong, but not overly heavy.\",\r\n    );\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 2200;\r\n  }\r\n\r\n  getAttackBonusBase(params: ItemParams): number {\r\n    return 105;\r\n  }\r\n\r\n  getAttackDelayBonusRatioBase(params: ItemParams): number {\r\n    return 0.4;\r\n  }\r\n}\r\n\r\nexport const copperTomahawk = new CopperTomahawk();\r\n\r\nclass TransmuteCopperTomahawk extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return copperTomahawk;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Fire: 14,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 400,\r\n        FireEssence: 5000,\r\n      },\r\n      items: {\r\n        elementalShardFire: 25,\r\n        copperIngot: 3,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Fire;\r\n  }\r\n}\r\n\r\nexport const transmuteCopperTomahawk = new TransmuteCopperTomahawk();\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { createChestEvent } from \"../../../events/autorandom/Chest\";\r\nimport { ExplorationTriggerGroup } from \"../../../events/autorandom/ExplorationTrigger\";\r\nimport { Flag } from \"../../../Flag\";\r\nimport { hasFlag } from \"../../../Flags\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { copperGauntlet } from \"../../../items/equipment/hand/air/CopperGauntlet\";\r\nimport { copperRapier } from \"../../../items/equipment/hand/earth/CopperRapier\";\r\nimport { copperTomahawk } from \"../../../items/equipment/hand/fire/CopperTomahawk\";\r\nimport { antidotePotion } from \"../../../items/equipment/pouch/AntidotePotion\";\r\nimport { copperOre } from \"../../../items/transmute/materials/CopperOre\";\r\nimport { cotton } from \"../../../items/transmute/materials/Cotton\";\r\nimport { Dungeon } from \"../Dungeon\";\r\nimport { DungeonFloor } from \"../DungeonFloor\";\r\nimport SewerEntrance from \"./SewerEntrance\";\r\nimport SewerHazardousSector from \"./SewerHazardousSector\";\r\nimport SewerHideout from \"./SewerHideout\";\r\n\r\nclass Sewers extends Dungeon {\r\n  getId(): string {\r\n    return \"sewers\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Sewers\");\r\n  }\r\n\r\n  getDungeonFloors(): DungeonFloor[] {\r\n    return [SewerEntrance, SewerHazardousSector, SewerHideout];\r\n  }\r\n\r\n  isUnlocked(state: GameState): boolean {\r\n    return hasFlag(state, Flag.SewersUnlocked);\r\n  }\r\n}\r\n\r\nexport const sewers = new Sewers();\r\n\r\nclass SewersExplorationGroup extends ExplorationTriggerGroup {\r\n  getHintMessageWhenPossible(): string {\r\n    return t(\"Explore the Sewers\");\r\n  }\r\n  getHintMessageWhenNotPossible(): string {\r\n    return t(\r\n      \"This Storyline can be found by exploring the Sewers, but you cannot get it this run\",\r\n    );\r\n  }\r\n  maxTriggersPerRun(): number {\r\n    return 1;\r\n  }\r\n  getId(): string {\r\n    return \"sewers\";\r\n  }\r\n  getExplorationSuccessesBase(): number {\r\n    return 150;\r\n  }\r\n  getDungeonFloors(): DungeonFloor[] {\r\n    return sewers.getDungeonFloors();\r\n  }\r\n}\r\n\r\nexport const sewersExplorationGroup = new SewersExplorationGroup();\r\n\r\nexport function loadSewerChests() {\r\n  createChestEvent(\r\n    \"sewerChestCommon1\",\r\n    [SewerEntrance.getId(), SewerHazardousSector.getId(), SewerHideout.getId()],\r\n    70,\r\n    [\r\n      {\r\n        itemOccurrence: { itemId: copperOre.getId(), params: {} },\r\n        amount: 8,\r\n      },\r\n    ],\r\n  );\r\n  createChestEvent(\r\n    \"sewerChestCommon2\",\r\n    [SewerEntrance.getId(), SewerHazardousSector.getId(), SewerHideout.getId()],\r\n    50,\r\n    [\r\n      {\r\n        itemOccurrence: { itemId: cotton.getId(), params: {} },\r\n        amount: 3,\r\n      },\r\n    ],\r\n  );\r\n\r\n  createChestEvent(\r\n    \"sewerChestRare0\",\r\n    [SewerEntrance.getId(), SewerHazardousSector.getId(), SewerHideout.getId()],\r\n    4,\r\n    [\r\n      {\r\n        itemOccurrence: { itemId: antidotePotion.getId(), params: {} },\r\n        amount: 1,\r\n      },\r\n    ],\r\n  );\r\n\r\n  createChestEvent(\r\n    \"sewerChestRare1\",\r\n    [SewerEntrance.getId(), SewerHazardousSector.getId(), SewerHideout.getId()],\r\n    4,\r\n    [\r\n      {\r\n        itemOccurrence: { itemId: copperTomahawk.getId(), params: {} },\r\n        amount: 1,\r\n      },\r\n    ],\r\n  );\r\n\r\n  createChestEvent(\r\n    \"sewerChestRare2\",\r\n    [SewerEntrance.getId(), SewerHazardousSector.getId(), SewerHideout.getId()],\r\n    4,\r\n    [\r\n      {\r\n        itemOccurrence: { itemId: copperGauntlet.getId(), params: {} },\r\n        amount: 1,\r\n      },\r\n    ],\r\n  );\r\n\r\n  createChestEvent(\r\n    \"sewerChestRare3\",\r\n    [SewerEntrance.getId(), SewerHazardousSector.getId(), SewerHideout.getId()],\r\n    4,\r\n    [\r\n      {\r\n        itemOccurrence: { itemId: copperRapier.getId(), params: {} },\r\n        amount: 1,\r\n      },\r\n    ],\r\n  );\r\n}\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { essenceStorage } from \"../../../buildings/storages/EssenceStorage\";\r\nimport { sewers } from \"../../../exploration/dungeons/sewers/Sewers\";\r\nimport { getCurrentDungeonFloor } from \"../../../exploration/Exploration\";\r\nimport { ExplorationStatus } from \"../../../exploration/ExplorationStatus\";\r\nimport { getExplorationStatus } from \"../../../exploration/ExplorationUtils\";\r\nimport {\r\n  getTotalAmountOfItem,\r\n  removeFromInventoryWithAnyParams,\r\n} from \"../../../items/Inventory\";\r\nimport { cotton } from \"../../../items/transmute/materials/Cotton\";\r\nimport { getResourceAmount, grantResource, Resource } from \"../../../Resources\";\r\nimport { getElementLevel, SpellElement } from \"../../../spells/Elements\";\r\nimport { Storyline } from \"../../../storylines/Storyline\";\r\nimport { Storylines } from \"../../../storylines/Storylines\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../../transformation/TransformationTags\";\r\nimport { registerRandomEventTrigger } from \"../../autorandom/RandomEventTrigger\";\r\nimport { buildEvent } from \"../../EventMessageBuilder\";\r\nimport { EventTag } from \"../../GameEvent\";\r\n\r\nconst passageOfStenchStoryline = new Storyline(\r\n  \"passageOfStench\",\r\n  t(\"Passage of Stench\"),\r\n  260,\r\n  20,\r\n  (state) => t(\"Explore the Sewers\"),\r\n  t(\"+100% effectivity of Essence Storages\"),\r\n  (_state) => true,\r\n);\r\n\r\nexport function loadPassageOfStench() {\r\n  Storylines.register(passageOfStenchStoryline);\r\n\r\n  const passageOfStenchEventBuilder = buildEvent(\r\n    \"passageOfStench\",\r\n    t(\"(Storyline) Passage of Stench\"),\r\n    [EventTag.STORYLINE],\r\n  ).setStorylineIds([passageOfStenchStoryline.getId()]);\r\n\r\n  passageOfStenchEventBuilder.message(\r\n    t(`A sharp, terrible odor pierces your nostrils. You stop, feeling quite weakened by it. Your hired wizard also feels similarly.\r\n    \r\n\"Agh... should we turn around? Why are we even doing this...? Is this Philosopher's Stone really that important...?\" she asks, while complaining.\r\n\r\nThis time, you agree with her. This stench feels dangerously strong. You will have to turn around...`),\r\n  );\r\n  passageOfStenchEventBuilder\r\n    .message(\r\n      t(\r\n        `Unless... maybe there is a way? You remind yourself you are a Wizard, after all... shouldn't you be able to use magic to solve something like this?`,\r\n      ),\r\n    )\r\n    .option(\r\n      t(\r\n        \"Transmute two protective masks (Requires Lv15 Earth, Lv15 Water, 16 Cotton, 2400 Mana)\",\r\n      ),\r\n      {\r\n        transform: (state) => {\r\n          state = removeFromInventoryWithAnyParams(cotton, 16, state);\r\n          state = grantResource(Resource.Mana, -2400)(state);\r\n          return state;\r\n        },\r\n        isEnabled: (state) => {\r\n          return (\r\n            getResourceAmount(state, Resource.Mana) >= 2400 &&\r\n            getTotalAmountOfItem(cotton, state) >= 16 &&\r\n            getElementLevel(state, SpellElement.Earth) >= 15 &&\r\n            getElementLevel(state, SpellElement.Water) >= 15\r\n          );\r\n        },\r\n      },\r\n      \"masks\",\r\n    )\r\n    .option(\r\n      t(\"Dispel the stench with wind (Requires Lv18 Air, 3200 Mana)\"),\r\n      {\r\n        transform: (state) => {\r\n          state = grantResource(Resource.Mana, -3200)(state);\r\n          return state;\r\n        },\r\n        isEnabled: (state) => {\r\n          return (\r\n            getResourceAmount(state, Resource.Mana) >= 3200 &&\r\n            getElementLevel(state, SpellElement.Air) >= 18\r\n          );\r\n        },\r\n      },\r\n      \"wind\",\r\n    )\r\n    .option(t(\"Maybe later\"))\r\n    .end();\r\n\r\n  passageOfStenchEventBuilder\r\n    .message(\r\n      t(\r\n        `You transmute a pair of face masks, and give one to your hired wizard. Putting them on is a relief. You still don't feel fully well, but you get some of your strength back, and feel strong enough to press on.`,\r\n      ),\r\n    )\r\n    .tag(\"masks\")\r\n    .option(t(\"Continue\"), \"past\")\r\n    .end();\r\n\r\n  passageOfStenchEventBuilder\r\n    .message(\r\n      t(`You gather Mana and cast a strong Air spell. A strong breeze comes from behind you. Your hired wizard almost loses her hat, but manages to catch it at the last minute. She is about to complain, but she notices the same that you have - the air around you is more breathable.\r\n    \r\nAlthough not exactly pleasant, it feels like it isn't overpowering enough to stop you from advancing in this direction now...`),\r\n    )\r\n    .tag(\"wind\");\r\n\r\n  passageOfStenchEventBuilder\r\n    .message(\r\n      t(`You continue walking through the passage and eventually find the source of the foul smell: a big, big pile of what looks like rotten Goblin flesh. Your hired wizard is very disgusted by the sight and decides to wait for you outside. But you decide to scan the place.\r\n      \r\nAlthough you don't find much, one thing catches your attention: a book in the center that seems wildly unrelated to the room, *\"Essence Storage Construction\"*. You decide to take it with you - it is in good condition, and whoever put all those... Goblins... in here, for some reason, also decided to keep this book as well? You can't make much sense of it.`),\r\n    )\r\n    .tag(\"past\")\r\n    .option(\r\n      t(\"Continue\"),\r\n      { transform: (state) => passageOfStenchStoryline.complete(state) },\r\n      \"end\",\r\n    );\r\n\r\n  // Scribbled book describing how to store Corpses diagram,\r\n\r\n  passageOfStenchEventBuilder\r\n    .message(\r\n      t(`In the comfort of your home, you open the book and decide to take a look at it. You discover two different things. The first one are guides on how to better build Essence Storages, but they seem somewhat difficult to understand. The second one are crude diagrams written by someone else about the best way to pile Goblin corpses... which you find odd. It appears someone has just used this valuable book as a writing material for another purpose!\r\n      \r\nYou are somewhat disgusted, but you decide to store the book anyway. You think the knowledge about how to better build Essence Storages might be able to benefit someone else at some point...\r\n\r\n**You have completed the \"Passage of Stench\" Storyline! In future runs, the knowledge from the book will double the effect of Essence Storages!**`),\r\n    )\r\n    .tag(\"end\")\r\n    .end();\r\n\r\n  const passageOfStench = passageOfStenchEventBuilder.build();\r\n\r\n  registerTransformation(\r\n    [[TransformationTags.PerBuildingCap, essenceStorage.getId()]],\r\n    \"passageOfStench\",\r\n    passageOfStenchStoryline.getName(),\r\n    TransformationType.Multiplier,\r\n    (state) => (passageOfStenchStoryline.isBonusActive(state) ? 2.0 : 1.0),\r\n  );\r\n\r\n  registerRandomEventTrigger(\r\n    passageOfStench,\r\n    25,\r\n    (state) =>\r\n      !passageOfStench.hasTriggered(state) &&\r\n      !passageOfStenchStoryline.isCompleted(state) &&\r\n      getExplorationStatus(state) != ExplorationStatus.None &&\r\n      sewers.getDungeonFloors().includes(getCurrentDungeonFloor(state)),\r\n  );\r\n}\r\n\r\nexport { passageOfStenchStoryline };\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { hasFlag, setFlag } from \"../../../Flags\";\r\nimport { addGameStateListener } from \"../../../GameStateListeners\";\r\nimport {\r\n  addToInventory,\r\n  getTotalAmountOfItem,\r\n  removeFromInventoryWithAnyParams,\r\n} from \"../../../items/Inventory\";\r\nimport { Items } from \"../../../items/Items\";\r\nimport { getUnlockedElements } from \"../../../spells/Elements\";\r\nimport { Storyline } from \"../../../storylines/Storyline\";\r\nimport { Storylines } from \"../../../storylines/Storylines\";\r\nimport { calculateIncomePerSecond } from \"../../../timetick/IncomeOverTime\";\r\nimport { buildEvent } from \"../../EventMessageBuilder\";\r\nimport { triggerEvent } from \"../../Events\";\r\nimport { EventTag } from \"../../GameEvent\";\r\n\r\nexport const shardStockpileStoryline = new Storyline(\r\n  \"shardStockpile\",\r\n  t(\"Stockpile of Shards\"),\r\n  280,\r\n  20,\r\n  t(\"Obtain 150:mana:/sec after retiring at least 2 times\"),\r\n  t(\"Begin subsequent retirements with 30 shards of every unlocked Element\"),\r\n  (state) => true,\r\n);\r\n\r\nexport function loadShardStockpile() {\r\n  Storylines.register(shardStockpileStoryline);\r\n  const shardStockpileEventBuilder = buildEvent(\r\n    \"shardStockpile\",\r\n    t(\"(Storyline) Stockpile of Shards\"),\r\n    [EventTag.STORYLINE],\r\n  ).setStorylineIds(shardStockpileStoryline.getId());\r\n\r\n  shardStockpileEventBuilder\r\n    .message(\r\n      t(`You have come pretty far, but you still remember how difficult it was to start out. Slow :mana: generation, few or no wizards helping you out, manually crafting all these Shards... Your own inexperience didn't help you, either.\r\n    \r\nYou wouldn't wish it on anyone. Now that you feel you are standing on more solid ground, you decide to create a stockpile of shards so this never happens again.\r\n\r\nYou are going to need a lot of shards...`),\r\n    )\r\n    .option(\r\n      t(\r\n        \"Create the stockpile (200 of each of Fire Shard, Earth Shard, Water Shard, Air Shard)\",\r\n      ),\r\n      {\r\n        transform: (state) => {\r\n          state = removeFromInventoryWithAnyParams(\r\n            Items.getById(\"elementalShardFire\"),\r\n            200,\r\n            state,\r\n          );\r\n          state = removeFromInventoryWithAnyParams(\r\n            Items.getById(\"elementalShardEarth\"),\r\n            200,\r\n            state,\r\n          );\r\n          state = removeFromInventoryWithAnyParams(\r\n            Items.getById(\"elementalShardWater\"),\r\n            200,\r\n            state,\r\n          );\r\n          state = removeFromInventoryWithAnyParams(\r\n            Items.getById(\"elementalShardAir\"),\r\n            200,\r\n            state,\r\n          );\r\n          state = shardStockpileStoryline.complete(state);\r\n          return state;\r\n        },\r\n        isEnabled: (state) =>\r\n          getTotalAmountOfItem(Items.getById(\"elementalShardFire\"), state) >=\r\n            200 &&\r\n          getTotalAmountOfItem(Items.getById(\"elementalShardEarth\"), state) >=\r\n            200 &&\r\n          getTotalAmountOfItem(Items.getById(\"elementalShardWater\"), state) >=\r\n            200 &&\r\n          getTotalAmountOfItem(Items.getById(\"elementalShardAir\"), state) >=\r\n            200,\r\n      },\r\n      \"end\",\r\n    )\r\n    .option(t(\"Maybe later\"))\r\n    .end();\r\n  shardStockpileEventBuilder\r\n    .message(\r\n      t(`You put all the shards in a box, neatly divided and sorted. You cover the box, and you safeguard it in a corner of the house. You vow not to open it again - and hope it might help someone. Perhaps your children, if you ever decide to have any...?\r\n      \r\n**You have completed the \"Stockpile of Shards\" Storyline! In future runs, you will begin with 30 shards of all of your unlocked Elements in your inventory!**`),\r\n    )\r\n    .tag(\"end\")\r\n    .end();\r\n\r\n  const shardStockpileEvent = shardStockpileEventBuilder.build();\r\n\r\n  addGameStateListener(\"shardStockpileListener\", (state) => {\r\n    if (\r\n      !shardStockpileEvent.hasTriggered(state) &&\r\n      !shardStockpileStoryline.isCompleted(state) &&\r\n      state.world.totalTimesResetted >= 2 &&\r\n      (calculateIncomePerSecond(state)?.Mana ?? 0) >= 150\r\n    ) {\r\n      return triggerEvent(shardStockpileEvent);\r\n    }\r\n  });\r\n\r\n  addGameStateListener(\"shardStockpile\", (state) => {\r\n    if (\r\n      shardStockpileStoryline.isBonusActive(state) &&\r\n      !hasFlag(state, \"shardStockpileHasGivenShards\") &&\r\n      state.run.primaryElement != null\r\n    ) {\r\n      return (state) => {\r\n        if (state.run.primaryElement != null) {\r\n          const unlockedElements = getUnlockedElements(state);\r\n          for (let element of unlockedElements) {\r\n            state = addToInventory(\r\n              { itemId: \"elementalShard\" + element, params: {} },\r\n              30,\r\n              state,\r\n            );\r\n          }\r\n          state = setFlag(\"shardStockpileHasGivenShards\")(state);\r\n        }\r\n        return state;\r\n      };\r\n    }\r\n  });\r\n}\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass WizardsHat extends EquippableItem {\r\n  getId(): string {\r\n    return \"wizardsHat\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Accessory;\r\n  }\r\n  getPicture() {\r\n    return require(\"./wizardsHat.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Wizard's Hat\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"A traditional hat, popular with wizards of all kinds. Boosts spellcasting.\",\r\n    );\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 2000;\r\n  }\r\n\r\n  getDefenseBonusBase(params: ItemParams): number {\r\n    return 3;\r\n  }\r\n\r\n  getManaRegenBonusBase(params: ItemParams): number {\r\n    return 10;\r\n  }\r\n\r\n  getMaxManaBonusBase(params: ItemParams): number {\r\n    return 300;\r\n  }\r\n}\r\n\r\nexport const wizardsHat = new WizardsHat();\r\n\r\nclass TransmuteWizardsHat extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return wizardsHat;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Water: 18,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 400,\r\n      },\r\n      items: {\r\n        elementalShardWater: 20,\r\n        cotton: 5,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Water;\r\n  }\r\n}\r\n\r\nexport const transmuteWizardsHat = new TransmuteWizardsHat();\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { sewers } from \"../../../exploration/dungeons/sewers/Sewers\";\r\nimport { getCurrentDungeonFloor } from \"../../../exploration/Exploration\";\r\nimport { ExplorationStatus } from \"../../../exploration/ExplorationStatus\";\r\nimport { getExplorationStatus } from \"../../../exploration/ExplorationUtils\";\r\nimport { Flag } from \"../../../Flag\";\r\nimport { hasFlag, setFlag } from \"../../../Flags\";\r\nimport { addGameStateListener } from \"../../../GameStateListeners\";\r\nimport { wizardsHat } from \"../../../items/equipment/accessory/water/WizardsHat\";\r\nimport { addToInventory } from \"../../../items/Inventory\";\r\nimport { getResourceAmount, grantResource, Resource } from \"../../../Resources\";\r\nimport { registerPostRetirementListener } from \"../../../Retire\";\r\nimport { getElementLevel, SpellElement } from \"../../../spells/Elements\";\r\nimport { Storyline } from \"../../../storylines/Storyline\";\r\nimport { Storylines } from \"../../../storylines/Storylines\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../../transformation/TransformationTags\";\r\nimport { registerRandomEventTrigger } from \"../../autorandom/RandomEventTrigger\";\r\nimport { buildEvent } from \"../../EventMessageBuilder\";\r\nimport { getGameEventById } from \"../../Events\";\r\nimport { EventTag } from \"../../GameEvent\";\r\n\r\nconst someonesTrashBookStoryline = new Storyline(\r\n  \"someonesTrashBook\",\r\n  t(\"Somebody's Trash (Book)\"),\r\n  250,\r\n  20,\r\n  (state) =>\r\n    getGameEventById(\"someonesTrash\").hasTriggered(state)\r\n      ? !someonesTrashHatStoryline.isCompletedThisRun(state) &&\r\n        !someonesTrashTreasureStoryline.isCompletedThisRun(state)\r\n        ? t(\"Explore the Sewers\")\r\n        : t(\"Explore the Sewers, but you cannot get it this run\")\r\n      : t(\"Explore the Sewers\"),\r\n  (state) => t(\"+25% Exp gain from Studying\"),\r\n  (_state) => true,\r\n);\r\n\r\nconst someonesTrashHatStoryline = new Storyline(\r\n  \"someonesTrashHat\",\r\n  t(\"Somebody's Trash (Hat)\"),\r\n  251,\r\n  20,\r\n  (state) =>\r\n    getGameEventById(\"someonesTrash\").hasTriggered(state)\r\n      ? !someonesTrashBookStoryline.isCompletedThisRun(state) &&\r\n        !someonesTrashTreasureStoryline.isCompletedThisRun(state)\r\n        ? t(\"Explore the Sewers\")\r\n        : t(\"Explore the Sewers, but you cannot get it this run\")\r\n      : t(\"Explore the Sewers\"),\r\n  t(\"Start runs with a Wizard's Hat accessory\"),\r\n  (_state) => true,\r\n);\r\n\r\nconst someonesTrashTreasureStoryline = new Storyline(\r\n  \"someonesTrashTreasure\",\r\n  t(\"Somebody's Trash (Treasure Chest)\"),\r\n  252,\r\n  20,\r\n  (state) =>\r\n    getGameEventById(\"someonesTrash\").hasTriggered(state)\r\n      ? !someonesTrashBookStoryline.isCompletedThisRun(state) &&\r\n        !someonesTrashHatStoryline.isCompletedThisRun(state)\r\n        ? t(\"Explore the Sewers\")\r\n        : t(\"Explore the Sewers, but you cannot get it this run\")\r\n      : t(\"Explore the Sewers\"),\r\n  t(\"Start with your :coins: storage filled up\"),\r\n  (_state) => true,\r\n);\r\n\r\nexport function loadSomeonesTrash() {\r\n  Storylines.register(someonesTrashBookStoryline);\r\n  Storylines.register(someonesTrashHatStoryline);\r\n  Storylines.register(someonesTrashTreasureStoryline);\r\n\r\n  const someonesTrashEventBuilder = buildEvent(\r\n    \"someonesTrash\",\r\n    t(\"(Storyline) Somebody's Trash\"),\r\n    [EventTag.STORYLINE],\r\n  ).setStorylineIds([\r\n    someonesTrashBookStoryline.getId(),\r\n    someonesTrashHatStoryline.getId(),\r\n    someonesTrashTreasureStoryline.getId(),\r\n  ]);\r\n\r\n  someonesTrashEventBuilder.message(\r\n    t(`On your exploration of the Sewers, you notice your hired wizard falling back, staring at the canal on the tunnel you are traversing. You call to her to come, but she instead tells *you* to do so instead.\r\n    \r\n\"Look\", she exclaims. \"There are a lot of magical items here!\"\r\n\r\nYou are roughly able to see something at the bottom. Except, it looks like a pile of trash, stuck side-by-side on the canal.`),\r\n  );\r\n  someonesTrashEventBuilder.message(\r\n    t(\r\n      `You tell her that it looks worthless, but she shakes her head. \"No, you are mistaken\", she says. \"There's so many valuable things here. Look at that book, for example - it is a Magical Encyclopedia. I can't tell exactly what the contents are, though. Or that hat - it's actually a traditional Wizard's Hat, a powerful, handy way to generate more :mana:. Or even that treasure chest - I don't think it'd have anything in there, but I can sense it's enchanted. This must have been some Wizard's trash.\"\r\n      \r\nA Wizard's trash? Hmm... If the Wizard trashed them, isn't there a good reason why? But why would all of them be together *here*? Perhaps something happened to the Wizard...?`,\r\n    ),\r\n  );\r\n  someonesTrashEventBuilder\r\n    .message(\r\n      t(`Your hired wizard continues: \"They look terrible now, but I'm sure I can restore those items! It could be useful!\"\r\n\r\nAnd you also remember something you had heard before: *\"Somebody's trash is somebody else's treasure\".* But you don't feel very good about that...\r\n      \r\nTelling yourself that it's for her sake, you decide to humor her - to grab those items. But in order to do that, you need a way to go down to the canal safely - and back up, of course.`),\r\n    )\r\n    .option(\r\n      t(\"Build a ladder (Requires Lv16 Earth, 25K Earth Essence, 3000 Mana)\"),\r\n      {\r\n        transform: (state) => {\r\n          state = grantResource(Resource.EarthEssence, -25000)(state);\r\n          state = grantResource(Resource.Mana, -3000)(state);\r\n          return state;\r\n        },\r\n        isEnabled: (state) => {\r\n          return (\r\n            getResourceAmount(state, Resource.EarthEssence) >= 25000 &&\r\n            getResourceAmount(state, Resource.Mana) >= 3000 &&\r\n            getElementLevel(state, SpellElement.Earth) >= 16\r\n          );\r\n        },\r\n      },\r\n      \"boughtLadder\",\r\n    )\r\n    .option(t(\"Maybe later\"))\r\n    .end();\r\n\r\n  someonesTrashEventBuilder\r\n    .message(\r\n      t(`You carefully lay down the ladder on the side of the canal, and climb down, beginning to wade through the dirty waters.\r\n  \r\nYou reach for the pile of stuck items, and think of which you should take first...`),\r\n    )\r\n    .tag(\"boughtLadder\")\r\n    .option(\r\n      t(\"Take the Book\"),\r\n      {\r\n        transform: (state) => someonesTrashBookStoryline.complete(state),\r\n        isVisible: (state) => !someonesTrashBookStoryline.isCompleted(state),\r\n      },\r\n      \"book\",\r\n    )\r\n    .option(\r\n      t(\"Take the Hat\"),\r\n      {\r\n        transform: (state) => someonesTrashHatStoryline.complete(state),\r\n        isVisible: (state) => !someonesTrashHatStoryline.isCompleted(state),\r\n      },\r\n      \"hat\",\r\n    )\r\n    .option(\r\n      t(\"Take the Treasure Chest\"),\r\n      {\r\n        transform: (state) => someonesTrashTreasureStoryline.complete(state),\r\n        isVisible: (state) =>\r\n          !someonesTrashTreasureStoryline.isCompleted(state),\r\n      },\r\n      \"treasure\",\r\n    )\r\n    .option(t(\"Decide later\"))\r\n    .end();\r\n\r\n  someonesTrashEventBuilder\r\n    .message(\r\n      t(`You try to pull off the book from the pile. It appears to be stuck! You pull harder, but then it finally comes out - and it breaks the rest of the pile of trash, which is no longer stuck and starts floating downstream at a pretty dangerous rate! Your hired wizard yells at you and you run for the ladder. You climb with great speed and manage to make it up before the ladder, too, is swept from the current.\r\n      \r\nYou hand over the book to your hired wizard. It is in a terrible condition. \"Ugh\", she says with disgust, \"I should be able to restore this, but it will take me a long time. I'm sorry.\" You obviously understand, but that felt very dangerous. You should be more careful in the future.\r\n\r\n**You have completed the \"Somebody's Trash (Book)\" Storyline! In future runs, the book will have been restored and will make you earn +25% Exp from Studying!**`),\r\n    )\r\n    .tag(\"book\")\r\n    .end();\r\n\r\n  someonesTrashEventBuilder\r\n    .message(\r\n      t(`You try to pull off the hat from the pile. It appears to be stuck! You pull harder, but then it finally comes out - and it breaks the rest of the pile of trash, which is no longer stuck and starts floating downstream at a pretty dangerous rate! Your hired wizard yells at you and you run for the ladder. You climb with great speed and manage to make it up before the ladder, too, is swept from the current.\r\n      \r\nYou hand over the hat to your hired wizard. It is in a terrible condition. \"Ugh\", she says with disgust, \"I should be able to restore this, but it will take me a long time. I'm sorry.\" You obviously understand, but that felt very dangerous. You should be more careful in the future.\r\n\r\n**You have completed the \"Somebody's Trash (Hat)\" Storyline! In future runs, you will start with a Wizard's Hat!**`),\r\n    )\r\n    .tag(\"hat\")\r\n    .end();\r\n\r\n  someonesTrashEventBuilder\r\n    .message(\r\n      t(`You try to pull off the treasure chest from the pile. It appears to be stuck! You pull harder, but then it finally comes out - and it breaks the rest of the pile of trash, which is no longer stuck and starts floating downstream at a pretty dangerous rate! Your hired wizard yells at you and you run for the ladder. You climb with great speed and manage to make it up before the ladder, too, is swept from the current.\r\n      \r\nYou hand over the treasure chest to your hired wizard. It is in a terrible condition. \"Ugh\", she says with disgust, \"I should be able to restore this, but it will take me a long time. I'm sorry.\" You obviously understand, but that felt very dangerous. You should be more careful in the future.\r\n\r\n**You have completed the \"Somebody's Trash (Treasure)\" Storyline! In future runs, the enchanted treasure chest will make you start with your Coins storage completely full!**`),\r\n    )\r\n    .tag(\"treasure\")\r\n    .end();\r\n\r\n  const someonesTrashEvent = someonesTrashEventBuilder.build();\r\n\r\n  registerTransformation(\r\n    [[TransformationTags.ExpGain, TransformationTags.Study]],\r\n    \"someonesTrashBook\",\r\n    someonesTrashBookStoryline.getName(),\r\n    TransformationType.Multiplier,\r\n    (state) => (someonesTrashBookStoryline.isBonusActive(state) ? 1.25 : 1.0),\r\n  );\r\n\r\n  registerPostRetirementListener(\"someonesTrashHat\", (state) => {\r\n    if (someonesTrashHatStoryline.isBonusActive(state)) {\r\n      state = addToInventory(\r\n        { itemId: wizardsHat.getId(), params: {} },\r\n        1,\r\n        state,\r\n      );\r\n    }\r\n    return state;\r\n  });\r\n\r\n  // Cannot be done via post-retirement as it has to happen after other post-retirement events\r\n  addGameStateListener(\"someonesTrashTreasure\", (state) => {\r\n    if (\r\n      someonesTrashTreasureStoryline.isBonusActive(state) &&\r\n      !hasFlag(state, Flag.SomeonesTrashTreasureGranted)\r\n    ) {\r\n      return (s) => {\r\n        s = setFlag(Flag.SomeonesTrashTreasureGranted)(s);\r\n        s = grantResource(Resource.Coins, Infinity)(s);\r\n        return s;\r\n      };\r\n    }\r\n  });\r\n\r\n  registerRandomEventTrigger(\r\n    someonesTrashEvent,\r\n    40,\r\n    (state) =>\r\n      !someonesTrashEvent.hasTriggered(state) &&\r\n      [\r\n        someonesTrashBookStoryline,\r\n        someonesTrashHatStoryline,\r\n        someonesTrashTreasureStoryline,\r\n      ].some((storyline) => !storyline.isCompleted(state)) &&\r\n      getExplorationStatus(state) != ExplorationStatus.None &&\r\n      sewers.getDungeonFloors().includes(getCurrentDungeonFloor(state)),\r\n  );\r\n}\r\n\r\nexport {\r\n  someonesTrashBookStoryline,\r\n  someonesTrashHatStoryline,\r\n  someonesTrashTreasureStoryline,\r\n};\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { ManaSpout } from \"../../../buildings/mana/ManaSpout\";\r\nimport { trainingTowers } from \"../../../exploration/dungeons/training/TrainingTowers\";\r\nimport { getCurrentDungeonFloor } from \"../../../exploration/Exploration\";\r\nimport { ExplorationStatus } from \"../../../exploration/ExplorationStatus\";\r\nimport { getExplorationStatus } from \"../../../exploration/ExplorationUtils\";\r\nimport { getResourceAmount, grantResource, Resource } from \"../../../Resources\";\r\nimport { getElementLevel, SpellElement } from \"../../../spells/Elements\";\r\nimport { Storyline } from \"../../../storylines/Storyline\";\r\nimport { Storylines } from \"../../../storylines/Storylines\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../../transformation/TransformationTags\";\r\nimport { registerRandomEventTrigger } from \"../../autorandom/RandomEventTrigger\";\r\nimport { buildEvent } from \"../../EventMessageBuilder\";\r\nimport { EventTag } from \"../../GameEvent\";\r\n\r\nconst advancedManaSpoutsStoryline = new Storyline(\r\n  \"advancedManaSpouts\",\r\n  t(\"Advanced Mana Spouts\"),\r\n  130,\r\n  10,\r\n  (state) => t(\"Explore the Training Towers\"),\r\n  t(\"+30% effectivity and -30% cost scaling of Mana Spouts\"),\r\n  (_state) => true,\r\n);\r\n\r\nexport function loadAdvancedManaSpouts() {\r\n  Storylines.register(advancedManaSpoutsStoryline);\r\n\r\n  const advancedManaSpoutsEventBuilder = buildEvent(\r\n    \"advancedManaSpouts\",\r\n    t(\"(Storyline) Advanced Mana Spouts\"),\r\n    [EventTag.STORYLINE],\r\n  ).setStorylineIds(advancedManaSpoutsStoryline.getId());\r\n\r\n  advancedManaSpoutsEventBuilder.message(\r\n    t(`Continuing to climb the Tower of Training and fend enemies left and right, you happen across someone else. It is your old teacher from Wizardry Furniture! His large figure always stood out, easily towering over everyone else in the class. You greet him, and he waves at you.\r\n    \r\nYou hold some conversation. He appears interested in how you are setting up your furniture at home. You tell him about your Mana Spouts and how you build them. But then he makes a sour face. Did you say something wrong?`),\r\n  );\r\n  advancedManaSpoutsEventBuilder\r\n    .message(\r\n      t(\r\n        `He explains that you're doing well with your home, but he realized that you are using very basic construction techniques for the Mana Spouts. You've just been basing these off what you could deduce from your own notes, which you know were quite bad, so you are not too surprised.\r\n      \r\nHe agrees to teach you how to improve on it, but before that - he mentions that you are no longer a student at the school, and that you will have to both show him that you have the skill to understand the lesson, as well as pay him for the efforts.\r\n\r\nYou decide to think about it...`,\r\n      ),\r\n    )\r\n    .option(\r\n      t(\"Take the lesson (8000 Coins, Requires Lv10 Water and Lv10 Air)\"),\r\n      {\r\n        transform: (state) => {\r\n          state = grantResource(Resource.Coins, -8000)(state);\r\n          return state;\r\n        },\r\n        isEnabled: (state) => {\r\n          return (\r\n            getResourceAmount(state, Resource.Coins) >= 8000 &&\r\n            getElementLevel(state, SpellElement.Water) >= 10 &&\r\n            getElementLevel(state, SpellElement.Air) >= 10\r\n          );\r\n        },\r\n      },\r\n      \"end\",\r\n    )\r\n    .option(t(\"Maybe later\"))\r\n    .end();\r\n\r\n  advancedManaSpoutsEventBuilder\r\n    .message(\r\n      t(\r\n        `You decide to take the lesson, and hand over the Coins he asked for. He appears satisfied, and guides you to a small room in the Tower that looks like a library. The shelves are lined up with books about furniture. He pulls out a single one, titled: \"Mana Spout Construction\".\r\n        \r\nSitting down at a table with you, he shows you some diagrams in the book and explains how the construction method differs. You are definitely able to understand this explanation - everything makes sense. This is how you should have built the Mana Spouts to begin with.`,\r\n      ),\r\n    )\r\n    .option(\r\n      \"Continue\",\r\n      {\r\n        transform: (state) => advancedManaSpoutsStoryline.complete(state),\r\n      },\r\n      \"final\",\r\n    )\r\n    .tag(\"end\")\r\n    .end();\r\n  advancedManaSpoutsEventBuilder\r\n    .message(\r\n      t(\r\n        `After the lesson, you head back home. Your teacher said it was ok for you to take the book, so you store it in your bookshelf. It felt like a worthwhile lesson.\r\n\r\nYou are not sure if you are going to apply it - after all, it is quite a bit of trouble to implement. It is probably something that had to be done from the beginning. Regardless, if the chance ever comes up at some point, now you have a more effective way of doing it.\r\n\r\n**You have completed the \"Advanced Mana Spouts\" Storyline! In future runs, Mana Spouts will produce 30% more Mana and their cost will scale 30% slower!**`,\r\n      ),\r\n    )\r\n    .tag(\"final\");\r\n\r\n  const advancedManaSpoutsEvent = advancedManaSpoutsEventBuilder.build();\r\n\r\n  registerTransformation(\r\n    [[TransformationTags.Production, ManaSpout.getId()]],\r\n    \"advancedManaSpoutsProduction\",\r\n    advancedManaSpoutsStoryline.getName(),\r\n    TransformationType.Multiplier,\r\n    (state) => (advancedManaSpoutsStoryline.isBonusActive(state) ? 1.3 : 1.0),\r\n  );\r\n\r\n  registerTransformation(\r\n    [[TransformationTags.CostScale, ManaSpout.getId()]],\r\n    \"advancedManaSpoutsCostScale\",\r\n    advancedManaSpoutsStoryline.getName(),\r\n    TransformationType.Multiplier,\r\n    (state) => (advancedManaSpoutsStoryline.isBonusActive(state) ? 0.7 : 1.0),\r\n  );\r\n\r\n  registerRandomEventTrigger(\r\n    advancedManaSpoutsEvent,\r\n    40,\r\n    (state) =>\r\n      !advancedManaSpoutsStoryline.isCompleted(state) &&\r\n      !advancedManaSpoutsEvent.hasTriggered(state) &&\r\n      getExplorationStatus(state) != ExplorationStatus.None &&\r\n      trainingTowers.getDungeonFloors().includes(getCurrentDungeonFloor(state)),\r\n  );\r\n}\r\n\r\nexport { advancedManaSpoutsStoryline };\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { trainingTowers } from \"../../../exploration/dungeons/training/TrainingTowers\";\r\nimport { getCurrentDungeonFloor } from \"../../../exploration/Exploration\";\r\nimport { ExplorationStatus } from \"../../../exploration/ExplorationStatus\";\r\nimport { getExplorationStatus } from \"../../../exploration/ExplorationUtils\";\r\nimport { HealthPotion } from \"../../../items/equipment/pouch/HealthPotion\";\r\nimport {\r\n  getTotalAmountOfItem,\r\n  removeFromInventoryWithAnyParams,\r\n} from \"../../../items/Inventory\";\r\nimport { Storyline } from \"../../../storylines/Storyline\";\r\nimport { Storylines } from \"../../../storylines/Storylines\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../../transformation/TransformationTags\";\r\nimport { registerRandomEventTrigger } from \"../../autorandom/RandomEventTrigger\";\r\nimport { buildEvent } from \"../../EventMessageBuilder\";\r\nimport { EventTag } from \"../../GameEvent\";\r\n\r\nconst alchemyClassStoryline = new Storyline(\r\n  \"alchemyClass\",\r\n  t(\"Alchemy Class\"),\r\n  110,\r\n  10,\r\n  (state) => t(\"Explore the Training Towers\"),\r\n  t(\"Item {{item}} restores an extra +15:hp:\", {\r\n    item: HealthPotion.getBaseName(HealthPotion.getDefaultParams()),\r\n  }),\r\n  (_state) => true,\r\n);\r\n\r\nexport function loadAlchemyClass() {\r\n  Storylines.register(alchemyClassStoryline);\r\n\r\n  const alchemyClassEventBuilder = buildEvent(\r\n    \"alchemyClass\",\r\n    t(\"(Storyline) Alchemy Class\"),\r\n    [EventTag.STORYLINE],\r\n  ).setStorylineIds(alchemyClassStoryline.getId());\r\n\r\n  alchemyClassEventBuilder.message(\r\n    t(`In the Tower of Training, you find a room that looks exactly like a classroom. You are not surprised to find such rooms - after all, this place is connected to your old magic school. You peek inside. The classroom appears to be empty, so you decide to go in.\r\n    \r\nYou look around the room. It is definitely something related to Alchemy, as evidenced by the giant cauldron in the front. It appears this place has been used recently.\r\n\r\nThen you hear a faint voice from behind you: *\"Is someone there?\"*`),\r\n  );\r\n  alchemyClassEventBuilder.message(\r\n    t(\r\n      `You turn around and find a lady of advanced age. She is dressed in the same way your teachers at your school were, but you never met her. You introduce yourself and tell her that you are doing the special combat training at this tower.\r\n        \r\n\"Admirable,\" she says. \"Do you know how to defeat difficult adversaries? Perhaps the most important items in that situation are potions. Even if you cannot tell others to help you drink them, you do not need Mana to do so, so you can stay focused on using powerful spells. At the same time, among those, Health Potions are *particularly* important - they let you stay alive and heal your wounds.\"\r\n\r\nYou intently listen to her lecture.`,\r\n    ),\r\n  );\r\n\r\n  alchemyClassEventBuilder\r\n    .message(\r\n      t(`\"It just so happens that these potions are my specialty. I know how to make them particularly strong, but if you'd like me to teach you, you'll first have to show me that you have enough experience to understand my explanation.\"\r\n  \r\nShe then asks you: \"Show me that you can do this. Bring me 6 Health Potions, and I will consider telling you about it.\"\r\n\r\nShe starts turning back on you, but right before she does so, she interrupts herself to say one last thing: \"Oh, and - in case you didn't know - you can transmute Health Potions by having Water Lv6 or higher.\"`),\r\n    )\r\n    .option(\r\n      t(\"Hand over the potions (6 Health Potion)\"),\r\n      {\r\n        transform: (state) => {\r\n          state = removeFromInventoryWithAnyParams(HealthPotion, 6, state);\r\n          return state;\r\n        },\r\n        isEnabled: (state) => {\r\n          return getTotalAmountOfItem(HealthPotion, state) >= 6;\r\n        },\r\n      },\r\n      \"end\",\r\n    )\r\n    .option(t(\"Maybe later\"))\r\n    .end();\r\n  alchemyClassEventBuilder\r\n    .message(\r\n      t(\r\n        `You hand over the potions to the teacher. She is delighted: \"Wonderful! You must have really learned Alchemy well at school.\" You are tempted to tell her that you only just learned how to make these potions recently, after finishing the school, but you keep it to yourself.\r\n        \r\n\"I will now tell you the secret technique to making Health Potions,\" she says. You begin taking notes in a frenzy as she goes through detailed explanations of how and when to combine the ingredients of the potion, as well as how to pre-treat the Wildgrass.\r\n\r\nWhen she is finally done, you thank her for the lesson and head back out.`,\r\n      ),\r\n    )\r\n    .option(\r\n      \"Continue\",\r\n      {\r\n        transform: (state) => alchemyClassStoryline.complete(state),\r\n      },\r\n      \"final\",\r\n    )\r\n    .tag(\"end\")\r\n    .end();\r\n  alchemyClassEventBuilder\r\n    .message(\r\n      t(\r\n        `When you get home again, you are ready to put it into practice. Except when you look at your notes again, they don't make too much sense. Your hired Wizard looks at you with interest and glances over your notes, before exclaiming: \"I can't make heads or tails of what you wrote!\".\r\n\r\nYou have a small argument with her over the rude comment, but she is admittedly right - you feel disappointed in yourself. Perhaps in the future someone else can understand these? You get back to doing what you were doing before.\r\n\r\n**You have completed the \"Alchemy Class\" Storyline! In future runs, Health Potions will heal an extra 15:hp:!**`,\r\n      ),\r\n    )\r\n    .tag(\"final\");\r\n\r\n  const alchemyClassEvent = alchemyClassEventBuilder.build();\r\n\r\n  registerTransformation(\r\n    [[TransformationTags.ItemEffect, HealthPotion.getId()]],\r\n    \"alchemyClass\",\r\n    alchemyClassStoryline.getName(),\r\n    TransformationType.Addition,\r\n    (state) => (alchemyClassStoryline.isBonusActive(state) ? 15 : 0),\r\n  );\r\n\r\n  registerRandomEventTrigger(\r\n    alchemyClassEvent,\r\n    40,\r\n    (state) =>\r\n      !alchemyClassStoryline.isCompleted(state) &&\r\n      !alchemyClassEvent.hasTriggered(state) &&\r\n      getExplorationStatus(state) != ExplorationStatus.None &&\r\n      trainingTowers.getDungeonFloors().includes(getCurrentDungeonFloor(state)),\r\n  );\r\n}\r\n\r\nexport { alchemyClassStoryline };\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { FLOOR_FOR_ELEMENT } from \"../../../exploration/dungeons/training/TrainingTowers\";\r\nimport {\r\n  addEnemyDeathListener,\r\n  getSuccessfulExplorationsForFloor,\r\n} from \"../../../exploration/Exploration\";\r\nimport {\r\n  getTotalAmountOfItem,\r\n  removeFromInventoryWithAnyParams,\r\n} from \"../../../items/Inventory\";\r\nimport { Items } from \"../../../items/Items\";\r\nimport { RESOURCE_FOR_ELEMENT } from \"../../../spells/channeling/ChannelingResources\";\r\nimport { SpellElement, translateElement } from \"../../../spells/Elements\";\r\nimport { Storyline } from \"../../../storylines/Storyline\";\r\nimport { Storylines } from \"../../../storylines/Storylines\";\r\nimport {\r\n  IncomeOverTimeProducer,\r\n  IncomeOverTimeProducers,\r\n} from \"../../../timetick/IncomeOverTime\";\r\nimport { getOrCreateDungeonEventGroup } from \"../../DungeonEventGroup\";\r\nimport { buildEvent } from \"../../EventMessageBuilder\";\r\nimport { triggerEvent } from \"../../Events\";\r\nimport { EventTag } from \"../../GameEvent\";\r\n\r\nfunction createStorylineForElement(element: SpellElement) {\r\n  return new Storyline(\r\n    \"essenceArtifact\" + element,\r\n    t(\"Essence Artifact ({{element}})\", { element: translateElement(element) }),\r\n    100 + enabledElements.indexOf(element),\r\n    10,\r\n    (state) =>\r\n      getOrCreateDungeonEventGroup(\"trainingTowers\")\r\n        .getSelectedEvent(state)\r\n        ?.getId() ==\r\n      \"essenceArtifact\" + element\r\n        ? t(\"Explore the Tower of {{element}} Training at least 60 times\", {\r\n            element: translateElement(element),\r\n          })\r\n        : t(\r\n            \"This Storyline can be found in the Training Towers, but you cannot get it this run\",\r\n          ),\r\n    t(\"+100{{essenceIcon}}/sec\", {\r\n      essenceIcon: `:${RESOURCE_FOR_ELEMENT[element].toLowerCase()}:`,\r\n    }),\r\n    (_state) => true,\r\n  );\r\n}\r\n\r\nconst enabledElements = [\r\n  SpellElement.Fire,\r\n  SpellElement.Earth,\r\n  SpellElement.Water,\r\n  SpellElement.Air,\r\n];\r\n\r\nconst essenceArtifactStorylines: Partial<Record<SpellElement, Storyline>> =\r\n  Object.fromEntries(\r\n    enabledElements.map((element) => [\r\n      element,\r\n      createStorylineForElement(element),\r\n    ]),\r\n  );\r\n\r\nexport function loadEssenceArtifact() {\r\n  const dungeonEventGroup = getOrCreateDungeonEventGroup(\"trainingTowers\");\r\n  for (let element of enabledElements) {\r\n    Storylines.register(essenceArtifactStorylines[element]);\r\n\r\n    const essenceArtifactEventBuilder = buildEvent(\r\n      \"essenceArtifact\" + element,\r\n      t(\"(Storyline) Essence Artifact ({{element}})\", {\r\n        element: translateElement(element),\r\n      }),\r\n      [EventTag.STORYLINE],\r\n    ).setStorylineIds(essenceArtifactStorylines[element].getId());\r\n\r\n    essenceArtifactEventBuilder.message(\r\n      t(\r\n        `Exploring the Tower of {{element}} Training, you find a strange small cauldron-like object. You find it odd, and haven't seen it before. You decide to bring it home to study it further.`,\r\n        { element: translateElement(element) },\r\n      ),\r\n    );\r\n    essenceArtifactEventBuilder\r\n      .message(\r\n        t(\r\n          `At home, you examine the object some more. It looks like an artifact of some sort. It is decorated with what you learned as the traditional symbols of {{element}}.\r\n    \r\nYou notice a small drawer / opening on the bottom. It appears like there are countless slots for... *something*. It seems like they are about the same size of an elemental shard. Perhaps you should try filling it up...?`,\r\n          { element: translateElement(element) },\r\n        ),\r\n      )\r\n      .option(\r\n        t(\"Insert elemental shards (100 {{element}} Shard)\", {\r\n          element: translateElement(element),\r\n        }),\r\n        {\r\n          transform: (state) => {\r\n            state = removeFromInventoryWithAnyParams(\r\n              Items.getById(\"elementalShard\" + element),\r\n              100,\r\n              state,\r\n            );\r\n            return state;\r\n          },\r\n          isEnabled: (state) => {\r\n            return (\r\n              getTotalAmountOfItem(\r\n                Items.getById(\"elementalShard\" + element),\r\n                state,\r\n              ) >= 100\r\n            );\r\n          },\r\n        },\r\n        \"end\",\r\n      )\r\n      .option(t(\"Maybe later\"))\r\n      .end();\r\n    essenceArtifactEventBuilder\r\n      .message(\r\n        t(\r\n          `You insert all the shards into the compartment, and align them one by one diligently. You then close the compartment, and wait. But nothing happens. Did you do something wrong?\r\n        \r\nYou turn around the object, and notice an inscription on the back side. How did you miss this? It says: *\"{{element}} Essence Materializer\"*. It sounds exciting. But then you notice more: *\"Charge Time: 30 Years\"*...`,\r\n          { element: translateElement(element) },\r\n        ),\r\n      )\r\n      .option(\r\n        \"Continue\",\r\n        {\r\n          transform: (state) =>\r\n            essenceArtifactStorylines[element].complete(state),\r\n        },\r\n        \"final\",\r\n      )\r\n      .tag(\"end\")\r\n      .end();\r\n    essenceArtifactEventBuilder\r\n      .message(\r\n        t(\r\n          `*What?* You will need to wait *30 years* for this to work? Changing your mind, you open the compartment to retrieve your shards. Or at least you *try* to - it appears to be locked! Even pulling strongly on it doesn't open it. It's as if it was fully sealed.\r\n          \r\nYou sigh deeply. Perhaps you shouldn't be taking random artifacts from places and playing with them. You quickly perish the thought - what if any of those were hints on how to obtain the Philosopher's Stone? Regardless, you put away the artifact, resigned that you won't be able to do anything with it...\r\n\r\n**You have completed the \"Essence Artifact ({{element}})\" Storyline! In future runs, you will gain a permanent +100{{essenceIcon}}/sec!**`,\r\n          {\r\n            element: translateElement(element),\r\n            essenceIcon:\r\n              \":\" + RESOURCE_FOR_ELEMENT[element].toLowerCase() + \":\",\r\n          },\r\n        ),\r\n      )\r\n      .tag(\"final\");\r\n\r\n    const essenceArtifactEvent = essenceArtifactEventBuilder.build();\r\n    const dungeonFloor = FLOOR_FOR_ELEMENT[element];\r\n\r\n    addEnemyDeathListener(\r\n      essenceArtifactEvent.getId() + \"Triggerer\",\r\n      (state) => {\r\n        const selectedEvent = dungeonEventGroup.getSelectedEvent(state);\r\n        if (\r\n          selectedEvent == essenceArtifactEvent &&\r\n          !essenceArtifactStorylines[element].isCompleted(state) &&\r\n          !essenceArtifactEvent.hasTriggered(state) &&\r\n          getSuccessfulExplorationsForFloor(state, dungeonFloor.getId()) >= 60\r\n        ) {\r\n          return triggerEvent(essenceArtifactEvent)(state);\r\n        }\r\n        return state;\r\n      },\r\n    );\r\n\r\n    IncomeOverTimeProducers.register(\r\n      new IncomeOverTimeProducer(\r\n        \"incomeOverTime\" + element,\r\n        essenceArtifactStorylines[element].getName(),\r\n        (state) => {\r\n          const bonus = {};\r\n          if (essenceArtifactStorylines[element].isBonusActive(state)) {\r\n            bonus[RESOURCE_FOR_ELEMENT[element]] = 100;\r\n          }\r\n          return bonus;\r\n        },\r\n      ),\r\n    );\r\n\r\n    dungeonEventGroup.addEvent({\r\n      event: essenceArtifactEvent,\r\n      getWeight: (state) => {\r\n        if (essenceArtifactStorylines[element].isCompleted(state)) {\r\n          return 0;\r\n        }\r\n        return 100;\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nexport { essenceArtifactStorylines };\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { jumpEventToMessageIfExists } from \"../../../events/Events\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { StoneskinTemporaryEffect } from \"../../../spells/earth/Stoneskin\";\r\nimport { StrengthTemporaryEffect } from \"../../../spells/fire/Strength\";\r\nimport {\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../../temporaryeffects/TemporaryEffects\";\r\nimport { AttackTarget } from \"../../AttackTarget\";\r\nimport {\r\n  getCurrentEnemyHPFraction,\r\n  standardEnemyAttackEffect,\r\n} from \"../../Exploration\";\r\nimport { BattlerAction, BattlerStats, Enemy, EnemyLoot } from \"../Enemy\";\r\n\r\nclass KnightInShiningArmor extends Enemy {\r\n  getId(): string {\r\n    return \"knightInShiningArmor\";\r\n  }\r\n\r\n  getName(): string {\r\n    return t(\"Knight in Shining Armor\");\r\n  }\r\n\r\n  getBaseStats(): BattlerStats {\r\n    return {\r\n      maxHP: 1000,\r\n      attack: 25,\r\n      defense: 20,\r\n      attackDelay: 3.3,\r\n      accuracy: 100,\r\n      dodge: 100,\r\n      crit: 0,\r\n    };\r\n  }\r\n\r\n  getPicture(state: GameState) {\r\n    return require(\"./knightInShiningArmor.png\");\r\n  }\r\n\r\n  getLevel(): number {\r\n    return 5;\r\n  }\r\n\r\n  getCoinsAwardedBase(state: GameState): number {\r\n    return 100;\r\n  }\r\n\r\n  getMonstiumAwardedBase(state: GameState): number {\r\n    return 1;\r\n  }\r\n\r\n  getNextAction(state: GameState): BattlerAction {\r\n    if (\r\n      !hasTemporaryEffect(\r\n        state,\r\n        StoneskinTemporaryEffect.getId(),\r\n        AttackTarget.Enemy,\r\n      ) &&\r\n      getCurrentEnemyHPFraction(state) > 0.5 &&\r\n      Math.random() < 0.5\r\n    ) {\r\n      return {\r\n        name: t(\"Stoneskin\"),\r\n        delay: this.getAttackDelay(state) * 1.2,\r\n        transform: grantTemporaryEffect(StoneskinTemporaryEffect.getId(), 30, {\r\n          target: AttackTarget.Enemy,\r\n          params: { commonBuff: { DefenseMultiplier: 1.75 } },\r\n        }),\r\n      };\r\n    }\r\n    if (\r\n      Math.random() < 0.5 &&\r\n      getCurrentEnemyHPFraction(state) < 0.5 &&\r\n      !hasTemporaryEffect(\r\n        state,\r\n        StrengthTemporaryEffect.getId(),\r\n        AttackTarget.Enemy,\r\n      )\r\n    ) {\r\n      return {\r\n        name: t(\"Strength\"),\r\n        delay: this.getAttackDelay(state) * 1.2,\r\n        transform: (state) =>\r\n          grantTemporaryEffect(StrengthTemporaryEffect.getId(), 30, {\r\n            target: AttackTarget.Enemy,\r\n            params: { commonBuff: { AttackMultiplier: 1.25 } },\r\n          })(state),\r\n      };\r\n    }\r\n\r\n    if (Math.random() < 0.2 && getCurrentEnemyHPFraction(state) < 0.3) {\r\n      return {\r\n        name: t(\"Triple Attack\"),\r\n        delay: this.getAttackDelay(state) * 1.2,\r\n        transform: (state) => {\r\n          state = standardEnemyAttackEffect(state, this.getAttack(state) * 0.7);\r\n          state = standardEnemyAttackEffect(state, this.getAttack(state) * 0.7);\r\n          state = standardEnemyAttackEffect(state, this.getAttack(state) * 0.7);\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n\r\n    if (Math.random() < 0.3) {\r\n      return {\r\n        name: t(\"Double Attack\"),\r\n        delay: this.getAttackDelay(state) * 1.1,\r\n        transform: (state) => {\r\n          state = standardEnemyAttackEffect(state, this.getAttack(state) * 0.8);\r\n          state = standardEnemyAttackEffect(state, this.getAttack(state) * 0.8);\r\n          return state;\r\n        },\r\n      };\r\n    }\r\n\r\n    return {\r\n      name: t(\"Attack\"),\r\n      delay: this.getAttackDelay(state),\r\n      transform: (state) =>\r\n        standardEnemyAttackEffect(state, this.getAttack(state)),\r\n    };\r\n  }\r\n\r\n  isBoss(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getItemsAwardedBase(state: GameState): EnemyLoot[] {\r\n    return [];\r\n  }\r\n\r\n  onDeath(\r\n    state: GameState,\r\n    isFromCreatures: boolean,\r\n    familiarId?: string,\r\n  ): GameState {\r\n    state = super.onDeath(state, isFromCreatures, familiarId);\r\n    state = jumpEventToMessageIfExists(state, \"howToFight\", \"afterFight\");\r\n    return state;\r\n  }\r\n\r\n  getTips(): string {\r\n    return t(\r\n      \"Wow... so gallant! I wish he had come for me instead! In any case... he likes to attack multiple times in a row, but the attacks are weaker than a normal attack. High :defense: armor is pretty effective, but make sure you also have a way to heal, like with Health Potions - you might need Water Lv6 for that. It's obvious he is going easy on you!\",\r\n    );\r\n  }\r\n}\r\n\r\nexport default new KnightInShiningArmor();\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { getAccumulatorVariable } from \"../../../AccumulatorVariables\";\r\nimport { AttackTarget } from \"../../../exploration/AttackTarget\";\r\nimport {\r\n  clearCombatStatCache,\r\n  CombatStat,\r\n} from \"../../../exploration/CombatStats\";\r\nimport KnightInShiningArmor from \"../../../exploration/enemies/training/KnightInShiningArmor\";\r\nimport {\r\n  modifyPlayerCurrentHP,\r\n  startCombat,\r\n} from \"../../../exploration/Exploration\";\r\nimport { hasFlag, setFlag } from \"../../../Flags\";\r\nimport { addGameStateListener } from \"../../../GameStateListeners\";\r\nimport { Storyline } from \"../../../storylines/Storyline\";\r\nimport { Storylines } from \"../../../storylines/Storylines\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../../transformation/Transformation\";\r\nimport { addUICommand } from \"../../../UICommands\";\r\nimport { buildEvent } from \"../../EventMessageBuilder\";\r\nimport { getGameEventById, triggerEvent } from \"../../Events\";\r\nimport { EventTag } from \"../../GameEvent\";\r\n\r\nconst howToFightHPStoryline = new Storyline(\r\n  \"howToFightHP\",\r\n  t(\"How to Fight (HP)\"),\r\n  140,\r\n  10,\r\n  (state) =>\r\n    getGameEventById(\"howToFight\").hasTriggered(state)\r\n      ? t(\r\n          \"Lose in battle at least 20 times; however, you cannot trigger it again this run\",\r\n        )\r\n      : t(\"Lose in battle at least 20 times\"),\r\n  t(\"+30 Max:hp:\"),\r\n  (_state) => true,\r\n);\r\n\r\nconst howToFightAttackStoryline = new Storyline(\r\n  \"howToFightAttack\",\r\n  t(\"How to Fight (Attack)\"),\r\n  141,\r\n  10,\r\n  (state) =>\r\n    getGameEventById(\"howToFight\").hasTriggered(state)\r\n      ? t(\r\n          \"Lose in battle at least 20 times; however, you cannot trigger it again this run\",\r\n        )\r\n      : t(\"Lose in battle at least 20 times\"),\r\n  t(\"+10:attack:\"),\r\n  (_state) => true,\r\n);\r\n\r\nconst howToFightDefenseStoryline = new Storyline(\r\n  \"howToFightDefense\",\r\n  t(\"How to Fight (Defense)\"),\r\n  142,\r\n  10,\r\n  (state) =>\r\n    getGameEventById(\"howToFight\").hasTriggered(state)\r\n      ? t(\r\n          \"Lose in battle at least 20 times; however, you cannot trigger it again this run\",\r\n        )\r\n      : t(\"Lose in battle at least 20 times\"),\r\n  t(\"+10:defense:\"),\r\n  (_state) => true,\r\n);\r\n\r\nconst howToFightAttackDelayStoryline = new Storyline(\r\n  \"howToFightAttackDelay\",\r\n  t(\"How to Fight (Speed)\"),\r\n  143,\r\n  10,\r\n  (state) =>\r\n    getGameEventById(\"howToFight\").hasTriggered(state)\r\n      ? t(\r\n          \"Lose in battle at least 20 times; however, you cannot trigger it again this run\",\r\n        )\r\n      : t(\"Lose in battle at least 20 times\"),\r\n  t(\"-5%:attackDelay:\"),\r\n  (_state) => true,\r\n);\r\n\r\nexport function loadHowToFight() {\r\n  Storylines.register(howToFightHPStoryline);\r\n  Storylines.register(howToFightAttackStoryline);\r\n  Storylines.register(howToFightDefenseStoryline);\r\n  Storylines.register(howToFightAttackDelayStoryline);\r\n\r\n  const howToFightEventBuilder = buildEvent(\r\n    \"howToFight\",\r\n    t(\"(Storyline) How to Fight\"),\r\n    [EventTag.STORYLINE],\r\n  ).setStorylineIds([\r\n    howToFightHPStoryline.getId(),\r\n    howToFightAttackStoryline.getId(),\r\n    howToFightDefenseStoryline.getId(),\r\n    howToFightAttackDelayStoryline.getId(),\r\n  ]);\r\n\r\n  howToFightEventBuilder.message(\r\n    t(`*Ouch*. You have had to run away from combat so many times. As you nurse your wounds yet again at home, you hear a knock on the door. Your hired wizard checks it out, but she exclaims in a dreamy voice: \"It is a *knight in shining armor*!\"\r\n    \r\nYou feel she is probably just pulling your leg, so you decide to head up to the door and open it. But she was not. She was speaking the truth. You come face to face with what you can just describe as... a knight in shining armor.`),\r\n  );\r\n  howToFightEventBuilder.message(\r\n    t(\r\n      `\"Salutations,\" he says, removing his helmet. \"I am a combat trainer, and I have observed your recent battle.\" He continues: \"I know some more advanced ways to fight, which can definitely help level the playfield. I can teach some of them to you, if you'd like.\"\r\n      \r\nYou agree that would be a good idea. You ask him about prices, but he shakes his head: \"I don't take pleasure in benefiting from those in need.\" You don't really understand this person. But their armor and movements appear very skilled, so you're inclined to believe him.\r\n\r\nYour hired wizard watches you, from a distance, but she seems more enthralled with the knight than anything else.`,\r\n    ),\r\n  );\r\n  howToFightEventBuilder\r\n    .message(\r\n      t(`\"However\", he says, \"you will first need to show me that you can at least handle some basic combat. Let's have a short duel - *don't worry, I will not use my full strength* - and if you are able to win, I'll teach you some advanced combat techniques.\"\r\n    \r\nYou are now wary of him. He looks very strong. Is this really going to be possible?\r\n\r\n\"I will heal you before we begin, but otherwise, make sure you are ready for combat before we duel\", he finishes saying, before putting his helmet back on. You heed his words, and ready up for combat.`),\r\n    )\r\n    .option(t(\"Fight the Knight in Shining Armor\"), {\r\n      transform: (state) => {\r\n        state = addUICommand(state, \"goToExploration\");\r\n        state = addUICommand(state, \"closeAllMenus\");\r\n        state = addUICommand(state, \"closeEventOverlay\");\r\n        state = modifyPlayerCurrentHP(\r\n          state,\r\n          Infinity,\r\n          t(\"Healing from the Knight in Shining Armor\"),\r\n        );\r\n        state = startCombat(KnightInShiningArmor)(state);\r\n        return state;\r\n      },\r\n    })\r\n    .option(t(\"Maybe later\"))\r\n    .end();\r\n\r\n  howToFightEventBuilder\r\n    .message(\r\n      t(`The fighting feels intense. You hear your hired wizard rooting for the knight, but you are too focused on the fight to argue with her.\r\n    \r\nYou wipe your sweat from your face and ready to strike again at the knight, but he tells you to stop. \"That's enough,\" he shouts. You back off, and take a deep breath, putting down your weapon just as he does.`),\r\n    )\r\n    .tag(\"afterFight\");\r\n\r\n  howToFightEventBuilder\r\n    .message(\r\n      t(`The knight removes his helmet once again, and tells you: \"That was a pretty good job. I'd be happy to teach you now.\" You feel like you need to continue releasing the tension from the fight. You are not sure how he can be so unfazed.\r\n    \r\nHe continues: \"Please tell me what kind of combat techniques you would like to learn.\"`),\r\n    )\r\n    .option(\r\n      t(\"More vitality (Max HP)\"),\r\n      {\r\n        transform: (state) => {\r\n          state = howToFightHPStoryline.complete(state);\r\n          state = howToFightHPStoryline.activateBonus(state);\r\n          state = clearCombatStatCache(state, AttackTarget.Player);\r\n          return state;\r\n        },\r\n        isVisible: (state) => !howToFightHPStoryline.isCompleted(state),\r\n      },\r\n      \"maxHP\",\r\n    )\r\n    .option(\r\n      t(\"More power (Attack)\"),\r\n      {\r\n        transform: (state) => {\r\n          state = howToFightAttackStoryline.complete(state);\r\n          state = howToFightAttackStoryline.activateBonus(state);\r\n          state = clearCombatStatCache(state, AttackTarget.Player);\r\n          return state;\r\n        },\r\n        isVisible: (state) => !howToFightAttackStoryline.isCompleted(state),\r\n      },\r\n      \"attack\",\r\n    )\r\n    .option(\r\n      t(\"More resilience (Defense)\"),\r\n      {\r\n        transform: (state) => {\r\n          state = howToFightDefenseStoryline.complete(state);\r\n          state = howToFightDefenseStoryline.activateBonus(state);\r\n          state = clearCombatStatCache(state, AttackTarget.Player);\r\n          return state;\r\n        },\r\n        isVisible: (state) => !howToFightDefenseStoryline.isCompleted(state),\r\n      },\r\n      \"defense\",\r\n    )\r\n    .option(\r\n      t(\"More speed (Attack Delay)\"),\r\n      {\r\n        transform: (state) => {\r\n          state = howToFightAttackDelayStoryline.complete(state);\r\n          state = howToFightAttackDelayStoryline.activateBonus(state);\r\n          state = clearCombatStatCache(state, AttackTarget.Player);\r\n          return state;\r\n        },\r\n        isVisible: (state) =>\r\n          !howToFightAttackDelayStoryline.isCompleted(state),\r\n      },\r\n      \"attackDelay\",\r\n    )\r\n    .end();\r\n\r\n  howToFightEventBuilder\r\n    .message(\r\n      t(`You tell the trainer you would like to be more healthy throughout and outside of battle. With a nod, he proceeds to tell you how to better take care of your body to endure more wounds and be able to heal quicker. You listen intently and take notes.\r\n    \r\nAfter the exchange, you thank him for his services. With those tips, you are sure you will be much more healthy in the future.\r\n\r\n**You have completed the \"How to Fight (HP)\" Storyline! You will permanently gain +30 Max:hp:. This will persist even after retirement!**`),\r\n    )\r\n    .tag(\"maxHP\")\r\n    .end();\r\n  howToFightEventBuilder\r\n    .message(\r\n      t(`You tell the trainer you would like to be more powerful and able to deal more damage to enemies with your attacks. With a nod, he proceeds to tell you how to better swing your weapon and position yourself in order to apply more power to your movement. You listen intently and take notes.\r\n    \r\nAfter the exchange, you thank him for his services. With those tips, you are sure you will be able to gain an upper hand over enemies in the future.\r\n\r\n**You have completed the \"How to Fight (Attack)\" Storyline! You will permanently gain +10:attack:. This will persist even after retirement!**`),\r\n    )\r\n    .tag(\"attack\")\r\n    .end();\r\n  howToFightEventBuilder\r\n    .message(\r\n      t(`You tell the trainer you would like to be more resilient against enemy attacks. With a nod, he proceeds to tell you how to strengthen your muscles and harden your body to become more impervious to damage. You listen intently and take notes.\r\n    \r\nAfter the exchange, you thank him for his services. With those tips, you are sure you will be able to endure onslaughts much more effectively.\r\n\r\n**You have completed the \"How to Fight (Defense)\" Storyline! You will permanently gain +10:defense:. This will persist even after retirement!**`),\r\n    )\r\n    .tag(\"defense\")\r\n    .end();\r\n  howToFightEventBuilder\r\n    .message(\r\n      t(`You tell the trainer you would like to be speedier in your movements in combat. With a nod, he proceeds to tell you how to gracefully switch positions from one to the next and how to make your attacks flow into the next one effortlessly. You listen intently and take notes.\r\n    \r\nAfter the exchange, you thank him for his services. With those tips, you are sure you will be able to approach combat with increased agility.\r\n\r\n**You have completed the \"How to Fight (Speed)\" Storyline! You will permanently gain -5%:attackDelay:. This will persist even after retirement!**`),\r\n    )\r\n    .tag(\"attackDelay\")\r\n    .end();\r\n\r\n  const howToFightEvent = howToFightEventBuilder.build();\r\n\r\n  addGameStateListener(\"howToFightEventTriggerer\", (state) => {\r\n    // For perf\r\n    if (hasFlag(state, \"howToFightIsDone\")) {\r\n      return;\r\n    }\r\n    if (\r\n      [\r\n        howToFightHPStoryline,\r\n        howToFightAttackStoryline,\r\n        howToFightDefenseStoryline,\r\n        howToFightAttackDelayStoryline,\r\n      ].every((storyline) => storyline.isCompleted(state))\r\n    ) {\r\n      return setFlag(\"howToFightIsDone\");\r\n    }\r\n\r\n    if (\r\n      !howToFightEvent.hasTriggered(state) &&\r\n      getAccumulatorVariable(state, \"deathCount\") >= 20 &&\r\n      [\r\n        howToFightHPStoryline,\r\n        howToFightAttackStoryline,\r\n        howToFightDefenseStoryline,\r\n        howToFightAttackDelayStoryline,\r\n      ].some((storyline) => !storyline.isCompleted(state))\r\n    ) {\r\n      state = setFlag(\"howToFightIsDone\")(state);\r\n      return triggerEvent(howToFightEvent);\r\n    }\r\n  });\r\n\r\n  registerTransformation(\r\n    [[AttackTarget.Player, CombatStat.MaxHP]],\r\n    \"howToFightHP\",\r\n    howToFightHPStoryline.getName(),\r\n    TransformationType.Addition,\r\n    (state) => (howToFightHPStoryline.isBonusActive(state) ? 30 : 0),\r\n  );\r\n  registerTransformation(\r\n    [[AttackTarget.Player, CombatStat.Attack]],\r\n    \"howToFightAttack\",\r\n    howToFightAttackStoryline.getName(),\r\n    TransformationType.Addition,\r\n    (state) => (howToFightAttackStoryline.isBonusActive(state) ? 10 : 0),\r\n  );\r\n  registerTransformation(\r\n    [[AttackTarget.Player, CombatStat.Defense]],\r\n    \"howToFightDefense\",\r\n    howToFightDefenseStoryline.getName(),\r\n    TransformationType.Addition,\r\n    (state) => (howToFightDefenseStoryline.isBonusActive(state) ? 10 : 0),\r\n  );\r\n  registerTransformation(\r\n    [[AttackTarget.Player, CombatStat.AttackDelay]],\r\n    \"howToFightAttackDelay\",\r\n    howToFightAttackDelayStoryline.getName(),\r\n    TransformationType.Multiplier,\r\n    (state) =>\r\n      howToFightAttackDelayStoryline.isBonusActive(state) ? 0.95 : 1.0,\r\n  );\r\n}\r\n\r\nexport {\r\n  howToFightAttackDelayStoryline,\r\n  howToFightAttackStoryline,\r\n  howToFightDefenseStoryline,\r\n  howToFightHPStoryline,\r\n};\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { FLOOR_FOR_ELEMENT } from \"../../../exploration/dungeons/training/TrainingTowers\";\r\nimport { getCurrentDungeonFloor } from \"../../../exploration/Exploration\";\r\nimport { ExplorationStatus } from \"../../../exploration/ExplorationStatus\";\r\nimport { getExplorationStatus } from \"../../../exploration/ExplorationUtils\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { getResourceAmount, grantResource, Resource } from \"../../../Resources\";\r\nimport {\r\n  getElementLevel,\r\n  SpellElement,\r\n  translateElement,\r\n} from \"../../../spells/Elements\";\r\nimport { Storyline } from \"../../../storylines/Storyline\";\r\nimport { Storylines } from \"../../../storylines/Storylines\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../../transformation/TransformationTags\";\r\nimport { registerRandomEventTrigger } from \"../../autorandom/RandomEventTrigger\";\r\nimport { buildEvent } from \"../../EventMessageBuilder\";\r\nimport { EventTag } from \"../../GameEvent\";\r\n\r\nfunction elementToUse(state: GameState): SpellElement {\r\n  return [\r\n    SpellElement.Fire,\r\n    SpellElement.Earth,\r\n    SpellElement.Water,\r\n    SpellElement.Air,\r\n  ].includes(state.run.primaryElement)\r\n    ? state.run.primaryElement\r\n    : SpellElement.Fire;\r\n}\r\n\r\nconst studentContestStoryline = new Storyline(\r\n  \"studentContest\",\r\n  t(\"The Student Contest\"),\r\n  120,\r\n  10,\r\n  (state) =>\r\n    t(\"Explore the Tower of {{element}} Training\", {\r\n      element: translateElement(elementToUse(state)),\r\n    }),\r\n  t(\"+5 extra Wizards\"),\r\n  (_state) => true,\r\n);\r\n\r\nexport function loadStudentContest() {\r\n  Storylines.register(studentContestStoryline);\r\n\r\n  const studentContestEventBuilder = buildEvent(\r\n    \"studentContest\",\r\n    t(\"(Storyline) Student Contest\"),\r\n    [EventTag.STORYLINE],\r\n  ).setStorylineIds(studentContestStoryline.getId());\r\n\r\n  studentContestEventBuilder.message(\r\n    t(`Climbing the tower, as you climb yet another flight of stairs, you notice this floor is different. It is a large, flat floor, with no individual walls. But most interestingly, it is full of *students* - all gathered around a figure who is elevated, on a sort of stage. You hear the figure exclaim:\r\n    \r\n\"Show me that you can *really* handle /element/ for a big prize!\" From the voice, it sounds like an enthusiastic young man. Is he also a student as well?`),\r\n  );\r\n  studentContestEventBuilder\r\n    .message(\r\n      t(\r\n        `You head closer, and you start noticing that the students seem to be trying quite hard to cast /element/ spells - and yet you can't help but notice how much they are struggling.\r\n      \r\nYou feel like showing them how to really do it. You prepare your energy and ready yourself up for a spell.`,\r\n      ),\r\n    )\r\n    .option(\r\n      t(\"Cast a spell (1200 Mana, Requires /element/ Lv11)\"),\r\n      {\r\n        transform: (state) => {\r\n          state = grantResource(Resource.Mana, -1200)(state);\r\n          return state;\r\n        },\r\n        isEnabled: (state) => {\r\n          return (\r\n            getResourceAmount(state, Resource.Mana) >= 1200 &&\r\n            getElementLevel(state, elementToUse(state)) >= 11\r\n          );\r\n        },\r\n      },\r\n      \"step1\",\r\n    )\r\n    .option(t(\"Maybe later\"))\r\n    .end();\r\n\r\n  studentContestEventBuilder\r\n    .message(\r\n      t(`You cast your spell! The crowd goes silent and glances at your direction. You appear to have gotten the attention of the young man at the stage.\r\n  \r\nHe exclaims, loudly: \"Quite impressive!\" But then challenges you again: \"However... can you do *even better* than that?\"\r\n\r\nIt looks like you are going to have to work harder...`),\r\n    )\r\n    .tag(\"step1\")\r\n    .option(\r\n      t(\"Cast a stronger spell (1500 Mana, Requires /element/ Lv14)\"),\r\n      {\r\n        transform: (state) => {\r\n          state = grantResource(Resource.Mana, -1500)(state);\r\n          return state;\r\n        },\r\n        isEnabled: (state) => {\r\n          return (\r\n            getResourceAmount(state, Resource.Mana) >= 1500 &&\r\n            getElementLevel(state, elementToUse(state)) >= 14\r\n          );\r\n        },\r\n      },\r\n      \"step2\",\r\n    )\r\n    .option(t(\"Maybe later\"))\r\n    .end();\r\n\r\n  studentContestEventBuilder\r\n    .message(\r\n      t(`With more concentration than last time, you unleash a new spell. It is much stronger this time. You hear the students wowing at you, amazed at your spell. Then the young man speaks again:\r\n  \r\n\"We have a *winner*! Please come forward to the stage for your prize,\" he shouts. It looks like that did the trick!\r\n\r\nYou climb the stage. The man pulls out a small gold medal and wraps it around your neck. \"Congratulations! Thank you for showing everyone how to truly use /element/!\"`),\r\n    )\r\n    .tag(\"step2\")\r\n    .option(\r\n      \"Continue\",\r\n      {\r\n        transform: (state) => studentContestStoryline.complete(state),\r\n      },\r\n      \"final\",\r\n    )\r\n    .end();\r\n\r\n  studentContestEventBuilder\r\n    .message(\r\n      t(`Back at home, you show the medal to your hired wizard. She squeals and appears very excited. \"That is *amazing*! You are so talented. I feel so honored to be working for you! And I'm sure others will too.\"\r\n  \r\nYou put the gold medal in a case and decide to display it. You are a little proud. You don't think it is really going to help you in the short term. But reputation builds up over time - you believe this achievement will benefit whoever might be next to take over this house.\r\n\r\n**You have completed the \"Student Contest\" Storyline! In future runs, you will get an extra 5 Wizards available - without the need to build Wizard Chambers for them - as soon as you meet your first Wizard!**`),\r\n    )\r\n    .tag(\"final\");\r\n\r\n  const studentContestEvent = studentContestEventBuilder.build();\r\n\r\n  registerTransformation(\r\n    [[TransformationTags.WizardAmount]],\r\n    \"studentContest\",\r\n    studentContestStoryline.getName(),\r\n    TransformationType.Addition,\r\n    (state) => (studentContestStoryline.isBonusActive(state) ? 5 : 0),\r\n  );\r\n\r\n  registerRandomEventTrigger(\r\n    studentContestEvent,\r\n    65,\r\n    (state) =>\r\n      !studentContestStoryline.isCompleted(state) &&\r\n      !studentContestEvent.hasTriggered(state) &&\r\n      getExplorationStatus(state) != ExplorationStatus.None &&\r\n      getCurrentDungeonFloor(state) == FLOOR_FOR_ELEMENT[elementToUse(state)],\r\n    (state) => ({ element: translateElement(elementToUse(state)) }),\r\n  );\r\n}\r\n\r\nexport { studentContestStoryline };\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { Achievement } from \"../../../Achievement\";\r\nimport { registerAchievementUnlockerFromStoryline } from \"../../../Achievements\";\r\nimport { setDungeonFloorCompleted } from \"../../../exploration/dungeons/Dungeons\";\r\nimport TrainingTowerAir from \"../../../exploration/dungeons/training/TrainingTowerAir\";\r\nimport TrainingTowerEarth from \"../../../exploration/dungeons/training/TrainingTowerEarth\";\r\nimport TrainingTowerFire from \"../../../exploration/dungeons/training/TrainingTowerFire\";\r\nimport TrainingTowerWater from \"../../../exploration/dungeons/training/TrainingTowerWater\";\r\nimport { addEnemyDeathListener } from \"../../../exploration/Exploration\";\r\nimport { Flag } from \"../../../Flag\";\r\nimport { hasFlag, setFlag } from \"../../../Flags\";\r\nimport { HealthPotion } from \"../../../items/equipment/pouch/HealthPotion\";\r\nimport { addToInventory } from \"../../../items/Inventory\";\r\nimport { paper } from \"../../../items/transmute/materials/Paper\";\r\nimport { grantResource, Resource } from \"../../../Resources\";\r\nimport { registerPostRetirementListener } from \"../../../Retire\";\r\nimport { RESOURCE_FOR_ELEMENT } from \"../../../spells/channeling/ChannelingResources\";\r\nimport { getUnlockedElements } from \"../../../spells/Elements\";\r\nimport { Storyline } from \"../../../storylines/Storyline\";\r\nimport { Storylines } from \"../../../storylines/Storylines\";\r\nimport { getSecondsPlayed } from \"../../../timetick/TotalTimePlayed\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../../transformation/TransformationTags\";\r\nimport { buildEvent } from \"../../EventMessageBuilder\";\r\nimport { triggerEvent } from \"../../Events\";\r\nimport { EventTag } from \"../../GameEvent\";\r\n\r\nconst storyline = new Storyline(\r\n  \"zoomThroughTraining\",\r\n  t(\"Zoom Through Training\"),\r\n  160,\r\n  10,\r\n  t(\"Defeat the Head Instructor within 5 in-game minutes after starting a run\"),\r\n  t(\r\n    \"Start new retirements with all game progress until the end of the Training Towers completed; +14.9K Max of all Essences; +9K Max:monstium:; +15K Max:coins:; +20:land:; Begin new retirements with 100 :paper:Paper, full :monstium: and storage of all Essences, and 3 :healthPotion:Health Potion\",\r\n  ),\r\n  (state) => true,\r\n);\r\n\r\nexport function loadZoomThroughTraining() {\r\n  Storylines.register(storyline);\r\n  const eventBuilder = buildEvent(\r\n    \"zoomThroughTraining\",\r\n    t(\"(Storyline) Zoom Through Training\"),\r\n    [EventTag.STORYLINE],\r\n  ).setStorylineIds(storyline.getId());\r\n\r\n  eventBuilder\r\n    .message(\r\n      t(\r\n        `Your victory in combat against the Head Instructor marks the end of your combat training, but you really feel like you have no need for it anymore. Everything so far felt like a complete breeze.`,\r\n      ),\r\n    )\r\n    .option(t(\"Continue\"), {\r\n      transform: (state) => {\r\n        state = storyline.complete(state);\r\n        return state;\r\n      },\r\n    });\r\n  eventBuilder.message(\r\n    t(`You write a few more notes in your diary. Everything you found in that house once you moved in has helped you so much - and with this last bit of information, if anyone else comes after you, they'll be able to get going... *very* quickly.\r\n\r\n**You have completed the \"Zoom Through Training\" Storyline! In future retirements, you will begin with all the unlocks you have obtained up to this point already unlocked. This means you will not need to explore the Training Towers and will be able to start directly from the next area! But you will also obtain many more bonuses: a flat +14.9K bonus to all your Essence storing capacity, +15K Max:coins: and +9000 Max:monstium:, as well as an extra +20:land:! You will also begin with 100 :paper:Paper in your inventory, and 3 :healthPotion:Health Potion so you don't need to look for their materials. And to top it all off, your Essence and Monstium storage will start full!**`),\r\n  );\r\n  const event = eventBuilder.build();\r\n\r\n  addEnemyDeathListener(event.getId() + \"Triggerer\", (state) => {\r\n    if (\r\n      !event.hasTriggered(state) &&\r\n      !storyline.isCompleted(state) &&\r\n      getSecondsPlayed(state) <= 60 * 5 &&\r\n      hasFlag(state, Flag.HeadInstructorDefeated)\r\n    ) {\r\n      return triggerEvent(event)(state);\r\n    }\r\n    return state;\r\n  });\r\n\r\n  registerPostRetirementListener(\"zoomThroughTraining\", (state) => {\r\n    if (storyline.isBonusActive(state)) {\r\n      const flagsToActivate = [\r\n        Flag.ChannelingUnlocked,\r\n        Flag.ManaSpoutsUnlocked,\r\n        Flag.ManaShardsUnlocked,\r\n        Flag.StoragesUnlocked,\r\n        Flag.CatalystsUnlocked,\r\n        Flag.StudyUnlocked,\r\n        Flag.TransmutationUnlocked,\r\n        Flag.WizardsUnlocked,\r\n        Flag.SaleStallsUnlocked,\r\n        Flag.ResearchersUnlocked,\r\n        Flag.LandPurchaseUnlocked,\r\n        Flag.ExplorationUnlocked,\r\n        Flag.RestOfTrainingUnlocked,\r\n        Flag.EnhancementsUnlocked,\r\n        Flag.SewersUnlocked,\r\n      ];\r\n      for (let flag of flagsToActivate) {\r\n        state = setFlag(flag)(state);\r\n      }\r\n\r\n      const dungeonsToClear = [\r\n        TrainingTowerAir,\r\n        TrainingTowerEarth,\r\n        TrainingTowerFire,\r\n        TrainingTowerWater,\r\n      ];\r\n      for (let dungeon of dungeonsToClear) {\r\n        state = setDungeonFloorCompleted(state, dungeon.getId());\r\n      }\r\n\r\n      state = grantResource(Resource.Monstium, Infinity)(state);\r\n      const unlockedElements = getUnlockedElements(state);\r\n      for (let element of unlockedElements) {\r\n        state = grantResource(RESOURCE_FOR_ELEMENT[element], Infinity)(state);\r\n      }\r\n      state = addToInventory({ itemId: paper.getId(), params: {} }, 100, state);\r\n      state = addToInventory(\r\n        { itemId: HealthPotion.getId(), params: {} },\r\n        3,\r\n        state,\r\n      );\r\n    }\r\n    return state;\r\n  });\r\n\r\n  registerTransformation(\r\n    [\r\n      ...Object.values(RESOURCE_FOR_ELEMENT).map((resource) => [\r\n        resource,\r\n        TransformationTags.Cap,\r\n      ]),\r\n    ],\r\n    \"zoomThroughTrainingStorage\",\r\n    storyline.getName(),\r\n    TransformationType.Addition,\r\n    (state, params) => (storyline.isBonusActive(state) ? 14900 : 0),\r\n  );\r\n\r\n  registerTransformation(\r\n    [[Resource.Coins, TransformationTags.Cap]],\r\n    \"zoomThroughTrainingCoins\",\r\n    storyline.getName(),\r\n    TransformationType.Addition,\r\n    (state, params) => (storyline.isBonusActive(state) ? 15000 : 0),\r\n  );\r\n\r\n  registerTransformation(\r\n    [[Resource.Monstium, TransformationTags.Cap]],\r\n    \"zoomThroughTrainingMonstium\",\r\n    storyline.getName(),\r\n    TransformationType.Addition,\r\n    (state, params) => (storyline.isBonusActive(state) ? 9000 : 0),\r\n  );\r\n\r\n  registerTransformation(\r\n    [[TransformationTags.Land, TransformationTags.Cap]],\r\n    \"zoomThroughTrainingLand\",\r\n    storyline.getName(),\r\n    TransformationType.Addition,\r\n    (state, params) => (storyline.isBonusActive(state) ? 20 : 0),\r\n  );\r\n\r\n  registerAchievementUnlockerFromStoryline(\r\n    storyline,\r\n    Achievement.ZOOM_THROUGH_TRAINING,\r\n  );\r\n}\r\n","import { loadStorylinesCore } from \"../../storylines/StorylinesCommonLogic\";\r\nimport { loadConvenience } from \"./desert/Convenience\";\r\nimport { loadAdvertisingManual } from \"./pretraining/AdvertisingManual\";\r\nimport { loadBestiaryUnlocker } from \"./pretraining/BookOfMonsters\";\r\nimport { loadSimultaneousChanneling } from \"./pretraining/ChannelAllStoryline\";\r\nimport { loadRetireUnlocker } from \"./pretraining/RetireUnlocker\";\r\nimport { loadFurniturePreservation } from \"./sewers/FurniturePreservation\";\r\nimport { loadGoblinDen } from \"./sewers/GoblinDen\";\r\nimport { loadLocationEncyclopedia } from \"./sewers/LocationEncyclopedia\";\r\nimport { loadOutessenced } from \"./sewers/Outessenced\";\r\nimport { loadPassageOfStench } from \"./sewers/PassageOfStench\";\r\nimport { loadPermaCast } from \"./sewers/PermaCast\";\r\nimport { loadShardStockpile } from \"./sewers/ShardStockpile\";\r\nimport { loadSomeonesTrash } from \"./sewers/SomeonesTrash\";\r\nimport { loadTicTacToe } from \"./sewers/TicTacToe\";\r\nimport { loadTomeOfToxicKnowledge } from \"./sewers/TomeOfToxicKnowledge\";\r\nimport { loadAdvancedManaSpouts } from \"./training/AdvancedManaSpouts\";\r\nimport { loadAlchemyClass } from \"./training/AlchemyClass\";\r\nimport { loadEssenceArtifact } from \"./training/EssenceArtifact\";\r\nimport { loadHowToFight } from \"./training/HowToFight\";\r\nimport { loadStudentContest } from \"./training/StudentContest\";\r\nimport { loadZoomThroughTraining } from \"./training/ZoomThroughTraining\";\r\n\r\nexport function loadStorylineEventsDemo() {\r\n  loadStorylinesCore();\r\n\r\n  // Training Towers (non-grouped)\r\n  loadRetireUnlocker();\r\n  loadBestiaryUnlocker();\r\n  loadAdvertisingManual();\r\n  loadSimultaneousChanneling();\r\n  loadHowToFight();\r\n  loadZoomThroughTraining();\r\n\r\n  // Training Towers (grouped)\r\n  loadEssenceArtifact();\r\n  loadAlchemyClass();\r\n  loadStudentContest();\r\n  loadAdvancedManaSpouts();\r\n\r\n  // Sewers (non-grouped)\r\n  loadFurniturePreservation();\r\n  loadLocationEncyclopedia();\r\n  loadTicTacToe();\r\n  loadShardStockpile();\r\n  loadTomeOfToxicKnowledge();\r\n  loadOutessenced();\r\n  loadPermaCast();\r\n\r\n  // Sewers (grouped)\r\n  loadGoblinDen();\r\n  loadSomeonesTrash();\r\n  loadPassageOfStench();\r\n\r\n  loadConvenience();\r\n}\r\n","import { LevelUpListeners } from \"../events/progression/LevelUp\";\r\nimport { registerRetirementListener } from \"../Retire\";\r\nimport { storylineHintUnlockChecker, Storylines } from \"./Storylines\";\r\n\r\nfunction loadStorylinesCore(): void {\r\n  registerRetirementListener(\"StorylineBonusActivator\", (state, isMock) => {\r\n    Storylines.getAll().forEach((storyline) => {\r\n      if (storyline.isCompleted(state) && !storyline.isBonusActive(state)) {\r\n        state = storyline.activateBonus(state);\r\n      }\r\n    });\r\n    return state;\r\n  });\r\n\r\n  LevelUpListeners.register(\r\n    storylineHintUnlockChecker,\r\n    \"storylineHintUnlocker\",\r\n  );\r\n}\r\n\r\nexport { loadStorylinesCore };\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { getPrimaryElementMaxLevelForRun } from \"../../../spells/Elements\";\r\nimport { Storylines } from \"../../../storylines/Storylines\";\r\nimport { buildEvent } from \"../../EventMessageBuilder\";\r\nimport { triggerEvent } from \"../../Events\";\r\nimport { EventTag } from \"../../GameEvent\";\r\nimport { LevelUpListeners } from \"../../progression/LevelUp\";\r\nimport { Posterity } from \"./PosterityStoryline\";\r\n\r\nexport function loadRetireUnlocker() {\r\n  Storylines.register(Posterity);\r\n  const retireUnlockEventBuilder = buildEvent(\r\n    \"posterity\",\r\n    t(\"(Storyline) Posterity\"),\r\n    [EventTag.STORYLINE],\r\n  ).setStorylineIds(Posterity.getId());\r\n\r\n  retireUnlockEventBuilder.message(\r\n    t(`As you continue casting various different kinds of spells, your knowledge becomes more advanced and you start realizing that you are actually learning, unlike when you were at school. You are learning not just about the elements and about their magic, but you are also learning about *how to learn* - how to become more proficient in the process itself.\r\n  \r\nYou pull out your diary and intend to write about it, but as you begin to flip through the pages, you notice one where your writing was particularly sloppy. You stop, and the blood freezes in your veins: it is your entry from the day your close relative succumbed to illness.`),\r\n  );\r\n  retireUnlockEventBuilder\r\n    .message(\r\n      t(`You read a slight bit. It has already been several years since then, but you still remember how devastated you were. That specific day, too, was the day when you decided that no one else should go through the horrors they did - the day when you vowed to yourself to find or create the *Philosopher's Stone*. You had then enrolled into magic school, hoping to be able to deduce how to make it, but... it was merely a pipe dream, wasn't it?\r\n  \r\nYou take a deep breath and jump over to the last page, and you begin writing about what you have learned so far. You suddenly become quite tired. It feels like such a difficult task - and you don't know how long it would even take. You feel tears welling in your eyes - and soon after, you tell yourself you want to *give up*.`),\r\n    )\r\n    .option(\r\n      t(\"Continue\"),\r\n      {\r\n        transform: (state) => {\r\n          state = Posterity.complete(state);\r\n          state = Posterity.activateBonus(state);\r\n          return state;\r\n        },\r\n      },\r\n      \"end\",\r\n    );\r\n  retireUnlockEventBuilder\r\n    .message(\r\n      t(`However, you stop yourself. Not yet... no, you can't give up. You have barely started, you tell yourself. But, you recognize the immensity of the task you laid upon yourself, and realize that you are not sure if you'll be able to get to the end like this.\r\n  \r\nBecause of that reason, you make one more promise to yourself - you are going to write about everything that you have learnt in this same diary. If you ever decide to give up, someone can then pick up this book, and hopefully that will give them a head start and set them up for success. With renewed energy, you quickly finish what you were writing and continue practicing magic.\r\n\r\n**You have permanently unlocked the \"Retirement\" feature! At any point, you can decide to retire - starting the game over again from the beginning, but obtaining powerful bonuses. You can do so from the \"Retirement\" screen!**`),\r\n    )\r\n    .tag(\"end\")\r\n    .end();\r\n\r\n  const retireUnlockEvent = retireUnlockEventBuilder.build();\r\n\r\n  LevelUpListeners.register((state, element) => {\r\n    if (!state.run.primaryElement) {\r\n      return state;\r\n    }\r\n    if (\r\n      !retireUnlockEvent.hasTriggered(state) &&\r\n      !Posterity.isCompleted(state) &&\r\n      getPrimaryElementMaxLevelForRun(state) >= 7\r\n    ) {\r\n      return triggerEvent(retireUnlockEvent)(state);\r\n    }\r\n    return state;\r\n  }, retireUnlockEvent.getId());\r\n}\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { getBestiaryVisibleEnemies } from \"../../../exploration/enemies/Enemy\";\r\nimport { addGameStateListener } from \"../../../GameStateListeners\";\r\nimport { Storylines } from \"../../../storylines/Storylines\";\r\nimport { buildEvent } from \"../../EventMessageBuilder\";\r\nimport { triggerEvent } from \"../../Events\";\r\nimport { EventTag } from \"../../GameEvent\";\r\nimport { BookOfMonsters } from \"./BookOfMonstersStoryline\";\r\n\r\nexport function loadBestiaryUnlocker() {\r\n  Storylines.register(BookOfMonsters);\r\n  const bestiaryUnlockEventBuilder = buildEvent(\r\n    \"bookOfMonsters\",\r\n    t(\"(Storyline) Compendium\"),\r\n    [EventTag.STORYLINE],\r\n  ).setStorylineIds(BookOfMonsters.getId());\r\n\r\n  bestiaryUnlockEventBuilder.message(\r\n    t(`You fell one more enemy as you explore. You look behind you and you notice a familiar figure - it is your hired wizard! What is she doing all the way here?\r\n    \r\n\"That was *so cool*\", she exclaims loudly, after you notice her. \"You are strong! How do you do it?\"\r\n\r\nYou are quite startled and surprised by her presence, and are not quite sure how to respond, but she continues before you are able to...`),\r\n  );\r\n  bestiaryUnlockEventBuilder\r\n    .message(\r\n      t(`\"I've been actually watching you since you started exploring, and - I've noticed the various kinds of enemies you have been fighting and items you have been finding. And I've been *recording information* about them!\" She shows you a book, titled *\"Compendium\"*.\r\n      \r\nYou admit you are a little intrigued. You walk up to her and open the book. It is barely filled in, but the few pages that have writing in them have quite a lot of information - including even *drawings* of each of the enemies you have defeated!`),\r\n    )\r\n    .option(\r\n      t(\"Continue\"),\r\n      {\r\n        transform: (state) => {\r\n          state = BookOfMonsters.complete(state);\r\n          state = BookOfMonsters.activateBonus(state);\r\n          return state;\r\n        },\r\n      },\r\n      \"end\",\r\n    );\r\n  bestiaryUnlockEventBuilder\r\n    .message(\r\n      t(`You are pretty impressed. Some of the enemy entries even have observations from her on how to combat them effectively!\r\n      \r\nSomething like this might justify her accompanying you. You hesitate to tell her immediately - you sense she will get extremely excited. For a brief moment you even think about her motivations. You tell yourself it's not the time right now, though. Resolved to let her know that she should come with you on your explorations *after* you go back home, you thank her for starting the book - you are sure it'll be useful.\r\n\r\n**You have completed the \"Compendium\" Storyline! You have permanently unlocked the \"Compendium\" screen, which records information about items you have found, and about enemies you have defeated or battled before. This will persist even after retirement!**`),\r\n    )\r\n    .tag(\"end\")\r\n    .end();\r\n\r\n  const bestiaryUnlockEvent = bestiaryUnlockEventBuilder.build();\r\n\r\n  addGameStateListener(\"bestiaryUnlockListener\", (state) => {\r\n    if (\r\n      !bestiaryUnlockEvent.hasTriggered(state) &&\r\n      !BookOfMonsters.isCompleted(state) &&\r\n      getBestiaryVisibleEnemies(state).length >= 5\r\n    ) {\r\n      return triggerEvent(bestiaryUnlockEvent);\r\n    }\r\n  });\r\n}\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { Achievement } from \"../../../Achievement\";\r\nimport { registerAchievementUnlockerFromStoryline } from \"../../../Achievements\";\r\nimport { Flag } from \"../../../Flag\";\r\nimport { setFlag } from \"../../../Flags\";\r\nimport { Resource, getResourceAmount, grantResource } from \"../../../Resources\";\r\nimport { registerPostRetirementListener } from \"../../../Retire\";\r\nimport {\r\n  addEnemyDeathListener,\r\n  getSuccessfulExplorationsForFloor,\r\n} from \"../../../exploration/Exploration\";\r\nimport SewerHideout from \"../../../exploration/dungeons/sewers/SewerHideout\";\r\nimport {\r\n  getTotalAmountOfItem,\r\n  removeFromInventoryWithAnyParams,\r\n} from \"../../../items/Inventory\";\r\nimport { cotton } from \"../../../items/transmute/materials/Cotton\";\r\nimport { Storylines } from \"../../../storylines/Storylines\";\r\nimport { buildEvent } from \"../../EventMessageBuilder\";\r\nimport { triggerEvent } from \"../../Events\";\r\nimport { EventTag } from \"../../GameEvent\";\r\nimport { TicTacToeStoryline } from \"./TicTacToeStoryline\";\r\n\r\nexport function loadTicTacToe() {\r\n  Storylines.register(TicTacToeStoryline);\r\n  const ticTacToeEventBuilder = buildEvent(\r\n    \"ticTacToe\",\r\n    t(\"(Storyline) Tic-Tac-Toe\"),\r\n    [EventTag.STORYLINE],\r\n  ).setStorylineIds(TicTacToeStoryline.getId());\r\n\r\n  ticTacToeEventBuilder\r\n    .message(\r\n      t(`Before moving on, you notice an odd object on the floor. You take it in your hands. It is a grid-like wooden board, with 9 compartments on the top, set in a 3x3 grid. It is somewhat dirty, but the construction is sturdy and meticulous.\r\n      \r\nIt's... a tic-tac-toe board, isn't it? For some reason, you get an urge to play. You decide to restore it to its proper usable state...`),\r\n    )\r\n    .option(\r\n      t(\"Restore it (10 Cotton, 20K Water Essence)\"),\r\n      {\r\n        transform: (state) => {\r\n          state = grantResource(Resource.WaterEssence, -20000)(state);\r\n          state = removeFromInventoryWithAnyParams(cotton, 10, state);\r\n          return state;\r\n        },\r\n        isEnabled: (state) =>\r\n          getResourceAmount(state, Resource.WaterEssence) >= 20000 &&\r\n          getTotalAmountOfItem(cotton, state) >= 10,\r\n      },\r\n      \"restored\",\r\n    )\r\n    .option(t(\"Maybe later\"))\r\n    .end();\r\n\r\n  ticTacToeEventBuilder\r\n    .message(\r\n      t(\r\n        `You moisten the Cotton and rub it vigorously against the board. The dirty spots disappear! The board is ready to be used! You call the hired wizard. You get ready to start a game of tic-tac-toe with her, but you're struck with a big dilemma...`,\r\n      ),\r\n    )\r\n    .tag(\"restored\")\r\n    .option(t('Choose to be \"O\"'), \"O\")\r\n    .option(t('Choose to be \"X\"'), \"X\")\r\n    .end();\r\n\r\n  ticTacToeEventBuilder\r\n    .message(\r\n      t(`Of course! *O* is always for the winners. You get ready to write an O in the corner...\r\n\r\n\"What? *Tic-tac-toe*?\" Your hired wizard looks at you, then at the board, and then furrows her brow. \"...What are you doing with *that*? That's not a toy! That's a *Synchro Board*!\"\r\n\r\nYou look at her, confused. *You've never heard of that in your life.*`),\r\n    )\r\n    .tag(\"O\")\r\n    .option(\r\n      t(\"Continue\"),\r\n      {\r\n        transform: (state) => {\r\n          state = TicTacToeStoryline.complete(state);\r\n          state = TicTacToeStoryline.activateBonus(state);\r\n          state = setFlag(Flag.SynchroUnlocked)(state);\r\n          return state;\r\n        },\r\n      },\r\n      \"end\",\r\n    )\r\n    .end();\r\n  ticTacToeEventBuilder\r\n    .message(\r\n      t(`Of course! *X* is always the superior side. You get ready to write an X in the corner...\r\n\r\n\"What? *Tic-tac-toe*?\" Your hired wizard looks at you, then at the board, and then furrows her brow. \"...What are you doing with *that*? That's not a toy! That's a *Synchro Board*!\"\r\n\r\nYou look at her, confused. *You've never heard of that in your life.*`),\r\n    )\r\n    .tag(\"X\")\r\n    .option(\r\n      t(\"Continue\"),\r\n      {\r\n        transform: (state) => {\r\n          state = TicTacToeStoryline.complete(state);\r\n          state = TicTacToeStoryline.activateBonus(state);\r\n          state = setFlag(Flag.SynchroUnlocked)(state);\r\n          return state;\r\n        },\r\n      },\r\n      \"end\",\r\n    )\r\n    .end();\r\n  ticTacToeEventBuilder\r\n    .message(\r\n      t(`\"You're meant to put *Elements* in the grid! Then, depending on what Elements and what position you put them on, you get different *bonuses*. These boards are *rare*!\" She sounds pretty upset...\r\n      \r\nIt takes you a few minutes to get over your desire to play, but once you do, you realize this could become another great tool for your journey... And maybe finding a good Element combination will scratch that same itch?\r\n\r\n...Three Fire-in-a-row?\r\n\r\n**You have completed the \"Tic-Tac-Toe\" Storyline! You have permanently unlocked the \"Synchro\" feature, where you can arrange Elements in a grid to get various bonuses. Find the best pattern and become more powerful!**`),\r\n    )\r\n    .tag(\"end\")\r\n    .end();\r\n\r\n  const ticTacToeEvent = ticTacToeEventBuilder.build();\r\n\r\n  addEnemyDeathListener(ticTacToeEvent.getId() + \"Triggerer\", (state) => {\r\n    if (\r\n      !ticTacToeEvent.hasTriggered(state) &&\r\n      !TicTacToeStoryline.isCompleted(state) &&\r\n      (getSuccessfulExplorationsForFloor(state, \"sewerHideout\") >= 6 ||\r\n        SewerHideout.canFightBoss(state))\r\n    ) {\r\n      return triggerEvent(ticTacToeEvent)(state);\r\n    }\r\n    return state;\r\n  });\r\n\r\n  registerPostRetirementListener(\"synchroUnlocker\", (state, isMock) => {\r\n    if (TicTacToeStoryline.isBonusActive(state)) {\r\n      return setFlag(Flag.SynchroUnlocked)(state);\r\n    }\r\n    return state;\r\n  });\r\n\r\n  registerAchievementUnlockerFromStoryline(\r\n    TicTacToeStoryline,\r\n    Achievement.TIC_TAC_TOE,\r\n  );\r\n}\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { Achievement } from \"../../../Achievement\";\r\nimport { registerAchievementUnlockerFromStoryline } from \"../../../Achievements\";\r\nimport { monstiumCatalysts } from \"../../../enhancement/other/MonstiumCatalysts\";\r\nimport { Flag } from \"../../../Flag\";\r\nimport { setFlag, SetFlagListeners } from \"../../../Flags\";\r\nimport { clearResourceCapCache, Resource } from \"../../../Resources\";\r\nimport {\r\n  registerPostRetirementListener,\r\n  registerRetirementListener,\r\n} from \"../../../Retire\";\r\nimport {\r\n  PARTIALLY_UNLOCKED_CHANNELING_MULTIPLIER,\r\n  PARTIALLY_UNLOCKED_STORAGE_MULTIPLIER,\r\n} from \"../../../spells/ElementMultipliers\";\r\nimport {\r\n  getElementLevel,\r\n  getFullyUnlockedElements,\r\n  getTotalExpRequiredForLevel,\r\n  grantElementExp,\r\n  hasElementBeenPartiallyUnlockedInPreviousRun,\r\n  SpellElement,\r\n  unlockElement,\r\n} from \"../../../spells/Elements\";\r\nimport { Storylines } from \"../../../storylines/Storylines\";\r\nimport { clearResearcherExpCache } from \"../../../study/Study\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../../transformation/TransformationTags\";\r\nimport { buildEvent } from \"../../EventMessageBuilder\";\r\nimport { triggerEvent } from \"../../Events\";\r\nimport { EventTag } from \"../../GameEvent\";\r\nimport { TomeOfToxicKnowledge } from \"./TomeOfToxicKnowledgeStoryline\";\r\n\r\nexport function loadTomeOfToxicKnowledge() {\r\n  Storylines.register(TomeOfToxicKnowledge);\r\n  const poisonUnlockEventBuilder = buildEvent(\r\n    \"tomeOfToxicKnowledge\",\r\n    t(\"(Storyline) Tome of Toxic Knowledge\"),\r\n    [EventTag.STORYLINE],\r\n  ).setStorylineIds(TomeOfToxicKnowledge.getId());\r\n\r\n  poisonUnlockEventBuilder.message(\r\n    t(`On the desk of the Mad Alchemist, you notice a book with a purple cover. It immediately catches your attention, as it says: *\"Tome of Toxic Knowledge\"* - and it depicts *a Man-Eating Plant* on the cover. You are thinking this Tome might be just what you are looking for - you have been having such a hard time with Poison all this time!\r\n    \r\nThe Mad Alchemist is facing away. You look at your hired wizard, who seems to understand what you're about to do and quietly steps away. Then you tiptoe and pick up the book, store it, and head out of the room... and then slightly after, out of sight, you *run*, to make sure he cannot catch you!`),\r\n  );\r\n  poisonUnlockEventBuilder\r\n    .message(\r\n      t(`Back at home, your hired wizard looks at it with you. She exclaims: \"It is so detailed - it is like a basic but thorough explanation of Poison as an element!\"\r\n\r\nAs you skim it with her, you realize she speaks the truth. You read an excerpt from the introduction: *\"The Poison element is essential not only for the creation of potent substances that can weaken, but also for a wide variety of magical substances. Proper management of Poison is also critical for obtaining, storing, and working with, the important wizardry resource, Monstium.\"* \r\n      \r\nYou also notice there is not only basic knowledge about the element written down here, but also many details about advanced applications - things you would have never been able to even dream of! Even now, you still can't understand most of it, but this Tome feels like a very valuable reference material.`),\r\n    )\r\n    .option(\r\n      t(\"Continue\"),\r\n      {\r\n        transform: (state) => {\r\n          state = TomeOfToxicKnowledge.complete(state);\r\n          if (\r\n            hasElementBeenPartiallyUnlockedInPreviousRun(\r\n              state,\r\n              SpellElement.Poison,\r\n            )\r\n          ) {\r\n            state = TomeOfToxicKnowledge.activateBonus(state);\r\n            const poisonLevel = getElementLevel(state, SpellElement.Poison);\r\n            state = unlockElement(SpellElement.Poison)(state);\r\n            state.run.elementExperience[SpellElement.Poison] = 0;\r\n            delete state.run.elementExponents[SpellElement.Poison];\r\n            state = grantElementExp(\r\n              SpellElement.Poison,\r\n              getTotalExpRequiredForLevel(\r\n                state,\r\n                poisonLevel,\r\n                SpellElement.Poison,\r\n              ),\r\n            )(state);\r\n          }\r\n          state = clearResourceCapCache(state);\r\n          state = clearResearcherExpCache(state);\r\n          return state;\r\n        },\r\n      },\r\n      \"end\",\r\n    );\r\n  poisonUnlockEventBuilder\r\n    .message(\r\n      t(`You take the Tome and store it in a special bookshelf. You are saving this bookshelf only for those volumes that are *particularly* useful. And this one certainly is. Although, you hope you will be able to have the time to read it...\r\n\r\n/lastLine/`),\r\n    )\r\n    .tag(\"end\")\r\n    .end();\r\n\r\n  const poisonUnlockEvent = poisonUnlockEventBuilder.build();\r\n\r\n  SetFlagListeners.register((state, flag) => {\r\n    if (!state.run.primaryElement) {\r\n      return state;\r\n    }\r\n    if (\r\n      flag == Flag.VastDesertUnlocked &&\r\n      !poisonUnlockEvent.hasTriggered(state) &&\r\n      !TomeOfToxicKnowledge.isCompleted(state)\r\n    ) {\r\n      return triggerEvent(poisonUnlockEvent, {\r\n        lastLine: hasElementBeenPartiallyUnlockedInPreviousRun(\r\n          state,\r\n          SpellElement.Poison,\r\n        )\r\n          ? t(\r\n              '**You have completed the \"Tome of Toxic Knowledge\" Storyline and have fully unlocked the Poison element! There will be no more penalties to Poison or :poisonessence:. Also, in future retirements, Poison will be available from the start, with no penalties, and it will be possible to select it as a primary element! And as a bonus, you will begin new runs with Monstruariums and Monstium Catalysts already unlocked!**',\r\n            )\r\n          : t(\r\n              '**You have completed the \"Tome of Toxic Knowledge\" Storyline! There will be no more penalties to :poisonessence:. Also, in future retirements, Poison will be fully unlocked! This means that it will be available from the start, with no penalties, and it will be possible to select it as a primary element! And as a bonus, you will begin new runs with Monstruariums and Monstium Catalysts already unlocked!**',\r\n            ),\r\n      })(state);\r\n    }\r\n    return state;\r\n  }, poisonUnlockEvent.getId());\r\n\r\n  registerRetirementListener(\r\n    \"poisonUnlockRetirementListener\",\r\n    (state, isMock) => {\r\n      if (\r\n        TomeOfToxicKnowledge.isCompleted(state) &&\r\n        !getFullyUnlockedElements(state).includes(SpellElement.Poison)\r\n      ) {\r\n        state = unlockElement(SpellElement.Poison)(state);\r\n      }\r\n      return state;\r\n    },\r\n  );\r\n\r\n  registerPostRetirementListener(\r\n    \"poisonUnlockPostRetirementListener\",\r\n    (state) => {\r\n      if (getFullyUnlockedElements(state).includes(SpellElement.Poison)) {\r\n        state = setFlag(Flag.MonstruariumsUnlocked)(state);\r\n        state = monstiumCatalysts.setPurchased(state);\r\n      }\r\n      return state;\r\n    },\r\n  );\r\n\r\n  registerTransformation(\r\n    [[Resource.PoisonEssence, TransformationTags.Cap]],\r\n    \"afterPoisonUnlockCap\",\r\n    TomeOfToxicKnowledge.getName(),\r\n    TransformationType.Multiplier,\r\n    (state) =>\r\n      TomeOfToxicKnowledge.isCompleted(state) &&\r\n      !getFullyUnlockedElements(state).includes(SpellElement.Poison)\r\n        ? 1 / PARTIALLY_UNLOCKED_STORAGE_MULTIPLIER\r\n        : 1.0,\r\n  );\r\n\r\n  registerTransformation(\r\n    [\r\n      [SpellElement.Poison, TransformationTags.ChannelingEfficiency],\r\n      [SpellElement.Poison, TransformationTags.ExpGain],\r\n    ],\r\n    \"afterPoisonUnlockChanneling\",\r\n    TomeOfToxicKnowledge.getName(),\r\n    TransformationType.Multiplier,\r\n    (state) =>\r\n      TomeOfToxicKnowledge.isCompleted(state) &&\r\n      !getFullyUnlockedElements(state).includes(SpellElement.Poison)\r\n        ? 1 / PARTIALLY_UNLOCKED_CHANNELING_MULTIPLIER\r\n        : 1.0,\r\n  );\r\n\r\n  registerAchievementUnlockerFromStoryline(\r\n    TomeOfToxicKnowledge,\r\n    Achievement.TOME_OF_TOXIC_KNOWLEDGE,\r\n  );\r\n}\r\n","import { loadRandomEventTriggers } from \"./autorandom/RandomEventTrigger\";\r\nimport { loadRandomRepeatableEvents } from \"./autorandom/RandomRepeatableEvents\";\r\nimport { loadDemoEndEvent } from \"./DemoEndEvent\";\r\nimport { loadDungeonEventGroups } from \"./DungeonEventGroup\";\r\nimport { loadProgressionEventsDemo } from \"./progression/DemoProgressionEvents\";\r\nimport { loadLevelUpEvents } from \"./progression/LevelUp\";\r\nimport { loadStorylineEventsDemo } from \"./storyline/DemoStorylinesLoader\";\r\n\r\nexport function loadGameEventsDemo() {\r\n  loadDungeonEventGroups();\r\n  loadRandomEventTriggers();\r\n\r\n  // Events below\r\n  loadProgressionEventsDemo();\r\n  loadLevelUpEvents();\r\n  loadStorylineEventsDemo();\r\n  loadRandomRepeatableEvents();\r\n\r\n  loadDemoEndEvent();\r\n}\r\n","import { ExplorationTriggerGroups } from \"../../events/autorandom/ExplorationTrigger\";\r\nimport { DungeonFloors, Dungeons } from \"./Dungeons\";\r\nimport SewerEntrance from \"./sewers/SewerEntrance\";\r\nimport SewerHazardousSector from \"./sewers/SewerHazardousSector\";\r\nimport SewerHideout from \"./sewers/SewerHideout\";\r\nimport {\r\n  loadSewerChests,\r\n  sewers,\r\n  sewersExplorationGroup,\r\n} from \"./sewers/Sewers\";\r\nimport TrainingTowerAir from \"./training/TrainingTowerAir\";\r\nimport TrainingTowerEarth from \"./training/TrainingTowerEarth\";\r\nimport TrainingTowerFire from \"./training/TrainingTowerFire\";\r\nimport {\r\n  loadTrainingTowerChests,\r\n  trainingTowers,\r\n  trainingTowersExplorationGroup,\r\n} from \"./training/TrainingTowers\";\r\nimport TrainingTowerWater from \"./training/TrainingTowerWater\";\r\n\r\nexport function loadDungeonsDemo() {\r\n  DungeonFloors.register(TrainingTowerFire);\r\n  DungeonFloors.register(TrainingTowerEarth);\r\n  DungeonFloors.register(TrainingTowerWater);\r\n  DungeonFloors.register(TrainingTowerAir);\r\n  Dungeons.register(trainingTowers);\r\n  ExplorationTriggerGroups.register(trainingTowersExplorationGroup);\r\n  loadTrainingTowerChests();\r\n\r\n  DungeonFloors.register(SewerEntrance);\r\n  DungeonFloors.register(SewerHazardousSector);\r\n  DungeonFloors.register(SewerHideout);\r\n  Dungeons.register(sewers);\r\n  ExplorationTriggerGroups.register(sewersExplorationGroup);\r\n  loadSewerChests();\r\n}\r\n","import { Enemies } from \"./Enemies\";\r\nimport EtherealEel from \"./sewers/EtherealEel\";\r\nimport EvolvedSlime from \"./sewers/EvolvedSlime\";\r\nimport Goblin from \"./sewers/Goblin\";\r\nimport GoblinChief from \"./sewers/GoblinChief\";\r\nimport GoblinDoctor from \"./sewers/GoblinDoctor\";\r\nimport GoblinSharpshooter from \"./sewers/GoblinSharpshooter\";\r\nimport { loadManEatingPlant } from \"./sewers/ManEatingPlant\";\r\nimport MutatedFish from \"./sewers/MutatedFish\";\r\nimport PoisonousToad from \"./sewers/PoisonousToad\";\r\nimport SewerFish from \"./sewers/SewerFish\";\r\nimport SewerFly from \"./sewers/SewerFly\";\r\nimport Sicklefish from \"./sewers/Sicklefish\";\r\nimport SludgeMass from \"./sewers/SludgeMass\";\r\nimport VenomousSpider from \"./sewers/VenomousSpider\";\r\nimport AnimatedSnowman from \"./training/AnimatedSnowman\";\r\nimport BlazingTurtle from \"./training/BlazingTurtle\";\r\nimport BreezyRabbit from \"./training/BreezyRabbit\";\r\nimport FireBat from \"./training/FireBat\";\r\nimport FlyingRock from \"./training/FlyingRock\";\r\nimport Goat from \"./training/Goat\";\r\nimport HeadInstructor from \"./training/HeadInstructor\";\r\nimport KnightInShiningArmor from \"./training/KnightInShiningArmor\";\r\nimport RockGolem from \"./training/RockGolem\";\r\nimport Slime from \"./training/Slime\";\r\nimport FamiliarOfWind from \"./training/Windglider\";\r\n\r\nexport function loadEnemiesDemo() {\r\n  // Training Towers\r\n  Enemies.register(Slime);\r\n  Enemies.register(FlyingRock);\r\n  Enemies.register(RockGolem);\r\n  Enemies.register(BreezyRabbit);\r\n  Enemies.register(FamiliarOfWind);\r\n  Enemies.register(FireBat);\r\n  Enemies.register(BlazingTurtle);\r\n  Enemies.register(Goat);\r\n  Enemies.register(AnimatedSnowman);\r\n  Enemies.register(KnightInShiningArmor);\r\n  Enemies.register(HeadInstructor);\r\n\r\n  // Sewers\r\n  Enemies.register(EvolvedSlime);\r\n  Enemies.register(PoisonousToad);\r\n  Enemies.register(SewerFish);\r\n  Enemies.register(Goblin);\r\n  Enemies.register(MutatedFish);\r\n  Enemies.register(Sicklefish);\r\n  Enemies.register(SewerFly);\r\n  Enemies.register(GoblinSharpshooter);\r\n  Enemies.register(SludgeMass);\r\n  Enemies.register(GoblinChief);\r\n  Enemies.register(VenomousSpider);\r\n  Enemies.register(GoblinDoctor);\r\n  Enemies.register(EtherealEel);\r\n  loadManEatingPlant();\r\n}\r\n","import { t } from \"../../utils/I18n\";\r\nimport { isAutocastEverUnlocked } from \"../autocast/Autocast\";\r\nimport { CombatClassesStoryline } from \"../classes/CombatClassesStoryline\";\r\nimport { isEnhancementEverUnlocked } from \"../enhancement/Enhancements\";\r\nimport { manaSteamers } from \"../enhancement/other/ManaSteamers\";\r\nimport { BookOfMonsters } from \"../events/storyline/pretraining/BookOfMonstersStoryline\";\r\nimport { permacastStoryline } from \"../events/storyline/sewers/PermaCast\";\r\nimport { isDungeonFloorEverCompleted } from \"../exploration/dungeons/Dungeons\";\r\nimport SewerEntrance from \"../exploration/dungeons/sewers/SewerEntrance\";\r\nimport { isExplorationEverUnlocked } from \"../exploration/Exploration\";\r\nimport { Flag } from \"../Flag\";\r\nimport { hasEverHadFlag, hasWorldFlag } from \"../Flags\";\r\nimport {\r\n  hasEverUnlockedCrafting,\r\n  isInventoryEverUnlocked,\r\n} from \"../items/Items\";\r\nimport { isRetirementUnlocked } from \"../Retire\";\r\nimport { isStudyEverUnlocked } from \"../study/Study\";\r\nimport { isSynchroUnlocked } from \"../synchro/Synchro\";\r\nimport { HelpCategory, Helps } from \"./Helps\";\r\n\r\nexport function loadHelpsDemo() {\r\n  Helps.reset();\r\n\r\n  // Introduction\r\n\r\n  Helps.register({\r\n    id: \"welcome\",\r\n    category: HelpCategory.Introduction,\r\n    title: t(\"Welcome to Magic Research 2!\"),\r\n    order: 0,\r\n    description: t(`**Welcome to Magic Research 2!**\r\n      \r\nIn Magic Research 2, you are a rookie wizard with a single ambition: to find or create the Philosopher's Stone, a legendary magical item that is said to be able to cure any illness. As you do so, you will learn more than you ever imagined about Magic and about the world around you.\r\n\r\nIn the top left corner, you will find **the menu button** which shows you a breakdown of your current resources and let you access various areas of the game.\r\n\r\nIn the top right corner, you will find **the notification bell button** while takes you to the list of events that have happened recently and allows you to see more information about them or interact with them.\r\n\r\nThe other important button is usually in the bottom right corner: **the magic wand button**. This will take you to the magic menu, where you can cast any spell you may have learned.\r\n\r\nDepending on screen size, some of those buttons can be in different positions on the screen, or the menus they open will be visible at all times. If your screen is wide enough, the menu on the left may also have heart-shaped icons - these will allow you to open screens side-by-side.\r\n\r\n**Note: at the bottom of the Home screen, there will be a \"Current Goal\" section. You can progress through the game by following what it says.**`),\r\n  });\r\n\r\n  // Screens Overview\r\n  Helps.register({\r\n    id: \"homeScreen\",\r\n    category: HelpCategory.ScreensOverview,\r\n    title: t(\"Home\"),\r\n    order: 1000,\r\n    description:\r\n      t(`The :home:**Home** screen is where you can do activities related to your own home - your \"base of operations\" as a wizard.\r\n    \r\nIn the Home screen, you will be able to manually gather :mana:Mana at a slow rate, as well as use it on Channeling spells to obtain Essences, the basic resources of the game.\r\n\r\nEssences have many uses, but within the Home screen, you can utilize them to create *Furniture*. Furniture are objects that decorate or otherwise fill in your Home and have various effects.\r\n\r\nYour Home has a limited amount of :land:Land available for Furniture. You can expand the amount of :land: available by purchasing more from the same screen, but it is expensive and requires :coins:Coins. The choice of what furniture you decide to have in your home and in what amounts is one of the biggest challenges of the game.`),\r\n  });\r\n  Helps.register({\r\n    id: \"studyScreen\",\r\n    category: HelpCategory.ScreensOverview,\r\n    title: t(\"Study\"),\r\n    order: 1010,\r\n    isVisible(state) {\r\n      return isStudyEverUnlocked(state);\r\n    },\r\n    description:\r\n      t(`The :study:**Study** screen allows you to further your knowledge about the Elements, which is key to advancing in the game! Studying allows you to get Element exp over time, which eventually will let you level up your Elements to unlock new spells and get other bonuses.\r\n      \r\nIn this screen, you are able to decide how to distribute your researchers between the Elements. You start with a single researcher (yourself) but you will find a way to get more later in the game. Note that your Primary Element will earn Element exp twice as fast.\r\n\r\nIf you decide to let the game auto-assign your researchers, there are a few options. \"Spread evenly\" will try to keep the same amount of researchers on every Element. \"Most researchers\" will assign all the researchers to the Element that already has the most researchers assigned to it. \"Spread, then most researchers\" will make sure there is at least one researcher assigned to every Element, then it will assign the rest to the Element that has the most Researchers. If more than one Element fits the definition, it will prioritize the Primary Element over non-Primary Elements.`),\r\n  });\r\n  Helps.register({\r\n    id: \"inventoryScreen\",\r\n    category: HelpCategory.ScreensOverview,\r\n    title: t(\"Inventory\"),\r\n    order: 1020,\r\n    isVisible(state) {\r\n      return isInventoryEverUnlocked(state);\r\n    },\r\n    description:\r\n      t(`The :inventory:**Inventory** screen will show you a list of items, which you may have obtained in your journey via Transmutation or other means!\r\n\r\n*There is no limit to the amount of items you may have.*\r\n\r\nThe screen is divided into two parts:\r\n\r\nAt the top is a list of equipped items, which can be individually unequipped.\r\n\r\nAt the bottom is the actual list of items shown as a grid. You may filter items by type - this feature may be useful later in the game. Pressing an item in the grid will show its details and often allow to use, equip, or sell the item to obtain :coins:.`),\r\n  });\r\n  Helps.register({\r\n    id: \"transmutationScreen\",\r\n    category: HelpCategory.ScreensOverview,\r\n    title: t(\"Transmutation\"),\r\n    order: 1030,\r\n    isVisible(state) {\r\n      return hasEverUnlockedCrafting(state);\r\n    },\r\n    description:\r\n      t(`In the :transmute:**Transmute** screen, you will be able to Transmute items! Transmutation lets you transform items, elemental essences and other resources into new items.\r\n\r\nThe screen shows your possible Transmutations as a grid. You may select one item to see its details, cost, and Transmute it. You can unlock more Transmutations by raising your Element levels.\r\n\r\nOnce you have Transmuted an item, it will go straight to your :inventory:Inventory and you should be able to see it in that screen.`),\r\n  });\r\n  Helps.register({\r\n    id: \"wizardsScreen\",\r\n    category: HelpCategory.ScreensOverview,\r\n    title: t(\"Wizards\"),\r\n    order: 1040,\r\n    isVisible(state) {\r\n      return isAutocastEverUnlocked(state);\r\n    },\r\n    description:\r\n      t(`The :wizards:**Wizards** screen lets you give instructions to your hired Wizards, who will cast spells as you ask - effectively letting you automate a large part of the game!\r\n      \r\nThis screen, and its feature, is quite complex. You can learn more about this screen in other Help items in the Wizards category.`),\r\n  });\r\n  Helps.register({\r\n    id: \"explorationScreen\",\r\n    category: HelpCategory.ScreensOverview,\r\n    title: t(\"Exploration\"),\r\n    order: 1050,\r\n    isVisible(state) {\r\n      return isExplorationEverUnlocked(state);\r\n    },\r\n    description:\r\n      t(`In the :exploration:**Exploration** screen, you can delve through various areas as you further your quest for the Philosopher's Stone!\r\n      \r\nThis screen and feature is quite complex. You can learn more about this screen in other Help items in the Exploration category.`),\r\n  });\r\n  Helps.register({\r\n    id: \"enhancementScreen\",\r\n    category: HelpCategory.ScreensOverview,\r\n    title: t(\"Enhance\"),\r\n    order: 1060,\r\n    isVisible(state) {\r\n      return isEnhancementEverUnlocked(state);\r\n    },\r\n    description:\r\n      t(`In the :enhance:**Enhance** screen, you can spend your hard-earned :monstium:Monstium, together with :paper:Paper, to obtain powerful semi-permanent bonuses and greatly improve your capabilities!\r\n      \r\nEnhancements will last for the rest of the run, but they do not persist through Retirement.\r\n\r\nYou can obtain :monstium:Monstium from defeating enemies in Exploration. On the other hand, :paper:Paper can be Transmuted, and you will need lots of it - if you are able to, consider automating their production with Wizards!`),\r\n  });\r\n  Helps.register({\r\n    id: \"synchroScreen\",\r\n    category: HelpCategory.ScreensOverview,\r\n    title: t(\"Synchro\"),\r\n    order: 1065,\r\n    isVisible(state) {\r\n      return isSynchroUnlocked(state);\r\n    },\r\n    description:\r\n      t(`In the :synchro:**Synchro** screen, you can arrange your fully unlocked Elements in a 3x3 grid. Adjacent Elements in the grid will give you various bonuses, depending on the Elements themselves. You can reassign Elements to the grid anytime.\r\n      \r\nYou can place each Element up to 2 times in the grid, and because of the size and shape of the grid, the maximum amount of bonuses you can have is 12. Bonuses are multiplicative with each other.\r\n\r\nSome bonus effects may show up as \"???\". If that is the case, it's because you haven't yet unlocked what the effect does. For example, if an effect would give +10% Droplet of Healing spell power, but you hadn't unlocked the spell Droplet of Healing, it would appear as \"???\". In addition, sometimes, a pair of Elements may not provide a bonus, or it might give a bonus with negative effects. Optimize your grid so that you avoid these negative effects!\r\n\r\nYou have the ability to set up 8 grids in total. However, only the active grid will provide its bonuses at any time. You can swap between grids quickly either from the Synchro screen, or from the Exploration screen, under the Strategy tab.\r\n\r\nSome grid ideas:\r\n\r\n* You can easily obtain 4 times of a single boost by creating a 2x2 square within the grid where the top-left and bottom-right are the same Element, and the top-right and bottom-left are another Element.\r\n* Fire+Earth is a good combination for melee builds. Water+Air is a good combination for offensive spellcasters.\r\n\r\nWhen fully unlocking Elements, they will become usable in the Synchro grid. Revisit your set-up occasionally to see what new combinations you may find!`),\r\n  });\r\n  Helps.register({\r\n    id: \"retirement\",\r\n    category: HelpCategory.ScreensOverview,\r\n    title: t(\"Retirement\"),\r\n    order: 1200,\r\n    isVisible(state) {\r\n      return isRetirementUnlocked(state);\r\n    },\r\n    description:\r\n      t(`:retirement:**Retirement** is one of the most powerful features in the game. In essence, retiring allows you to restart the game from the beginning, including choosing a new primary Element. However, there are strong benefits to retirement which are detailed below.\r\n    \r\nWhen you retire, the level your primary Element is currently at is permanently recorded. This level is called the **Maximum Primary Level**, or **MPL**. The MPL for an Element can never go down - if you re-select an Element as your primary and then retire again without reaching your previous MPL, you will keep the previous value.\r\n\r\nAfter you retire, you will get a **Global Experience Multiplier**. This multiplier is very important, as it can vastly improve the effectiveness of studying, letting you unlock stronger spells much, much quicker.\r\n\r\nIn addition, there is a similar **Global Production Multiplier** which will affect all resource production you have from Channeling, furniture and other features in the game. This includes Mana, which means after retirement it should be much easier to cast stronger spells or cast spells more often. This also affects loot.\r\n\r\nBoth of the multipliers above are determined based on two factors. The first is the maximum MPL you have ever achieved, regardless of Element. This is the main factor impacting the two multipliers. The second is the sum of all the MPLs you have across all the Elements. This is a secondary factor and it will impact the multipliers, but not as much. Because of this, it's recommended to **pick a new Primary Element when retiring** if possible, to maximize the bonuses.\r\n\r\nOne last benefit from retirement is related to Storylines. Any **benefits acquired from Storylines will persist through retirements**, meaning progress will become faster. In addition, some Storylines only provide their benefit after you retire once - retiring is encouraged in order to get the full benefit in those cases.\r\n\r\nDeciding when to retire is very important. One suggestion is to retire if progress has gotten slower or achieving the next Goal (see: **Home** help section) appears impossible. Another is to retire if the research and production multipliers will substantially increase, or if you complete a Storyline with powerful effects that only appear after retirement. For the first retirement *only*, it is usually a good idea to retire if your new Global Experience Multiplier will be above 2.5x (i.e. do not retire right away after unlocking Retirement).`),\r\n  });\r\n  Helps.register({\r\n    id: \"compendium\",\r\n    category: HelpCategory.ScreensOverview,\r\n    title: t(\"Compendium\"),\r\n    order: 1210,\r\n    isVisible(state) {\r\n      return BookOfMonsters.isCompleted(state);\r\n    },\r\n    description:\r\n      t(`The :compendium:**Compendium** is a resource that you can use to aid your quest. It contains two separate areas: *Items* and *Bestiary*. **Items** is essentially a list of all the items you have ever acquired, together with their basic effect and a small breakdown of where you could acquire them from. **Bestiary**, on the other hand, is a list of all the enemies you have fought throughout your journey. You can find information such as their stats, loot, or encounter rate. In order to see all the information, you may need to defeat an enemy many times, up to 50. The information on the Compendium persists through Retirement.\r\n      \r\n**Tip: If you lose more than twice to a boss, their entry in the Bestiary will include special combat tips from your hired wizard!** If you are stuck on a boss, this information can help you overcome it.`),\r\n  });\r\n\r\n  // Game Features\r\n  Helps.register({\r\n    id: \"channeling\",\r\n    category: HelpCategory.GameFeatures,\r\n    title: t(\"Channeling\"),\r\n    order: 2000,\r\n    isVisible(state) {\r\n      return true;\r\n    },\r\n    description:\r\n      t(`**Channeling** spells are the most basic spell for each Element, and allow you to generate Essences of each Element. Essences are the most basic resources in the game and the building blocks for almost everything else.\r\n      \r\nThe amount of Essences you get from Channeling is calculated based on the amount of :mana: spent on the Channeling spell. Channeling spells, unlike other spells, do not have a fixed :mana: cost. Instead, their cost scales with your Max:mana:, and the Essences you get are proportional to this as well. Because of this scaling, you will be using the same Channeling spells throughout the game.`),\r\n  });\r\n  Helps.register({\r\n    id: \"timePieces\",\r\n    category: HelpCategory.GameFeatures,\r\n    title: t(\"Time Pieces\"),\r\n    order: 2005,\r\n    isVisible(state) {\r\n      return hasWorldFlag(state, \"has_seen_offline_progress\");\r\n    },\r\n    description:\r\n      t(`If you close the game or are away from it for longer than 10 minutes, you will gain a new resource: **:timepiece:Time Pieces**.\r\n      \r\nTime Pieces let you regain some of the lost time from being away from the game. You can use them in several different ways:\r\n\r\n* You can use them to speed up the game by going to the left-side menu and changing the game speed.\r\n* You can use them to instantly warp ahead in time. It is faster than speeding up the game, but uses up more :timepiece:. You can do this at the bottom of the Home screen.\r\n* You can use them to instantly obtain Element exp equivalent to some real world time. You can use this option to (usually) get more exp than warping for the same amount of :timepiece:. You can do this at the bottom of the Study screen.\r\n* If you have unlocked a certain feature, you can also use them to immediately trigger the next random event. This can be useful in some occasions, as it is cheaper than warping. You can do this at the bottom of the Home screen.\r\n\r\nYou will get exactly 1:timepiece: for each second you spend offline, and you can store up to 100K:timepiece:. They can be a very effective way to speed up progress, so don't hesitate to use them!`),\r\n  });\r\n  Helps.register({\r\n    id: \"primaryElement\",\r\n    category: HelpCategory.GameFeatures,\r\n    title: t(\"Primary Element\"),\r\n    order: 2010,\r\n    isVisible(state) {\r\n      return isRetirementUnlocked(state);\r\n    },\r\n    description:\r\n      t(`When you begin a new run, you must select a **Primary Element**. Primary Elements:\r\n      \r\n* Get double experience from spellcasting and Studying,\r\n* Require much less experience to level up,\r\n* Require half the :mana: to cast their spells,\r\n* Are the only elements that matter when calculating your Retirement bonus,\r\n* May have other hidden bonuses later in the game.\r\n\r\nOverall, your Primary Element will most likely be the highest level out of all your Elements, which - together with the lower :mana: cost - means that your playstyle will be influenced by your choice of Primary Element.\r\n\r\nYou can choose a new Primary Element by *retiring* and starting a new run.`),\r\n  });\r\n  Helps.register({\r\n    id: \"classes\",\r\n    category: HelpCategory.GameFeatures,\r\n    title: t(\"Classes\"),\r\n    order: 2020,\r\n    isVisible(state) {\r\n      return CombatClassesStoryline.isCompleted(state);\r\n    },\r\n    description:\r\n      t(`After you begin a new run through Retirement, you will be able to select a **Class**. Classes provide significant bonuses to various aspects of the game that are specific to the run.\r\n      \r\nWhen you begin, you will have access to three classes:\r\n\r\n* The *Battlemage* class gets a bonus to :attack: and :defense:. It makes Exploration and Combat much easier.\r\n* The *Spellslinger* class gets a significant bonus to :mana: production, letting you cast more spells.\r\n* The *Builder* class gets a bonus to :land: obtained, letting you have more furniture at once in your Home.\r\n\r\nYou suspect there might be other classes out there... but you're not sure how to find them.`),\r\n  });\r\n  Helps.register({\r\n    id: \"turningOffFurniture\",\r\n    category: HelpCategory.GameFeatures,\r\n    title: t(\"Turning off Furniture\"),\r\n    order: 2025,\r\n    isVisible(state) {\r\n      return manaSteamers.hasEverBeenPurchased(state);\r\n    },\r\n    description:\r\n      t(`Some Furniture, like Mana Steamers, will consume resources or have some other detrimental effect in order to provide their benefit. To avoid demolishing your Furniture if you have built too many, or if you are facing a temporary situation, you can **turn off** some of them at will.\r\n      \r\nTo turn off Furniture, you can do so from the Home screen. If it can be turned off, expanding the Furniture will let you turn it off and on. If a Furniture can be turned off, it will display its count as *(3/5)* or so, where 3 is the amount that are turned on, and 5 is the total amount that are built.\r\n\r\n*Note that turning off Furniture does not prevent it from using up your :land:Land.* If you are keeping your Furniture off for a long time, consider demolishing it so that you can build something else instead.`),\r\n  });\r\n  Helps.register({\r\n    id: \"partiallyUnlocked\",\r\n    category: HelpCategory.GameFeatures,\r\n    title: t(\"Partially Unlocked Elements\"),\r\n    order: 2030,\r\n    isVisible(state) {\r\n      return isDungeonFloorEverCompleted(state, SewerEntrance);\r\n    },\r\n    description:\r\n      t(`Sometimes, from observation of the world around you, you will figure out that **entirely unknown Elements** exist! However, your intuitive, basic knowledge, without any reference material, makes it much more difficult to use their spells or level them up.\r\n      \r\nPartially unlocked Elements:\r\n\r\n* Will be much harder (although possible) to Channel,\r\n* Will require a lot more Exp to level up,\r\n* Will not persist through Retirement.\r\n\r\nIf you find an Element and partially unlock it, it is usually suggested to get some levels on it, even if it's difficult. It might help you gain an edge and get further in progression...`),\r\n  });\r\n\r\n  // Wizards\r\n\r\n  Helps.register({\r\n    id: \"wizardsOverview\",\r\n    category: HelpCategory.Wizards,\r\n    title: t(\"Overview\"),\r\n    order: 4000,\r\n    isVisible(state) {\r\n      return isAutocastEverUnlocked(state);\r\n    },\r\n    description: t(\r\n      `The :wizards:**Wizards** feature lets you give instructions to your hired Wizards, who will cast spells as you ask - effectively letting you automate a large part of the game!\r\n\r\nIn order to automate the casting of a spell, you will need to assign at least one Wizard to it. The Wizards you assign to the spell will generate :wizardpower:Wizard Power, filling a gauge on the spell's rule - and when it's completely full, the spell will automatically cast!\r\n\r\nYou can assign Wizards to a spell by opening its details in the Spell menu. When a Spell has Wizards assigned to it, it will have a (A) next to its name, signaling that it's being Automated. You can also have Wizards assigned to Transmutation spells from the Transmute screen.\r\n\r\nWhen unlocking the feature, you begin with a single Wizard. However, you can get more by building *Wizard Chambers*, a type of furniture in your :home:Home.`,\r\n    ),\r\n  });\r\n  Helps.register({\r\n    id: \"wizardsLayout\",\r\n    category: HelpCategory.Wizards,\r\n    title: t(\"Screen Layout\"),\r\n    order: 4010,\r\n    isVisible(state) {\r\n      return isAutocastEverUnlocked(state);\r\n    },\r\n    description: t(\r\n      `The Wizards screen is divided into three areas.\r\n\r\nThe main area in the center shows a list of rules: they are the instructions that you are giving to your Wizards. Each rule represents a spell, which could be either a normal or a Transmutation spell. You can assign or remove Wizards from the rules here, and you can reorder them for readability if desired. You can also pause the execution of certain rules temporarily.\r\n\r\nThe area at the top lets you control Wizard Strategies (also called \"Loadouts\"), which allows you to save a strategy and reuse it later. This is useful especially if your :mana: or :wizardpower: is limited and you would like to create set-ups that focus on different areas of the game.\r\n\r\nFinally, the area at the bottom shows summary statistics about your current instructions.`,\r\n    ),\r\n  });\r\n  Helps.register({\r\n    id: \"wizardsCaveats\",\r\n    category: HelpCategory.Wizards,\r\n    title: t(\"Caveats\"),\r\n    order: 4020,\r\n    isVisible(state) {\r\n      return isAutocastEverUnlocked(state);\r\n    },\r\n    description: t(\r\n      `Your Wizards will only cast a spell when the :wizardpower: for a rule is full. However, there will be times where even if it is full, wizards will not cast spells:\r\n      \r\nIf you are unable to cast the spell yourself for any reason (for example, if your :mana: is not enough) the Wizards will not cast the spell.\r\n\r\nHowever, **there is an extra hidden condition** - for many spells, your Wizards will only cast the spell when they deem it \"worthwhile\", often saving you :mana:. For example, Channeling spells will not be cast if your storage for that elemental essence is full. Or spells that grant a buff may not be cast until the buff's remaining time is less than two seconds. Other spells may have other caveats.`,\r\n    ),\r\n  });\r\n  Helps.register({\r\n    id: \"wizardsPermaCast\",\r\n    category: HelpCategory.Wizards,\r\n    title: t(\"Perma-Cast\"),\r\n    order: 4030,\r\n    isVisible(state) {\r\n      return permacastStoryline.isBonusActive(state);\r\n    },\r\n    description: t(\r\n      `The Perma-Cast Storyline reward allows your wizards to *Perma-Cast* a spell. Perma-Casting a spell essentially makes your Wizards cast the spell again, indefinitely, as fast as possible or as soon as it's estimated to be needed again. Instead of draining your :mana: all at once at the time the spell is cast, your :mana: will instead be drained over time.\r\n      \r\nYou can set a spell to Perma-Cast from each individual spell's details. Not every spell is available for Perma-Cast: usually, they need to either have a cooldown or grant a buff or a debuff to be Perma-Cast eligible.\r\n\r\nPerma-Cast's ease of setup is one of its biggest advantages, and is especially good for buffs that you always want to have on, such as Enchant Mana Spouts. When a buff or debuff is caused by a spell you have on Perma-Cast, it will be displayed with a (P) on any lists of buffs or debuffs, and it will show towards the bottom of the list so that you don't need to worry about its presence.\r\n\r\nAnother, more subtle advantage of Perma-Cast is that Wizards assigned to Perma-Cast spells will pool together their :wizardpower:, so you will likely need less Wizards than if you had individual rules for all of them.\r\n\r\nThe Perma-Cast rule will group together all spells you have decided to Perma-Cast, and it will always display at the top in the Wizards screen. Wizard Strategies will also include any spells you may have under your Perma-Cast rule.\r\n\r\nIf your :mana: or :wizardpower: generation is not large enough to sustain all your Perma-Cast spells, your Wizards will prioritize those that are \"cheaper\". However, despite this, it can still cause problems if it isn't resolved. If this is happening, your Wizards menu icon will change, letting you know that there is an unsolved issue.`,\r\n    ),\r\n  });\r\n\r\n  // Exploration\r\n\r\n  Helps.register({\r\n    id: \"explorationOverview\",\r\n    category: HelpCategory.Exploration,\r\n    title: t(\"Overview\"),\r\n    order: 5000,\r\n    isVisible(state) {\r\n      return isExplorationEverUnlocked(state);\r\n    },\r\n    description: t(\r\n      `Your pursuit for the Philosopher's Stone will take you through many dangerous places. What will you find?\r\n      \r\n:exploration:**Exploration** is a key feature of the game and easily the most complex. When you explore, you will find enemies that you will need to engage in combat with (and defeat). Defeating enough enemies on an area will let you fight against the boss of that area. *Challenging ever-more-difficult bosses and defeating them is the main way to make progress in Magic Research 2.*\r\n\r\nFirst, you need to select an area to explore. At the beginning, you will only have a single area unlocked, but more will show up as you make progress in the game.\r\n\r\nAfter you select an area, the screen will change. You will explore for a short period of time, and then you will engage in combat against an enemy. In combat, both you and your enemy attack automatically, dealing damage to each other until a combatant's :hp:HP drops to zero. When that happens, the combatant is defeated.\r\n\r\nIf you are victorious, you will immediately start exploring again. If, instead, you are defeated, you will first wait for your :hp: to be fully recovered before exploring again. **There is no penalty for losing in combat, except for the time it takes to heal back to full.**`,\r\n    ),\r\n  });\r\n  Helps.register({\r\n    id: \"explorationUI\",\r\n    category: HelpCategory.Exploration,\r\n    title: t(\"Exploration UI\"),\r\n    order: 5010,\r\n    isVisible(state) {\r\n      return isExplorationEverUnlocked(state);\r\n    },\r\n    description: t(\r\n      `The Exploration screen is divided into roughly two parts.\r\n      \r\nIn the top part, you will be able to see the enemy you are currently fighting, their :hp: and their various attacks. If they are affected by a buff or debuff, you will also see it here. Slightly below, you will also see your own :hp: and your automatic attack progress.\r\n\r\nIn the bottom part, you will see the Exploration Log, a short description that keeps track of the enemies that you have defeated, as well as the loot you have obtained.\r\n\r\nThere are also four buttons in the bottom, which let you interact with combat in various ways:\r\n\r\n* The \"Items\" tab allows you to access your pouch. You can also let the game automatically use most of your pouch items for you.\r\n* The \"Spells\" tab allows you to cast a subset of spells that is particularly useful for Exploration. You can also add spells to your Quickbar by expanding them in this tab.\r\n* The \"Strategy\" tab allows you to change your Wizard strategy (see \"Screen Layout\" under the \"Wizards\" category), switch between equipment sets, or control some aspects of how Exploration works, such as telling the game to wait until you fully recover before you Explore again.\r\n* Finally, the \"Quickbar\" tab is the best way to react to a heated battle. You can set key spells to your Quickbar and use them without having to look through the menus, which is important in difficult battles. The tab also shows a short list of buffs and debuffs on the right.`,\r\n    ),\r\n  });\r\n  Helps.register({\r\n    id: \"explorationPouch\",\r\n    category: HelpCategory.Exploration,\r\n    title: t(\"Pouch Items\"),\r\n    order: 5020,\r\n    isVisible(state) {\r\n      return isExplorationEverUnlocked(state);\r\n    },\r\n    description: t(\r\n      `Pouch Items are an important category of *Equipment*. They are usually potions or fruit that recover your :hp: or grant you a buff for some time. You can equip pouch items from the Inventory screen.\r\n\r\n**Pouch Items are not consumable, and they will not disappear when used.** They are considered pieces of equipment. You start the game with four pouch item slots, and you can have multiples of the same item in those slots. For example, you can fill your pouch with four :cherry:Cherry.\r\n      \r\nPouch items can be used only during combat, and each one will have a certain amount of uses. Entering a new combat will refresh the pouch items and restore their uses.\r\n\r\nMost pouch items will be used automatically during combat unless you disable this behavior in the \"Items\" tab in Exploration. Healing items will typically be used if your :hp: is dangerously low, or if you would obtain their full effect. Buffing items will typically be used whenever the buff is not present, which is usually at the beginning of a battle.\r\n\r\nPouch items are key to succeeding in Exploration, and may be your main source of healing during combat for a good portion of the game. Think very carefully about what pouch items to equip before entering combat: you will need to wait until the next combat to use it if you equip a new pouch item while you are already fighting.`,\r\n    ),\r\n  });\r\n  Helps.register({\r\n    id: \"explorationBasicStats\",\r\n    category: HelpCategory.Exploration,\r\n    title: t(\"Basic Combat Stats\"),\r\n    order: 5030,\r\n    isVisible(state) {\r\n      return isExplorationEverUnlocked(state);\r\n    },\r\n    description: t(\r\n      `There are a handful of stats that are specific to Exploration. They are:\r\n      \r\n:hp:HP is short for \"Health Points\". It represents a combatant's life. If it becomes 0, the combatant will be defeated. Your :hp: slowly regenerates over time. The higher your Max:hp:, the faster it will regenerate. Additionally, your :hp: will regenerate much faster when outside of combat.\r\n\r\n:attack:Attack is the basic damage you would deal with your automatic attack. The damage you actually deal to an enemy will usually be lower than this, as it is reduced by their :defense:Defense stat.\r\n\r\n:attackDelay:Attack Delay is the amount of time between automatic attacks. The lower it is, the better.\r\n\r\n:defense:Defense reduces the damage you take from enemy attacks. Generally, two points of :defense: will reduce damage by 1. However, if your :defense: is much higher than the incoming :attack:, the reduction will slowly become less. You can usually reduce the damage from an attack to 1 if your :defense: is about *four times* the incoming :attack:.\r\n\r\nHere is an example of how :defense: reduces the damage from a 50:attack::\r\n\r\n* With 0:defense:: it would deal 50 damage\r\n* With 20:defense:: it would deal 40 damage\r\n* With 50:defense:: it would deal 25 damage\r\n* With 100:defense:: it would deal 9 damage\r\n* With 150:defense:: it would deal 4 damage\r\n* With 200:defense:: it would deal 1 damage`,\r\n    ),\r\n  });\r\n  Helps.register({\r\n    id: \"explorationDodgeAccuracy\",\r\n    category: HelpCategory.Exploration,\r\n    title: t(\"Dodge and Accuracy\"),\r\n    order: 5040,\r\n    isVisible(state) {\r\n      return hasEverHadFlag(state, Flag.SewersUnlocked);\r\n    },\r\n    description: t(\r\n      `As you make your way into the Sewers, two more stats will become important in Exploration. They are:\r\n      \r\n:dodge:Dodge allows you (or an enemy) to evade attacks entirely. :dodge: starts at 100, and can be increased or decreased by many things, including equipment and buffs. The higher your :dodge: is, the bigger the likelihood you will evade an attack.\r\n\r\n:accuracy:Accuracy, on the other hand, determines the likelihood you will be able to hit an enemy. Like :dodge:, it starts at 100, and can be increased or decreased by many things. If your :accuracy: is higher than or equal to the enemy's :dodge:, your attacks will never miss.\r\n\r\nIf :accuracy: and :dodge: are not displayed in a list of stats, they are implied to be exactly 100.\r\n\r\nThe hit rate of an attack depends on the proportion between the attacker's :accuracy: and the defender's :dodge:. Here's an example (assuming 100:accuracy:, the default):\r\n\r\n* With 100:dodge: or less: it would always hit\r\n* With 120:dodge:: it would have a 91% chance of hitting\r\n* With 150:dodge:: it would have a 74% chance of hitting\r\n* With 200:dodge:: it would have a 50% chance of hitting\r\n* With 300:dodge:: it would have a 18% chance of hitting\r\n* With 400:dodge:: it would have a 0% chance of hitting\r\n\r\n**Note that :dodge: and :accuracy: also affect spells that deal damage!**`,\r\n    ),\r\n  });\r\n}\r\n","import { valuesOf } from \"../../utils/CoreUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { getBuildingAmount, getUsedLand } from \"../buildings/Buildings\";\r\nimport { essenceCatalyst } from \"../buildings/catalysts/EssenceCatalyst\";\r\nimport { ManaSpout } from \"../buildings/mana/ManaSpout\";\r\nimport { ManaShard } from \"../buildings/storages/ManaShard\";\r\nimport { isDungeonFloorCompletedThisRun } from \"../exploration/dungeons/Dungeons\";\r\nimport SewerEntrance from \"../exploration/dungeons/sewers/SewerEntrance\";\r\nimport SewerHazardousSector from \"../exploration/dungeons/sewers/SewerHazardousSector\";\r\nimport SewerHideout from \"../exploration/dungeons/sewers/SewerHideout\";\r\nimport { FLOOR_FOR_ELEMENT } from \"../exploration/dungeons/training/TrainingTowers\";\r\nimport {\r\n  getSuccessfulExplorationsForFloor,\r\n  isExplorationUnlocked,\r\n} from \"../exploration/Exploration\";\r\nimport { Flag } from \"../Flag\";\r\nimport { hasFlag } from \"../Flags\";\r\nimport { getResourceAmount, getResourceCap, Resource } from \"../Resources\";\r\nimport { RESOURCE_FOR_ELEMENT } from \"../spells/channeling/ChannelingResources\";\r\nimport {\r\n  getElementExp,\r\n  getPrimaryElementMaxLevelForRun,\r\n  getTotalExpRequiredForLevel,\r\n  SpellElement,\r\n} from \"../spells/Elements\";\r\nimport { clearAllHints, pushHint } from \"./Hints\";\r\n\r\nexport function loadHintsDemo() {\r\n  clearAllHints();\r\n  // 1\r\n  pushHint({\r\n    description: t(\"Gather more Mana\"),\r\n    isCompleted: (state) => hasFlag(state, Flag.ChannelingUnlocked),\r\n    progress: (state) => getResourceAmount(state, Resource.Mana) / 10.0,\r\n  });\r\n  pushHint({\r\n    description: t(\"Channel Water and Air Essence\"),\r\n    isCompleted: (state) => hasFlag(state, Flag.ManaSpoutsUnlocked),\r\n  });\r\n  pushHint({\r\n    description: t(\"Build a Mana Spout\"),\r\n    isCompleted: (state) =>\r\n      getBuildingAmount(state, ManaSpout) > 0 ||\r\n      hasFlag(state, Flag.ManaShardsUnlocked),\r\n  });\r\n  pushHint({\r\n    description: t(\"Channel Earth Essence\"),\r\n    isCompleted: (state) => hasFlag(state, Flag.ManaShardsUnlocked),\r\n    progress: (state) => getResourceAmount(state, Resource.EarthEssence) / 30.0,\r\n  });\r\n  pushHint({\r\n    description: t(\"Build a Mana Shard\"),\r\n    isCompleted: (state) =>\r\n      getBuildingAmount(state, ManaShard) > 0 ||\r\n      hasFlag(state, Flag.StoragesUnlocked),\r\n  });\r\n  pushHint({\r\n    description: t(\"Fill up your Essence storage\"),\r\n    isCompleted: (state) => hasFlag(state, Flag.StoragesUnlocked),\r\n    progress: (state) =>\r\n      Math.max(\r\n        ...valuesOf(RESOURCE_FOR_ELEMENT).map((resource) =>\r\n          getResourceAmount(state, resource),\r\n        ),\r\n      ) / 100.0,\r\n  });\r\n  pushHint({\r\n    description: t(\"Build an Essence Storage\"),\r\n    isCompleted: (state) => getResourceCap(state, Resource.FireEssence) >= 200,\r\n  });\r\n  pushHint({\r\n    description: t(\"Channel Fire Essence\"),\r\n    isCompleted: (state) => hasFlag(state, Flag.CatalystsUnlocked),\r\n    progress: (state) => getResourceAmount(state, Resource.FireEssence) / 110.0,\r\n  });\r\n  pushHint({\r\n    description: t(\"Build an Essence Catalyst\"),\r\n    isCompleted: (state) =>\r\n      getBuildingAmount(state, essenceCatalyst) > 0 ||\r\n      hasFlag(state, Flag.StudyUnlocked),\r\n  });\r\n  pushHint({\r\n    description: t(\r\n      \"Study your primary element and level it up to Lv2, while continuing to build your home\",\r\n    ),\r\n    isCompleted: (state) => getPrimaryElementMaxLevelForRun(state) >= 2,\r\n    progress: (state) =>\r\n      getElementExp(state, state.run.primaryElement ?? SpellElement.Fire) /\r\n      getTotalExpRequiredForLevel(\r\n        state,\r\n        2,\r\n        state.run.primaryElement ?? SpellElement.Fire,\r\n      ),\r\n  });\r\n  pushHint({\r\n    description: t(\"Transmute items, sell them and accumulate Coins\"),\r\n    isCompleted: (state) => hasFlag(state, Flag.WizardsUnlocked),\r\n    progress: (state) => getResourceAmount(state, Resource.Coins) / 500.0,\r\n  });\r\n  pushHint({\r\n    description: t(\r\n      \"Continue transmuting and selling items and accumulate at least 1000 Coins\",\r\n    ),\r\n    isCompleted: (state) => hasFlag(state, Flag.SaleStallsUnlocked),\r\n    progress: (state) => getResourceAmount(state, Resource.Coins) / 1000.0,\r\n  });\r\n  pushHint({\r\n    description: t(\r\n      \"Continue transmuting and selling items and accumulate at least 1500 Coins\",\r\n    ),\r\n    isCompleted: (state) => hasFlag(state, Flag.ResearchersUnlocked),\r\n    progress: (state) => getResourceAmount(state, Resource.Coins) / 1500.0,\r\n  });\r\n  pushHint({\r\n    description: t(\"Continue building furniture and using up land\"),\r\n    isCompleted: (state) => hasFlag(state, Flag.LandPurchaseUnlocked),\r\n    progress: (state) => getUsedLand(state) / 120.0,\r\n  });\r\n  pushHint({\r\n    description: t(\"Level up your primary element to Lv6\"),\r\n    isCompleted: (state) => isExplorationUnlocked(state),\r\n    progress: (state) =>\r\n      getElementExp(state, state.run.primaryElement ?? SpellElement.Fire) /\r\n      getTotalExpRequiredForLevel(\r\n        state,\r\n        6,\r\n        state.run.primaryElement ?? SpellElement.Fire,\r\n      ),\r\n  });\r\n  pushHint({\r\n    description: t(\"Explore the Tower of Training of your primary element\"),\r\n    isCompleted: (state) => {\r\n      const floor = FLOOR_FOR_ELEMENT[state.run.primaryElement];\r\n      return floor == null || floor.canFightBoss(state);\r\n    },\r\n    progress: (state) => {\r\n      const floor = FLOOR_FOR_ELEMENT[state.run.primaryElement];\r\n      if (floor == null) {\r\n        return 1.0;\r\n      }\r\n      return (\r\n        1.0 -\r\n        (floor.getExplorationSuccessesForBoss(state) -\r\n          getSuccessfulExplorationsForFloor(state, floor.getId())) /\r\n          floor.getExplorationSuccessesForBoss(state)\r\n      );\r\n    },\r\n  });\r\n  pushHint({\r\n    description: t(\r\n      \"Defeat the boss of the Tower of Training of your primary element\",\r\n    ),\r\n    isCompleted: (state) => {\r\n      if (hasFlag(state, Flag.EnhancementsUnlocked)) {\r\n        return true;\r\n      }\r\n      const floor = FLOOR_FOR_ELEMENT[state.run.primaryElement];\r\n      return floor == null || isDungeonFloorCompletedThisRun(state, floor);\r\n    },\r\n  });\r\n  pushHint({\r\n    description: t(\r\n      \"Explore and defeat the boss of all of the Towers of Training\",\r\n    ),\r\n    isCompleted: (state) => {\r\n      if (hasFlag(state, Flag.EnhancementsUnlocked)) {\r\n        return true;\r\n      }\r\n      for (let floor of valuesOf(FLOOR_FOR_ELEMENT)) {\r\n        if (!isDungeonFloorCompletedThisRun(state, floor)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n  });\r\n  pushHint({\r\n    description: t(\r\n      'Complete the \"Final Exam\" event by defeating the Head Instructor',\r\n    ),\r\n    isCompleted: (state) => hasFlag(state, Flag.EnhancementsUnlocked),\r\n  });\r\n  pushHint({\r\n    description: t(\"Explore the Sewer Entrance\"),\r\n    isCompleted: (state) => SewerEntrance.canFightBoss(state),\r\n  });\r\n  pushHint({\r\n    description: t(\"Defeat the boss of the Sewer Entrance\"),\r\n    isCompleted: (state) =>\r\n      isDungeonFloorCompletedThisRun(state, SewerEntrance),\r\n  });\r\n  pushHint({\r\n    description: t(\"Explore the Hazardous Sector\"),\r\n    isCompleted: (state) => SewerHazardousSector.canFightBoss(state),\r\n  });\r\n  pushHint({\r\n    description: t(\"Defeat the boss of the Hazardous Sector\"),\r\n    isCompleted: (state) =>\r\n      isDungeonFloorCompletedThisRun(state, SewerHazardousSector),\r\n  });\r\n  pushHint({\r\n    description: t(\"Explore the Sewer Hideout\"),\r\n    isCompleted: (state) => SewerHideout.canFightBoss(state),\r\n  });\r\n  pushHint({\r\n    description: t(\"Defeat the boss of the Sewer Hideout\"),\r\n    isCompleted: (state) => hasFlag(state, Flag.VastDesertUnlocked),\r\n  });\r\n  pushHint({\r\n    description: t(\"Enjoy your time in the World\"),\r\n    isCompleted: (state) => false,\r\n  });\r\n}\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass CloakOfDarkness extends EquippableItem {\r\n  getId(): string {\r\n    return \"cloakOfDarkness\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Accessory;\r\n  }\r\n  getPicture() {\r\n    return require(\"./cloakOfDarkness.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Cloak of Darkness\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\"A cloak that is abnormally dark. Makes the wearer hard to spot.\");\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 1800;\r\n  }\r\n\r\n  getDefenseBonusBase(params: ItemParams): number {\r\n    return 4;\r\n  }\r\n\r\n  getPlayerDodgeBonusBase(params: ItemParams): number {\r\n    return 25;\r\n  }\r\n}\r\n\r\nexport const cloakOfDarkness = new CloakOfDarkness();\r\n\r\nclass TransmuteCloakOfDarkness extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return cloakOfDarkness;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Air: 15,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 400,\r\n        AirEssence: 15000,\r\n      },\r\n      items: {\r\n        elementalShardAir: 30,\r\n        cotton: 4,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Air;\r\n  }\r\n}\r\n\r\nexport const transmuteCloakOfDarkness = new TransmuteCloakOfDarkness();\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass CopperShield extends EquippableItem {\r\n  getId(): string {\r\n    return \"copperShield\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Accessory;\r\n  }\r\n  getPicture() {\r\n    return require(\"./copperShield.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Copper Shield\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\"An effective shield that utilizes Copper in its construction.\");\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 2500;\r\n  }\r\n\r\n  getDefenseBonusBase(params: ItemParams): number {\r\n    return 15;\r\n  }\r\n}\r\n\r\nexport const copperShield = new CopperShield();\r\n\r\nclass TransmuteCopperShield extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return copperShield;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Earth: 17,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 400,\r\n        EarthEssence: 20000,\r\n      },\r\n      items: {\r\n        elementalShardEarth: 10,\r\n        copperIngot: 6,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Earth;\r\n  }\r\n}\r\n\r\nexport const transmuteCopperShield = new TransmuteCopperShield();\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass SmallShield extends EquippableItem {\r\n  getId(): string {\r\n    return \"smallShield\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Accessory;\r\n  }\r\n  getPicture() {\r\n    return require(\"./smallShield.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Small Shield\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\"A defensive accessory. Provides some protection from damage.\");\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 450;\r\n  }\r\n\r\n  getDefenseBonusBase(params: ItemParams): number {\r\n    return 7;\r\n  }\r\n}\r\n\r\nexport const smallShield = new SmallShield();\r\n\r\nclass TransmuteSmallShield extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return smallShield;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Earth: 8,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 200,\r\n        AirEssence: 1500,\r\n      },\r\n      items: {\r\n        elementalShardEarth: 8,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Earth;\r\n  }\r\n}\r\n\r\nexport const transmuteSmallShield = new TransmuteSmallShield();\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { AttackTarget } from \"../../../../exploration/AttackTarget\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { registerTemporaryEffectListener } from \"../../../../temporaryeffects/TemporaryEffects\";\r\nimport { getSecondsPlayed } from \"../../../../timetick/TotalTimePlayed\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass StoneEgg extends EquippableItem {\r\n  getId(): string {\r\n    return \"stoneEgg\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Accessory;\r\n  }\r\n  getPicture() {\r\n    return require(\"./stoneEgg.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Stone Egg\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"A large, heavy egg-shaped rock. The holder is not going anywhere...\",\r\n    );\r\n  }\r\n  getEffectExtra(state: GameState, params: ItemParams): string {\r\n    return t('Immunity to \"Airborne\"');\r\n  }\r\n  getDefenseBonusBase(params: ItemParams): number {\r\n    return 10;\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 1200;\r\n  }\r\n}\r\n\r\nexport const stoneEgg = new StoneEgg();\r\n\r\nregisterTemporaryEffectListener(stoneEgg.getId(), (state, temporaryEffect) => {\r\n  if (\r\n    !stoneEgg.isEquippedWithAnyParams(state) ||\r\n    temporaryEffect.target != AttackTarget.Player\r\n  ) {\r\n    return temporaryEffect;\r\n  }\r\n  if (temporaryEffect.id != \"airborne\") {\r\n    return temporaryEffect;\r\n  }\r\n  // Prevent!\r\n  temporaryEffect.endTime = getSecondsPlayed(state) - 1.0;\r\n  return temporaryEffect;\r\n});\r\n\r\nclass TransmuteStoneEgg extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return stoneEgg;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Earth: 22,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 500,\r\n        EarthEssence: 28000,\r\n      },\r\n      items: {\r\n        elementalShardEarth: 50,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Earth;\r\n  }\r\n}\r\n\r\nexport const transmuteStoneEgg = new TransmuteStoneEgg();\r\n","import { formatMultiplier } from \"../../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../../utils/I18n\";\r\nimport { ActionEffect } from \"../../../../action/Action\";\r\nimport { AttackTarget } from \"../../../../exploration/AttackTarget\";\r\nimport { CombatStat } from \"../../../../exploration/CombatStats\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../../../transformation/Transformation\";\r\nimport { TransformationValueType } from \"../../../../transformation/TransformationTags\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass CollarOfPower extends EquippableItem {\r\n  getId(): string {\r\n    return \"collarOfPower\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Accessory;\r\n  }\r\n  getPicture() {\r\n    return require(\"./collarOfPower.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Collar of Power\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\"A peculiar item. Makes the wearer stronger, but at a cost...\");\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 2000;\r\n  }\r\n\r\n  protected getBaseExtraItemEffects(\r\n    params: ItemParams,\r\n  ): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 0.2,\r\n        valueType: TransformationValueType.Percent,\r\n      },\r\n    };\r\n  }\r\n\r\n  getEffectExtra(state: GameState, params: ItemParams): string {\r\n    const effects = this.getItemEffects(state, params);\r\n    const explanations = this.getItemEffectExplanations(state, params);\r\n    return t(\"^{{magnitude}}^<{{explanation}}>:attack:; -20%:defense:\", {\r\n      magnitude: formatMultiplier(1.0 + effects.magnitude),\r\n      explanation: explanations.magnitude,\r\n    });\r\n  }\r\n}\r\n\r\nexport const collarOfPower = new CollarOfPower();\r\n\r\nclass TransmuteCollarOfPower extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return collarOfPower;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Fire: 20,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 500,\r\n      },\r\n      items: {\r\n        elementalShardFire: 60,\r\n        copperIngot: 5,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Fire;\r\n  }\r\n}\r\n\r\nregisterTransformation(\r\n  [[AttackTarget.Player, CombatStat.Attack]],\r\n  collarOfPower.getId() + \"attack\",\r\n  collarOfPower.getName(collarOfPower.getDefaultParams()),\r\n  TransformationType.Multiplier,\r\n  (state, params) => {\r\n    if (collarOfPower.isEquippedWithAnyParams(state)) {\r\n      return (\r\n        collarOfPower.getEquippedItemEffect(state, \"magnitude\").magnitude + 1.0\r\n      );\r\n    }\r\n    return 1.0;\r\n  },\r\n);\r\n\r\nregisterTransformation(\r\n  [[AttackTarget.Player, CombatStat.Defense]],\r\n  collarOfPower.getId(),\r\n  collarOfPower.getName(collarOfPower.getDefaultParams()),\r\n  TransformationType.Multiplier,\r\n  (state, params) => {\r\n    if (collarOfPower.isEquippedWithAnyParams(state)) {\r\n      return 0.8;\r\n    }\r\n    return 1.0;\r\n  },\r\n);\r\n\r\nexport const transmuteCollarOfPower = new TransmuteCollarOfPower();\r\n","import { formatNumber } from \"../../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../../utils/I18n\";\r\nimport { ActionEffect } from \"../../../../action/Action\";\r\nimport { AttackTarget } from \"../../../../exploration/AttackTarget\";\r\nimport { CombatActionResultListeners } from \"../../../../exploration/ExplorationActionResult\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { poison } from \"../../../../temporaryeffects/Poison\";\r\nimport { grantTemporaryEffect } from \"../../../../temporaryeffects/TemporaryEffects\";\r\nimport { TransformationTags } from \"../../../../transformation/TransformationTags\";\r\nimport { EquipmentSlot, getEquippedItem } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass AssassinsBaselard extends EquippableItem {\r\n  getId(): string {\r\n    return \"assassinsBaselard\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Hand;\r\n  }\r\n  getPicture() {\r\n    return require(\"./assassinsBaselard.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Assassin's Baselard\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"A sophisticated small weapon used by covert rogues. Has a potent poisoning effect.\",\r\n    );\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 4000;\r\n  }\r\n\r\n  poisonTags = [TransformationTags.TemporaryEffectMagnitude, poison.getId()];\r\n  poisonDurationTags = [\r\n    TransformationTags.TemporaryEffectDuration,\r\n    poison.getId(),\r\n  ];\r\n  protected getBaseExtraItemEffects(\r\n    params: ItemParams,\r\n  ): Record<string, ActionEffect> {\r\n    return {\r\n      poisonStrength: {\r\n        value: 15,\r\n        tags: this.poisonTags,\r\n        unit: \":hp:/sec\",\r\n      },\r\n      poisonDuration: {\r\n        value: 1,\r\n        tags: this.poisonDurationTags,\r\n        unit: \" sec\",\r\n      },\r\n    };\r\n  }\r\n\r\n  getPoisonStrength(state: GameState, params: ItemParams): number {\r\n    return this.getItemEffects(state, params, \"poisonStrength\").poisonStrength;\r\n  }\r\n\r\n  getEffectExtra(state: GameState, params: ItemParams): string {\r\n    const poisonStrength = this.getPoisonStrength(state, params);\r\n    const poisonDuration = this.getItemEffects(\r\n      state,\r\n      params,\r\n      \"poisonDuration\",\r\n    ).poisonDuration;\r\n    return t(\r\n      \"On hit, applies ^-{{poisonStrength}}^<{{strengthExplanation}}>:hp:/sec Poison for ^{{poisonDuration}}^<{{durationExplanation}}> sec\",\r\n      {\r\n        poisonStrength: formatNumber(poisonStrength),\r\n        strengthExplanation: this.getItemEffectExplanations(\r\n          state,\r\n          params,\r\n          \"poisonStrength\",\r\n        ).poisonStrength,\r\n        poisonDuration: formatNumber(poisonDuration, { showDecimals: true }),\r\n        durationExplanation: this.getItemEffectExplanations(\r\n          state,\r\n          params,\r\n          \"poisonDuration\",\r\n        ).poisonDuration,\r\n      },\r\n    );\r\n  }\r\n\r\n  getAttackBonusBase(params: ItemParams): number {\r\n    return 55;\r\n  }\r\n\r\n  getAttackDelayBonusRatioBase(params: ItemParams): number {\r\n    return -0.15;\r\n  }\r\n}\r\n\r\nexport const assassinsBaselard = new AssassinsBaselard();\r\n\r\nCombatActionResultListeners.register((state, result) => {\r\n  if (assassinsBaselard.isEquippedWithAnyParams(state)) {\r\n    if (\r\n      result.source == AttackTarget.Player &&\r\n      result.tags.includes(TransformationTags.AutoAttack) &&\r\n      result.isHit\r\n    ) {\r\n      const effects = assassinsBaselard.getItemEffects(\r\n        state,\r\n        getEquippedItem(state, EquipmentSlot.Hand).params,\r\n      );\r\n      state = grantTemporaryEffect(poison.getId(), effects.poisonDuration, {\r\n        mode: \"add\",\r\n        target: result.target,\r\n        params: {\r\n          magnitude: assassinsBaselard.getPoisonStrength(\r\n            state,\r\n            getEquippedItem(state, EquipmentSlot.Hand).params,\r\n          ),\r\n        },\r\n      })(state);\r\n    }\r\n  }\r\n  return state;\r\n});\r\n\r\nclass TransmuteAssassinsBaselard extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return assassinsBaselard;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Poison: 14,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 400,\r\n        PoisonEssence: 8000,\r\n      },\r\n      items: {\r\n        elementalShardPoison: 15,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Poison;\r\n  }\r\n}\r\n\r\nexport const transmuteAssassinsBaselard = new TransmuteAssassinsBaselard();\r\n","import { formatMultiplier } from \"../../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../../utils/I18n\";\r\nimport { ActionEffect } from \"../../../../action/Action\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../../../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../../../transformation/TransformationTags\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\nimport { assassinsBaselard } from \"../../hand/poison/AssassinsBaselard\";\r\n\r\nclass AssassinsCloak extends EquippableItem {\r\n  getId(): string {\r\n    return \"assassinsCloak\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Accessory;\r\n  }\r\n  getPicture() {\r\n    return require(\"./assassinsCloak.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Assassin's Cloak\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\"A lightweight cloak that empowers an assassin's capabilities.\");\r\n  }\r\n  getDefenseBonusBase(params: ItemParams): number {\r\n    return 2;\r\n  }\r\n\r\n  protected getBaseExtraItemEffects(\r\n    params: ItemParams,\r\n  ): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 4.0,\r\n        valueType: TransformationValueType.Percent,\r\n      },\r\n    };\r\n  }\r\n\r\n  getEffectExtra(state: GameState, params: ItemParams): string {\r\n    const effects = this.getItemEffects(state, params);\r\n    const explanations = this.getItemEffectExplanations(state, params);\r\n    return t(\r\n      \"^{{magnitude}}^<{{explanation}}> Assassin's Baselard poison strength\",\r\n      {\r\n        magnitude: formatMultiplier(1.0 + effects.magnitude),\r\n        explanation: explanations.magnitude,\r\n      },\r\n    );\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 6500;\r\n  }\r\n}\r\n\r\nexport const assassinsCloak = new AssassinsCloak();\r\n\r\nregisterTransformation(\r\n  [[assassinsBaselard.getId(), TransformationTags.TemporaryEffectMagnitude]],\r\n  assassinsCloak.getId(),\r\n  assassinsCloak.getBaseName(assassinsCloak.getDefaultParams()),\r\n  TransformationType.Multiplier,\r\n  (state) =>\r\n    assassinsCloak.isEquippedWithAnyParams(state)\r\n      ? assassinsCloak.getEquippedItemEffect(state, \"magnitude\").magnitude + 1.0\r\n      : 1.0,\r\n);\r\n\r\nclass TransmuteAssassinsCloak extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return assassinsCloak;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Poison: 19,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 400,\r\n        PoisonEssence: 15000,\r\n      },\r\n      items: {\r\n        elementalShardPoison: 20,\r\n        cotton: 4,\r\n        venomPowder: 4,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Poison;\r\n  }\r\n}\r\n\r\nexport const transmuteAssassinsCloak = new TransmuteAssassinsCloak();\r\n","import { formatMultiplier } from \"../../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../../utils/I18n\";\r\nimport { ActionEffect } from \"../../../../action/Action\";\r\nimport { AttackTarget } from \"../../../../exploration/AttackTarget\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { poison } from \"../../../../temporaryeffects/Poison\";\r\nimport { registerTemporaryEffectListener } from \"../../../../temporaryeffects/TemporaryEffects\";\r\nimport { TransformationValueType } from \"../../../../transformation/TransformationTags\";\r\nimport { EquipmentSlot, getEquippedItem } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass CharmOfPoisonResistance extends EquippableItem {\r\n  getId(): string {\r\n    return \"charmOfPoisonResistance\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Accessory;\r\n  }\r\n  getPicture() {\r\n    return require(\"./charmOfPoisonResistance.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Charm of Poison Resistance\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"A necklace enchanted with protective magic. Effective against poison.\",\r\n    );\r\n  }\r\n  getDefenseBonusBase(params: ItemParams): number {\r\n    return 1;\r\n  }\r\n  protected getBaseExtraItemEffects(\r\n    params: ItemParams,\r\n  ): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 3.0,\r\n        valueType: TransformationValueType.Divisor,\r\n      },\r\n    };\r\n  }\r\n  getEffectExtra(state: GameState, params: ItemParams): string {\r\n    const effects = this.getItemEffects(state, params);\r\n    const explanations = this.getItemEffectExplanations(state, params);\r\n    return t(\"^{{magnitude}}^<{{explanation}}> damage received from Poison\", {\r\n      magnitude: formatMultiplier(1.0 / (1.0 + effects.magnitude)),\r\n      explanation: explanations.magnitude,\r\n    });\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 700;\r\n  }\r\n}\r\n\r\nexport const charmOfPoisonResistance = new CharmOfPoisonResistance();\r\n\r\nregisterTemporaryEffectListener(\r\n  charmOfPoisonResistance.getId(),\r\n  (state, temporaryEffectData) => {\r\n    if (charmOfPoisonResistance.isEquippedWithAnyParams(state)) {\r\n      if (\r\n        temporaryEffectData.id == poison.getId() &&\r\n        temporaryEffectData.target == AttackTarget.Player\r\n      ) {\r\n        const multiplier =\r\n          1.0 /\r\n          (1.0 +\r\n            charmOfPoisonResistance.getItemEffects(\r\n              state,\r\n              getEquippedItem(state, EquipmentSlot.Accessory),\r\n            ).magnitude);\r\n        temporaryEffectData.params.magnitude =\r\n          temporaryEffectData.params.magnitude * multiplier;\r\n      }\r\n    }\r\n    return temporaryEffectData;\r\n  },\r\n);\r\n\r\nclass TransmuteCharmOfPoisonResistance extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return charmOfPoisonResistance;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Poison: 4,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 200,\r\n        PoisonEssence: 2000,\r\n      },\r\n      items: {\r\n        elementalShardPoison: 5,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Poison;\r\n  }\r\n}\r\n\r\nexport const transmuteCharmOfPoisonResistance =\r\n  new TransmuteCharmOfPoisonResistance();\r\n","import { formatMultiplier } from \"../../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../../utils/I18n\";\r\nimport { ActionEffect } from \"../../../../action/Action\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../../../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../../../transformation/TransformationTags\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass SoulStone extends EquippableItem {\r\n  getId(): string {\r\n    return \"soulStone\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Accessory;\r\n  }\r\n  getPicture() {\r\n    return require(\"./soulStone.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Soul Stone\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"An enchanted trinket that increases the effectivity from which you can get the essence of enemies.\",\r\n    );\r\n  }\r\n  protected getBaseExtraItemEffects(\r\n    params: ItemParams,\r\n  ): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 0.5,\r\n        valueType: TransformationValueType.Percent,\r\n      },\r\n    };\r\n  }\r\n\r\n  getEffectExtra(state: GameState, params: ItemParams): string {\r\n    const effects = this.getItemEffects(state, params);\r\n    const explanations = this.getItemEffectExplanations(state, params);\r\n    return t(\r\n      \"^{{magnitude}}^<{{explanation}}>:monstium: obtained from Exploration\",\r\n      {\r\n        magnitude: formatMultiplier(1.0 + effects.magnitude),\r\n        explanation: explanations.magnitude,\r\n      },\r\n    );\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 5000;\r\n  }\r\n}\r\n\r\nexport const soulStone = new SoulStone();\r\n\r\nregisterTransformation(\r\n  [\r\n    [\r\n      TransformationTags.Loot,\r\n      TransformationTags.FromExploration,\r\n      Resource.Monstium,\r\n    ],\r\n  ],\r\n  soulStone.getId(),\r\n  soulStone.getBaseName(soulStone.getDefaultParams()),\r\n  TransformationType.Multiplier,\r\n  (state) =>\r\n    soulStone.isEquippedWithAnyParams(state)\r\n      ? soulStone.getEquippedItemEffect(state, \"magnitude\").magnitude + 1.0\r\n      : 1.0,\r\n);\r\n\r\nclass TransmuteSoulStone extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return soulStone;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Poison: 21,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 500,\r\n        PoisonEssence: 35000,\r\n      },\r\n      items: {\r\n        elementalShardPoison: 80,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Poison;\r\n  }\r\n}\r\n\r\nexport const transmuteSoulStone = new TransmuteSoulStone();\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass ManaTear extends EquippableItem {\r\n  getId(): string {\r\n    return \"manaTear\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Accessory;\r\n  }\r\n  getPicture() {\r\n    return require(\"./manaTear.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Tear of Mana\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\"A small gem that provides just a little wizardry push.\");\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 300;\r\n  }\r\n\r\n  getManaRegenBonusBase(params: ItemParams): number {\r\n    return 3;\r\n  }\r\n\r\n  getMaxManaBonusBase(params: ItemParams): number {\r\n    return 100;\r\n  }\r\n}\r\n\r\nconst manaTear = new ManaTear();\r\n\r\nclass TransmuteManaTear extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return manaTear;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Water: 4,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 200,\r\n      },\r\n      items: {\r\n        elementalShardWater: 5,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Water;\r\n  }\r\n}\r\n\r\nconst transmuteManaTear = new TransmuteManaTear();\r\nexport { manaTear as ManaTear, transmuteManaTear as TransmuteManaTear };\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { AttackTarget } from \"../../../../exploration/AttackTarget\";\r\nimport { CombatStat } from \"../../../../exploration/CombatStats\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../../../transformation/Transformation\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass RingOfRegeneration extends EquippableItem {\r\n  getId(): string {\r\n    return \"ringOfRegeneration\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Accessory;\r\n  }\r\n  getPicture() {\r\n    return require(\"./ringOfRegeneration.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Ring of Regeneration\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"A ring that greatly magnifies the wearer's innate healing power.\",\r\n    );\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 3500;\r\n  }\r\n\r\n  getEffectExtra(state: GameState, params: ItemParams): string {\r\n    return t(\"Doubles innate :hp: regeneration\");\r\n  }\r\n}\r\n\r\nexport const ringOfRegeneration = new RingOfRegeneration();\r\n\r\nclass TransmuteRingOfRegeneration extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return ringOfRegeneration;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Water: 23,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 500,\r\n      },\r\n      items: {\r\n        elementalShardWater: 120,\r\n        elementalShardEarth: 20,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Water;\r\n  }\r\n}\r\n\r\nregisterTransformation(\r\n  [[AttackTarget.Player, CombatStat.HPRegen]],\r\n  ringOfRegeneration.getId(),\r\n  ringOfRegeneration.getName(ringOfRegeneration.getDefaultParams()),\r\n  TransformationType.Multiplier,\r\n  (state, params) => {\r\n    if (ringOfRegeneration.isEquippedWithAnyParams(state)) {\r\n      return 2.0;\r\n    }\r\n    return 1.0;\r\n  },\r\n);\r\n\r\nexport const transmuteRingOfRegeneration = new TransmuteRingOfRegeneration();\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass BreezyShirt extends EquippableItem {\r\n  getId(): string {\r\n    return \"breezyShirt\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Body;\r\n  }\r\n  getPicture() {\r\n    return require(\"./breezyShirt.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Breezy Shirt\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"A lightweight shirt. Doesn't protect much, but wearing it makes you feel lighter than usual.\",\r\n    );\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 500;\r\n  }\r\n\r\n  getDefenseBonusBase(params: ItemParams): number {\r\n    return 12;\r\n  }\r\n\r\n  getAttackDelayBonusRatioBase(params: ItemParams): number {\r\n    return -0.2;\r\n  }\r\n}\r\n\r\nconst breezyShirt = new BreezyShirt();\r\n\r\nclass TransmuteBreezyShirt extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return breezyShirt;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Air: 5,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 200,\r\n        WaterEssence: 1200,\r\n      },\r\n      items: {\r\n        elementalShardAir: 10,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Air;\r\n  }\r\n}\r\n\r\nconst transmuteBreezyShirt = new TransmuteBreezyShirt();\r\nexport {\r\n  breezyShirt as BreezyShirt,\r\n  transmuteBreezyShirt as TransmuteBreezyShirt,\r\n};\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass EvasiveGarb extends EquippableItem {\r\n  getId(): string {\r\n    return \"evasiveGarb\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Body;\r\n  }\r\n  getPicture() {\r\n    return require(\"./evasiveGarb.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Evasive Garb\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"An armor that may not protect much, but allows its wearer to dodge more easily.\",\r\n    );\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 3600;\r\n  }\r\n\r\n  getDefenseBonusBase(params: ItemParams): number {\r\n    return 24;\r\n  }\r\n\r\n  getPlayerDodgeBonusBase(params: ItemParams): number {\r\n    return 40;\r\n  }\r\n}\r\n\r\nexport const evasiveGarb = new EvasiveGarb();\r\n\r\nclass TransmuteEvasiveGarb extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return evasiveGarb;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Air: 17,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 400,\r\n        AirEssence: 25000,\r\n      },\r\n      items: {\r\n        elementalShardAir: 50,\r\n        cotton: 16,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Air;\r\n  }\r\n}\r\n\r\nexport const transmuteEvasiveGarb = new TransmuteEvasiveGarb();\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass CopperArmor extends EquippableItem {\r\n  getId(): string {\r\n    return \"copperArmor\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Body;\r\n  }\r\n  getPicture() {\r\n    return require(\"./copperArmor.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Copper Armor\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"An armor made from reinforced copper. Adapts more easily to your body than other armor.\",\r\n    );\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 3000;\r\n  }\r\n\r\n  getDefenseBonusBase(params: ItemParams): number {\r\n    return 50;\r\n  }\r\n\r\n  getAttackDelayBonusRatioBase(params: ItemParams): number {\r\n    return 0.1;\r\n  }\r\n}\r\n\r\nexport const copperArmor = new CopperArmor();\r\n\r\nclass TransmuteCopperArmor extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return copperArmor;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Earth: 16,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 400,\r\n        EarthEssence: 15000,\r\n      },\r\n      items: {\r\n        elementalShardEarth: 15,\r\n        copperIngot: 12,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Earth;\r\n  }\r\n}\r\n\r\nexport const transmuteCopperArmor = new TransmuteCopperArmor();\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass TurtleArmor extends EquippableItem {\r\n  getId(): string {\r\n    return \"turtleArmor\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Body;\r\n  }\r\n  getPicture() {\r\n    return require(\"./turtleArmor.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Turtle Armor\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"A very heavy armor. Offers extremely strong protection, but reduces attack speed to a crawl...\",\r\n    );\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 3500;\r\n  }\r\n\r\n  getDefenseBonusBase(params: ItemParams): number {\r\n    return 90;\r\n  }\r\n\r\n  getAttackDelayBonusRatioBase(params: ItemParams): number {\r\n    return 1.0;\r\n  }\r\n}\r\n\r\nexport const turtleArmor = new TurtleArmor();\r\n\r\nclass TransmuteTurtleArmor extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return turtleArmor;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Earth: 23,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 500,\r\n        EarthEssence: 33000,\r\n      },\r\n      items: {\r\n        elementalShardEarth: 100,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Earth;\r\n  }\r\n}\r\n\r\nexport const transmuteTurtleArmor = new TransmuteTurtleArmor();\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass LeatherArmor extends EquippableItem {\r\n  getId(): string {\r\n    return \"leatherArmor\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Body;\r\n  }\r\n  getPicture() {\r\n    return require(\"./leatherArmor.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Leather Armor\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"Standard protective equipment. Gives some protection without drawbacks to movement.\",\r\n    );\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 500;\r\n  }\r\n\r\n  getDefenseBonusBase(params: ItemParams): number {\r\n    return 18;\r\n  }\r\n}\r\n\r\nexport const leatherArmor = new LeatherArmor();\r\n\r\nclass TransmuteLeatherArmor extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return leatherArmor;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Fire: 5,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 200,\r\n        EarthEssence: 1200,\r\n      },\r\n      items: {\r\n        elementalShardFire: 8,\r\n        elementalShardEarth: 1,\r\n        elementalShardAir: 1,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Fire;\r\n  }\r\n}\r\n\r\nexport const transmuteLeatherArmor = new TransmuteLeatherArmor();\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass ReinforcedLeatherArmor extends EquippableItem {\r\n  getId(): string {\r\n    return \"reinforcedLeatherArmor\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Body;\r\n  }\r\n  getPicture() {\r\n    return require(\"./reinforcedLeatherArmor.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Reinforced Leather Armor\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\"A sturdy light armor, with good straightforward protection.\");\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 3500;\r\n  }\r\n\r\n  getDefenseBonusBase(params: ItemParams): number {\r\n    return 65;\r\n  }\r\n}\r\n\r\nexport const reinforcedLeatherArmor = new ReinforcedLeatherArmor();\r\n\r\nclass TransmuteReinforcedLeatherArmor extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return reinforcedLeatherArmor;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Fire: 21,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 600,\r\n        EarthEssence: 18000,\r\n      },\r\n      items: {\r\n        elementalShardFire: 50,\r\n        elementalShardEarth: 5,\r\n        thickHide: 10,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Fire;\r\n  }\r\n}\r\n\r\nexport const transmuteReinforcedLeatherArmor =\r\n  new TransmuteReinforcedLeatherArmor();\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass ElderWizardsRobe extends EquippableItem {\r\n  getId(): string {\r\n    return \"elderWizardsRobe\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Body;\r\n  }\r\n  getPicture() {\r\n    return require(\"./elderWizardsRobe.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Elder Wizard's Robe\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"An upgraded version of the Wizard's Robe. This time, built from cotton, to last longer.\",\r\n    );\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 2750;\r\n  }\r\n\r\n  getDefenseBonusBase(params: ItemParams): number {\r\n    return 20;\r\n  }\r\n\r\n  getManaRegenBonusBase(params: ItemParams): number {\r\n    return 18;\r\n  }\r\n\r\n  getMaxManaBonusBase(params: ItemParams): number {\r\n    return 800;\r\n  }\r\n}\r\n\r\nexport const elderWizardsRobe = new ElderWizardsRobe();\r\n\r\nclass TransmuteElderWizardsRobe extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return elderWizardsRobe;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Water: 15,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 400,\r\n      },\r\n      items: {\r\n        elementalShardWater: 25,\r\n        cotton: 6,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Water;\r\n  }\r\n}\r\n\r\nexport const transmuteElderWizardsRobe = new TransmuteElderWizardsRobe();\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { AttackTarget } from \"../../../../exploration/AttackTarget\";\r\nimport { CombatStat } from \"../../../../exploration/CombatStats\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../../../transformation/Transformation\";\r\nimport { EquipmentSlot, getEquippedItem } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass TunicOfGoodHealth extends EquippableItem {\r\n  getId(): string {\r\n    return \"tunicOfGoodHealth\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Body;\r\n  }\r\n  getPicture() {\r\n    return require(\"./tunicOfGoodHealth.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Tunic of Good Health\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"A cotton-based cloth armor that greatly boosts longevity and allows for recovering quicker.\",\r\n    );\r\n  }\r\n  getEffectExtra(state: GameState, params: ItemParams): string {\r\n    return t(\"Double passive HP regeneration speed\");\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 4800;\r\n  }\r\n\r\n  getDefenseBonusBase(params: ItemParams): number {\r\n    return 24;\r\n  }\r\n\r\n  getMaxHPBonusBase(params: ItemParams): number {\r\n    return 80;\r\n  }\r\n}\r\n\r\nexport const tunicOfGoodHealth = new TunicOfGoodHealth();\r\n\r\nregisterTransformation(\r\n  [[CombatStat.HPRegen, AttackTarget.Player]],\r\n  tunicOfGoodHealth.getId(),\r\n  tunicOfGoodHealth.getName(tunicOfGoodHealth.getDefaultParams()),\r\n  TransformationType.Multiplier,\r\n  (state) =>\r\n    getEquippedItem(state, EquipmentSlot.Body)?.itemId ==\r\n    tunicOfGoodHealth.getId()\r\n      ? 2.0\r\n      : 1.0,\r\n);\r\n\r\nclass TransmuteTunicOfGoodHealth extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return tunicOfGoodHealth;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Water: 19,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 500,\r\n        WaterEssence: 30000,\r\n      },\r\n      items: {\r\n        elementalShardWater: 60,\r\n        cotton: 20,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Water;\r\n  }\r\n}\r\n\r\nexport const transmuteTunicOfGoodHealth = new TransmuteTunicOfGoodHealth();\r\n","import { formatMultiplier } from \"../../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../../utils/I18n\";\r\nimport { ActionEffect } from \"../../../../action/Action\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../../../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../../../transformation/TransformationTags\";\r\nimport { EquipmentSlot, getEquippedItem } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass GaleScepter extends EquippableItem {\r\n  getId(): string {\r\n    return \"galeScepter\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Hand;\r\n  }\r\n  getPicture() {\r\n    return require(\"./galeScepter.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Gale Scepter\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\"A staff with a heavy affinity for Air.\");\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 4000;\r\n  }\r\n\r\n  getAttackBonusBase(params: ItemParams): number {\r\n    return 35;\r\n  }\r\n\r\n  getAttackDelayBonusRatioBase(params: ItemParams): number {\r\n    return -0.3;\r\n  }\r\n\r\n  getManaRegenBonusBase(params: ItemParams): number {\r\n    return 30;\r\n  }\r\n\r\n  getMaxManaBonusBase(params: ItemParams): number {\r\n    return 700;\r\n  }\r\n\r\n  protected getBaseExtraItemEffects(\r\n    params: ItemParams,\r\n  ): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 0.15,\r\n        valueType: TransformationValueType.Percent,\r\n      },\r\n      magnitudeCost: {\r\n        value: 0.25,\r\n        valueType: TransformationValueType.Divisor,\r\n      },\r\n    };\r\n  }\r\n\r\n  getEffectExtra(state: GameState, params: ItemParams): string {\r\n    const effects = this.getItemEffects(state, params);\r\n    const explanations = this.getItemEffectExplanations(state, params);\r\n    return t(\r\n      \"^{{magnitude}}^<{{explanation}}> power of Air elemental spells; ^{{magnitudeCost}}^<{{explanationCost}}> :mana: cost of Air elemental spells\",\r\n      {\r\n        magnitude: formatMultiplier(1.0 + effects.magnitude),\r\n        explanation: explanations.magnitude,\r\n        magnitudeCost: formatMultiplier(1.0 / (1.0 + effects.magnitudeCost)),\r\n        explanationCost: explanations.magnitudeCost,\r\n      },\r\n    );\r\n  }\r\n}\r\n\r\nexport const galeScepter = new GaleScepter();\r\n\r\nregisterTransformation(\r\n  [\r\n    [\r\n      TransformationTags.ActionEffect,\r\n      TransformationTags.ActionMagnitude,\r\n      SpellElement.Air,\r\n    ],\r\n    [\r\n      TransformationTags.ActionEffect,\r\n      TransformationTags.TemporaryEffectMagnitude,\r\n      SpellElement.Air,\r\n    ],\r\n  ],\r\n  galeScepter.getId(),\r\n  galeScepter.getName(galeScepter.getDefaultParams()),\r\n  TransformationType.Multiplier,\r\n  (state) =>\r\n    getEquippedItem(state, EquipmentSlot.Hand)?.itemId == galeScepter.getId()\r\n      ? galeScepter.getEquippedItemEffect(state, \"magnitude\").magnitude + 1.0\r\n      : 1.0,\r\n);\r\n\r\nregisterTransformation(\r\n  [[SpellElement.Air, TransformationTags.Cost, Resource.Mana]],\r\n  galeScepter.getId() + \"cost\",\r\n  galeScepter.getName(galeScepter.getDefaultParams()),\r\n  TransformationType.Multiplier,\r\n  (state) =>\r\n    galeScepter.isEquippedWithAnyParams(state)\r\n      ? 1.0 /\r\n        (galeScepter.getEquippedItemEffect(state, \"magnitudeCost\")\r\n          .magnitudeCost +\r\n          1.0)\r\n      : 1.0,\r\n);\r\n\r\nclass TransmuteGaleScepter extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return galeScepter;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Air: 23,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 600,\r\n        AirEssence: 33000,\r\n      },\r\n      items: {\r\n        elementalShardAir: 150,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Air;\r\n  }\r\n}\r\n\r\nexport const transmuteGaleScepter = new TransmuteGaleScepter();\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass Knuckles extends EquippableItem {\r\n  getId(): string {\r\n    return \"knuckles\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Hand;\r\n  }\r\n  getPicture() {\r\n    return require(\"./knuckles.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Knuckles\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\"A tiny, but swift weapon. Weak, but its speed makes up for it.\");\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 500;\r\n  }\r\n\r\n  getAttackBonusBase(params: ItemParams): number {\r\n    return 20;\r\n  }\r\n\r\n  getAttackDelayBonusRatioBase(params: ItemParams): number {\r\n    return -0.4;\r\n  }\r\n}\r\n\r\nconst knuckles = new Knuckles();\r\n\r\nclass TransmuteKnuckles extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return knuckles;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Air: 5,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 200,\r\n        AirEssence: 1800,\r\n      },\r\n      items: {\r\n        elementalShardAir: 10,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Air;\r\n  }\r\n}\r\n\r\nconst transmuteKnuckles = new TransmuteKnuckles();\r\nexport { knuckles as Knuckles, transmuteKnuckles as TransmuteKnuckles };\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass Longsword extends EquippableItem {\r\n  getId(): string {\r\n    return \"longsword\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Hand;\r\n  }\r\n  getPicture() {\r\n    return require(\"./longsword.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Longsword\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\"A standard longsword. Consistent, average damage.\");\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 500;\r\n  }\r\n\r\n  getAttackBonusBase(params: ItemParams): number {\r\n    return 30;\r\n  }\r\n}\r\n\r\nconst longsword = new Longsword();\r\n\r\nclass TransmuteLongsword extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return longsword;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Earth: 5,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 200,\r\n      },\r\n      items: {\r\n        elementalShardEarth: 6,\r\n        elementalShardFire: 2,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Earth;\r\n  }\r\n}\r\n\r\nconst transmuteLongsword = new TransmuteLongsword();\r\nexport { longsword as Longsword, transmuteLongsword as TransmuteLongsword };\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass CopperWarhammer extends EquippableItem {\r\n  getId(): string {\r\n    return \"copperWarhammer\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Hand;\r\n  }\r\n  getExtraSlots(): EquipmentSlot[] {\r\n    return [EquipmentSlot.Accessory];\r\n  }\r\n  getPicture() {\r\n    return require(\"./copperWarhammer.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Copper Warhammer\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"A heavy hammer made from reinforced copper. Has a great amount of metal, but is very powerful.\",\r\n    );\r\n  }\r\n  getEffectExtra(state: GameState, params: ItemParams): string {\r\n    return t(\"Extra large\");\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 4000;\r\n  }\r\n\r\n  getAttackBonusBase(params: ItemParams): number {\r\n    return 185;\r\n  }\r\n\r\n  getAttackDelayBonusRatioBase(params: ItemParams): number {\r\n    return 0.65;\r\n  }\r\n}\r\n\r\nexport const copperWarhammer = new CopperWarhammer();\r\n\r\nclass TransmuteCopperWarhammer extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return copperWarhammer;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Fire: 18,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 400,\r\n        FireEssence: 20000,\r\n      },\r\n      items: {\r\n        elementalShardFire: 50,\r\n        copperIngot: 12,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Fire;\r\n  }\r\n}\r\n\r\nexport const transmuteCopperWarhammer = new TransmuteCopperWarhammer();\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource, getResourceAmount } from \"../../../../Resources\";\r\nimport { CombatStat } from \"../../../../exploration/CombatStats\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport {\r\n  TransformationType,\r\n  registerTransformation,\r\n} from \"../../../../transformation/Transformation\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass RedConflagration extends EquippableItem {\r\n  getId(): string {\r\n    return \"redConflagration\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Hand;\r\n  }\r\n  getExtraSlots(): EquipmentSlot[] {\r\n    return [EquipmentSlot.Accessory];\r\n  }\r\n  getPicture() {\r\n    return require(\"./redConflagration.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Red Conflagration\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"A massive two-handed sword. Leverages :fireessence: to empower itself further, but spellcasting suffers.\",\r\n    );\r\n  }\r\n  getEffectExtra(state: GameState, params: ItemParams): string {\r\n    return t(\"Extra large\");\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 9000;\r\n  }\r\n\r\n  getMaxManaBonusBase(params: ItemParams): number {\r\n    return -2000;\r\n  }\r\n\r\n  getAttackBonusBase(params: ItemParams): number {\r\n    return 340;\r\n  }\r\n\r\n  getAttackDelayBonusRatioBase(params: ItemParams): number {\r\n    return 0.4;\r\n  }\r\n}\r\n\r\nexport const redConflagration = new RedConflagration();\r\n\r\nregisterTransformation(\r\n  [[redConflagration.getId(), CombatStat.Attack]],\r\n  redConflagration.getId() + \"fireEssence\",\r\n  t(\":fireessence: amount\"),\r\n  TransformationType.Multiplier,\r\n  (state) => {\r\n    const fireEssence = getResourceAmount(state, Resource.FireEssence);\r\n    return Math.max(\r\n      0.5,\r\n      Math.floor(Math.log10(fireEssence / 15000.0) * 10) / 10,\r\n    );\r\n  },\r\n);\r\n\r\nclass TransmuteRedConflagration extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return redConflagration;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Fire: 27,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 700,\r\n        FireEssence: 120000,\r\n      },\r\n      items: {\r\n        elementalPrismFire: 30,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Fire;\r\n  }\r\n}\r\n\r\nexport const transmuteRedConflagration = new TransmuteRedConflagration();\r\n","import { formatMultiplier } from \"../../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../../utils/I18n\";\r\nimport { ActionEffect } from \"../../../../action/Action\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../../../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../../../transformation/TransformationTags\";\r\nimport { EquipmentSlot, getEquippedItem } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass WandOfFire extends EquippableItem {\r\n  getId(): string {\r\n    return \"wandOfFire\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Hand;\r\n  }\r\n  getPicture() {\r\n    return require(\"./wandOfFire.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Wand of Fire\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"A simple wand. Fire spells are powerful, and this makes them even more so.\",\r\n    );\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 8000;\r\n  }\r\n\r\n  getAttackBonusBase(params: ItemParams): number {\r\n    return 70;\r\n  }\r\n\r\n  getManaRegenBonusBase(params: ItemParams): number {\r\n    return 80;\r\n  }\r\n\r\n  getMaxManaBonusBase(params: ItemParams): number {\r\n    return 1200;\r\n  }\r\n\r\n  protected getBaseExtraItemEffects(\r\n    params: ItemParams,\r\n  ): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 0.2,\r\n        valueType: TransformationValueType.Percent,\r\n      },\r\n    };\r\n  }\r\n\r\n  getEffectExtra(state: GameState, params: ItemParams): string {\r\n    const effects = this.getItemEffects(state, params);\r\n    const explanations = this.getItemEffectExplanations(state, params);\r\n    return t(\r\n      \"^{{magnitude}}^<{{explanation}}> power of Fire elemental spells\",\r\n      {\r\n        magnitude: formatMultiplier(1.0 + effects.magnitude),\r\n        explanation: explanations.magnitude,\r\n      },\r\n    );\r\n  }\r\n}\r\n\r\nexport const wandOfFire = new WandOfFire();\r\n\r\nregisterTransformation(\r\n  [\r\n    [\r\n      TransformationTags.ActionEffect,\r\n      TransformationTags.ActionMagnitude,\r\n      SpellElement.Fire,\r\n    ],\r\n    [\r\n      TransformationTags.ActionEffect,\r\n      TransformationTags.TemporaryEffectMagnitude,\r\n      SpellElement.Fire,\r\n    ],\r\n  ],\r\n  wandOfFire.getId(),\r\n  wandOfFire.getName(wandOfFire.getDefaultParams()),\r\n  TransformationType.Multiplier,\r\n  (state) =>\r\n    getEquippedItem(state, EquipmentSlot.Hand)?.itemId == wandOfFire.getId()\r\n      ? wandOfFire.getEquippedItemEffect(state, \"magnitude\").magnitude + 1.0\r\n      : 1.0,\r\n);\r\n\r\nclass TransmuteWandOfFire extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return wandOfFire;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Fire: 29,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 700,\r\n        FireEssence: 100000,\r\n      },\r\n      items: {\r\n        elementalPrismFire: 25,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Fire;\r\n  }\r\n}\r\n\r\nexport const transmuteWandOfFire = new TransmuteWandOfFire();\r\n","import { formatNumber } from \"../../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../../utils/I18n\";\r\nimport { ActionEffect } from \"../../../../action/Action\";\r\nimport { AttackTarget } from \"../../../../exploration/AttackTarget\";\r\nimport { CombatActionResultListeners } from \"../../../../exploration/ExplorationActionResult\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { poison } from \"../../../../temporaryeffects/Poison\";\r\nimport { grantTemporaryEffect } from \"../../../../temporaryeffects/TemporaryEffects\";\r\nimport { TransformationTags } from \"../../../../transformation/TransformationTags\";\r\nimport { EquipmentSlot, getEquippedItem } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass Dagger extends EquippableItem {\r\n  getId(): string {\r\n    return \"dagger\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Hand;\r\n  }\r\n  getPicture() {\r\n    return require(\"./dagger.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Dagger\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\"A small blade with the power of Poison.\");\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 800;\r\n  }\r\n\r\n  poisonTags = [TransformationTags.TemporaryEffectMagnitude, poison.getId()];\r\n  poisonDurationTags = [\r\n    TransformationTags.TemporaryEffectDuration,\r\n    poison.getId(),\r\n  ];\r\n  protected getBaseExtraItemEffects(\r\n    params: ItemParams,\r\n  ): Record<string, ActionEffect> {\r\n    return {\r\n      poisonStrength: {\r\n        value: 8,\r\n        tags: this.poisonTags,\r\n        unit: \":hp:/sec\",\r\n      },\r\n      poisonDuration: {\r\n        value: 1,\r\n        tags: this.poisonDurationTags,\r\n        unit: \" sec\",\r\n      },\r\n    };\r\n  }\r\n\r\n  getPoisonStrength(state: GameState, params: ItemParams): number {\r\n    return this.getItemEffects(state, params, \"poisonStrength\").poisonStrength;\r\n  }\r\n\r\n  getEffectExtra(state: GameState, params: ItemParams): string {\r\n    const poisonStrength = this.getPoisonStrength(state, params);\r\n    const poisonDuration = this.getItemEffects(\r\n      state,\r\n      params,\r\n      \"poisonDuration\",\r\n    ).poisonDuration;\r\n    return t(\r\n      \"On hit, applies ^-{{poisonStrength}}^<{{strengthExplanation}}>:hp:/sec Poison for ^{{poisonDuration}}^<{{durationExplanation}}> sec\",\r\n      {\r\n        poisonStrength: formatNumber(poisonStrength),\r\n        strengthExplanation: this.getItemEffectExplanations(\r\n          state,\r\n          params,\r\n          \"poisonStrength\",\r\n        ).poisonStrength,\r\n        poisonDuration: formatNumber(poisonDuration, { showDecimals: true }),\r\n        durationExplanation: this.getItemEffectExplanations(\r\n          state,\r\n          params,\r\n          \"poisonDuration\",\r\n        ).poisonDuration,\r\n      },\r\n    );\r\n  }\r\n\r\n  getAttackBonusBase(params: ItemParams): number {\r\n    return 20;\r\n  }\r\n\r\n  getAttackDelayBonusRatioBase(params: ItemParams): number {\r\n    return -0.3;\r\n  }\r\n}\r\n\r\nexport const dagger = new Dagger();\r\n\r\nCombatActionResultListeners.register((state, result) => {\r\n  if (dagger.isEquippedWithAnyParams(state)) {\r\n    if (\r\n      result.source == AttackTarget.Player &&\r\n      result.tags.includes(TransformationTags.AutoAttack) &&\r\n      result.isHit\r\n    ) {\r\n      const effects = dagger.getItemEffects(\r\n        state,\r\n        getEquippedItem(state, EquipmentSlot.Hand).params,\r\n      );\r\n      state = grantTemporaryEffect(poison.getId(), effects.poisonDuration, {\r\n        mode: \"add\",\r\n        target: result.target,\r\n        params: {\r\n          magnitude: dagger.getPoisonStrength(\r\n            state,\r\n            getEquippedItem(state, EquipmentSlot.Hand).params,\r\n          ),\r\n        },\r\n      })(state);\r\n    }\r\n  }\r\n  return state;\r\n});\r\n\r\nclass TransmuteDagger extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return dagger;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Poison: 5,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 200,\r\n        PoisonEssence: 2500,\r\n      },\r\n      items: {\r\n        elementalShardAir: 1,\r\n        elementalShardPoison: 4,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Poison;\r\n  }\r\n}\r\n\r\nexport const transmuteDagger = new TransmuteDagger();\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass ShadowBlade extends EquippableItem {\r\n  getId(): string {\r\n    return \"shadowBlade\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Hand;\r\n  }\r\n  getPicture() {\r\n    return require(\"./shadowBlade.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Shadow Blade\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"A silent killer. Fast, effective, and keeps the wielder undetected.\",\r\n    );\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 10000;\r\n  }\r\n\r\n  getAttackBonusBase(params: ItemParams): number {\r\n    return 105;\r\n  }\r\n\r\n  getAttackDelayBonusRatioBase(params: ItemParams): number {\r\n    return -0.3;\r\n  }\r\n\r\n  getPlayerDodgeBonusBase(params: ItemParams): number {\r\n    return 15;\r\n  }\r\n}\r\n\r\nexport const shadowBlade = new ShadowBlade();\r\n\r\nclass TransmuteShadowBlade extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return shadowBlade;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Poison: 29,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 700,\r\n        PoisonEssence: 115000,\r\n      },\r\n      items: {\r\n        elementalPrismPoison: 16,\r\n        elementalPrismAir: 1,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Poison;\r\n  }\r\n}\r\n\r\nexport const transmuteShadowBlade = new TransmuteShadowBlade();\r\n","import { formatMultiplier } from \"../../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../../utils/I18n\";\r\nimport { ActionEffect } from \"../../../../action/Action\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../../../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../../../transformation/TransformationTags\";\r\nimport { EquipmentSlot, getEquippedItem } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass WandOfPoison extends EquippableItem {\r\n  getId(): string {\r\n    return \"wandOfPoison\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Hand;\r\n  }\r\n  getPicture() {\r\n    return require(\"./wandOfPoison.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Wand of Poison\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"A magical wand fine tuned for Poison. Increases power of Poison spells.\",\r\n    );\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 5000;\r\n  }\r\n\r\n  getAttackBonusBase(params: ItemParams): number {\r\n    return 60;\r\n  }\r\n\r\n  getManaRegenBonusBase(params: ItemParams): number {\r\n    return 60;\r\n  }\r\n\r\n  getMaxManaBonusBase(params: ItemParams): number {\r\n    return 1200;\r\n  }\r\n\r\n  protected getBaseExtraItemEffects(\r\n    params: ItemParams,\r\n  ): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 0.15,\r\n        valueType: TransformationValueType.Percent,\r\n      },\r\n    };\r\n  }\r\n\r\n  getEffectExtra(state: GameState, params: ItemParams): string {\r\n    const effects = this.getItemEffects(state, params);\r\n    const explanations = this.getItemEffectExplanations(state, params);\r\n    return t(\r\n      \"^{{magnitude}}^<{{explanation}}> power of Poison elemental spells\",\r\n      {\r\n        magnitude: formatMultiplier(1.0 + effects.magnitude),\r\n        explanation: explanations.magnitude,\r\n      },\r\n    );\r\n  }\r\n}\r\n\r\nexport const wandOfPoison = new WandOfPoison();\r\n\r\nregisterTransformation(\r\n  [\r\n    [\r\n      TransformationTags.ActionEffect,\r\n      TransformationTags.ActionMagnitude,\r\n      SpellElement.Poison,\r\n    ],\r\n    [\r\n      TransformationTags.ActionEffect,\r\n      TransformationTags.TemporaryEffectMagnitude,\r\n      SpellElement.Poison,\r\n    ],\r\n  ],\r\n  wandOfPoison.getId(),\r\n  wandOfPoison.getName(wandOfPoison.getDefaultParams()),\r\n  TransformationType.Multiplier,\r\n  (state) =>\r\n    getEquippedItem(state, EquipmentSlot.Hand)?.itemId == wandOfPoison.getId()\r\n      ? wandOfPoison.getEquippedItemEffect(state, \"magnitude\").magnitude + 1.0\r\n      : 1.0,\r\n);\r\n\r\nclass TransmuteWandOfPoison extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return wandOfPoison;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Poison: 25,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 600,\r\n        PoisonEssence: 50000,\r\n      },\r\n      items: {\r\n        elementalPrismPoison: 6,\r\n        copperIngot: 20,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Poison;\r\n  }\r\n}\r\n\r\nexport const transmuteWandOfPoison = new TransmuteWandOfPoison();\r\n","import { t } from \"../../../../../utils/I18n\";\r\nimport { GameState } from \"../../../../GameState\";\r\nimport { Resource } from \"../../../../Resources\";\r\nimport { SpellElement } from \"../../../../spells/Elements\";\r\nimport { EquipmentSlot } from \"../../../Equipment\";\r\nimport { ItemParams } from \"../../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../../transmute/EquipmentTransmutationSpell\";\r\nimport { EquippableItem } from \"../../EquippableItem\";\r\n\r\nclass Rod extends EquippableItem {\r\n  getId(): string {\r\n    return \"rod\";\r\n  }\r\n  getSlot(): EquipmentSlot {\r\n    return EquipmentSlot.Hand;\r\n  }\r\n  getPicture() {\r\n    return require(\"./rod.png\");\r\n  }\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Rod\");\r\n  }\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"An enchanted short stick. Not too sturdy, not very damaging, but it enhances magic power.\",\r\n    );\r\n  }\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 500;\r\n  }\r\n\r\n  getAttackBonusBase(params: ItemParams): number {\r\n    return 16;\r\n  }\r\n\r\n  getManaRegenBonusBase(params: ItemParams): number {\r\n    return 8;\r\n  }\r\n\r\n  getMaxManaBonusBase(params: ItemParams): number {\r\n    return 400;\r\n  }\r\n}\r\n\r\nconst rod = new Rod();\r\n\r\nclass TransmuteRod extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return rod;\r\n  }\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Water: 5,\r\n    };\r\n  }\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 200,\r\n        EarthEssence: 1200,\r\n      },\r\n      items: {\r\n        elementalShardFire: 1,\r\n        elementalShardAir: 1,\r\n        elementalShardWater: 7,\r\n      },\r\n    };\r\n  }\r\n  getElement(): SpellElement {\r\n    return SpellElement.Water;\r\n  }\r\n}\r\n\r\nconst transmuteRod = new TransmuteRod();\r\nexport { rod as Rod, transmuteRod as TransmuteRod };\r\n","import { formatNumber } from \"../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../utils/I18n\";\r\nimport { ActionEffect } from \"../../../action/Action\";\r\nimport { AttackTarget } from \"../../../exploration/AttackTarget\";\r\nimport {\r\n  clearCombatStatCache,\r\n  CombatStat,\r\n} from \"../../../exploration/CombatStats\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { Resource } from \"../../../Resources\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport { TemporaryEffect } from \"../../../temporaryeffects/TemporaryEffect\";\r\nimport {\r\n  getTemporaryEffectData,\r\n  hasTemporaryEffect,\r\n  registerTemporaryEffectListener,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"../../../temporaryeffects/TemporaryEffects\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../../transformation/TransformationTags\";\r\nimport { ItemParams } from \"../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../transmute/EquipmentTransmutationSpell\";\r\nimport { registerTransmutationSpellAndItem } from \"../../transmute/TransmutationSpell\";\r\nimport { EquippableItem } from \"../EquippableItem\";\r\nimport { BuffingPouchItem } from \"./BuffingPouchItem\";\r\n\r\nclass PotionOfAlacrityTemporaryEffect extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"potionOfAlacrity\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Potion of Alacrity\");\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"-{{magnitude}}%:attackDelay:\", {\r\n      magnitude: formatNumber(\r\n        Math.abs(1 - 1 / (temporaryEffectData.params.magnitude + 1)) * 100,\r\n      ),\r\n    });\r\n  }\r\n  getIcon() {\r\n    return require(\"./potionOfAlacrity.png\");\r\n  }\r\n}\r\n\r\nexport const potionOfAlacrityTemporaryEffect =\r\n  new PotionOfAlacrityTemporaryEffect();\r\n\r\nclass PotionOfAlacrity extends BuffingPouchItem {\r\n  getTemporaryEffect(): TemporaryEffect {\r\n    return potionOfAlacrityTemporaryEffect;\r\n  }\r\n\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\"A magical concoction that makes you feel light as a feather.\");\r\n  }\r\n\r\n  protected getBaseItemEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 0.13636,\r\n        tags: [TransformationTags.TemporaryEffectMagnitude],\r\n        valueType: TransformationValueType.Divisor,\r\n      },\r\n      duration: {\r\n        value: 300,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n      },\r\n    };\r\n  }\r\n\r\n  getEffect(state: GameState, params: ItemParams): string | undefined {\r\n    const effects = this.getItemEffects(state, params);\r\n    const explanations = this.getItemEffectExplanations(state, params);\r\n\r\n    return t(\r\n      \"^-{{magnitude}}%^<{{explanation}}>:attackDelay: for ^{{duration}}^<{{durationExplanation}}> sec\",\r\n      {\r\n        magnitude: formatNumber(\r\n          Math.abs(1 - 1 / (effects.magnitude + 1)) * 100,\r\n        ),\r\n        explanation: explanations?.magnitude,\r\n        duration: formatNumber(Math.floor(effects.duration)),\r\n        durationExplanation: explanations?.duration,\r\n      },\r\n    );\r\n  }\r\n\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 400;\r\n  }\r\n}\r\n\r\nexport const potionOfAlacrity = new PotionOfAlacrity();\r\n\r\nclass TransmutePotionOfAlacrity extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return potionOfAlacrity;\r\n  }\r\n\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Air: 10,\r\n    };\r\n  }\r\n\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 300,\r\n        AirEssence: 3000,\r\n      },\r\n      items: {\r\n        elementalShardWater: 5,\r\n        elementalShardAir: 10,\r\n        slimeDrop: 10,\r\n      },\r\n    };\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Air;\r\n  }\r\n}\r\n\r\nexport const transmutePotionOfAlacrity = new TransmutePotionOfAlacrity();\r\n\r\nexport function loadPotionOfAlacrity() {\r\n  TemporaryEffects.register(potionOfAlacrityTemporaryEffect);\r\n  registerTransmutationSpellAndItem(transmutePotionOfAlacrity);\r\n\r\n  registerTransformation(\r\n    [[AttackTarget.Player, CombatStat.AttackDelay]],\r\n    potionOfAlacrityTemporaryEffect.getId(),\r\n    potionOfAlacrityTemporaryEffect.getDisplayName(),\r\n    TransformationType.Multiplier,\r\n    (state) =>\r\n      hasTemporaryEffect(\r\n        state,\r\n        potionOfAlacrityTemporaryEffect.getId(),\r\n        AttackTarget.Player,\r\n      )\r\n        ? 1 /\r\n          (getTemporaryEffectData(\r\n            state,\r\n            potionOfAlacrityTemporaryEffect.getId(),\r\n            AttackTarget.Player,\r\n          ).params.magnitude +\r\n            1)\r\n        : 1.0,\r\n  );\r\n\r\n  registerTemporaryEffectListener(\r\n    potionOfAlacrityTemporaryEffect.getId(),\r\n    (state, effect) => {\r\n      if (effect.id == potionOfAlacrityTemporaryEffect.getId()) {\r\n        state = clearCombatStatCache(\r\n          state,\r\n          AttackTarget.Player,\r\n          CombatStat.AttackDelay,\r\n        );\r\n      }\r\n      return effect;\r\n    },\r\n  );\r\n}\r\n","import { formatNumber } from \"../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../utils/I18n\";\r\nimport { ActionEffect } from \"../../../action/Action\";\r\nimport { AttackTarget } from \"../../../exploration/AttackTarget\";\r\nimport {\r\n  clearCombatStatCache,\r\n  CombatStat,\r\n} from \"../../../exploration/CombatStats\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { Resource } from \"../../../Resources\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport { TemporaryEffect } from \"../../../temporaryeffects/TemporaryEffect\";\r\nimport {\r\n  getTemporaryEffectData,\r\n  hasTemporaryEffect,\r\n  registerTemporaryEffectListener,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"../../../temporaryeffects/TemporaryEffects\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../../transformation/TransformationTags\";\r\nimport { ItemParams } from \"../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../transmute/EquipmentTransmutationSpell\";\r\nimport { registerTransmutationSpellAndItem } from \"../../transmute/TransmutationSpell\";\r\nimport { EquippableItem } from \"../EquippableItem\";\r\nimport { BuffingPouchItem } from \"./BuffingPouchItem\";\r\n\r\nclass PotionOfEvasionTemporaryEffect extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"potionOfEvasion\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Potion of Evasion\");\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"+{{magnitude}}:dodge:\", {\r\n      magnitude: formatNumber(temporaryEffectData.params.magnitude),\r\n    });\r\n  }\r\n  getIcon() {\r\n    return require(\"./potionOfEvasion.png\");\r\n  }\r\n}\r\n\r\nexport const potionOfEvasionTemporaryEffect =\r\n  new PotionOfEvasionTemporaryEffect();\r\n\r\nclass PotionOfEvasion extends BuffingPouchItem {\r\n  getTemporaryEffect(): TemporaryEffect {\r\n    return potionOfEvasionTemporaryEffect;\r\n  }\r\n\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\"A magical concoction that accelerates your body motion.\");\r\n  }\r\n\r\n  protected getBaseItemEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 20,\r\n        tags: [TransformationTags.TemporaryEffectMagnitude],\r\n      },\r\n      duration: {\r\n        value: 300,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n      },\r\n    };\r\n  }\r\n\r\n  getEffect(state: GameState, params: ItemParams): string | undefined {\r\n    const effects = this.getItemEffects(state, params);\r\n    const explanations = this.getItemEffectExplanations(state, params);\r\n\r\n    return t(\r\n      \"^+{{magnitude}}^<{{explanation}}>:dodge: for ^{{duration}}^<{{durationExplanation}}> sec\",\r\n      {\r\n        magnitude: formatNumber(effects.magnitude),\r\n        explanation: explanations?.magnitude,\r\n        duration: formatNumber(Math.floor(effects.duration)),\r\n        durationExplanation: explanations?.duration,\r\n      },\r\n    );\r\n  }\r\n\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 2500;\r\n  }\r\n}\r\n\r\nexport const potionOfEvasion = new PotionOfEvasion();\r\n\r\nclass TransmutePotionOfEvasion extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return potionOfEvasion;\r\n  }\r\n\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Poison: 23,\r\n    };\r\n  }\r\n\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 600,\r\n        AirEssence: 30000,\r\n        PoisonEssence: 20000,\r\n      },\r\n      items: {\r\n        elementalShardWater: 5,\r\n        elementalShardAir: 50,\r\n        elementalShardPoison: 20,\r\n      },\r\n    };\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Poison;\r\n  }\r\n}\r\n\r\nexport const transmutePotionOfEvasion = new TransmutePotionOfEvasion();\r\n\r\nexport function loadPotionOfEvasion() {\r\n  TemporaryEffects.register(potionOfEvasionTemporaryEffect);\r\n  registerTransmutationSpellAndItem(transmutePotionOfEvasion);\r\n\r\n  registerTransformation(\r\n    [[AttackTarget.Player, CombatStat.Dodge]],\r\n    potionOfEvasionTemporaryEffect.getId(),\r\n    potionOfEvasionTemporaryEffect.getDisplayName(),\r\n    TransformationType.Addition,\r\n    (state) =>\r\n      hasTemporaryEffect(\r\n        state,\r\n        potionOfEvasionTemporaryEffect.getId(),\r\n        AttackTarget.Player,\r\n      )\r\n        ? getTemporaryEffectData(\r\n            state,\r\n            potionOfEvasionTemporaryEffect.getId(),\r\n            AttackTarget.Player,\r\n          ).params.magnitude\r\n        : 0,\r\n  );\r\n\r\n  registerTemporaryEffectListener(\r\n    potionOfEvasionTemporaryEffect.getId(),\r\n    (state, effect) => {\r\n      if (effect.id == potionOfEvasionTemporaryEffect.getId()) {\r\n        state = clearCombatStatCache(\r\n          state,\r\n          AttackTarget.Player,\r\n          CombatStat.Dodge,\r\n        );\r\n      }\r\n      return effect;\r\n    },\r\n  );\r\n}\r\n","import { formatNumber } from \"../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../utils/I18n\";\r\nimport { ActionEffect } from \"../../../action/Action\";\r\nimport { AttackTarget } from \"../../../exploration/AttackTarget\";\r\nimport {\r\n  clearCombatStatCache,\r\n  CombatStat,\r\n} from \"../../../exploration/CombatStats\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { Resource } from \"../../../Resources\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport { TemporaryEffect } from \"../../../temporaryeffects/TemporaryEffect\";\r\nimport {\r\n  getTemporaryEffectData,\r\n  hasTemporaryEffect,\r\n  registerTemporaryEffectListener,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"../../../temporaryeffects/TemporaryEffects\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../../transformation/TransformationTags\";\r\nimport { ItemParams } from \"../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../transmute/EquipmentTransmutationSpell\";\r\nimport { registerTransmutationSpellAndItem } from \"../../transmute/TransmutationSpell\";\r\nimport { EquippableItem } from \"../EquippableItem\";\r\nimport { BuffingPouchItem } from \"./BuffingPouchItem\";\r\n\r\nclass PotionOfMuscleTemporaryEffect extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"potionOfMuscle\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Potion of Muscle\");\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"+{{magnitude}}:attack:\", {\r\n      magnitude: formatNumber(temporaryEffectData.params.magnitude),\r\n    });\r\n  }\r\n  getIcon() {\r\n    return require(\"./potionOfMuscle.png\");\r\n  }\r\n}\r\n\r\nconst temporaryEffect = new PotionOfMuscleTemporaryEffect();\r\n\r\nclass PotionOfMuscle extends BuffingPouchItem {\r\n  getTemporaryEffect(): TemporaryEffect {\r\n    return temporaryEffect;\r\n  }\r\n\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"A magical concoction that boosts your raw strength and makes you hit harder.\",\r\n    );\r\n  }\r\n\r\n  protected getBaseItemEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 16.0,\r\n        tags: [TransformationTags.TemporaryEffectMagnitude],\r\n      },\r\n      duration: {\r\n        value: 300,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n      },\r\n    };\r\n  }\r\n\r\n  getEffect(state: GameState, params: ItemParams): string | undefined {\r\n    const effects = this.getItemEffects(state, params);\r\n    const explanations = this.getItemEffectExplanations(state, params);\r\n\r\n    return t(\r\n      \"^+{{magnitude}}^<{{explanation}}>:attack: for ^{{duration}}^<{{durationExplanation}}> sec\",\r\n      {\r\n        magnitude: formatNumber(effects.magnitude),\r\n        explanation: explanations?.magnitude,\r\n        duration: formatNumber(Math.floor(effects.duration)),\r\n        durationExplanation: explanations?.duration,\r\n      },\r\n    );\r\n  }\r\n\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 400;\r\n  }\r\n}\r\n\r\nconst potionOfMuscle = new PotionOfMuscle();\r\n\r\nclass TransmutePotionOfMuscle extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return potionOfMuscle;\r\n  }\r\n\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Fire: 10,\r\n    };\r\n  }\r\n\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 300,\r\n        FireEssence: 3000,\r\n      },\r\n      items: {\r\n        elementalShardWater: 5,\r\n        elementalShardFire: 10,\r\n        slimeDrop: 10,\r\n      },\r\n    };\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Fire;\r\n  }\r\n}\r\n\r\nconst transmutePotionOfMuscle = new TransmutePotionOfMuscle();\r\n\r\nexport function loadPotionOfMuscle() {\r\n  TemporaryEffects.register(temporaryEffect);\r\n  registerTransmutationSpellAndItem(transmutePotionOfMuscle);\r\n\r\n  registerTransformation(\r\n    [[AttackTarget.Player, CombatStat.Attack]],\r\n    temporaryEffect.getId(),\r\n    temporaryEffect.getDisplayName(),\r\n    TransformationType.Addition,\r\n    (state) =>\r\n      hasTemporaryEffect(state, temporaryEffect.getId(), AttackTarget.Player)\r\n        ? getTemporaryEffectData(\r\n            state,\r\n            temporaryEffect.getId(),\r\n            AttackTarget.Player,\r\n          ).params.magnitude\r\n        : 0,\r\n  );\r\n\r\n  registerTemporaryEffectListener(temporaryEffect.getId(), (state, effect) => {\r\n    if (effect.id == temporaryEffect.getId()) {\r\n      state = clearCombatStatCache(\r\n        state,\r\n        AttackTarget.Player,\r\n        CombatStat.Attack,\r\n      );\r\n    }\r\n    return effect;\r\n  });\r\n}\r\n\r\nexport {\r\n  potionOfMuscle as PotionOfMuscle,\r\n  temporaryEffect as PotionOfMuscleTemporaryEffect,\r\n  transmutePotionOfMuscle as TransmutePotionOfMuscle,\r\n};\r\n","import { formatNumber } from \"../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../utils/I18n\";\r\nimport { ActionEffect } from \"../../../action/Action\";\r\nimport { AttackTarget } from \"../../../exploration/AttackTarget\";\r\nimport {\r\n  clearCombatStatCache,\r\n  CombatStat,\r\n} from \"../../../exploration/CombatStats\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { Resource } from \"../../../Resources\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport { TemporaryEffect } from \"../../../temporaryeffects/TemporaryEffect\";\r\nimport {\r\n  getTemporaryEffectData,\r\n  hasTemporaryEffect,\r\n  registerTemporaryEffectListener,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"../../../temporaryeffects/TemporaryEffects\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../../transformation/TransformationTags\";\r\nimport { ItemParams } from \"../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../transmute/EquipmentTransmutationSpell\";\r\nimport { registerTransmutationSpellAndItem } from \"../../transmute/TransmutationSpell\";\r\nimport { EquippableItem } from \"../EquippableItem\";\r\nimport { BuffingPouchItem } from \"./BuffingPouchItem\";\r\n\r\nclass PotionOfToughnessTemporaryEffect extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"potionOfToughness\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Potion of Toughness\");\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"+{{magnitude}}:defense:\", {\r\n      magnitude: formatNumber(temporaryEffectData.params.magnitude),\r\n    });\r\n  }\r\n  getIcon() {\r\n    return require(\"./potionOfToughness.png\");\r\n  }\r\n}\r\n\r\nconst temporaryEffect = new PotionOfToughnessTemporaryEffect();\r\n\r\nclass PotionOfToughness extends BuffingPouchItem {\r\n  getTemporaryEffect(): TemporaryEffect {\r\n    return temporaryEffect;\r\n  }\r\n\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"A magical concoction that strengthens your body's resistance to blows.\",\r\n    );\r\n  }\r\n\r\n  protected getBaseItemEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 16.0,\r\n        tags: [TransformationTags.TemporaryEffectMagnitude],\r\n      },\r\n      duration: {\r\n        value: 300,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n      },\r\n    };\r\n  }\r\n\r\n  getEffect(state: GameState, params: ItemParams): string | undefined {\r\n    const effects = this.getItemEffects(state, params);\r\n    const explanations = this.getItemEffectExplanations(state, params);\r\n\r\n    return t(\r\n      \"^+{{magnitude}}^<{{explanation}}>:defense: for ^{{duration}}^<{{durationExplanation}}> sec\",\r\n      {\r\n        magnitude: formatNumber(effects.magnitude),\r\n        explanation: explanations?.magnitude,\r\n        duration: formatNumber(Math.floor(effects.duration)),\r\n        durationExplanation: explanations?.duration,\r\n      },\r\n    );\r\n  }\r\n\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 400;\r\n  }\r\n}\r\n\r\nconst potionOfToughness = new PotionOfToughness();\r\n\r\nclass TransmutePotionOfToughness extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return potionOfToughness;\r\n  }\r\n\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Earth: 10,\r\n    };\r\n  }\r\n\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 300,\r\n        EarthEssence: 3000,\r\n      },\r\n      items: {\r\n        elementalShardWater: 5,\r\n        elementalShardEarth: 10,\r\n        slimeDrop: 10,\r\n      },\r\n    };\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Earth;\r\n  }\r\n}\r\n\r\nconst transmutePotionOfToughness = new TransmutePotionOfToughness();\r\n\r\nexport function loadPotionOfToughness() {\r\n  TemporaryEffects.register(temporaryEffect);\r\n  registerTransmutationSpellAndItem(transmutePotionOfToughness);\r\n\r\n  registerTransformation(\r\n    [[AttackTarget.Player, CombatStat.Defense]],\r\n    temporaryEffect.getId(),\r\n    temporaryEffect.getDisplayName(),\r\n    TransformationType.Addition,\r\n    (state) =>\r\n      hasTemporaryEffect(state, temporaryEffect.getId(), AttackTarget.Player)\r\n        ? getTemporaryEffectData(\r\n            state,\r\n            temporaryEffect.getId(),\r\n            AttackTarget.Player,\r\n          ).params.magnitude\r\n        : 0,\r\n  );\r\n\r\n  registerTemporaryEffectListener(temporaryEffect.getId(), (state, effect) => {\r\n    if (effect.id == temporaryEffect.getId()) {\r\n      state = clearCombatStatCache(\r\n        state,\r\n        AttackTarget.Player,\r\n        CombatStat.Defense,\r\n      );\r\n    }\r\n    return effect;\r\n  });\r\n}\r\n\r\nexport {\r\n  potionOfToughness as PotionOfToughness,\r\n  temporaryEffect as PotionOfToughnessTemporaryEffect,\r\n  transmutePotionOfToughness as TransmutePotionOfToughness,\r\n};\r\n","import { formatNumber } from \"../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../utils/I18n\";\r\nimport { ActionEffect } from \"../../../action/Action\";\r\nimport { AttackTarget } from \"../../../exploration/AttackTarget\";\r\nimport {\r\n  clearCombatStatCache,\r\n  CombatStat,\r\n} from \"../../../exploration/CombatStats\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { Resource } from \"../../../Resources\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport { TemporaryEffect } from \"../../../temporaryeffects/TemporaryEffect\";\r\nimport {\r\n  getTemporaryEffectData,\r\n  hasTemporaryEffect,\r\n  registerTemporaryEffectListener,\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n} from \"../../../temporaryeffects/TemporaryEffects\";\r\nimport {\r\n  registerTransformation,\r\n  TransformationType,\r\n} from \"../../../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../../transformation/TransformationTags\";\r\nimport { ItemParams } from \"../../Item\";\r\nimport { EquipmentTransmutationSpell } from \"../../transmute/EquipmentTransmutationSpell\";\r\nimport { registerTransmutationSpellAndItem } from \"../../transmute/TransmutationSpell\";\r\nimport { EquippableItem } from \"../EquippableItem\";\r\nimport { BuffingPouchItem } from \"./BuffingPouchItem\";\r\n\r\nclass PotionOfVitalityTemporaryEffect extends TemporaryEffect {\r\n  getId(): string {\r\n    return \"potionOfVitality\";\r\n  }\r\n  getDisplayName(): string {\r\n    return t(\"Potion of Vitality\");\r\n  }\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"+{{magnitude}}% :hp: regeneration in combat\", {\r\n      magnitude: formatNumber(temporaryEffectData.params.magnitude * 100),\r\n    });\r\n  }\r\n  getIcon() {\r\n    return require(\"./potionOfVitality.png\");\r\n  }\r\n}\r\n\r\nconst temporaryEffect = new PotionOfVitalityTemporaryEffect();\r\n\r\nclass PotionOfVitality extends BuffingPouchItem {\r\n  getTemporaryEffect(): TemporaryEffect {\r\n    return temporaryEffect;\r\n  }\r\n\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\"A magical concoction that improves your regeneration powers.\");\r\n  }\r\n\r\n  protected getBaseItemEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 0.5,\r\n        tags: [TransformationTags.TemporaryEffectMagnitude],\r\n        valueType: TransformationValueType.Percent,\r\n      },\r\n      duration: {\r\n        value: 300,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n      },\r\n    };\r\n  }\r\n\r\n  getEffect(state: GameState, params: ItemParams): string | undefined {\r\n    const effects = this.getItemEffects(state, params);\r\n    const explanations = this.getItemEffectExplanations(state, params);\r\n\r\n    return t(\r\n      \"^+{{magnitude}}%^<{{explanation}}> :hp: regeneration in combat for ^{{duration}}^<{{durationExplanation}}> sec\",\r\n      {\r\n        magnitude: formatNumber(effects.magnitude * 100),\r\n        explanation: explanations?.magnitude,\r\n        duration: formatNumber(Math.floor(effects.duration)),\r\n        durationExplanation: explanations?.duration,\r\n      },\r\n    );\r\n  }\r\n\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 400;\r\n  }\r\n}\r\n\r\nconst potionOfVitality = new PotionOfVitality();\r\n\r\nclass TransmutePotionOfVitality extends EquipmentTransmutationSpell {\r\n  getItem(): EquippableItem {\r\n    return potionOfVitality;\r\n  }\r\n\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Water: 10,\r\n    };\r\n  }\r\n\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 300,\r\n        WaterEssence: 3000,\r\n      },\r\n      items: {\r\n        elementalShardWater: 15,\r\n        slimeDrop: 10,\r\n      },\r\n    };\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Water;\r\n  }\r\n}\r\n\r\nconst transmutePotionOfVitality = new TransmutePotionOfVitality();\r\n\r\nexport function loadPotionOfVitality() {\r\n  TemporaryEffects.register(temporaryEffect);\r\n  registerTransmutationSpellAndItem(transmutePotionOfVitality);\r\n\r\n  registerTransformation(\r\n    [[AttackTarget.Player, CombatStat.HPRegen]],\r\n    temporaryEffect.getId(),\r\n    temporaryEffect.getDisplayName(),\r\n    TransformationType.Multiplier,\r\n    (state) =>\r\n      hasTemporaryEffect(state, temporaryEffect.getId(), AttackTarget.Player)\r\n        ? getTemporaryEffectData(\r\n            state,\r\n            temporaryEffect.getId(),\r\n            AttackTarget.Player,\r\n          ).params.magnitude + 1.0\r\n        : 1.0,\r\n  );\r\n  registerTemporaryEffectListener(temporaryEffect.getId(), (state, effect) => {\r\n    if (effect.id == temporaryEffect.getId()) {\r\n      state = clearCombatStatCache(\r\n        state,\r\n        AttackTarget.Player,\r\n        CombatStat.HPRegen,\r\n      );\r\n    }\r\n    return effect;\r\n  });\r\n}\r\n\r\nexport {\r\n  temporaryEffect as PotionOfVitalityTemporaryEffect,\r\n  potionOfVitality as PotionOfVitality,\r\n  transmutePotionOfVitality as TransmutePotionOfVitality,\r\n};\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { Resource } from \"../../../Resources\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport { Item, ItemParams } from \"../../Item\";\r\nimport { ItemTagEnum } from \"../../ItemTagEnum\";\r\nimport { TransmutationSpell } from \"../TransmutationSpell\";\r\n\r\nclass CopperIngot extends Item {\r\n  getId(): string {\r\n    return \"copperIngot\";\r\n  }\r\n\r\n  getTags(): ItemTagEnum[] {\r\n    return [ItemTagEnum.Material];\r\n  }\r\n\r\n  getPicture() {\r\n    return require(\"./copperIngot.png\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Fire;\r\n  }\r\n\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Copper Ingot\");\r\n  }\r\n\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"Processed Copper Ore. Although soft, in this state it can be used to make equipment.\",\r\n    );\r\n  }\r\n\r\n  getEffect(state: GameState, params: ItemParams): string | undefined {\r\n    return undefined;\r\n  }\r\n\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 300;\r\n  }\r\n}\r\n\r\nconst copperIngot = new CopperIngot();\r\n\r\nclass TransmuteCopperIngot extends TransmutationSpell {\r\n  getItem(): Item {\r\n    return copperIngot;\r\n  }\r\n\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Fire: 10,\r\n    };\r\n  }\r\n\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 250,\r\n        FireEssence: 7500,\r\n      },\r\n      items: { copperOre: 6 },\r\n    };\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Fire;\r\n  }\r\n}\r\n\r\nconst transmuteCopperIngot = new TransmuteCopperIngot();\r\n\r\nexport { transmuteCopperIngot, copperIngot };\r\n","import { valuesOf } from \"../../../../utils/CoreUtils\";\r\nimport { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { Resource } from \"../../../Resources\";\r\nimport { RESOURCE_FOR_ELEMENT } from \"../../../spells/channeling/ChannelingResources\";\r\nimport { SpellElement, translateElement } from \"../../../spells/Elements\";\r\nimport { Item, ItemParams } from \"../../Item\";\r\nimport { ItemTagEnum } from \"../../ItemTagEnum\";\r\nimport {\r\n  registerTransmutationSpellAndItem,\r\n  TransmutationSpell,\r\n} from \"../TransmutationSpell\";\r\n\r\nclass ElementalPrism extends Item {\r\n  element: SpellElement;\r\n  icon: any;\r\n  baseSalePrice: number;\r\n\r\n  constructor(element: SpellElement, icon: any, baseSalePrice: number) {\r\n    super();\r\n    this.element = element;\r\n    this.icon = icon;\r\n    this.baseSalePrice = baseSalePrice;\r\n  }\r\n\r\n  getId(): string {\r\n    return \"elementalPrism\" + this.element;\r\n  }\r\n\r\n  getTags(): ItemTagEnum[] {\r\n    return [ItemTagEnum.Material];\r\n  }\r\n\r\n  getPicture() {\r\n    return this.icon;\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return this.element;\r\n  }\r\n\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"{{element}} Prism\", { element: translateElement(this.element) });\r\n  }\r\n\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"A prism built with very-high-density {{resourceIcon}}. Useful for more advanced transmutation.\",\r\n      { resourceIcon: `:${RESOURCE_FOR_ELEMENT[this.element].toLowerCase()}:` },\r\n    );\r\n  }\r\n\r\n  getEffect(state: GameState, params: ItemParams): string | undefined {\r\n    return undefined;\r\n  }\r\n\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return this.baseSalePrice;\r\n  }\r\n}\r\n\r\nclass ElementalPrismTransmutation extends TransmutationSpell {\r\n  item: ElementalPrism;\r\n  essenceAmountRequired: number;\r\n\r\n  constructor(item: ElementalPrism, essenceAmountRequired: number) {\r\n    super();\r\n    this.item = item;\r\n    this.essenceAmountRequired = essenceAmountRequired;\r\n  }\r\n\r\n  getItem(): Item {\r\n    return this.item;\r\n  }\r\n\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    const requirements = {};\r\n    requirements[this.item.getElement()] = 24;\r\n    return requirements;\r\n  }\r\n\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    const resources = { Mana: 200 };\r\n    resources[RESOURCE_FOR_ELEMENT[this.item.getElement()]] =\r\n      this.essenceAmountRequired;\r\n    return {\r\n      resources,\r\n      items: {},\r\n    };\r\n  }\r\n\r\n  getBaseAutocastPointsRequirement(): number {\r\n    return 30;\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return this.item.getElement();\r\n  }\r\n}\r\n\r\nexport function loadElementalPrisms() {\r\n  const perElementData: Record<SpellElement, any> = {\r\n    Fire: {\r\n      icon: require(\"./firePrism.png\"),\r\n      salePriceMultiplier: 1.5,\r\n    },\r\n    Earth: {\r\n      icon: require(\"./earthPrism.png\"),\r\n      salePriceMultiplier: 1.5,\r\n    },\r\n    Water: {\r\n      icon: require(\"./waterPrism.png\"),\r\n      salePriceMultiplier: 1.0,\r\n    },\r\n    Air: {\r\n      icon: require(\"./airPrism.png\"),\r\n      salePriceMultiplier: 1.0,\r\n    },\r\n    Poison: {\r\n      icon: require(\"./poisonPrism.png\"),\r\n      salePriceMultiplier: 3.0,\r\n    },\r\n    Mind: {\r\n      icon: require(\"./mindPrism.png\"),\r\n      salePriceMultiplier: 2.0,\r\n    },\r\n    Life: {\r\n      icon: require(\"./lifePrism.png\"),\r\n      salePriceMultiplier: 2.5,\r\n    },\r\n    Electric: {\r\n      icon: require(\"./electricPrism.png\"),\r\n      salePriceMultiplier: 10.0,\r\n    },\r\n    Death: {\r\n      icon: require(\"./deathPrism.png\"),\r\n      salePriceMultiplier: 5.0,\r\n    },\r\n    Holy: {\r\n      icon: require(\"./holyPrism.png\"),\r\n      salePriceMultiplier: 6.0,\r\n    },\r\n    Time: {\r\n      icon: require(\"./timePrism.png\"),\r\n      salePriceMultiplier: 1.5,\r\n    },\r\n    Space: {\r\n      icon: require(\"./spacePrism.png\"),\r\n      salePriceMultiplier: 2.0,\r\n    },\r\n  };\r\n  const basePrice = 2000;\r\n  const baseEssenceAmount = 50000;\r\n  for (let element of valuesOf(SpellElement)) {\r\n    const perElement = perElementData[element];\r\n    const prismItem = new ElementalPrism(\r\n      element,\r\n      perElement.icon,\r\n      basePrice * perElement.salePriceMultiplier,\r\n    );\r\n    const transmuteSpell = new ElementalPrismTransmutation(\r\n      prismItem,\r\n      baseEssenceAmount,\r\n    );\r\n    registerTransmutationSpellAndItem(transmuteSpell);\r\n  }\r\n}\r\n","import { valuesOf } from \"../../../../utils/CoreUtils\";\r\nimport { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { Resource } from \"../../../Resources\";\r\nimport { RESOURCE_FOR_ELEMENT } from \"../../../spells/channeling/ChannelingResources\";\r\nimport { SpellElement, translateElement } from \"../../../spells/Elements\";\r\nimport { Item, ItemParams } from \"../../Item\";\r\nimport { ItemTagEnum } from \"../../ItemTagEnum\";\r\nimport {\r\n  registerTransmutationSpellAndItem,\r\n  TransmutationSpell,\r\n} from \"../TransmutationSpell\";\r\n\r\nclass ElementalShard extends Item {\r\n  element: SpellElement;\r\n  icon: any;\r\n  baseSalePrice: number;\r\n\r\n  constructor(element: SpellElement, icon: any, baseSalePrice: number) {\r\n    super();\r\n    this.element = element;\r\n    this.icon = icon;\r\n    this.baseSalePrice = baseSalePrice;\r\n  }\r\n\r\n  getId(): string {\r\n    return \"elementalShard\" + this.element;\r\n  }\r\n\r\n  getTags(): ItemTagEnum[] {\r\n    return [ItemTagEnum.Material];\r\n  }\r\n\r\n  getPicture() {\r\n    return this.icon;\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return this.element;\r\n  }\r\n\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"{{element}} Shard\", { element: translateElement(this.element) });\r\n  }\r\n\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"A shard resulting from concentrating {{resourceIcon}}. Useful for further transmutation.\",\r\n      { resourceIcon: `:${RESOURCE_FOR_ELEMENT[this.element].toLowerCase()}:` },\r\n    );\r\n  }\r\n\r\n  getEffect(state: GameState, params: ItemParams): string | undefined {\r\n    return undefined;\r\n  }\r\n\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return this.baseSalePrice;\r\n  }\r\n}\r\n\r\nclass ElementalShardTransmutation extends TransmutationSpell {\r\n  item: ElementalShard;\r\n  essenceAmountRequired: number;\r\n\r\n  constructor(item: ElementalShard, essenceAmountRequired: number) {\r\n    super();\r\n    this.item = item;\r\n    this.essenceAmountRequired = essenceAmountRequired;\r\n  }\r\n\r\n  getItem(): Item {\r\n    return this.item;\r\n  }\r\n\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    const requirements = {};\r\n    requirements[this.item.getElement()] = 2;\r\n    return requirements;\r\n  }\r\n\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    const resources = { Mana: 20 };\r\n    resources[RESOURCE_FOR_ELEMENT[this.item.getElement()]] =\r\n      this.essenceAmountRequired;\r\n    return {\r\n      resources,\r\n      items: {},\r\n    };\r\n  }\r\n\r\n  getBaseAutocastPointsRequirement(): number {\r\n    return 20;\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return this.item.getElement();\r\n  }\r\n}\r\n\r\nexport function loadElementalShards() {\r\n  const perElementData: Record<SpellElement, any> = {\r\n    Fire: {\r\n      icon: require(\"./fireShard.png\"),\r\n      salePriceMultiplier: 1.5,\r\n    },\r\n    Earth: {\r\n      icon: require(\"./earthShard.png\"),\r\n      salePriceMultiplier: 1.5,\r\n    },\r\n    Water: {\r\n      icon: require(\"./waterShard.png\"),\r\n      salePriceMultiplier: 1.0,\r\n    },\r\n    Air: {\r\n      icon: require(\"./airShard.png\"),\r\n      salePriceMultiplier: 1.0,\r\n    },\r\n    Poison: {\r\n      icon: require(\"./poisonShard.png\"),\r\n      salePriceMultiplier: 3.0,\r\n    },\r\n    Mind: {\r\n      icon: require(\"./mindShard.png\"),\r\n      salePriceMultiplier: 2.0,\r\n    },\r\n    Life: {\r\n      icon: require(\"./lifeShard.png\"),\r\n      salePriceMultiplier: 2.5,\r\n    },\r\n    Electric: {\r\n      icon: require(\"./electricShard.png\"),\r\n      salePriceMultiplier: 10.0,\r\n    },\r\n    Death: {\r\n      icon: require(\"./deathShard.png\"),\r\n      salePriceMultiplier: 5.0,\r\n    },\r\n    Holy: {\r\n      icon: require(\"./holyShard.png\"),\r\n      salePriceMultiplier: 6.0,\r\n    },\r\n    Time: {\r\n      icon: require(\"./timeShard.png\"),\r\n      salePriceMultiplier: 1.5,\r\n    },\r\n    Space: {\r\n      icon: require(\"./spaceShard.png\"),\r\n      salePriceMultiplier: 2.0,\r\n    },\r\n  };\r\n  const basePrice = 100;\r\n  const baseEssenceAmount = 500;\r\n  for (let element of valuesOf(SpellElement)) {\r\n    const perElement = perElementData[element];\r\n    const shardItem = new ElementalShard(\r\n      element,\r\n      perElement.icon,\r\n      basePrice * perElement.salePriceMultiplier,\r\n    );\r\n    const transmuteSpell = new ElementalShardTransmutation(\r\n      shardItem,\r\n      baseEssenceAmount,\r\n    );\r\n    registerTransmutationSpellAndItem(transmuteSpell);\r\n  }\r\n}\r\n","import { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { Resource } from \"../../../Resources\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport { Item, ItemParams } from \"../../Item\";\r\nimport { ItemTagEnum } from \"../../ItemTagEnum\";\r\nimport { TransmutationSpell } from \"../TransmutationSpell\";\r\n\r\nclass ThickHide extends Item {\r\n  getId(): string {\r\n    return \"thickHide\";\r\n  }\r\n\r\n  getTags(): ItemTagEnum[] {\r\n    return [ItemTagEnum.Material];\r\n  }\r\n\r\n  getPicture() {\r\n    return require(\"./thickHide.png\");\r\n  }\r\n\r\n  getBaseName(params: ItemParams): string {\r\n    return t(\"Thick Hide\");\r\n  }\r\n\r\n  getDescription(state: GameState, params: ItemParams): string | undefined {\r\n    return t(\r\n      \"Thick hide from an animal. Flexible yet resistant, useful for light armor.\",\r\n    );\r\n  }\r\n\r\n  getEffect(state: GameState, params: ItemParams): string | undefined {\r\n    return undefined;\r\n  }\r\n\r\n  getBaseSalePrice(state: GameState, params: ItemParams): number {\r\n    return 160;\r\n  }\r\n}\r\n\r\nexport const thickHide = new ThickHide();\r\n\r\nclass TransmuteThickHide extends TransmutationSpell {\r\n  getItem(): Item {\r\n    return thickHide;\r\n  }\r\n\r\n  getCraftingElementLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Earth: 16,\r\n    };\r\n  }\r\n\r\n  getCraftingMaterialsBase(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: 500,\r\n        EarthEssence: 10000,\r\n      },\r\n      items: {\r\n        elementalShardEarth: 5,\r\n      },\r\n    };\r\n  }\r\n\r\n  getBaseAutocastPointsRequirement(): number {\r\n    return 5;\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Earth;\r\n  }\r\n}\r\n\r\nexport const transmuteThickHide = new TransmuteThickHide();\r\n","import { transmuteCloakOfDarkness } from \"./equipment/accessory/air/CloakOfDarkness\";\r\nimport { TransmuteFeatheredHat } from \"./equipment/accessory/air/FeatheredHat\";\r\nimport { transmuteCopperShield } from \"./equipment/accessory/earth/CopperShield\";\r\nimport { transmuteSmallShield } from \"./equipment/accessory/earth/SmallShield\";\r\nimport { transmuteStoneEgg } from \"./equipment/accessory/earth/StoneEgg\";\r\nimport { transmuteCollarOfPower } from \"./equipment/accessory/fire/CollarOfPower\";\r\nimport { transmuteAssassinsCloak } from \"./equipment/accessory/poison/AssassinsCloak\";\r\nimport { transmuteCharmOfPoisonResistance } from \"./equipment/accessory/poison/CharmOfPoisonResistance\";\r\nimport { transmuteSoulStone } from \"./equipment/accessory/poison/SoulStone\";\r\nimport { TransmuteManaTear } from \"./equipment/accessory/water/ManaTear\";\r\nimport { transmuteRingOfRegeneration } from \"./equipment/accessory/water/RingOfRegeneration\";\r\nimport { transmuteWizardsHat } from \"./equipment/accessory/water/WizardsHat\";\r\nimport { TransmuteBreezyShirt } from \"./equipment/body/air/BreezyShirt\";\r\nimport { transmuteEvasiveGarb } from \"./equipment/body/air/EvasiveGarb\";\r\nimport { transmuteCopperArmor } from \"./equipment/body/earth/CopperArmor\";\r\nimport { TransmuteStoneMail } from \"./equipment/body/earth/StoneMail\";\r\nimport { transmuteTurtleArmor } from \"./equipment/body/earth/TurtleArmor\";\r\nimport { transmuteLeatherArmor } from \"./equipment/body/fire/LeatherArmor\";\r\nimport { transmuteReinforcedLeatherArmor } from \"./equipment/body/fire/ReinforcedLeatherArmor\";\r\nimport { transmuteElderWizardsRobe } from \"./equipment/body/water/ElderWizardsRobe\";\r\nimport { transmuteTunicOfGoodHealth } from \"./equipment/body/water/TunicOfGoodHealth\";\r\nimport { TransmuteWizardsRobe } from \"./equipment/body/water/WizardsRobe\";\r\nimport { transmuteCopperGauntlet } from \"./equipment/hand/air/CopperGauntlet\";\r\nimport { transmuteGaleScepter } from \"./equipment/hand/air/GaleScepter\";\r\nimport { transmuteGlaive } from \"./equipment/hand/air/Glaive\";\r\nimport { TransmuteKnuckles } from \"./equipment/hand/air/Knuckles\";\r\nimport { transmuteBastardSword } from \"./equipment/hand/earth/BastardSword\";\r\nimport { transmuteCopperRapier } from \"./equipment/hand/earth/CopperRapier\";\r\nimport { TransmuteLongsword } from \"./equipment/hand/earth/Longsword\";\r\nimport { TransmuteBattleAxe } from \"./equipment/hand/fire/BattleAxe\";\r\nimport { transmuteCopperTomahawk } from \"./equipment/hand/fire/CopperTomahawk\";\r\nimport { transmuteCopperWarhammer } from \"./equipment/hand/fire/CopperWarhammer\";\r\nimport { TransmuteHandAxe } from \"./equipment/hand/fire/HandAxe\";\r\nimport { transmuteRedConflagration } from \"./equipment/hand/fire/RedConflagration\";\r\nimport { transmuteWandOfFire } from \"./equipment/hand/fire/WandOfFire\";\r\nimport { transmuteAssassinsBaselard } from \"./equipment/hand/poison/AssassinsBaselard\";\r\nimport { transmuteDagger } from \"./equipment/hand/poison/Dagger\";\r\nimport { transmuteShadowBlade } from \"./equipment/hand/poison/ShadowBlade\";\r\nimport { transmuteWandOfPoison } from \"./equipment/hand/poison/WandOfPoison\";\r\nimport { TransmuteRod } from \"./equipment/hand/water/Rod\";\r\nimport { transmuteWandOfWater } from \"./equipment/hand/water/WandOfWater\";\r\nimport { transmuteAntidotePotion } from \"./equipment/pouch/AntidotePotion\";\r\nimport { Cherry } from \"./equipment/pouch/Cherry\";\r\nimport { TransmuteHealthPotion } from \"./equipment/pouch/HealthPotion\";\r\nimport { loadPotionOfAlacrity } from \"./equipment/pouch/PotionOfAlacrity\";\r\nimport { loadPotionOfEvasion } from \"./equipment/pouch/PotionOfEvasion\";\r\nimport { loadPotionOfMuscle } from \"./equipment/pouch/PotionOfMuscle\";\r\nimport { loadPotionOfToughness } from \"./equipment/pouch/PotionOfToughness\";\r\nimport { loadPotionOfVitality } from \"./equipment/pouch/PotionOfVitality\";\r\nimport { transmuteVenomousBrew } from \"./equipment/pouch/VenomousBrew\";\r\nimport { loadPouch } from \"./equipment/PouchItem\";\r\nimport { Items } from \"./Items\";\r\nimport SlimeDrop from \"./material/SlimeDrop\";\r\nimport VenomPowder from \"./material/VenomPowder\";\r\nimport Wildgrass from \"./material/Wildgrass\";\r\nimport EtherealEelExtract from \"./quest/EtherealEelExtract\";\r\nimport { transmuteCopperIngot } from \"./transmute/materials/CopperIngot\";\r\nimport { transmuteCopperOre } from \"./transmute/materials/CopperOre\";\r\nimport { transmuteCotton } from \"./transmute/materials/Cotton\";\r\nimport { loadElementalPrisms } from \"./transmute/materials/ElementalPrism\";\r\nimport { loadElementalShards } from \"./transmute/materials/ElementalShard\";\r\nimport { transmutePaper } from \"./transmute/materials/Paper\";\r\nimport { transmuteThickHide } from \"./transmute/materials/ThickHide\";\r\nimport { registerTransmutationSpellAndItem } from \"./transmute/TransmutationSpell\";\r\n\r\nexport function loadItemsDemo() {\r\n  loadPouch();\r\n\r\n  // Loot\r\n  Items.register(Wildgrass);\r\n  Items.register(SlimeDrop);\r\n  Items.register(Cherry);\r\n  Items.register(VenomPowder);\r\n  Items.register(EtherealEelExtract);\r\n\r\n  // Transmutable\r\n  loadElementalShards();\r\n  registerTransmutationSpellAndItem(transmutePaper);\r\n  registerTransmutationSpellAndItem(transmuteCopperOre);\r\n  registerTransmutationSpellAndItem(transmuteCopperIngot);\r\n  registerTransmutationSpellAndItem(transmuteCotton);\r\n  loadElementalPrisms();\r\n\r\n  // Fire\r\n  registerTransmutationSpellAndItem(TransmuteHandAxe);\r\n  registerTransmutationSpellAndItem(transmuteLeatherArmor);\r\n  loadPotionOfMuscle();\r\n  registerTransmutationSpellAndItem(TransmuteBattleAxe);\r\n  registerTransmutationSpellAndItem(transmuteCopperTomahawk);\r\n  registerTransmutationSpellAndItem(transmuteCopperWarhammer);\r\n  registerTransmutationSpellAndItem(transmuteCollarOfPower);\r\n  registerTransmutationSpellAndItem(transmuteReinforcedLeatherArmor);\r\n  registerTransmutationSpellAndItem(transmuteRedConflagration);\r\n  registerTransmutationSpellAndItem(transmuteWandOfFire);\r\n\r\n  // Earth\r\n  registerTransmutationSpellAndItem(TransmuteLongsword);\r\n  registerTransmutationSpellAndItem(TransmuteStoneMail);\r\n  registerTransmutationSpellAndItem(transmuteSmallShield);\r\n  loadPotionOfToughness();\r\n  registerTransmutationSpellAndItem(transmuteBastardSword);\r\n  registerTransmutationSpellAndItem(transmuteCopperRapier);\r\n  registerTransmutationSpellAndItem(transmuteCopperArmor);\r\n  registerTransmutationSpellAndItem(transmuteCopperShield);\r\n  registerTransmutationSpellAndItem(transmuteStoneEgg);\r\n  registerTransmutationSpellAndItem(transmuteTurtleArmor);\r\n  registerTransmutationSpellAndItem(transmuteThickHide);\r\n\r\n  // Water\r\n  registerTransmutationSpellAndItem(TransmuteManaTear);\r\n  registerTransmutationSpellAndItem(TransmuteRod);\r\n  registerTransmutationSpellAndItem(TransmuteWizardsRobe);\r\n  registerTransmutationSpellAndItem(TransmuteHealthPotion);\r\n  loadPotionOfVitality();\r\n  registerTransmutationSpellAndItem(transmuteWandOfWater);\r\n  registerTransmutationSpellAndItem(transmuteElderWizardsRobe);\r\n  registerTransmutationSpellAndItem(transmuteWizardsHat);\r\n  registerTransmutationSpellAndItem(transmuteTunicOfGoodHealth);\r\n  registerTransmutationSpellAndItem(transmuteRingOfRegeneration);\r\n\r\n  // Air\r\n  registerTransmutationSpellAndItem(TransmuteFeatheredHat);\r\n  registerTransmutationSpellAndItem(TransmuteKnuckles);\r\n  registerTransmutationSpellAndItem(TransmuteBreezyShirt);\r\n  loadPotionOfAlacrity();\r\n  registerTransmutationSpellAndItem(transmuteGlaive);\r\n  registerTransmutationSpellAndItem(transmuteCloakOfDarkness);\r\n  registerTransmutationSpellAndItem(transmuteCopperGauntlet);\r\n  registerTransmutationSpellAndItem(transmuteEvasiveGarb);\r\n  registerTransmutationSpellAndItem(transmuteGaleScepter);\r\n\r\n  // Poison\r\n  registerTransmutationSpellAndItem(transmuteCharmOfPoisonResistance);\r\n  registerTransmutationSpellAndItem(transmuteDagger);\r\n  registerTransmutationSpellAndItem(transmuteAntidotePotion);\r\n  registerTransmutationSpellAndItem(transmuteVenomousBrew);\r\n  registerTransmutationSpellAndItem(transmuteAssassinsBaselard);\r\n  registerTransmutationSpellAndItem(transmuteAssassinsCloak);\r\n  registerTransmutationSpellAndItem(transmuteSoulStone);\r\n  loadPotionOfEvasion();\r\n  registerTransmutationSpellAndItem(transmuteWandOfPoison);\r\n  registerTransmutationSpellAndItem(transmuteShadowBlade);\r\n}\r\n","import { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { ActionEffect } from \"../../action/Action\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { CombatSpellBase } from \"../CombatSpellBase\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport { registerStandardEmpowerEffects } from \"../Spells\";\r\nimport {\r\n  getStandardSpellAttackEffect,\r\n  getStandardSpellAttackEffectText,\r\n} from \"../Utils\";\r\n\r\nclass AirBlast extends CombatSpellBase {\r\n  getId(): string {\r\n    return \"airBlast\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Air Blast\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Air;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.ATTACK;\r\n  }\r\n\r\n  getExtraTags(): string[] {\r\n    return [TransformationTags.AttackSpell];\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 80;\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Push an enemy backwards with a blast of air, slightly damaging them. Easy to use repeatedly.\",\r\n    );\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      average: {\r\n        value: 25,\r\n        tags: [TransformationTags.ActionMagnitude],\r\n        unit: \":attack:\",\r\n      },\r\n      variance: {\r\n        value: 5,\r\n        tags: [TransformationTags.ActionVariance],\r\n        unit: \":attack:\",\r\n      },\r\n    };\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    return getStandardSpellAttackEffectText(state, this);\r\n  }\r\n\r\n  doSpellAction(state: GameState): GameState {\r\n    return getStandardSpellAttackEffect(state, this);\r\n  }\r\n\r\n  getBaseCooldown(): number {\r\n    return 0.5;\r\n  }\r\n\r\n  getBaseAutocastPointsRequirement(): number {\r\n    return 10;\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Air: 7,\r\n    };\r\n  }\r\n\r\n  protected isEmpowerable(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getEmpoweringLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Air: 43 };\r\n  }\r\n}\r\n\r\nconst airBlast = new AirBlast();\r\n\r\nregisterStandardEmpowerEffects(airBlast, 6, 15);\r\n\r\nexport default airBlast as AirBlast;\r\n","import { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { ActionEffect, DoActionArgs } from \"../../action/Action\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { CombatStat } from \"../../exploration/CombatStats\";\r\nimport { TemporaryEffect } from \"../../temporaryeffects/TemporaryEffect\";\r\nimport {\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n  grantTemporaryEffect,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport { TransformationType } from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { CombatSpellBase } from \"../CombatSpellBase\";\r\nimport { SpellElement } from \"../Elements\";\r\n\r\nclass BlurTemporaryEffect extends TemporaryEffect {\r\n  getId() {\r\n    return \"blur\";\r\n  }\r\n\r\n  getDisplayName(): string {\r\n    return t(\"Blur\");\r\n  }\r\n\r\n  getIcon() {\r\n    return require(\"./blur.png\");\r\n  }\r\n\r\n  isCommonBuffEnabled(): { stat: CombatStat; type: TransformationType }[] {\r\n    return [{ stat: CombatStat.Dodge, type: TransformationType.Addition }];\r\n  }\r\n\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"+{{amount}}:dodge:\", {\r\n      amount: formatNumber(temporaryEffectData.params.commonBuff.Dodge),\r\n    });\r\n  }\r\n}\r\n\r\nexport const blurTemporaryEffect = new BlurTemporaryEffect();\r\nTemporaryEffects.register(blurTemporaryEffect);\r\n\r\nclass Blur extends CombatSpellBase {\r\n  getId(): string {\r\n    return \"blur\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Blur\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Air;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.COMBAT_BUFF;\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 1200;\r\n  }\r\n\r\n  canUseOutsideOfCombat(): boolean {\r\n    return true;\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 30,\r\n        tags: [TransformationTags.TemporaryEffectMagnitude],\r\n        unit: \":dodge:\",\r\n      },\r\n      duration: {\r\n        value: 15.0,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n        unit: t(\" sec\"),\r\n      },\r\n    };\r\n  }\r\n\r\n  doSpellAction(state: GameState, args: DoActionArgs): GameState {\r\n    const effects = this.getActionEffects(state);\r\n    return grantTemporaryEffect(blurTemporaryEffect.getId(), effects.duration, {\r\n      params: { commonBuff: { Dodge: effects.magnitude } },\r\n    })(state);\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\"Make yourself harder to spot and target by enemies.\");\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanations = this.getActionEffectExplanations(state);\r\n    return t(\r\n      \"^+{{amount}}^<{{amountExplanation}}>:dodge: for ^{{duration}}^<{{durationExplanation}}> sec\",\r\n      {\r\n        amount: formatNumber(effects.magnitude),\r\n        amountExplanation: explanations.magnitude,\r\n        duration: formatNumber(effects.duration),\r\n        durationExplanation: explanations.duration,\r\n      },\r\n    );\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Air: 14 };\r\n  }\r\n}\r\n\r\nexport const blur = new Blur();\r\n","import { formatMultiplier, formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { ActionEffect, DoActionArgs } from \"../../action/Action\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { BuildSaleStall } from \"../../buildings/SaleStall\";\r\nimport { TemporaryEffect } from \"../../temporaryeffects/TemporaryEffect\";\r\nimport {\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n  getTemporaryEffectData,\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport {\r\n  TransformationType,\r\n  registerTransformation,\r\n} from \"../../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../transformation/TransformationTags\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport { Spell } from \"../Spell\";\r\n\r\nclass EnchantSaleStallsTemporaryEffect extends TemporaryEffect {\r\n  getId() {\r\n    return \"enchantSaleStalls\";\r\n  }\r\n\r\n  getDisplayName(): string {\r\n    return t(\"Enchant Market Stalls\");\r\n  }\r\n\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"-{{magnitudePct}}% time between sales from Market Stalls\", {\r\n      magnitudePct: formatNumber(\r\n        (1.0 - 1.0 / (temporaryEffectData.params.magnitude + 1.0)) * 100,\r\n      ),\r\n    });\r\n  }\r\n}\r\n\r\nconst temporaryEffect = new EnchantSaleStallsTemporaryEffect();\r\nTemporaryEffects.register(temporaryEffect);\r\n\r\nclass EnchantSaleStalls extends Spell {\r\n  getId(): string {\r\n    return \"enchantSaleStalls\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Enchant Market Stalls\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Air;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.GENERAL_BUFF;\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 150;\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 0.25,\r\n        tags: [TransformationTags.TemporaryEffectMagnitude],\r\n        valueType: TransformationValueType.Divisor,\r\n      },\r\n      duration: {\r\n        value: 30.0,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n        unit: t(\" sec\"),\r\n      },\r\n    };\r\n  }\r\n\r\n  doSpellAction(state: GameState, args: DoActionArgs): GameState {\r\n    const effects = this.getActionEffects(state);\r\n    return grantTemporaryEffect(temporaryEffect.getId(), effects.duration, {\r\n      params: { magnitude: effects.magnitude },\r\n    })(state);\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return BuildSaleStall.isVisible(state) && super.isVisible(state);\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Use Air to make your Market Stalls more efficient, selling faster for a limited time.\",\r\n    );\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanations = this.getActionEffectExplanations(state);\r\n    return t(\r\n      \"^{{magnitudePct}}^<{{magnitudeExplanation}}> time between sales from Market Stalls for ^{{duration}}^<{{durationExplanation}}> sec\",\r\n      {\r\n        magnitudePct: formatMultiplier(1.0 / (1 + effects.magnitude)),\r\n        magnitudeExplanation: explanations.magnitude,\r\n        duration: formatNumber(effects.duration),\r\n        durationExplanation: explanations.duration,\r\n      },\r\n    );\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Air: 3 };\r\n  }\r\n}\r\n\r\nconst enchantSaleStalls = new EnchantSaleStalls();\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.TimePerAutoSalePerStall]],\r\n  temporaryEffect.getId(),\r\n  enchantSaleStalls.getSpellName(),\r\n  TransformationType.Multiplier,\r\n  (state) =>\r\n    hasTemporaryEffect(state, enchantSaleStalls.getId())\r\n      ? 1.0 /\r\n        (getTemporaryEffectData(state, temporaryEffect.getId()).params\r\n          .magnitude +\r\n          1.0)\r\n      : 1.0,\r\n);\r\n\r\nexport default enchantSaleStalls;\r\n","import { formatMultiplier, formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { ActionEffect, DoActionArgs } from \"../../action/Action\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { TemporaryEffect } from \"../../temporaryeffects/TemporaryEffect\";\r\nimport {\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n  getTemporaryEffectData,\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport {\r\n  TransformationType,\r\n  registerTransformation,\r\n} from \"../../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../transformation/TransformationTags\";\r\nimport { CombatSpellBase } from \"../CombatSpellBase\";\r\nimport { SpellElement } from \"../Elements\";\r\n\r\nclass LevitationTemporaryEffect extends TemporaryEffect {\r\n  getId() {\r\n    return \"levitation\";\r\n  }\r\n\r\n  getDisplayName(): string {\r\n    return t(\"Levitation\");\r\n  }\r\n\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"-{{magnitude}}% time between Explorations\", {\r\n      magnitude: formatNumber(\r\n        Math.abs(1 - 1 / (temporaryEffectData.params.magnitude + 1)) * 100,\r\n      ),\r\n    });\r\n  }\r\n}\r\n\r\nconst temporaryEffect = new LevitationTemporaryEffect();\r\nTemporaryEffects.register(temporaryEffect);\r\n\r\nclass Levitation extends CombatSpellBase {\r\n  getId(): string {\r\n    return \"levitation\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Levitation\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Air;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.GENERAL_BUFF;\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 250;\r\n  }\r\n\r\n  canUseOutsideOfCombat(): boolean {\r\n    return true;\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 0.66667,\r\n        tags: [TransformationTags.TemporaryEffectMagnitude],\r\n        valueType: TransformationValueType.Divisor,\r\n      },\r\n      duration: {\r\n        value: 60.0,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n        unit: t(\" sec\"),\r\n      },\r\n    };\r\n  }\r\n\r\n  doSpellAction(state: GameState, args: DoActionArgs): GameState {\r\n    const effects = this.getActionEffects(state);\r\n    return grantTemporaryEffect(temporaryEffect.getId(), effects.duration, {\r\n      params: {\r\n        magnitude: effects.magnitude,\r\n      },\r\n    })(state);\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Make your body float. Without needing to walk, exploring is much faster.\",\r\n    );\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanations = this.getActionEffectExplanations(state);\r\n    return t(\r\n      \"^{{magnitude}}^<{{magnitudeExplanation}}> time between Explorations for ^{{duration}}^<{{durationExplanation}}> sec\",\r\n      {\r\n        magnitude: formatMultiplier(1.0 / (effects.magnitude + 1)),\r\n        magnitudeExplanation: explanations.magnitude,\r\n        duration: formatNumber(effects.duration),\r\n        durationExplanation: explanations.duration,\r\n      },\r\n    );\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Air: 11 };\r\n  }\r\n}\r\n\r\nconst levitation = new Levitation();\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.ExplorationDelay]],\r\n  levitation.getId(),\r\n  levitation.getSpellName(),\r\n  TransformationType.Multiplier,\r\n  (state, params) =>\r\n    hasTemporaryEffect(state, levitation.getId())\r\n      ? 1 /\r\n        (1 + getTemporaryEffectData(state, levitation.getId()).params.magnitude)\r\n      : 1.0,\r\n);\r\n\r\nexport {\r\n  levitation as Levitation,\r\n  temporaryEffect as LevitationTemporaryEffect,\r\n};\r\n","import { formatMultiplier, formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport { ActionEffect, DoActionArgs } from \"../../action/Action\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { BuildSaleStall } from \"../../buildings/SaleStall\";\r\nimport { TemporaryEffect } from \"../../temporaryeffects/TemporaryEffect\";\r\nimport {\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n  getTemporaryEffectData,\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport {\r\n  TransformationType,\r\n  registerTransformation,\r\n} from \"../../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../transformation/TransformationTags\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport { Spell } from \"../Spell\";\r\nimport { registerEmpowerEffects } from \"../Spells\";\r\n\r\nclass RichnessTemporaryEffect extends TemporaryEffect {\r\n  getId() {\r\n    return \"richness\";\r\n  }\r\n\r\n  getDisplayName(): string {\r\n    return t(\"Richness\");\r\n  }\r\n\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"+{{magnitudePct}}% item sale price from Market Stalls\", {\r\n      magnitudePct: formatNumber(temporaryEffectData.params.magnitude * 100),\r\n    });\r\n  }\r\n}\r\n\r\nconst temporaryEffect = new RichnessTemporaryEffect();\r\nTemporaryEffects.register(temporaryEffect);\r\n\r\nclass Richness extends Spell {\r\n  getId(): string {\r\n    return \"richness\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Richness\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Air;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.GENERAL_BUFF;\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 1300;\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 0.5,\r\n        tags: [TransformationTags.TemporaryEffectMagnitude],\r\n        valueType: TransformationValueType.Percent,\r\n      },\r\n      duration: {\r\n        value: 20.0,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n        unit: t(\" sec\"),\r\n      },\r\n    };\r\n  }\r\n\r\n  doSpellAction(state: GameState, args: DoActionArgs): GameState {\r\n    const effects = this.getActionEffects(state);\r\n    return grantTemporaryEffect(temporaryEffect.getId(), effects.duration, {\r\n      params: { magnitude: effects.magnitude },\r\n    })(state);\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return BuildSaleStall.isVisible(state) && super.isVisible(state);\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Make your items sold by your Market Stalls appear more luxurious. People will pay more.\",\r\n    );\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanations = this.getActionEffectExplanations(state);\r\n    return t(\r\n      \"^{{magnitude}}^<{{magnitudeExplanation}}> item sale price from Market Stalls for ^{{duration}}^<{{durationExplanation}}> sec\",\r\n      {\r\n        magnitude: formatMultiplier(1.0 + effects.magnitude),\r\n        magnitudeExplanation: explanations.magnitude,\r\n        duration: formatNumber(effects.duration),\r\n        durationExplanation: explanations.duration,\r\n      },\r\n    );\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Air: 21 };\r\n  }\r\n\r\n  protected isEmpowerable(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getEmpoweringLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Air: 54 };\r\n  }\r\n}\r\n\r\nconst richness = new Richness();\r\n\r\nregisterEmpowerEffects(richness, [TransformationTags.Cost, Resource.Mana], 10);\r\nregisterEmpowerEffects(\r\n  richness,\r\n  [TransformationTags.TemporaryEffectMagnitude],\r\n  3,\r\n);\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.SaleStallRevenue]],\r\n  temporaryEffect.getId(),\r\n  richness.getSpellName(),\r\n  TransformationType.Multiplier,\r\n  (state) =>\r\n    hasTemporaryEffect(state, richness.getId())\r\n      ? getTemporaryEffectData(state, temporaryEffect.getId()).params\r\n          .magnitude + 1.0\r\n      : 1.0,\r\n);\r\n\r\nexport default richness;\r\n","import { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { ActionEffect } from \"../../action/Action\";\r\nimport { AutocastRule, SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { AttackTarget } from \"../../exploration/AttackTarget\";\r\nimport { getLastQueuedActionResult } from \"../../exploration/ExplorationUtils\";\r\nimport { airborne } from \"../../temporaryeffects/Airborne\";\r\nimport {\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { CombatSpellBase } from \"../CombatSpellBase\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport {\r\n  getStandardAttackEffectText,\r\n  getStandardSpellAttackEffect,\r\n} from \"../Utils\";\r\n\r\nclass Twister extends CombatSpellBase {\r\n  getId(): string {\r\n    return \"twister\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Twister\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Air;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.ATTACK;\r\n  }\r\n\r\n  getExtraTags(): string[] {\r\n    return [TransformationTags.AttackSpell];\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 850;\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Create a mass of unstable air, dealing damage to the enemy. Easy to use repeatedly.\",\r\n    );\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      average: {\r\n        value: 85,\r\n        tags: [TransformationTags.ActionMagnitude],\r\n        unit: \":attack:\",\r\n      },\r\n      variance: {\r\n        value: 5,\r\n        tags: [TransformationTags.ActionVariance],\r\n        unit: \":attack:\",\r\n      },\r\n      duration: {\r\n        value: 2,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n        unit: t(\" sec\"),\r\n      },\r\n    };\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanations = this.getActionEffectExplanations(state);\r\n    const standardEffect = getStandardAttackEffectText(\r\n      effects.average,\r\n      effects.variance,\r\n      explanations.average,\r\n    );\r\n    const effectExplanation =\r\n      airborne.getParameterlessDisplayDescription(state);\r\n    return t(\r\n      '{{standardEffect}}; inflicts ^\"Airborne\"^<{{effectExplanation}}> for ^{{duration}}^<{{durationExplanation}}> sec',\r\n      {\r\n        standardEffect,\r\n        duration: formatNumber(effects.duration, { showDecimals: true }),\r\n        durationExplanation: explanations.duration,\r\n        effectExplanation,\r\n      },\r\n    );\r\n  }\r\n\r\n  doSpellAction(state: GameState): GameState {\r\n    const effects = this.getActionEffects(state, \"duration\");\r\n    state = getStandardSpellAttackEffect(state, this);\r\n    if (getLastQueuedActionResult(state).isHit) {\r\n      state = grantTemporaryEffect(airborne.getId(), effects.duration, {\r\n        target: AttackTarget.Enemy,\r\n      })(state);\r\n    }\r\n    return state;\r\n  }\r\n\r\n  getBaseCooldown(): number {\r\n    return 0.5;\r\n  }\r\n\r\n  getBaseAutocastPointsRequirement(): number {\r\n    return 10;\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Air: 19,\r\n    };\r\n  }\r\n\r\n  isActive(state: GameState): boolean {\r\n    return hasTemporaryEffect(state, airborne.getId(), AttackTarget.Enemy);\r\n  }\r\n\r\n  getEstimatedMinAutocastDelay(state: GameState, rule: AutocastRule): number {\r\n    return this.getCooldown(state);\r\n  }\r\n\r\n  allowRegisteringTemporaryEffectsAsPermacast(): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default new Twister();\r\n","import { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport { BasicChannelingSpellBase } from \"./BasicChannelingSpellBase\";\r\n\r\nclass ChannelAir extends BasicChannelingSpellBase {\r\n  getId(): string {\r\n    return \"channelAir\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Channel Air\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Air;\r\n  }\r\n\r\n  getBaseEssenceEfficiency(): number {\r\n    return 1.6;\r\n  }\r\n\r\n  getManaCostProportion(): number {\r\n    return 0.05;\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\"Channel some of your Mana into Air Essence, a basic resource.\");\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Air: 1 };\r\n  }\r\n}\r\n\r\nexport default new ChannelAir();\r\n","import { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport { BasicChannelingSpellBase } from \"./BasicChannelingSpellBase\";\r\n\r\nclass ChannelEarth extends BasicChannelingSpellBase {\r\n  getId(): string {\r\n    return \"channelEarth\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Channel Earth\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Earth;\r\n  }\r\n\r\n  getBaseEssenceEfficiency(): number {\r\n    return 0.9;\r\n  }\r\n\r\n  getManaCostProportion(): number {\r\n    return 0.15;\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\"Channel some of your Mana into Earth Essence, a basic resource.\");\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Earth: 1 };\r\n  }\r\n}\r\n\r\nexport default new ChannelEarth();\r\n","import { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport { BasicChannelingSpellBase } from \"./BasicChannelingSpellBase\";\r\n\r\nclass ChannelWater extends BasicChannelingSpellBase {\r\n  getId(): string {\r\n    return \"channelWater\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Channel Water\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Water;\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\"Channel some of your Mana into Water Essence, a basic resource.\");\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Water: 1 };\r\n  }\r\n}\r\n\r\nexport default new ChannelWater();\r\n","import { addRecords } from \"../../../utils/CoreUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { Flag } from \"../../Flag\";\r\nimport { hasFlag } from \"../../Flags\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport { DoActionArgs } from \"../../action/Action\";\r\nimport {\r\n  ActionArea,\r\n  ActionSubcategories,\r\n  ActionSubcategory,\r\n} from \"../../action/ActionAreas\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { simultaneousChanneling } from \"../../events/storyline/pretraining/ChannelAllStoryline\";\r\nimport { Storylines } from \"../../storylines/Storylines\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport { Spell } from \"../Spell\";\r\nimport ChannelAir from \"./ChannelAir\";\r\nimport ChannelEarth from \"./ChannelEarth\";\r\nimport ChannelFire from \"./ChannelFire\";\r\nimport ChannelWater from \"./ChannelWater\";\r\n\r\nexport const FOUR_CHANNELING_SPELLS = [\r\n  ChannelFire,\r\n  ChannelEarth,\r\n  ChannelWater,\r\n  ChannelAir,\r\n];\r\n\r\nclass ChannelFour extends Spell {\r\n  getId(): string {\r\n    return \"channelFour\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Channel Four\");\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      `Combines the effects of Channel Fire, Channel Earth, Channel Water, and Channel Air, all in one spell.`,\r\n    );\r\n  }\r\n\r\n  getAreas(): Partial<Record<ActionArea, ActionSubcategory[]>> {\r\n    return {\r\n      HOME: [ActionSubcategories.CHANNELING],\r\n      SPELL_MENU: [\r\n        SpellElement.Fire,\r\n        SpellElement.Earth,\r\n        SpellElement.Water,\r\n        SpellElement.Air,\r\n      ],\r\n    };\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.CHANNELING;\r\n  }\r\n\r\n  getTags(): string[] {\r\n    if (this._tagArray == null) {\r\n      const tags = [\r\n        TransformationTags.Spell,\r\n        ...Object.keys(this.getLevelRequirements()),\r\n      ];\r\n      this._tagArray = tags;\r\n    }\r\n    return this._tagArray;\r\n  }\r\n\r\n  getCost(state: GameState): {\r\n    resources: Partial<Record<Resource, number>>;\r\n    items: Record<string, number>;\r\n  } {\r\n    return {\r\n      resources: {\r\n        Mana: this.getManaCost(state),\r\n      },\r\n      items: {},\r\n    };\r\n  }\r\n\r\n  getManaCost(state: GameState): number {\r\n    return FOUR_CHANNELING_SPELLS.map((spell) =>\r\n      spell.getManaCost(state, this),\r\n    ).reduce((a, b) => a + b, 0);\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    return FOUR_CHANNELING_SPELLS.map((spell) =>\r\n      spell.getDisplayEffect(state),\r\n    ).join(t(\", \"));\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return (\r\n      hasFlag(state, Flag.ChannelingUnlocked) &&\r\n      simultaneousChanneling.isBonusActive(state) &&\r\n      !Storylines.getByIdNullable(\"allTheElements\")?.isBonusActive?.(state)\r\n    );\r\n  }\r\n\r\n  isEnabled(state: GameState, skipAffordabilityChecks?: boolean): boolean {\r\n    return (\r\n      super.isEnabled(state, skipAffordabilityChecks) &&\r\n      this.isCastingRecommended(state)\r\n    );\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Fire: 1,\r\n      Earth: 1,\r\n      Water: 1,\r\n      Air: 1,\r\n    };\r\n  }\r\n\r\n  getExpFromUsage(state: GameState) {\r\n    return FOUR_CHANNELING_SPELLS.reduce(\r\n      (previous, current) =>\r\n        addRecords([previous, current.getExpFromUsage(state)]),\r\n      {},\r\n    );\r\n  }\r\n\r\n  doSpellAction(state: GameState, args: DoActionArgs): GameState {\r\n    return FOUR_CHANNELING_SPELLS.reduce(\r\n      (state, current) => current.doSpellAction(state, args),\r\n      state,\r\n    );\r\n  }\r\n\r\n  isCastingRecommended(state: GameState): boolean {\r\n    return FOUR_CHANNELING_SPELLS.reduce(\r\n      (previous, current) => previous || current.isCastingRecommended(state),\r\n      false,\r\n    );\r\n  }\r\n\r\n  getElement(): SpellElement | undefined {\r\n    return undefined;\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    throw new Error(\"Should not be called\");\r\n  }\r\n}\r\n\r\nexport default new ChannelFour();\r\n","import { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport { BasicChannelingSpellBase } from \"./BasicChannelingSpellBase\";\r\n\r\nclass ChannelPoison extends BasicChannelingSpellBase {\r\n  getId(): string {\r\n    return \"channelPoison\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Channel Poison\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Poison;\r\n  }\r\n\r\n  getBaseEssenceEfficiency(): number {\r\n    return 0.3333334;\r\n  }\r\n\r\n  getManaCostProportion(): number {\r\n    return 0.1;\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Channel some of your Mana into Poison Essence, a basic resource.\",\r\n    );\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Poison: 1 };\r\n  }\r\n}\r\n\r\nexport default new ChannelPoison();\r\n","import { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { addGameStateListener } from \"../../GameStateListeners\";\r\nimport { Resource, getResourceAmount, grantResource } from \"../../Resources\";\r\nimport { ActionEffect, DoActionArgs } from \"../../action/Action\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { AttackTarget } from \"../../exploration/AttackTarget\";\r\nimport {\r\n  CombatStat,\r\n  clearCombatStatCache,\r\n} from \"../../exploration/CombatStats\";\r\nimport { CombatActionResultListeners } from \"../../exploration/ExplorationActionResult\";\r\nimport { TemporaryEffect } from \"../../temporaryeffects/TemporaryEffect\";\r\nimport {\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n  getTemporaryEffectData,\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport {\r\n  TransformationType,\r\n  registerTransformation,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { CombatSpellBase } from \"../CombatSpellBase\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport { registerEmpowerEffects } from \"../Spells\";\r\n\r\nclass EarthShieldTemporaryEffect extends TemporaryEffect {\r\n  getId() {\r\n    return \"earthShield\";\r\n  }\r\n\r\n  getDisplayName(): string {\r\n    return t(\"Earth Shield\");\r\n  }\r\n\r\n  getIcon() {\r\n    return require(\"./stoneskin.png\");\r\n  }\r\n\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\r\n      \"If :earthessence: is {{essenceAmount}} or more, +{{amount}}:defense:; -{{essenceAmount}}:earthessence: on hit\",\r\n      {\r\n        amount: formatNumber(temporaryEffectData.params.effectAmount),\r\n        essenceAmount: formatNumber(temporaryEffectData.params.essenceAmount),\r\n      },\r\n    );\r\n  }\r\n}\r\n\r\nexport const earthShieldTemporaryEffect = new EarthShieldTemporaryEffect();\r\nTemporaryEffects.register(earthShieldTemporaryEffect);\r\n\r\nconst calculateEffect = (state) => {\r\n  if (\r\n    !hasTemporaryEffect(\r\n      state,\r\n      earthShieldTemporaryEffect.getId(),\r\n      AttackTarget.Player,\r\n    )\r\n  ) {\r\n    return 0;\r\n  }\r\n  const data = getTemporaryEffectData(\r\n    state,\r\n    earthShieldTemporaryEffect.getId(),\r\n    AttackTarget.Player,\r\n  );\r\n  const essenceAmount = getResourceAmount(state, Resource.EarthEssence);\r\n  if (essenceAmount < data.params.essenceAmount) {\r\n    return 0;\r\n  }\r\n  return data.params.effectAmount;\r\n};\r\n\r\nregisterTransformation(\r\n  [[AttackTarget.Player, CombatStat.Defense]],\r\n  earthShieldTemporaryEffect.getId(),\r\n  earthShieldTemporaryEffect.getDisplayName(),\r\n  TransformationType.Addition,\r\n  calculateEffect,\r\n);\r\n\r\naddGameStateListener(\r\n  earthShieldTemporaryEffect.getId() + \"cacheClearer\",\r\n  (state) => (state) =>\r\n    clearCombatStatCache(state, AttackTarget.Player, CombatStat.Defense),\r\n  calculateEffect,\r\n);\r\n\r\nCombatActionResultListeners.register((state, result) => {\r\n  if (\r\n    !hasTemporaryEffect(\r\n      state,\r\n      earthShieldTemporaryEffect.getId(),\r\n      AttackTarget.Player,\r\n    ) ||\r\n    result.target != AttackTarget.Player ||\r\n    !result.isHit\r\n  ) {\r\n    return state;\r\n  }\r\n  const data = getTemporaryEffectData(\r\n    state,\r\n    earthShieldTemporaryEffect.getId(),\r\n    AttackTarget.Player,\r\n  );\r\n  const essenceAmount = getResourceAmount(state, Resource.EarthEssence);\r\n  if (essenceAmount < data.params.essenceAmount) {\r\n    return state;\r\n  }\r\n  state = grantResource(\r\n    Resource.EarthEssence,\r\n    -data.params.essenceAmount,\r\n  )(state);\r\n  return state;\r\n});\r\n\r\nclass EarthShield extends CombatSpellBase {\r\n  getId(): string {\r\n    return \"earthShield\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Earth Shield\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Earth;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.COMBAT_BUFF;\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 2000;\r\n  }\r\n\r\n  canUseOutsideOfCombat(): boolean {\r\n    return true;\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 30,\r\n        tags: [TransformationTags.TemporaryEffectMagnitude],\r\n        unit: \":defense:\",\r\n      },\r\n      cost: {\r\n        value: 1000,\r\n        tags: [TransformationTags.TemporaryEffectExtraCost],\r\n        unit: \":earthessence:\",\r\n      },\r\n      duration: {\r\n        value: 30.0,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n        unit: t(\" sec\"),\r\n      },\r\n    };\r\n  }\r\n\r\n  doSpellAction(state: GameState, args: DoActionArgs): GameState {\r\n    const effects = this.getActionEffects(state);\r\n    return grantTemporaryEffect(\r\n      earthShieldTemporaryEffect.getId(),\r\n      effects.duration,\r\n      {\r\n        params: {\r\n          effectAmount: effects.magnitude,\r\n          essenceAmount: effects.cost,\r\n        },\r\n      },\r\n    )(state);\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Use stored :earthessence: to boost your resistance to all sorts of attacks.\",\r\n    );\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanations = this.getActionEffectExplanations(state);\r\n    return t(\r\n      \"If :earthessence: is ^{{essenceAmount}}^<{{essenceAmountExplanation}}> or more, ^+{{amount}}^<{{amountExplanation}}>:defense:; ^-{{essenceAmount}}^<{{essenceAmountExplanation}}>:earthessence: on hit; effects last ^{{duration}}^<{{durationExplanation}}> sec\",\r\n      {\r\n        essenceAmount: formatNumber(effects.cost),\r\n        essenceAmountExplanation: explanations.cost,\r\n        amount: formatNumber(effects.magnitude),\r\n        amountExplanation: explanations.magnitude,\r\n        duration: formatNumber(effects.duration),\r\n        durationExplanation: explanations.duration,\r\n      },\r\n    );\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Earth: 21 };\r\n  }\r\n\r\n  protected isEmpowerable(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getEmpoweringLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Earth: 58 };\r\n  }\r\n}\r\n\r\nconst earthShield = new EarthShield();\r\n\r\nregisterEmpowerEffects(\r\n  earthShield,\r\n  [TransformationTags.Cost, Resource.Mana],\r\n  10,\r\n);\r\nregisterEmpowerEffects(\r\n  earthShield,\r\n  [TransformationTags.TemporaryEffectExtraCost],\r\n  1000,\r\n);\r\nregisterEmpowerEffects(\r\n  earthShield,\r\n  [TransformationTags.TemporaryEffectMagnitude],\r\n  4,\r\n);\r\n\r\nexport { earthShield };\r\n","import { keysOf } from \"../../../utils/CoreUtils\";\r\nimport { formatMultiplier, formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport { ActionEffect, DoActionArgs } from \"../../action/Action\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { TemporaryEffect } from \"../../temporaryeffects/TemporaryEffect\";\r\nimport {\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n  getTemporaryEffectData,\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport {\r\n  TransformationType,\r\n  registerTransformation,\r\n} from \"../../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../transformation/TransformationTags\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport { Spell } from \"../Spell\";\r\nimport { RESOURCE_FOR_ELEMENT } from \"../channeling/ChannelingResources\";\r\n\r\nclass EnchantTransmutationTemporaryEffect extends TemporaryEffect {\r\n  getId() {\r\n    return \"enchantTransmutation\";\r\n  }\r\n\r\n  getDisplayName(): string {\r\n    return t(\"Enchant Transmutation\");\r\n  }\r\n\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    if (temporaryEffectData.params.magnitudeMana > 0) {\r\n      return t(\r\n        \"-{{magnitudePct}}% Essences and :mana: required for transmutation\",\r\n        {\r\n          magnitudePct: formatNumber(\r\n            (1.0 - 1.0 / (temporaryEffectData.params.magnitude + 1.0)) * 100,\r\n          ),\r\n        },\r\n      );\r\n    }\r\n    return t(\"-{{magnitudePct}}% Essences required for transmutation\", {\r\n      magnitudePct: formatNumber(\r\n        (1.0 - 1.0 / (temporaryEffectData.params.magnitude + 1.0)) * 100,\r\n      ),\r\n    });\r\n  }\r\n}\r\n\r\nconst temporaryEffect = new EnchantTransmutationTemporaryEffect();\r\nTemporaryEffects.register(temporaryEffect);\r\n\r\nclass EnchantTransmutation extends Spell {\r\n  getId(): string {\r\n    return \"enchantTransmutation\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Enchant Transmutation\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Earth;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.GENERAL_BUFF;\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 180;\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 0.11112,\r\n        tags: [TransformationTags.TemporaryEffectMagnitude],\r\n        valueType: TransformationValueType.Divisor,\r\n      },\r\n      magnitudeMana: {\r\n        value: 0.11112,\r\n        tags: [TransformationTags.TemporaryEffectMagnitude],\r\n        valueType: TransformationValueType.Divisor,\r\n      },\r\n      duration: {\r\n        value: 15.0,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n        unit: t(\" sec\"),\r\n      },\r\n    };\r\n  }\r\n\r\n  doSpellAction(state: GameState, args: DoActionArgs): GameState {\r\n    const effects = this.getActionEffects(state);\r\n    return grantTemporaryEffect(temporaryEffect.getId(), effects.duration, {\r\n      params: {\r\n        magnitude: effects.magnitude,\r\n        magnitudeMana: effects.magnitudeMana,\r\n      },\r\n    })(state);\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Use the knowledge and power of the Earth element to make Transmutation more efficient.\",\r\n    );\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanations = this.getActionEffectExplanations(state);\r\n    if (effects.magnitudeMana > 0) {\r\n      return t(\r\n        \"^{{magnitudePct}}^<{{magnitudeExplanation}}> Essences and :mana: required for Transmutation for ^{{duration}}^<{{durationExplanation}}> sec\",\r\n        {\r\n          magnitudePct: formatMultiplier(1.0 / (1 + effects.magnitude)),\r\n          magnitudeExplanation: explanations.magnitude,\r\n          duration: formatNumber(effects.duration),\r\n          durationExplanation: explanations.duration,\r\n        },\r\n      );\r\n    }\r\n    return t(\r\n      \"^{{magnitudePct}}^<{{magnitudeExplanation}}> Essences required for Transmutation for ^{{duration}}^<{{durationExplanation}}> sec\",\r\n      {\r\n        magnitudePct: formatMultiplier(1.0 / (1 + effects.magnitude)),\r\n        magnitudeExplanation: explanations.magnitude,\r\n        duration: formatNumber(effects.duration),\r\n        durationExplanation: explanations.duration,\r\n      },\r\n    );\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Earth: 3 };\r\n  }\r\n}\r\n\r\nconst enchantTransmutation = new EnchantTransmutation();\r\n\r\nregisterTransformation(\r\n  keysOf(SpellElement).map((element) => [\r\n    TransformationTags.ItemCost,\r\n    RESOURCE_FOR_ELEMENT[element],\r\n  ]),\r\n  temporaryEffect.getId(),\r\n  enchantTransmutation.getSpellName(),\r\n  TransformationType.Multiplier,\r\n  (state) =>\r\n    hasTemporaryEffect(state, enchantTransmutation.getId())\r\n      ? 1.0 /\r\n        (getTemporaryEffectData(state, temporaryEffect.getId()).params\r\n          .magnitude +\r\n          1.0)\r\n      : 1.0,\r\n);\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.ItemCost, Resource.Mana]],\r\n  temporaryEffect.getId() + \"mana\",\r\n  enchantTransmutation.getSpellName(),\r\n  TransformationType.Multiplier,\r\n  (state) =>\r\n    hasTemporaryEffect(state, enchantTransmutation.getId())\r\n      ? 1.0 /\r\n        (getTemporaryEffectData(state, temporaryEffect.getId()).params\r\n          .magnitudeMana +\r\n          1.0)\r\n      : 1.0,\r\n);\r\n\r\nexport default enchantTransmutation;\r\n","import { formatMultiplier, formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { ActionEffect, DoActionArgs } from \"../../action/Action\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { GuardTemporaryEffect } from \"../../temporaryeffects/Guard\";\r\nimport { grantTemporaryEffect } from \"../../temporaryeffects/TemporaryEffects\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../transformation/TransformationTags\";\r\nimport { CombatSpellBase } from \"../CombatSpellBase\";\r\nimport { SpellElement } from \"../Elements\";\r\n\r\nclass Guard extends CombatSpellBase {\r\n  getId(): string {\r\n    return \"guard\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Guard\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Earth;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.COMBAT_BUFF;\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 800;\r\n  }\r\n\r\n  canUseOutsideOfCombat(): boolean {\r\n    return true;\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 1.0,\r\n        tags: [TransformationTags.TemporaryEffectMagnitude],\r\n        valueType: TransformationValueType.Divisor,\r\n      },\r\n      duration: {\r\n        value: 30.0,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n        unit: t(\" sec\"),\r\n      },\r\n    };\r\n  }\r\n\r\n  doSpellAction(state: GameState, args: DoActionArgs): GameState {\r\n    const effects = this.getActionEffects(state);\r\n    return grantTemporaryEffect(\r\n      GuardTemporaryEffect.getId(),\r\n      effects.duration,\r\n      {\r\n        params: { multiplier: 1.0 / (effects.magnitude + 1.0) },\r\n      },\r\n    )(state);\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\"Raise a magical guard to mitigate a single attack.\");\r\n  }\r\n\r\n  getBaseCooldown(): number {\r\n    return 30.0;\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanations = this.getActionEffectExplanations(state);\r\n    return t(\r\n      \"Next attack received deals ^{{amount}}^<{{amountExplanation}}> damage; effect lasts for at most ^{{duration}}^<{{durationExplanation}}> sec\",\r\n      {\r\n        amount: formatMultiplier(1.0 / (1 + effects.magnitude)),\r\n        amountExplanation: explanations.magnitude,\r\n        duration: formatNumber(effects.duration),\r\n        durationExplanation: explanations.duration,\r\n      },\r\n    );\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Earth: 12 };\r\n  }\r\n\r\n  allowRegisteringTemporaryEffectsAsPermacast(): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nconst guard = new Guard();\r\n\r\nexport { guard as Guard };\r\n","import { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { ActionEffect } from \"../../action/Action\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { AttackTarget } from \"../../exploration/AttackTarget\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { stunned, stunProtection } from \"../../temporaryeffects/Stunning\";\r\nimport {\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { CombatSpellBase } from \"../CombatSpellBase\";\r\nimport { SpellElement } from \"../Elements\";\r\n\r\nclass Knockout extends CombatSpellBase {\r\n  getId(): string {\r\n    return \"knockout\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Knockout\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Earth;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.COMBAT_BUFF;\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 2500;\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Apply a single, solid impact to the enemy. As they say, if everything else fails...\",\r\n    );\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      duration: {\r\n        value: 1,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n        unit: t(\" sec\"),\r\n      },\r\n    };\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanations = this.getActionEffectExplanations(state);\r\n    return t(\r\n      'Inflicts \"Stunned!\" for ^{{duration}}^<{{durationExplanation}}> sec',\r\n      {\r\n        duration: formatNumber(effects.duration, { showDecimals: true }),\r\n        durationExplanation: explanations.duration,\r\n      },\r\n    );\r\n  }\r\n\r\n  doSpellAction(state: GameState): GameState {\r\n    const effects = this.getActionEffects(state, \"duration\");\r\n    state = grantTemporaryEffect(stunned.getId(), effects.duration, {\r\n      target: AttackTarget.Enemy,\r\n    })(state);\r\n    return state;\r\n  }\r\n\r\n  getBaseCooldown(): number {\r\n    return 120;\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Earth: 28,\r\n    };\r\n  }\r\n\r\n  isCastingRecommended(state: GameState): boolean {\r\n    return (\r\n      super.isCastingRecommended(state) &&\r\n      !hasTemporaryEffect(state, stunProtection.getId(), AttackTarget.Enemy)\r\n    );\r\n  }\r\n\r\n  allowRegisteringTemporaryEffectsAsPermacast(): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default new Knockout();\r\n","import { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { ActionEffect } from \"../../action/Action\";\r\nimport { AutocastRule, SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { AttackTarget } from \"../../exploration/AttackTarget\";\r\nimport { getLastQueuedActionResult } from \"../../exploration/ExplorationUtils\";\r\nimport { grounded } from \"../../temporaryeffects/Grounded\";\r\nimport {\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { CombatSpellBase } from \"../CombatSpellBase\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport {\r\n  getStandardAttackEffectText,\r\n  getStandardSpellAttackEffect,\r\n} from \"../Utils\";\r\n\r\nclass Landslide extends CombatSpellBase {\r\n  getId(): string {\r\n    return \"landslide\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Landslide\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Earth;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.ATTACK;\r\n  }\r\n\r\n  getExtraTags(): string[] {\r\n    return [TransformationTags.AttackSpell];\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 1300;\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Bury an enemy with unstable ground, dealing damage and trapping them.\",\r\n    );\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      average: {\r\n        value: 180,\r\n        tags: [TransformationTags.ActionMagnitude],\r\n        unit: \":attack:\",\r\n      },\r\n      variance: {\r\n        value: 0,\r\n        tags: [TransformationTags.ActionVariance],\r\n      },\r\n      duration: {\r\n        value: 10,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n        unit: t(\" sec\"),\r\n      },\r\n    };\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanations = this.getActionEffectExplanations(state);\r\n    const standardEffect = getStandardAttackEffectText(\r\n      effects.average,\r\n      effects.variance,\r\n      explanations.average,\r\n    );\r\n    const effectExplanation =\r\n      grounded.getParameterlessDisplayDescription(state);\r\n    return t(\r\n      '{{standardEffect}}; on hit, inflicts ^\"Grounded\"^<{{effectExplanation}}> for ^{{duration}}^<{{durationExplanation}}> sec',\r\n      {\r\n        standardEffect,\r\n        duration: formatNumber(effects.duration, { showDecimals: true }),\r\n        durationExplanation: explanations.duration,\r\n        effectExplanation,\r\n      },\r\n    );\r\n  }\r\n\r\n  doSpellAction(state: GameState): GameState {\r\n    const effects = this.getActionEffects(state, \"duration\");\r\n    state = getStandardSpellAttackEffect(state, this);\r\n    if (getLastQueuedActionResult(state).isHit) {\r\n      state = grantTemporaryEffect(grounded.getId(), effects.duration, {\r\n        target: AttackTarget.Enemy,\r\n      })(state);\r\n    }\r\n    return state;\r\n  }\r\n\r\n  getBaseCooldown(): number {\r\n    return 2.5;\r\n  }\r\n\r\n  getBaseAutocastPointsRequirement(): number {\r\n    return 15;\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Earth: 19,\r\n    };\r\n  }\r\n\r\n  isActive(state: GameState): boolean {\r\n    return hasTemporaryEffect(state, grounded.getId(), AttackTarget.Enemy);\r\n  }\r\n\r\n  getEstimatedMinAutocastDelay(state: GameState, rule: AutocastRule): number {\r\n    return this.getCooldown(state);\r\n  }\r\n\r\n  allowRegisteringTemporaryEffectsAsPermacast(): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default new Landslide();\r\n","import { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { ActionEffect } from \"../../action/Action\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { CombatSpellBase } from \"../CombatSpellBase\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport { registerStandardEmpowerEffects } from \"../Spells\";\r\nimport {\r\n  getStandardSpellAttackEffect,\r\n  getStandardSpellAttackEffectText,\r\n} from \"../Utils\";\r\n\r\nclass StoneStrike extends CombatSpellBase {\r\n  getId(): string {\r\n    return \"stoneStrike\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Stone Strike\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Earth;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.ATTACK;\r\n  }\r\n\r\n  getExtraTags(): string[] {\r\n    return [TransformationTags.AttackSpell];\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 210;\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\"Shower your enemy with multiple small rocks, dealing damage.\");\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      average: {\r\n        value: 60,\r\n        tags: [TransformationTags.ActionMagnitude],\r\n        unit: \":attack:\",\r\n      },\r\n      variance: {\r\n        value: 0,\r\n        tags: [TransformationTags.ActionVariance],\r\n      },\r\n    };\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    return getStandardSpellAttackEffectText(state, this);\r\n  }\r\n\r\n  doSpellAction(state: GameState): GameState {\r\n    return getStandardSpellAttackEffect(state, this);\r\n  }\r\n\r\n  getBaseCooldown(): number {\r\n    return 2.0;\r\n  }\r\n\r\n  getBaseAutocastPointsRequirement(): number {\r\n    return 10;\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Earth: 6,\r\n    };\r\n  }\r\n\r\n  protected isEmpowerable(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getEmpoweringLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Earth: 47 };\r\n  }\r\n}\r\n\r\nconst stoneStrike = new StoneStrike();\r\n\r\nregisterStandardEmpowerEffects(stoneStrike, 4, 10);\r\n\r\nexport default stoneStrike as StoneStrike;\r\n","import { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { ActionEffect, DoActionArgs } from \"../../action/Action\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { cloakOfFlames } from \"../../temporaryeffects/CloakOfFlames\";\r\nimport { grantTemporaryEffect } from \"../../temporaryeffects/TemporaryEffects\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { CombatSpellBase } from \"../CombatSpellBase\";\r\nimport { SpellElement } from \"../Elements\";\r\n\r\nclass CloakOfFlames extends CombatSpellBase {\r\n  getId(): string {\r\n    return \"cloakOfFlames\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Cloak of Flames\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Fire;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.COMBAT_BUFF;\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 2000;\r\n  }\r\n\r\n  canUseOutsideOfCombat(): boolean {\r\n    return true;\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 1.0,\r\n        tags: [TransformationTags.TemporaryEffectMagnitude],\r\n        unit: t(\"x\"),\r\n      },\r\n      duration: {\r\n        value: 15.0,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n        unit: t(\" sec\"),\r\n      },\r\n    };\r\n  }\r\n\r\n  doSpellAction(state: GameState, args: DoActionArgs): GameState {\r\n    const effects = this.getActionEffects(state);\r\n    return grantTemporaryEffect(cloakOfFlames.getId(), effects.duration, {\r\n      params: { magnitude: effects.magnitude },\r\n    })(state);\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Surround yourself with fiery flames that retaliate when you are hurt.\",\r\n    );\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanations = this.getActionEffectExplanations(state);\r\n    return t(\r\n      \"Reflects back ^{{multiplier}}x^<{{multiplierExplanation}}> of the damage received for ^{{duration}}^<{{durationExplanation}}> sec\",\r\n      {\r\n        multiplier: formatNumber(effects.magnitude, { showDecimals: true }),\r\n        multiplierExplanation: explanations.magnitude,\r\n        duration: formatNumber(effects.duration),\r\n        durationExplanation: explanations.duration,\r\n      },\r\n    );\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Fire: 24 };\r\n  }\r\n}\r\n\r\nexport const cloakOfFlamesSpell = new CloakOfFlames();\r\n","import { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { ActionEffect, DoActionArgs } from \"../../action/Action\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { essenceCatalyst } from \"../../buildings/catalysts/EssenceCatalyst\";\r\nimport { TemporaryEffect } from \"../../temporaryeffects/TemporaryEffect\";\r\nimport {\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n  getTemporaryEffectData,\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport {\r\n  TransformationType,\r\n  registerTransformation,\r\n} from \"../../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../transformation/TransformationTags\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport { Spell } from \"../Spell\";\r\n\r\nclass EnchantCatalystsTemporaryEffect extends TemporaryEffect {\r\n  getId() {\r\n    return \"enchantCatalysts\";\r\n  }\r\n\r\n  getDisplayName(): string {\r\n    return t(\"Enchant Essence Catalysts\");\r\n  }\r\n\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"+{{magnitudePct}}% effectivity of Essence Catalysts\", {\r\n      magnitudePct: formatNumber(temporaryEffectData.params.magnitude * 100),\r\n    });\r\n  }\r\n}\r\n\r\nconst temporaryEffect = new EnchantCatalystsTemporaryEffect();\r\nTemporaryEffects.register(temporaryEffect);\r\n\r\nclass EnchantCatalysts extends Spell {\r\n  getId(): string {\r\n    return \"enchantCatalysts\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Enchant Essence Catalysts\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Fire;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.GENERAL_BUFF;\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 200;\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 0.15,\r\n        tags: [TransformationTags.TemporaryEffectMagnitude],\r\n        valueType: TransformationValueType.Percent,\r\n      },\r\n      duration: {\r\n        value: 20.0,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n        unit: t(\" sec\"),\r\n      },\r\n    };\r\n  }\r\n\r\n  doSpellAction(state: GameState, args: DoActionArgs): GameState {\r\n    const effects = this.getActionEffects(state);\r\n    return grantTemporaryEffect(temporaryEffect.getId(), effects.duration, {\r\n      params: { magnitude: effects.magnitude },\r\n    })(state);\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Leverage Fire to temporarily power up your Essence Catalysts, to produce essences faster.\",\r\n    );\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanations = this.getActionEffectExplanations(state);\r\n    return t(\r\n      \"^+{{magnitudePct}}%^<{{magnitudeExplanation}}> effectivity of Essence Catalysts for ^{{duration}}^<{{durationExplanation}}> sec\",\r\n      {\r\n        magnitudePct: formatNumber(effects.magnitude * 100),\r\n        magnitudeExplanation: explanations.magnitude,\r\n        duration: formatNumber(effects.duration),\r\n        durationExplanation: explanations.duration,\r\n      },\r\n    );\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Fire: 3 };\r\n  }\r\n}\r\n\r\nconst enchantCatalysts = new EnchantCatalysts();\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.CatalystEffectivity, essenceCatalyst.getId()]],\r\n  temporaryEffect.getId(),\r\n  enchantCatalysts.getSpellName(),\r\n  TransformationType.Multiplier,\r\n  (state) =>\r\n    hasTemporaryEffect(state, enchantCatalysts.getId())\r\n      ? getTemporaryEffectData(state, temporaryEffect.getId()).params\r\n          .magnitude + 1.0\r\n      : 1.0,\r\n);\r\n\r\nexport default enchantCatalysts;\r\n","import { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { ActionEffect } from \"../../action/Action\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { CombatSpellBase } from \"../CombatSpellBase\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport { registerStandardEmpowerEffects } from \"../Spells\";\r\nimport {\r\n  getStandardSpellAttackEffect,\r\n  getStandardSpellAttackEffectText,\r\n} from \"../Utils\";\r\n\r\nclass Fireball extends CombatSpellBase {\r\n  getId(): string {\r\n    return \"fireball\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Fireball\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Fire;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.ATTACK;\r\n  }\r\n\r\n  getExtraTags(): string[] {\r\n    return [TransformationTags.AttackSpell];\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 380;\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Materialize and fling a blazing hot ball of flames towards the enemy.\",\r\n    );\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      average: {\r\n        value: 100,\r\n        tags: [TransformationTags.ActionMagnitude],\r\n        unit: \":attack:\",\r\n      },\r\n      variance: {\r\n        value: 10,\r\n        tags: [TransformationTags.ActionVariance],\r\n        unit: \":attack:\",\r\n      },\r\n    };\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    return getStandardSpellAttackEffectText(state, this);\r\n  }\r\n\r\n  doSpellAction(state: GameState): GameState {\r\n    return getStandardSpellAttackEffect(state, this);\r\n  }\r\n\r\n  getBaseCooldown(): number {\r\n    return 6.0;\r\n  }\r\n\r\n  getBaseAutocastPointsRequirement(): number {\r\n    return 20;\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Fire: 6,\r\n    };\r\n  }\r\n\r\n  protected isEmpowerable(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getEmpoweringLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Fire: 43 };\r\n  }\r\n}\r\n\r\nconst fireball = new Fireball();\r\n\r\nregisterStandardEmpowerEffects(fireball, 7, 20);\r\n\r\nexport default fireball;\r\n","import { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { addGameStateListener } from \"../../GameStateListeners\";\r\nimport { Resource, getResourceAmount, grantResource } from \"../../Resources\";\r\nimport { ActionEffect, DoActionArgs } from \"../../action/Action\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { AttackTarget } from \"../../exploration/AttackTarget\";\r\nimport {\r\n  CombatStat,\r\n  clearCombatStatCache,\r\n} from \"../../exploration/CombatStats\";\r\nimport { CombatActionResultListeners } from \"../../exploration/ExplorationActionResult\";\r\nimport { TemporaryEffect } from \"../../temporaryeffects/TemporaryEffect\";\r\nimport {\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n  getTemporaryEffectData,\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport {\r\n  TransformationType,\r\n  registerTransformation,\r\n} from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { CombatSpellBase } from \"../CombatSpellBase\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport { registerEmpowerEffects } from \"../Spells\";\r\n\r\nclass ImbueFlamesTemporaryEffect extends TemporaryEffect {\r\n  getId() {\r\n    return \"imbueFlames\";\r\n  }\r\n\r\n  getDisplayName(): string {\r\n    return t(\"Imbue Flames\");\r\n  }\r\n\r\n  getIcon() {\r\n    return require(\"./strength.png\");\r\n  }\r\n\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\r\n      \"If :fireessence: is {{essenceAmount}} or more, +{{amount}}:attack:; -{{essenceAmount}}:fireessence: on attack\",\r\n      {\r\n        amount: formatNumber(temporaryEffectData.params.effectAmount),\r\n        essenceAmount: formatNumber(temporaryEffectData.params.essenceAmount),\r\n      },\r\n    );\r\n  }\r\n}\r\n\r\nexport const imbueFlamesTemporaryEffect = new ImbueFlamesTemporaryEffect();\r\nTemporaryEffects.register(imbueFlamesTemporaryEffect);\r\n\r\nconst calculateEffect = (state) => {\r\n  if (\r\n    !hasTemporaryEffect(\r\n      state,\r\n      imbueFlamesTemporaryEffect.getId(),\r\n      AttackTarget.Player,\r\n    )\r\n  ) {\r\n    return 0;\r\n  }\r\n  const data = getTemporaryEffectData(\r\n    state,\r\n    imbueFlamesTemporaryEffect.getId(),\r\n    AttackTarget.Player,\r\n  );\r\n  const essenceAmount = getResourceAmount(state, Resource.FireEssence);\r\n  if (essenceAmount < data.params.essenceAmount) {\r\n    return 0;\r\n  }\r\n  return data.params.effectAmount;\r\n};\r\n\r\nregisterTransformation(\r\n  [[AttackTarget.Player, CombatStat.Attack]],\r\n  imbueFlamesTemporaryEffect.getId(),\r\n  imbueFlamesTemporaryEffect.getDisplayName(),\r\n  TransformationType.Addition,\r\n  calculateEffect,\r\n);\r\n\r\naddGameStateListener(\r\n  imbueFlamesTemporaryEffect.getId() + \"cacheClearer\",\r\n  (state) => (state) =>\r\n    clearCombatStatCache(state, AttackTarget.Player, CombatStat.Attack),\r\n  calculateEffect,\r\n);\r\n\r\nCombatActionResultListeners.register((state, result) => {\r\n  if (\r\n    !hasTemporaryEffect(\r\n      state,\r\n      imbueFlamesTemporaryEffect.getId(),\r\n      AttackTarget.Player,\r\n    ) ||\r\n    result.source != AttackTarget.Player ||\r\n    !result.tags.includes(TransformationTags.AutoAttack)\r\n  ) {\r\n    return state;\r\n  }\r\n  const data = getTemporaryEffectData(\r\n    state,\r\n    imbueFlamesTemporaryEffect.getId(),\r\n    AttackTarget.Player,\r\n  );\r\n  const essenceAmount = getResourceAmount(state, Resource.FireEssence);\r\n  if (essenceAmount < data.params.essenceAmount) {\r\n    return state;\r\n  }\r\n  state = grantResource(\r\n    Resource.FireEssence,\r\n    -data.params.essenceAmount,\r\n  )(state);\r\n  return state;\r\n});\r\n\r\nclass ImbueFlames extends CombatSpellBase {\r\n  getId(): string {\r\n    return \"imbueFlames\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Imbue Flames\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Fire;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.COMBAT_BUFF;\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 2000;\r\n  }\r\n\r\n  canUseOutsideOfCombat(): boolean {\r\n    return true;\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 25,\r\n        tags: [TransformationTags.TemporaryEffectMagnitude],\r\n        unit: \":attack:\",\r\n      },\r\n      cost: {\r\n        value: 1000,\r\n        tags: [TransformationTags.TemporaryEffectExtraCost],\r\n        unit: \":fireessence:\",\r\n      },\r\n      duration: {\r\n        value: 30.0,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n        unit: t(\" sec\"),\r\n      },\r\n    };\r\n  }\r\n\r\n  doSpellAction(state: GameState, args: DoActionArgs): GameState {\r\n    const effects = this.getActionEffects(state);\r\n    return grantTemporaryEffect(\r\n      imbueFlamesTemporaryEffect.getId(),\r\n      effects.duration,\r\n      {\r\n        params: {\r\n          effectAmount: effects.magnitude,\r\n          essenceAmount: effects.cost,\r\n        },\r\n      },\r\n    )(state);\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\"Power up your weapon by consuming :fireessence:.\");\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanations = this.getActionEffectExplanations(state);\r\n    return t(\r\n      \"If :fireessence: is ^{{essenceAmount}}^<{{essenceAmountExplanation}}> or more, ^+{{amount}}^<{{amountExplanation}}>:attack:; ^-{{essenceAmount}}^<{{essenceAmountExplanation}}>:fireessence: on attack; effects last ^{{duration}}^<{{durationExplanation}}> sec\",\r\n      {\r\n        essenceAmount: formatNumber(effects.cost),\r\n        essenceAmountExplanation: explanations.cost,\r\n        amount: formatNumber(effects.magnitude),\r\n        amountExplanation: explanations.magnitude,\r\n        duration: formatNumber(effects.duration),\r\n        durationExplanation: explanations.duration,\r\n      },\r\n    );\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Fire: 22 };\r\n  }\r\n\r\n  protected isEmpowerable(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getEmpoweringLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Fire: 58 };\r\n  }\r\n}\r\n\r\nconst imbueFlames = new ImbueFlames();\r\n\r\nregisterEmpowerEffects(\r\n  imbueFlames,\r\n  [TransformationTags.Cost, Resource.Mana],\r\n  10,\r\n);\r\nregisterEmpowerEffects(\r\n  imbueFlames,\r\n  [TransformationTags.TemporaryEffectExtraCost],\r\n  1000,\r\n);\r\nregisterEmpowerEffects(\r\n  imbueFlames,\r\n  [TransformationTags.TemporaryEffectMagnitude],\r\n  8,\r\n);\r\n\r\nexport { imbueFlames };\r\n","import { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { ActionEffect } from \"../../action/Action\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { CombatSpellBase } from \"../CombatSpellBase\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport { registerStandardEmpowerEffects } from \"../Spells\";\r\nimport {\r\n  getStandardSpellAttackEffect,\r\n  getStandardSpellAttackEffectText,\r\n} from \"../Utils\";\r\n\r\nclass InfernalBlaze extends CombatSpellBase {\r\n  getId(): string {\r\n    return \"infernalBlaze\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Infernal Blaze\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Fire;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.ATTACK;\r\n  }\r\n\r\n  getExtraTags(): string[] {\r\n    return [TransformationTags.AttackSpell];\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 3600;\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\"Cover the enemy with very powerful flames. Strong.\");\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      average: {\r\n        value: 550,\r\n        tags: [TransformationTags.ActionMagnitude],\r\n        unit: \":attack:\",\r\n      },\r\n      variance: {\r\n        value: 50,\r\n        tags: [TransformationTags.ActionVariance],\r\n        unit: \":attack:\",\r\n      },\r\n    };\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    return getStandardSpellAttackEffectText(state, this);\r\n  }\r\n\r\n  doSpellAction(state: GameState): GameState {\r\n    return getStandardSpellAttackEffect(state, this);\r\n  }\r\n\r\n  getBaseCooldown(): number {\r\n    return 8.0;\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Fire: 25,\r\n    };\r\n  }\r\n\r\n  getEmpoweringLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Fire: 61 };\r\n  }\r\n\r\n  protected isEmpowerable(): boolean {\r\n    return true;\r\n  }\r\n}\r\n\r\nconst infernalBlaze = new InfernalBlaze();\r\n\r\nregisterStandardEmpowerEffects(infernalBlaze, 4, 5);\r\n\r\nexport default infernalBlaze;\r\n","import { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { ActionEffect } from \"../../action/Action\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { AttackTarget } from \"../../exploration/AttackTarget\";\r\nimport { getLastQueuedActionResult } from \"../../exploration/ExplorationUtils\";\r\nimport { Seared } from \"../../temporaryeffects/Seared\";\r\nimport {\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { CombatSpellBase } from \"../CombatSpellBase\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport {\r\n  getStandardAttackEffectText,\r\n  getStandardSpellAttackEffect,\r\n} from \"../Utils\";\r\n\r\nclass Sear extends CombatSpellBase {\r\n  getId(): string {\r\n    return \"sear\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Sear\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Fire;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.ATTACK;\r\n  }\r\n\r\n  getExtraTags(): string[] {\r\n    return [TransformationTags.AttackSpell];\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 1050;\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Burn the enemy for a prolonged period of time, lowering their defenses.\",\r\n    );\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      average: {\r\n        value: 170,\r\n        tags: [TransformationTags.ActionMagnitude],\r\n        unit: \":attack:\",\r\n      },\r\n      variance: {\r\n        value: 15,\r\n        tags: [TransformationTags.ActionVariance],\r\n        unit: \":attack:\",\r\n      },\r\n      duration: {\r\n        value: 8,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n        unit: t(\" sec\"),\r\n      },\r\n    };\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanations = this.getActionEffectExplanations(state);\r\n    const damageText = getStandardAttackEffectText(\r\n      effects.average,\r\n      effects.variance,\r\n      explanations.average,\r\n    );\r\n    const effectExplanation = Seared.getParameterlessDisplayDescription(state);\r\n    return t(\r\n      '{{damageText}}; On hit, inflicts ^\"Seared\"^<{{effectExplanation}}> for ^{{duration}}^<{{durationExplanation}}> sec',\r\n      {\r\n        damageText,\r\n        duration: formatNumber(effects.duration),\r\n        durationExplanation: explanations.duration,\r\n        effectExplanation,\r\n      },\r\n    );\r\n  }\r\n\r\n  doSpellAction(state: GameState): GameState {\r\n    const effects = this.getActionEffects(state, \"duration\");\r\n    state = getStandardSpellAttackEffect(state, this);\r\n    if (getLastQueuedActionResult(state).isHit) {\r\n      state = grantTemporaryEffect(Seared.getId(), effects.duration, {\r\n        target: AttackTarget.Enemy,\r\n      })(state);\r\n    }\r\n    return state;\r\n  }\r\n\r\n  getBaseCooldown(): number {\r\n    return 7.0;\r\n  }\r\n\r\n  getBaseAutocastPointsRequirement(): number {\r\n    return 30;\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Fire: 13,\r\n    };\r\n  }\r\n\r\n  isActive(state: GameState): boolean {\r\n    return hasTemporaryEffect(state, Seared.getId(), AttackTarget.Enemy);\r\n  }\r\n\r\n  allowRegisteringTemporaryEffectsAsPermacast(): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default new Sear();\r\n","import { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { ActionEffect } from \"../../action/Action\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { AttackTarget } from \"../../exploration/AttackTarget\";\r\nimport { poison } from \"../../temporaryeffects/Poison\";\r\nimport {\r\n  clearTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport { CombatSpellBase } from \"../CombatSpellBase\";\r\nimport { SpellElement } from \"../Elements\";\r\n\r\nclass Antidote extends CombatSpellBase {\r\n  getId(): string {\r\n    return \"antidote\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Antidote\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Poison;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.HEALING;\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 500;\r\n  }\r\n\r\n  getBaseCooldown(): number {\r\n    return 5.0;\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\"Cleanse any and all poisons from your system.\");\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {};\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    return t('Removes \"Poison\"');\r\n  }\r\n\r\n  doSpellAction(state: GameState): GameState {\r\n    if (hasTemporaryEffect(state, poison.getId(), AttackTarget.Player)) {\r\n      state = clearTemporaryEffect(poison.getId(), AttackTarget.Player)(state);\r\n    }\r\n    return state;\r\n  }\r\n\r\n  canUseOutsideOfCombat(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Poison: 7,\r\n    };\r\n  }\r\n\r\n  isCastingRecommended(state: GameState): boolean {\r\n    return hasTemporaryEffect(state, poison.getId(), AttackTarget.Player);\r\n  }\r\n}\r\n\r\nexport default new Antidote();\r\n","import { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { ActionEffect, DoActionArgs } from \"../../action/Action\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport {\r\n  buildMonstiumCatalyst,\r\n  monstiumCatalyst,\r\n} from \"../../buildings/catalysts/MonstiumCatalyst\";\r\nimport { TemporaryEffect } from \"../../temporaryeffects/TemporaryEffect\";\r\nimport {\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n  getTemporaryEffectData,\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport {\r\n  TransformationType,\r\n  registerTransformation,\r\n} from \"../../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../transformation/TransformationTags\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport { Spell } from \"../Spell\";\r\nimport { registerBuffEmpowerEffects } from \"../Spells\";\r\n\r\nclass EnchantMonstiumCatalystsTemporaryEffect extends TemporaryEffect {\r\n  getId() {\r\n    return \"enchantMonstiumCatalysts\";\r\n  }\r\n\r\n  getDisplayName(): string {\r\n    return t(\"Enchant Monstium Catalysts\");\r\n  }\r\n\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"+{{magnitudePct}}% effectivity of Monstium Catalysts\", {\r\n      magnitudePct: formatNumber(temporaryEffectData.params.magnitude * 100),\r\n    });\r\n  }\r\n}\r\n\r\nconst temporaryEffect = new EnchantMonstiumCatalystsTemporaryEffect();\r\nTemporaryEffects.register(temporaryEffect);\r\n\r\nclass EnchantMonstiumCatalysts extends Spell {\r\n  getId(): string {\r\n    return \"enchantMonstiumCatalysts\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Enchant Monstium Catalysts\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Poison;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.GENERAL_BUFF;\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 1500;\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 0.2,\r\n        tags: [TransformationTags.TemporaryEffectMagnitude],\r\n        valueType: TransformationValueType.Percent,\r\n      },\r\n      duration: {\r\n        value: 15.0,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n        unit: t(\" sec\"),\r\n      },\r\n    };\r\n  }\r\n\r\n  doSpellAction(state: GameState, args: DoActionArgs): GameState {\r\n    const effects = this.getActionEffects(state);\r\n    return grantTemporaryEffect(temporaryEffect.getId(), effects.duration, {\r\n      params: { magnitude: effects.magnitude },\r\n    })(state);\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return buildMonstiumCatalyst.isVisible(state) && super.isVisible(state);\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Leverage Poison to temporarily power up your Monstium Catalysts, when you need more Monstium.\",\r\n    );\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanations = this.getActionEffectExplanations(state);\r\n    return t(\r\n      \"^+{{magnitudePct}}%^<{{magnitudeExplanation}}> effectivity of Monstium Catalysts for ^{{duration}}^<{{durationExplanation}}> sec\",\r\n      {\r\n        magnitudePct: formatNumber(effects.magnitude * 100),\r\n        magnitudeExplanation: explanations.magnitude,\r\n        duration: formatNumber(effects.duration),\r\n        durationExplanation: explanations.duration,\r\n      },\r\n    );\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Poison: 18 };\r\n  }\r\n\r\n  protected isEmpowerable(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getEmpoweringLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Poison: 60 };\r\n  }\r\n}\r\n\r\nexport const enchantMonstiumCatalysts = new EnchantMonstiumCatalysts();\r\n\r\nregisterBuffEmpowerEffects(enchantMonstiumCatalysts, 1.5, 10);\r\n\r\nregisterTransformation(\r\n  [[TransformationTags.CatalystEffectivity, monstiumCatalyst.getId()]],\r\n  temporaryEffect.getId(),\r\n  enchantMonstiumCatalysts.getSpellName(),\r\n  TransformationType.Multiplier,\r\n  (state) =>\r\n    hasTemporaryEffect(state, enchantMonstiumCatalysts.getId())\r\n      ? getTemporaryEffectData(state, temporaryEffect.getId()).params\r\n          .magnitude + 1.0\r\n      : 1.0,\r\n);\r\n","import { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { ActionEffect, DoActionArgs } from \"../../action/Action\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport {\r\n  buildSewageSystem,\r\n  sewageSystem,\r\n} from \"../../buildings/production/SewageSystem\";\r\nimport { TemporaryEffect } from \"../../temporaryeffects/TemporaryEffect\";\r\nimport {\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n  getTemporaryEffectData,\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n  registerTemporaryEffectListener,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport { clearCalculatedIncomeCache } from \"../../timetick/IncomeOverTime\";\r\nimport {\r\n  TransformationType,\r\n  registerTransformation,\r\n} from \"../../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../transformation/TransformationTags\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport { Spell } from \"../Spell\";\r\nimport { registerBuffEmpowerEffects } from \"../Spells\";\r\n\r\nclass EnchantSewageSystemTemporaryEffect extends TemporaryEffect {\r\n  getId() {\r\n    return \"enchantSewageSystem\";\r\n  }\r\n\r\n  getDisplayName(): string {\r\n    return t(\"Enchant Sewage System\");\r\n  }\r\n\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"+{{magnitudePct}}% production and consumption of Sewage System\", {\r\n      magnitudePct: formatNumber(temporaryEffectData.params.magnitude * 100),\r\n    });\r\n  }\r\n}\r\n\r\nconst temporaryEffect = new EnchantSewageSystemTemporaryEffect();\r\nTemporaryEffects.register(temporaryEffect);\r\n\r\nclass EnchantSewageSystem extends Spell {\r\n  getId(): string {\r\n    return \"enchantSewageSystem\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Enchant Sewage System\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Poison;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.GENERAL_BUFF;\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 900;\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 0.5,\r\n        tags: [TransformationTags.TemporaryEffectMagnitude],\r\n        valueType: TransformationValueType.Percent,\r\n      },\r\n      duration: {\r\n        value: 20.0,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n        unit: t(\" sec\"),\r\n      },\r\n    };\r\n  }\r\n\r\n  doSpellAction(state: GameState, args: DoActionArgs): GameState {\r\n    const effects = this.getActionEffects(state);\r\n    return grantTemporaryEffect(temporaryEffect.getId(), effects.duration, {\r\n      params: { magnitude: effects.magnitude },\r\n    })(state);\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return buildSewageSystem.isVisible(state) && super.isVisible(state);\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Enchant your Sewage System to produce and consume more essences at a time.\",\r\n    );\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanations = this.getActionEffectExplanations(state);\r\n    return t(\r\n      \"^+{{magnitudePct}}%^<{{magnitudeExplanation}}> production and consumption of Sewage System for ^{{duration}}^<{{durationExplanation}}> sec\",\r\n      {\r\n        magnitudePct: formatNumber(effects.magnitude * 100),\r\n        magnitudeExplanation: explanations.magnitude,\r\n        duration: formatNumber(effects.duration),\r\n        durationExplanation: explanations.duration,\r\n      },\r\n    );\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Poison: 22 };\r\n  }\r\n\r\n  protected isEmpowerable(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getEmpoweringLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Poison: 55 };\r\n  }\r\n}\r\n\r\nexport const enchantSewageSystem = new EnchantSewageSystem();\r\n\r\nregisterBuffEmpowerEffects(enchantSewageSystem, 10, 10);\r\n\r\nregisterTransformation(\r\n  [\r\n    [TransformationTags.Production, sewageSystem.getId()],\r\n    [TransformationTags.Consumption, sewageSystem.getId()],\r\n  ],\r\n  temporaryEffect.getId(),\r\n  enchantSewageSystem.getSpellName(),\r\n  TransformationType.Multiplier,\r\n  (state) =>\r\n    hasTemporaryEffect(state, enchantSewageSystem.getId())\r\n      ? getTemporaryEffectData(state, temporaryEffect.getId()).params\r\n          .magnitude + 1.0\r\n      : 1.0,\r\n);\r\n\r\nregisterTemporaryEffectListener(\r\n  temporaryEffect.getId(),\r\n  (state, effect) => {\r\n    if (effect.id == temporaryEffect.getId()) {\r\n      state = clearCalculatedIncomeCache(state);\r\n    }\r\n    return effect;\r\n  },\r\n  true,\r\n);\r\n","import { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { ActionEffect } from \"../../action/Action\";\r\nimport { AutocastRule, SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { AttackTarget } from \"../../exploration/AttackTarget\";\r\nimport { frail } from \"../../temporaryeffects/Frail\";\r\nimport { poison } from \"../../temporaryeffects/Poison\";\r\nimport {\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { CombatSpellBase } from \"../CombatSpellBase\";\r\nimport { SpellElement } from \"../Elements\";\r\n\r\nclass FrailSpell extends CombatSpellBase {\r\n  getId(): string {\r\n    return \"frail\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Frail\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Poison;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.COMBAT_BUFF;\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 4000;\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Make the enemy frail, slightly reducing its defense and making it particularly weak to Poison.\",\r\n    );\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      duration: {\r\n        value: 12,\r\n        tags: [TransformationTags.TemporaryEffectDuration, poison.getId()],\r\n        unit: t(\" sec\"),\r\n      },\r\n    };\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanations = this.getActionEffectExplanations(state);\r\n    const effectExplanation = frail.getParameterlessDisplayDescription(state);\r\n    return t(\r\n      'Inflicts ^\"Frail\"^<{{effectExplanation}}> for ^{{duration}}^<{{durationExplanation}}> sec',\r\n      {\r\n        duration: formatNumber(effects.duration, { showDecimals: true }),\r\n        durationExplanation: explanations.duration,\r\n        effectExplanation,\r\n      },\r\n    );\r\n  }\r\n\r\n  doSpellAction(state: GameState): GameState {\r\n    const effects = this.getActionEffects(state);\r\n    state = grantTemporaryEffect(frail.getId(), effects.duration, {\r\n      target: AttackTarget.Enemy,\r\n    })(state);\r\n    return state;\r\n  }\r\n\r\n  getBaseCooldown(): number {\r\n    return 8.0;\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Poison: 27,\r\n    };\r\n  }\r\n\r\n  isActive(state: GameState): boolean {\r\n    return hasTemporaryEffect(state, frail.getId(), AttackTarget.Enemy);\r\n  }\r\n\r\n  isCastingRecommended(state: GameState): boolean {\r\n    return !hasTemporaryEffect(state, frail.getId(), AttackTarget.Enemy);\r\n  }\r\n\r\n  getEstimatedMinAutocastDelay(state: GameState, rule: AutocastRule): number {\r\n    return this.getCooldown(state);\r\n  }\r\n}\r\n\r\nexport const frailSpell = new FrailSpell();\r\n","import { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { ActionEffect } from \"../../action/Action\";\r\nimport { AutocastRule, SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { AttackTarget } from \"../../exploration/AttackTarget\";\r\nimport { poison } from \"../../temporaryeffects/Poison\";\r\nimport {\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { CombatSpellBase } from \"../CombatSpellBase\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport { registerBuffEmpowerEffects, registerEmpowerEffects } from \"../Spells\";\r\n\r\nclass Intoxicate extends CombatSpellBase {\r\n  getId(): string {\r\n    return \"intoxicate\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Intoxicate\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Poison;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.ATTACK;\r\n  }\r\n\r\n  getExtraTags(): string[] {\r\n    return [TransformationTags.AttackSpell];\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 2500;\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\"Apply a potent poison to the enemy that cannot be dodged.\");\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 35,\r\n        tags: [TransformationTags.TemporaryEffectMagnitude, poison.getId()],\r\n        unit: \":hp:/sec\",\r\n      },\r\n      duration: {\r\n        value: 12,\r\n        tags: [TransformationTags.TemporaryEffectDuration, poison.getId()],\r\n        unit: t(\" sec\"),\r\n      },\r\n    };\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanations = this.getActionEffectExplanations(state);\r\n    return t(\r\n      'Inflicts ^-{{magnitude}}^<{{magnitudeExplanation}}>:hp:/sec \"Poison\" for ^{{duration}}^<{{durationExplanation}}> sec',\r\n      {\r\n        magnitude: formatNumber(effects.magnitude, { showDecimals: true }),\r\n        magnitudeExplanation: explanations.magnitude,\r\n        duration: formatNumber(effects.duration, { showDecimals: true }),\r\n        durationExplanation: explanations.duration,\r\n      },\r\n    );\r\n  }\r\n\r\n  doSpellAction(state: GameState): GameState {\r\n    const effects = this.getActionEffects(state);\r\n    state = grantTemporaryEffect(poison.getId(), effects.duration, {\r\n      target: AttackTarget.Enemy,\r\n      params: { magnitude: effects.magnitude },\r\n    })(state);\r\n    return state;\r\n  }\r\n\r\n  getBaseCooldown(): number {\r\n    return 7.0;\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Poison: 20,\r\n    };\r\n  }\r\n\r\n  isActive(state: GameState): boolean {\r\n    return hasTemporaryEffect(state, poison.getId(), AttackTarget.Enemy);\r\n  }\r\n\r\n  isCastingRecommended(state: GameState): boolean {\r\n    return !hasTemporaryEffect(state, poison.getId(), AttackTarget.Enemy);\r\n  }\r\n\r\n  getEstimatedMinAutocastDelay(state: GameState, rule: AutocastRule): number {\r\n    return this.getCooldown(state);\r\n  }\r\n\r\n  protected isEmpowerable(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getEmpoweringLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Poison: 53 };\r\n  }\r\n\r\n  allowRegisteringTemporaryEffectsAsPermacast(): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nconst intoxicate = new Intoxicate();\r\n\r\nregisterBuffEmpowerEffects(intoxicate, 3, 5);\r\nregisterEmpowerEffects(\r\n  intoxicate,\r\n  [TransformationTags.TemporaryEffectDuration],\r\n  1.5,\r\n);\r\n\r\nexport { intoxicate };\r\n","import { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { ActionEffect } from \"../../action/Action\";\r\nimport { AutocastRule, SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { AttackTarget } from \"../../exploration/AttackTarget\";\r\nimport { getLastQueuedActionResult } from \"../../exploration/ExplorationUtils\";\r\nimport { poison } from \"../../temporaryeffects/Poison\";\r\nimport {\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { CombatSpellBase } from \"../CombatSpellBase\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport {\r\n  getStandardAttackEffectText,\r\n  getStandardSpellAttackEffect,\r\n} from \"../Utils\";\r\n\r\nclass Sting extends CombatSpellBase {\r\n  getId(): string {\r\n    return \"sting\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Sting\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Poison;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.ATTACK;\r\n  }\r\n\r\n  getExtraTags(): string[] {\r\n    return [TransformationTags.AttackSpell];\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 260;\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Materialize a small poisonous projectile and hit the enemy with it.\",\r\n    );\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      average: {\r\n        value: 22,\r\n        tags: [TransformationTags.ActionMagnitude],\r\n        unit: \":attack:\",\r\n      },\r\n      variance: {\r\n        value: 2,\r\n        tags: [TransformationTags.ActionVariance],\r\n        unit: \":attack:\",\r\n      },\r\n      magnitude: {\r\n        value: 12,\r\n        tags: [TransformationTags.TemporaryEffectMagnitude, poison.getId()],\r\n        unit: \":hp:/sec\",\r\n      },\r\n      duration: {\r\n        value: 5,\r\n        tags: [TransformationTags.TemporaryEffectDuration, poison.getId()],\r\n        unit: t(\" sec\"),\r\n      },\r\n    };\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanations = this.getActionEffectExplanations(state);\r\n    return t(\r\n      '{{standardAttack}}; On hit, inflicts ^-{{magnitude}}^<{{magnitudeExplanation}}>:hp:/sec \"Poison\" for ^{{duration}}^<{{durationExplanation}}> sec',\r\n      {\r\n        standardAttack: getStandardAttackEffectText(\r\n          effects.average,\r\n          effects.variance,\r\n          explanations.average,\r\n        ),\r\n        magnitude: formatNumber(effects.magnitude, { showDecimals: true }),\r\n        magnitudeExplanation: explanations.magnitude,\r\n        duration: formatNumber(effects.duration, { showDecimals: true }),\r\n        durationExplanation: explanations.duration,\r\n      },\r\n    );\r\n  }\r\n\r\n  doSpellAction(state: GameState): GameState {\r\n    const effects = this.getActionEffects(state);\r\n    state = getStandardSpellAttackEffect(state, this);\r\n    if (getLastQueuedActionResult(state).isHit) {\r\n      state = grantTemporaryEffect(poison.getId(), effects.duration, {\r\n        target: AttackTarget.Enemy,\r\n        params: { magnitude: effects.magnitude },\r\n      })(state);\r\n    }\r\n    return state;\r\n  }\r\n\r\n  getBaseCooldown(): number {\r\n    return 6.0;\r\n  }\r\n\r\n  getBaseAutocastPointsRequirement(): number {\r\n    return 15;\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Poison: 6,\r\n    };\r\n  }\r\n\r\n  isActive(state: GameState): boolean {\r\n    return hasTemporaryEffect(state, poison.getId(), AttackTarget.Enemy);\r\n  }\r\n\r\n  getEstimatedMinAutocastDelay(state: GameState, rule: AutocastRule): number {\r\n    return this.getCooldown(state);\r\n  }\r\n\r\n  allowRegisteringTemporaryEffectsAsPermacast(): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const sting = new Sting();\r\n","import { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { ActionEffect } from \"../../action/Action\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { AttackTarget } from \"../../exploration/AttackTarget\";\r\nimport { calculatePlayerMaxHP } from \"../../exploration/CombatStats\";\r\nimport {\r\n  getCurrentPlayerHP,\r\n  modifyPlayerCurrentHP,\r\n} from \"../../exploration/Exploration\";\r\nimport { pushCombatActionResult } from \"../../exploration/ExplorationActionResult\";\r\nimport { isHealingPossible } from \"../../temporaryeffects/CommonTemporaryEffects\";\r\nimport { getSecondsPlayed } from \"../../timetick/TotalTimePlayed\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { CombatSpellBase } from \"../CombatSpellBase\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport { getStandardRangeEffectText } from \"../Utils\";\r\n\r\nclass DropletOfHealing extends CombatSpellBase {\r\n  getId(): string {\r\n    return \"dropletOfHealing\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Droplet of Healing\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Water;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.HEALING;\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 900;\r\n  }\r\n\r\n  getBaseCooldown(): number {\r\n    return 10.0;\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Conjure a small droplet of curative water. Slightly heals wounds.\",\r\n    );\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      average: {\r\n        value: 25,\r\n        tags: [TransformationTags.ActionMagnitude],\r\n        unit: \":hp:\",\r\n      },\r\n      variance: {\r\n        value: 3,\r\n        tags: [TransformationTags.ActionVariance],\r\n        unit: \":hp:\",\r\n      },\r\n    };\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanation = this.getActionEffectExplanations(state, \"average\");\r\n    return t(\"+{{effect}}:hp:\", {\r\n      effect: getStandardRangeEffectText(\r\n        effects.average,\r\n        effects.variance,\r\n        explanation.average,\r\n      ),\r\n    });\r\n  }\r\n\r\n  doSpellAction(state: GameState): GameState {\r\n    const effects = this.getActionEffects(state);\r\n    const healAmt =\r\n      effects.average + (Math.random() - 0.5) * effects.variance * 2;\r\n    state = modifyPlayerCurrentHP(state, healAmt, this.getSpellName());\r\n    const actionResult = {\r\n      id: Math.random().toString(),\r\n      damage: -healAmt,\r\n      isCrit: false,\r\n      isHit: true,\r\n      time: getSecondsPlayed(state),\r\n      source: AttackTarget.Player,\r\n      target: AttackTarget.Player,\r\n      tags: this.getTags(),\r\n    };\r\n    state = pushCombatActionResult(state, actionResult);\r\n    return state;\r\n  }\r\n\r\n  canUseOutsideOfCombat(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Water: 8,\r\n    };\r\n  }\r\n\r\n  getBaseAutocastPointsRequirement(): number {\r\n    return 40;\r\n  }\r\n\r\n  isCastingRecommended(state: GameState): boolean {\r\n    return (\r\n      getCurrentPlayerHP(state) < calculatePlayerMaxHP(state) * 0.99 &&\r\n      isHealingPossible(state, AttackTarget.Player)\r\n    );\r\n  }\r\n}\r\n\r\nexport default new DropletOfHealing();\r\n","import { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { ActionEffect, DoActionArgs } from \"../../action/Action\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { ManaSpout } from \"../../buildings/mana/ManaSpout\";\r\nimport { TemporaryEffect } from \"../../temporaryeffects/TemporaryEffect\";\r\nimport {\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n  getTemporaryEffectData,\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n  registerTemporaryEffectListener,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport { clearCalculatedIncomeCache } from \"../../timetick/IncomeOverTime\";\r\nimport {\r\n  TransformationType,\r\n  registerTransformation,\r\n} from \"../../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../transformation/TransformationTags\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport { Spell } from \"../Spell\";\r\nimport { registerBuffEmpowerEffects } from \"../Spells\";\r\n\r\nclass EnchantManaSpoutsTemporaryEffect extends TemporaryEffect {\r\n  getId() {\r\n    return \"enchantManaSpouts\";\r\n  }\r\n\r\n  getIcon() {\r\n    return require(\"./boostMana.png\");\r\n  }\r\n\r\n  getDisplayName(): string {\r\n    return t(\"Enchant Mana Spouts\");\r\n  }\r\n\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"+{{magnitudePct}}% effectivity of Mana Spouts\", {\r\n      magnitudePct: formatNumber(temporaryEffectData.params.magnitude * 100),\r\n    });\r\n  }\r\n}\r\n\r\nconst temporaryEffect = new EnchantManaSpoutsTemporaryEffect();\r\nTemporaryEffects.register(temporaryEffect);\r\n\r\nclass EnchantManaSpouts extends Spell {\r\n  getId(): string {\r\n    return \"enchantManaSpouts\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Enchant Mana Spouts\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Water;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.GENERAL_BUFF;\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 60;\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 0.6,\r\n        tags: [TransformationTags.TemporaryEffectMagnitude],\r\n        valueType: TransformationValueType.Percent,\r\n      },\r\n      duration: {\r\n        value: 30.0,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n        unit: t(\" sec\"),\r\n      },\r\n    };\r\n  }\r\n\r\n  doSpellAction(state: GameState, args: DoActionArgs): GameState {\r\n    const effects = this.getActionEffects(state);\r\n    return grantTemporaryEffect(\"enchantManaSpouts\", effects.duration, {\r\n      params: { magnitude: effects.magnitude },\r\n    })(state);\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Use your Water expertise to temporarily power up your Mana Spouts.\",\r\n    );\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanations = this.getActionEffectExplanations(state);\r\n    return t(\r\n      \"^+{{magnitudePct}}%^<{{magnitudeExplanation}}> effectivity of Mana Spouts for ^{{duration}}^<{{durationExplanation}}> sec\",\r\n      {\r\n        magnitudePct: formatNumber(effects.magnitude * 100),\r\n        magnitudeExplanation: explanations.magnitude,\r\n        duration: formatNumber(effects.duration),\r\n        durationExplanation: explanations.duration,\r\n      },\r\n    );\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Water: 2 };\r\n  }\r\n\r\n  protected isEmpowerable(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getEmpoweringLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Water: 51 };\r\n  }\r\n}\r\n\r\nconst enchantManaSpouts = new EnchantManaSpouts();\r\n\r\nregisterBuffEmpowerEffects(enchantManaSpouts, 1.5, 50);\r\n\r\nregisterTransformation(\r\n  [[ManaSpout.getId(), TransformationTags.Production]],\r\n  \"enchantManaSpouts\",\r\n  enchantManaSpouts.getSpellName(),\r\n  TransformationType.Multiplier,\r\n  (state) =>\r\n    hasTemporaryEffect(state, enchantManaSpouts.getId())\r\n      ? getTemporaryEffectData(state, temporaryEffect.getId()).params\r\n          .magnitude + 1.0\r\n      : 1.0,\r\n);\r\n\r\nregisterTemporaryEffectListener(\r\n  temporaryEffect.getId(),\r\n  (state, effect) => {\r\n    if (effect.id == temporaryEffect.getId()) {\r\n      state = clearCalculatedIncomeCache(state);\r\n    }\r\n    return effect;\r\n  },\r\n  true,\r\n);\r\n\r\nexport default enchantManaSpouts;\r\n","import { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { ActionEffect, DoActionArgs } from \"../../action/Action\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport {\r\n  buildManaSteamer,\r\n  manaSteamer,\r\n} from \"../../buildings/mana/ManaSteamer\";\r\nimport { TemporaryEffect } from \"../../temporaryeffects/TemporaryEffect\";\r\nimport {\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n  getTemporaryEffectData,\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n  registerTemporaryEffectListener,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport { clearCalculatedIncomeCache } from \"../../timetick/IncomeOverTime\";\r\nimport {\r\n  TransformationType,\r\n  registerTransformation,\r\n} from \"../../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../transformation/TransformationTags\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport { Spell } from \"../Spell\";\r\nimport { registerBuffEmpowerEffects } from \"../Spells\";\r\n\r\nclass EnchantManaSteamersTemporaryEffect extends TemporaryEffect {\r\n  getId() {\r\n    return \"enchantManaSteamers\";\r\n  }\r\n\r\n  getIcon() {\r\n    return require(\"./boostMana.png\");\r\n  }\r\n\r\n  getDisplayName(): string {\r\n    return t(\"Enchant Mana Steamers\");\r\n  }\r\n\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    return t(\"+{{magnitudePct}}% production and consumption of Mana Steamers\", {\r\n      magnitudePct: formatNumber(temporaryEffectData.params.magnitude * 100),\r\n    });\r\n  }\r\n}\r\n\r\nconst temporaryEffect = new EnchantManaSteamersTemporaryEffect();\r\nTemporaryEffects.register(temporaryEffect);\r\n\r\nclass EnchantManaSteamers extends Spell {\r\n  getId(): string {\r\n    return \"enchantManaSteamers\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Enchant Mana Steamers\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Water;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.GENERAL_BUFF;\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return buildManaSteamer.isVisible(state) && super.isVisible(state);\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 220;\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 0.6,\r\n        tags: [TransformationTags.TemporaryEffectMagnitude],\r\n        valueType: TransformationValueType.Percent,\r\n      },\r\n      duration: {\r\n        value: 20.0,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n        unit: t(\" sec\"),\r\n      },\r\n    };\r\n  }\r\n\r\n  doSpellAction(state: GameState, args: DoActionArgs): GameState {\r\n    const effects = this.getActionEffects(state);\r\n    return grantTemporaryEffect(temporaryEffect.getId(), effects.duration, {\r\n      params: { magnitude: effects.magnitude },\r\n    })(state);\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Power up your Mana Steamers so that they work faster for a limited time.\",\r\n    );\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanations = this.getActionEffectExplanations(state);\r\n    return t(\r\n      \"^+{{magnitudePct}}%^<{{magnitudeExplanation}}> production and consumption of Mana Steamers for ^{{duration}}^<{{durationExplanation}}> sec\",\r\n      {\r\n        magnitudePct: formatNumber(effects.magnitude * 100),\r\n        magnitudeExplanation: explanations.magnitude,\r\n        duration: formatNumber(effects.duration),\r\n        durationExplanation: explanations.duration,\r\n      },\r\n    );\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Water: 15 };\r\n  }\r\n\r\n  protected isEmpowerable(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getEmpoweringLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Water: 61 };\r\n  }\r\n}\r\n\r\nconst enchantManaSteamers = new EnchantManaSteamers();\r\n\r\nregisterBuffEmpowerEffects(enchantManaSteamers, 1.5, 30);\r\n\r\nregisterTransformation(\r\n  [\r\n    [manaSteamer.getId(), TransformationTags.Production],\r\n    [manaSteamer.getId(), TransformationTags.Consumption],\r\n  ],\r\n  temporaryEffect.getId(),\r\n  temporaryEffect.getDisplayName(),\r\n  TransformationType.Multiplier,\r\n  (state) =>\r\n    hasTemporaryEffect(state, enchantManaSteamers.getId())\r\n      ? getTemporaryEffectData(state, temporaryEffect.getId()).params\r\n          .magnitude + 1.0\r\n      : 1.0,\r\n);\r\n\r\nregisterTemporaryEffectListener(\r\n  temporaryEffect.getId(),\r\n  (state, effect) => {\r\n    if (effect.id == temporaryEffect.getId()) {\r\n      state = clearCalculatedIncomeCache(state);\r\n    }\r\n    return effect;\r\n  },\r\n  true,\r\n);\r\n\r\nexport default enchantManaSteamers;\r\n","import { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { ActionEffect } from \"../../action/Action\";\r\nimport { AutocastRule, SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { AttackTarget } from \"../../exploration/AttackTarget\";\r\nimport { getLastQueuedActionResult } from \"../../exploration/ExplorationUtils\";\r\nimport { Chilled } from \"../../temporaryeffects/Chilled\";\r\nimport {\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { CombatSpellBase } from \"../CombatSpellBase\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport {\r\n  getStandardAttackEffectText,\r\n  getStandardSpellAttackEffect,\r\n} from \"../Utils\";\r\n\r\nclass Frost extends CombatSpellBase {\r\n  getId(): string {\r\n    return \"frost\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Frost\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Water;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.ATTACK;\r\n  }\r\n\r\n  getExtraTags(): string[] {\r\n    return [TransformationTags.AttackSpell];\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 650;\r\n  }\r\n\r\n  getBaseAutocastPointsRequirement(): number {\r\n    return 24;\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Batter the enemy with a sub-zero breeze that can chill their bones.\",\r\n    );\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      average: {\r\n        value: 110,\r\n        tags: [TransformationTags.ActionMagnitude],\r\n        unit: \":attack:\",\r\n      },\r\n      variance: {\r\n        value: 5,\r\n        tags: [TransformationTags.ActionVariance],\r\n        unit: \":attack:\",\r\n      },\r\n      duration: {\r\n        value: 10,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n        unit: t(\" sec\"),\r\n      },\r\n    };\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanations = this.getActionEffectExplanations(state);\r\n    const effectExplanation = Chilled.getParameterlessDisplayDescription(state);\r\n    return t(\r\n      '{{standardAttack}}; On hit, inflicts ^\"Chilled\"^<{{effectExplanation}}> for ^{{duration}}^<{{durationExplanation}}> sec',\r\n      {\r\n        standardAttack: getStandardAttackEffectText(\r\n          effects.average,\r\n          effects.variance,\r\n          explanations.average,\r\n        ),\r\n        duration: formatNumber(effects.duration, { showDecimals: true }),\r\n        durationExplanation: explanations.duration,\r\n        effectExplanation,\r\n      },\r\n    );\r\n  }\r\n\r\n  doSpellAction(state: GameState): GameState {\r\n    const effects = this.getActionEffects(state, \"duration\");\r\n    state = getStandardSpellAttackEffect(state, this);\r\n    if (getLastQueuedActionResult(state).isHit) {\r\n      state = grantTemporaryEffect(Chilled.getId(), effects.duration, {\r\n        target: AttackTarget.Enemy,\r\n      })(state);\r\n    }\r\n    return state;\r\n  }\r\n\r\n  getBaseCooldown(): number {\r\n    return 3.0;\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Water: 16,\r\n    };\r\n  }\r\n\r\n  isActive(state: GameState): boolean {\r\n    return hasTemporaryEffect(state, Chilled.getId(), AttackTarget.Enemy);\r\n  }\r\n\r\n  getEstimatedMinAutocastDelay(state: GameState, rule: AutocastRule): number {\r\n    return this.getCooldown(state);\r\n  }\r\n\r\n  allowRegisteringTemporaryEffectsAsPermacast(): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default new Frost();\r\n","import { formatMultiplier, formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { Resource } from \"../../Resources\";\r\nimport { ActionEffect, DoActionArgs } from \"../../action/Action\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { CombatStat } from \"../../exploration/CombatStats\";\r\nimport { TemporaryEffect } from \"../../temporaryeffects/TemporaryEffect\";\r\nimport {\r\n  TemporaryEffectData,\r\n  TemporaryEffects,\r\n  grantTemporaryEffect,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport { TransformationType } from \"../../transformation/Transformation\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { CombatSpellBase } from \"../CombatSpellBase\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport { registerEmpowerEffects } from \"../Spells\";\r\n\r\nclass LongevityTemporaryEffect extends TemporaryEffect {\r\n  getId() {\r\n    return \"longevity\";\r\n  }\r\n\r\n  getDisplayName(): string {\r\n    return t(\"Longevity\");\r\n  }\r\n\r\n  getIcon() {\r\n    return require(\"./longevity.png\");\r\n  }\r\n\r\n  isCommonBuffEnabled(): { stat: CombatStat; type: TransformationType }[] {\r\n    return [\r\n      { stat: CombatStat.MaxHP, type: TransformationType.Addition },\r\n      { stat: CombatStat.MaxHP, type: TransformationType.Multiplier },\r\n    ];\r\n  }\r\n\r\n  getDisplayDescription(\r\n    state: GameState,\r\n    temporaryEffectData: TemporaryEffectData,\r\n  ): string {\r\n    const maxHP = temporaryEffectData.params.commonBuff.MaxHP;\r\n    if (!maxHP) {\r\n      const maxHPRatio = temporaryEffectData.params.commonBuff.MaxHPMultiplier;\r\n      return t(\"{{ratio}} Max:hp:\", {\r\n        ratio: formatMultiplier(maxHPRatio),\r\n      });\r\n    }\r\n    return t(\"+{{amount}} Max:hp:\", {\r\n      amount: formatNumber(maxHP),\r\n    });\r\n  }\r\n}\r\n\r\nconst temporaryEffect = new LongevityTemporaryEffect();\r\nTemporaryEffects.register(temporaryEffect);\r\n\r\nclass Longevity extends CombatSpellBase {\r\n  getId(): string {\r\n    return \"longevity\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Longevity\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Water;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.COMBAT_BUFF;\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 450;\r\n  }\r\n\r\n  canUseOutsideOfCombat(): boolean {\r\n    return true;\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 60,\r\n        tags: [TransformationTags.TemporaryEffectMagnitude],\r\n        unit: \" Max:hp:\",\r\n      },\r\n      duration: {\r\n        value: 70.0,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n        unit: t(\" sec\"),\r\n      },\r\n    };\r\n  }\r\n\r\n  doSpellAction(state: GameState, args: DoActionArgs): GameState {\r\n    const effects = this.getActionEffects(state);\r\n    return grantTemporaryEffect(temporaryEffect.getId(), effects.duration, {\r\n      params: { commonBuff: { MaxHP: effects.magnitude } },\r\n    })(state);\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\"Bolster the ability of your body to stay alive.\");\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanations = this.getActionEffectExplanations(state);\r\n    return t(\r\n      \"^+{{amount}}^<{{amountExplanation}}> Max:hp: for ^{{duration}}^<{{durationExplanation}}> sec\",\r\n      {\r\n        amount: formatNumber(effects.magnitude),\r\n        amountExplanation: explanations.magnitude,\r\n        duration: formatNumber(effects.duration),\r\n        durationExplanation: explanations.duration,\r\n      },\r\n    );\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Water: 7 };\r\n  }\r\n\r\n  protected isEmpowerable(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getEmpoweringLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Water: 54 };\r\n  }\r\n}\r\n\r\nconst longevity = new Longevity();\r\n\r\nregisterEmpowerEffects(longevity, [TransformationTags.Cost, Resource.Mana], 30);\r\nregisterEmpowerEffects(\r\n  longevity,\r\n  [TransformationTags.TemporaryEffectMagnitude],\r\n  4,\r\n);\r\n\r\nexport { longevity as Longevity, temporaryEffect as LongevityTemporaryEffect };\r\n","import { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { ActionEffect, DoActionArgs } from \"../../action/Action\";\r\nimport { AutocastRule, SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { AttackTarget } from \"../../exploration/AttackTarget\";\r\nimport {\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport { Wet } from \"../../temporaryeffects/Wet\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { CombatSpellBase } from \"../CombatSpellBase\";\r\nimport { SpellElement } from \"../Elements\";\r\n\r\nclass Soak extends CombatSpellBase {\r\n  getId(): string {\r\n    return \"soak\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Soak\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Water;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.OTHER;\r\n  }\r\n\r\n  canUseOutsideOfCombat(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 300;\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      duration: {\r\n        value: 30.0,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n        unit: t(\" sec\"),\r\n      },\r\n    };\r\n  }\r\n\r\n  doSpellAction(state: GameState, args: DoActionArgs): GameState {\r\n    const effects = this.getActionEffects(state);\r\n    return grantTemporaryEffect(Wet.getId(), effects.duration, {})(state);\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\"Make yourself wet! If you're facing a fiery blaze...\");\r\n  }\r\n\r\n  getBaseCooldown(): number {\r\n    return 6.0;\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanations = this.getActionEffectExplanations(state);\r\n    const effectExplanation = Wet.getParameterlessDisplayDescription(state);\r\n    return t(\r\n      'Inflicts ^\"Wet\"^<{{effectExplanation}}> on yourself for ^{{duration}}^<{{durationExplanation}}> sec',\r\n      {\r\n        duration: formatNumber(effects.duration),\r\n        durationExplanation: explanations.duration,\r\n        effectExplanation,\r\n      },\r\n    );\r\n  }\r\n\r\n  isActive(state: GameState): boolean {\r\n    return hasTemporaryEffect(state, Wet.getId(), AttackTarget.Player);\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Water: 25 };\r\n  }\r\n\r\n  getEstimatedMinAutocastDelay(state: GameState, rule?: AutocastRule): number {\r\n    return this.getCooldown(state);\r\n  }\r\n\r\n  allowRegisteringTemporaryEffectsAsPermacast(): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const soak = new Soak();\r\n","import { formatNumber } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { ActionEffect } from \"../../action/Action\";\r\nimport { AutocastRule, SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { AttackTarget } from \"../../exploration/AttackTarget\";\r\nimport { getLastQueuedActionResult } from \"../../exploration/ExplorationUtils\";\r\nimport {\r\n  grantTemporaryEffect,\r\n  hasTemporaryEffect,\r\n} from \"../../temporaryeffects/TemporaryEffects\";\r\nimport { Wet } from \"../../temporaryeffects/Wet\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { CombatSpellBase } from \"../CombatSpellBase\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport {\r\n  getStandardAttackEffectText,\r\n  getStandardSpellAttackEffect,\r\n} from \"../Utils\";\r\n\r\nclass Splash extends CombatSpellBase {\r\n  getId(): string {\r\n    return \"splash\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Splash\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Water;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.ATTACK;\r\n  }\r\n\r\n  getExtraTags(): string[] {\r\n    return [TransformationTags.AttackSpell];\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 160;\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Spray the enemy with a small burst of water. Leaves the enemy Wet.\",\r\n    );\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      average: {\r\n        value: 42,\r\n        tags: [TransformationTags.ActionMagnitude],\r\n        unit: \":attack:\",\r\n      },\r\n      variance: {\r\n        value: 2,\r\n        tags: [TransformationTags.ActionVariance],\r\n        unit: \":attack:\",\r\n      },\r\n      duration: {\r\n        value: 10,\r\n        tags: [TransformationTags.TemporaryEffectDuration],\r\n        unit: t(\" sec\"),\r\n      },\r\n    };\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanations = this.getActionEffectExplanations(state);\r\n    const effectExplanation = Wet.getParameterlessDisplayDescription(state);\r\n    return t(\r\n      '{{standardAttack}}; On hit, inflicts ^\"Wet\"^<{{effectExplanation}}> for ^{{duration}}^<{{durationExplanation}}> sec',\r\n      {\r\n        standardAttack: getStandardAttackEffectText(\r\n          effects.average,\r\n          effects.variance,\r\n          explanations.average,\r\n        ),\r\n        duration: formatNumber(effects.duration, { showDecimals: true }),\r\n        durationExplanation: explanations.duration,\r\n        effectExplanation,\r\n      },\r\n    );\r\n  }\r\n\r\n  doSpellAction(state: GameState): GameState {\r\n    const effects = this.getActionEffects(state, \"duration\");\r\n    state = getStandardSpellAttackEffect(state, this);\r\n    if (getLastQueuedActionResult(state).isHit) {\r\n      state = grantTemporaryEffect(Wet.getId(), effects.duration, {\r\n        target: AttackTarget.Enemy,\r\n      })(state);\r\n    }\r\n    return state;\r\n  }\r\n\r\n  getBaseCooldown(): number {\r\n    return 2.0;\r\n  }\r\n\r\n  getBaseAutocastPointsRequirement(): number {\r\n    return 15;\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Water: 6,\r\n    };\r\n  }\r\n\r\n  isActive(state: GameState): boolean {\r\n    return hasTemporaryEffect(state, Wet.getId(), AttackTarget.Enemy);\r\n  }\r\n\r\n  getEstimatedMinAutocastDelay(state: GameState, rule: AutocastRule): number {\r\n    return this.getCooldown(state);\r\n  }\r\n\r\n  allowRegisteringTemporaryEffectsAsPermacast(): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default new Splash();\r\n","import { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { ActionEffect } from \"../../action/Action\";\r\nimport { SpellAutocastCategory } from \"../../autocast/Autocast\";\r\nimport { AttackTarget } from \"../../exploration/AttackTarget\";\r\nimport { calculatePlayerMaxHP } from \"../../exploration/CombatStats\";\r\nimport {\r\n  getCurrentPlayerHP,\r\n  modifyPlayerCurrentHP,\r\n} from \"../../exploration/Exploration\";\r\nimport { pushCombatActionResult } from \"../../exploration/ExplorationActionResult\";\r\nimport { isHealingPossible } from \"../../temporaryeffects/CommonTemporaryEffects\";\r\nimport { getSecondsPlayed } from \"../../timetick/TotalTimePlayed\";\r\nimport { TransformationTags } from \"../../transformation/TransformationTags\";\r\nimport { CombatSpellBase } from \"../CombatSpellBase\";\r\nimport { SpellElement } from \"../Elements\";\r\nimport { registerStandardEmpowerEffects } from \"../Spells\";\r\nimport { getStandardRangeEffectText } from \"../Utils\";\r\n\r\nclass StreamOfHealing extends CombatSpellBase {\r\n  getId(): string {\r\n    return \"streamOfHealing\";\r\n  }\r\n\r\n  getSpellName(): string {\r\n    return t(\"Stream of Healing\");\r\n  }\r\n\r\n  getElement(): SpellElement {\r\n    return SpellElement.Water;\r\n  }\r\n\r\n  getAutocastCategory(): SpellAutocastCategory {\r\n    return SpellAutocastCategory.HEALING;\r\n  }\r\n\r\n  getBaseManaCost(state: GameState): number {\r\n    return 2600;\r\n  }\r\n\r\n  getBaseCooldown(): number {\r\n    return 15.0;\r\n  }\r\n\r\n  getDisplayDescription(state: GameState): string {\r\n    return t(\r\n      \"Conjure a stream of curative water running through your body. Significantly heals wounds.\",\r\n    );\r\n  }\r\n\r\n  protected getBaseActionEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      average: {\r\n        value: 80,\r\n        tags: [TransformationTags.ActionMagnitude],\r\n        unit: \":hp:\",\r\n      },\r\n      variance: {\r\n        value: 5,\r\n        tags: [TransformationTags.ActionVariance],\r\n        unit: \":hp:\",\r\n      },\r\n    };\r\n  }\r\n\r\n  getDisplayEffect(state: GameState): string {\r\n    const effects = this.getActionEffects(state);\r\n    const explanation = this.getActionEffectExplanations(state, \"average\");\r\n    return t(\"+{{effect}}:hp:\", {\r\n      effect: getStandardRangeEffectText(\r\n        effects.average,\r\n        effects.variance,\r\n        explanation.average,\r\n      ),\r\n    });\r\n  }\r\n\r\n  doSpellAction(state: GameState): GameState {\r\n    const effects = this.getActionEffects(state);\r\n    const healAmt =\r\n      effects.average + (Math.random() - 0.5) * effects.variance * 2;\r\n    state = modifyPlayerCurrentHP(state, healAmt, this.getSpellName());\r\n    const actionResult = {\r\n      id: Math.random().toString(),\r\n      damage: -healAmt,\r\n      isCrit: false,\r\n      isHit: true,\r\n      time: getSecondsPlayed(state),\r\n      source: AttackTarget.Player,\r\n      target: AttackTarget.Player,\r\n      tags: this.getTags(),\r\n    };\r\n    state = pushCombatActionResult(state, actionResult);\r\n    return state;\r\n  }\r\n\r\n  canUseOutsideOfCombat(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return {\r\n      Water: 21,\r\n    };\r\n  }\r\n\r\n  isCastingRecommended(state: GameState): boolean {\r\n    return (\r\n      getCurrentPlayerHP(state) < calculatePlayerMaxHP(state) * 0.99 &&\r\n      isHealingPossible(state, AttackTarget.Player)\r\n    );\r\n  }\r\n\r\n  protected isEmpowerable(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getEmpoweringLevelRequirements(): Partial<Record<SpellElement, number>> {\r\n    return { Water: 58 };\r\n  }\r\n}\r\n\r\nconst streamOfHealing = new StreamOfHealing();\r\n\r\nregisterStandardEmpowerEffects(streamOfHealing, 3, 8);\r\n\r\nexport default streamOfHealing as StreamOfHealing;\r\n","import AirBlast from \"./air/AirBlast\";\r\nimport { blur } from \"./air/Blur\";\r\nimport EnchantSaleStalls from \"./air/EnchantSaleStalls\";\r\nimport { Haste } from \"./air/Haste\";\r\nimport { Levitation } from \"./air/Levitation\";\r\nimport richness from \"./air/Richness\";\r\nimport Twister from \"./air/Twister\";\r\nimport ChannelAir from \"./channeling/ChannelAir\";\r\nimport ChannelEarth from \"./channeling/ChannelEarth\";\r\nimport ChannelFire from \"./channeling/ChannelFire\";\r\nimport ChannelFour from \"./channeling/ChannelFour\";\r\nimport ChannelPoison from \"./channeling/ChannelPoison\";\r\nimport ChannelWater from \"./channeling/ChannelWater\";\r\nimport { earthShield } from \"./earth/EarthShield\";\r\nimport EnchantTransmutation from \"./earth/EnchantTransmutation\";\r\nimport { Guard } from \"./earth/Guard\";\r\nimport Knockout from \"./earth/Knockout\";\r\nimport Landslide from \"./earth/Landslide\";\r\nimport { Stoneskin } from \"./earth/Stoneskin\";\r\nimport StoneStrike from \"./earth/StoneStrike\";\r\nimport { loadElementsCommonLogic } from \"./ElementsCommonLogic\";\r\nimport { cloakOfFlamesSpell } from \"./fire/CloakOfFlames\";\r\nimport EnchantCatalysts from \"./fire/EnchantCatalysts\";\r\nimport Fireball from \"./fire/Fireball\";\r\nimport { imbueFlames } from \"./fire/ImbueFlames\";\r\nimport InfernalBlaze from \"./fire/InfernalBlaze\";\r\nimport Sear from \"./fire/Sear\";\r\nimport { Strength } from \"./fire/Strength\";\r\nimport Antidote from \"./poison/Antidote\";\r\nimport { enchantMonstiumCatalysts } from \"./poison/EnchantMonstiumCatalysts\";\r\nimport { enchantSewageSystem } from \"./poison/EnchantSewageSystem\";\r\nimport { frailSpell } from \"./poison/Frail\";\r\nimport { intoxicate } from \"./poison/Intoxicate\";\r\nimport { sting } from \"./poison/Sting\";\r\nimport { loadSpellCommonLogic } from \"./SpellCommonLogic\";\r\nimport { registerSpell } from \"./Spells\";\r\nimport DropletOfHealing from \"./water/DropletOfHealing\";\r\nimport EnchantManaSpouts from \"./water/EnchantManaSpouts\";\r\nimport enchantManaSteamers from \"./water/EnchantManaSteamers\";\r\nimport Frost from \"./water/Frost\";\r\nimport { Longevity } from \"./water/Longevity\";\r\nimport { soak } from \"./water/Soak\";\r\nimport Splash from \"./water/Splash\";\r\nimport StreamOfHealing from \"./water/StreamOfHealing\";\r\n\r\nexport function loadSpellsDemo() {\r\n  loadElementsCommonLogic();\r\n  loadSpellCommonLogic();\r\n\r\n  // Fire\r\n  registerSpell(ChannelFire);\r\n  registerSpell(EnchantCatalysts);\r\n  registerSpell(Fireball);\r\n  registerSpell(Strength);\r\n  registerSpell(Sear);\r\n  registerSpell(enchantManaSteamers);\r\n  registerSpell(imbueFlames);\r\n  registerSpell(cloakOfFlamesSpell);\r\n  registerSpell(InfernalBlaze);\r\n\r\n  // Earth\r\n  registerSpell(ChannelEarth);\r\n  registerSpell(EnchantTransmutation);\r\n  registerSpell(Stoneskin);\r\n  registerSpell(StoneStrike);\r\n  registerSpell(Guard);\r\n  registerSpell(Landslide);\r\n  registerSpell(earthShield);\r\n  registerSpell(Knockout);\r\n\r\n  // Water\r\n  registerSpell(ChannelWater);\r\n  registerSpell(EnchantManaSpouts);\r\n  registerSpell(DropletOfHealing);\r\n  registerSpell(Splash);\r\n  registerSpell(Longevity);\r\n  registerSpell(Frost);\r\n  registerSpell(StreamOfHealing);\r\n  registerSpell(soak);\r\n\r\n  // Air\r\n  registerSpell(ChannelAir);\r\n  registerSpell(EnchantSaleStalls);\r\n  registerSpell(AirBlast);\r\n  registerSpell(Haste);\r\n  registerSpell(Levitation);\r\n  registerSpell(blur);\r\n  registerSpell(Twister);\r\n  registerSpell(richness);\r\n\r\n  // Poison\r\n  registerSpell(ChannelPoison);\r\n  registerSpell(sting);\r\n  registerSpell(Antidote);\r\n  registerSpell(enchantMonstiumCatalysts);\r\n  registerSpell(intoxicate);\r\n  registerSpell(enchantSewageSystem);\r\n  registerSpell(frailSpell);\r\n\r\n  // Other\r\n  registerSpell(ChannelFour);\r\n}\r\n","import { LevelUpListeners } from \"../events/progression/LevelUp\";\r\nimport { getElementLevel, getUnlockedElements } from \"./Elements\";\r\n\r\nexport function loadElementsCommonLogic() {\r\n  LevelUpListeners.register((state, element) => {\r\n    const elements = getUnlockedElements(state);\r\n    const newMaxes = state.world.maxElementLevels;\r\n    let update = false;\r\n    elements.forEach((element) => {\r\n      const previousMax = state.world.maxElementLevels?.[element] ?? 0;\r\n      const newLevel = getElementLevel(state, element);\r\n      if (newLevel > previousMax) {\r\n        newMaxes[element] = newLevel;\r\n        update = true;\r\n      }\r\n    });\r\n    if (update) {\r\n      state.world.maxElementLevels = newMaxes;\r\n    }\r\n    return state;\r\n  }, \"maxMaxElementLevels\");\r\n}\r\n","import { ActionArea } from \"../action/ActionAreas\";\r\nimport { LevelUpListeners } from \"../events/progression/LevelUp\";\r\nimport { createHypotheticalState } from \"../GameState\";\r\nimport { getElementExp, grantElementExp } from \"./Elements\";\r\nimport { GameStartupListeners } from \"./GameStartup\";\r\nimport { getVisibleSpellsForElement, Spells, toggleEmpowered } from \"./Spells\";\r\nimport { clearVisibleSpellsCache } from \"./VisibleSpellsCache\";\r\n\r\nexport function loadSpellCommonLogic() {\r\n  LevelUpListeners.register((state, element, oldExp) => {\r\n    let lessExpState = createHypotheticalState(state);\r\n    lessExpState = grantElementExp(\r\n      element,\r\n      -(getElementExp(state, element) - oldExp),\r\n    )(lessExpState);\r\n    const oldSpells = getVisibleSpellsForElement(\r\n      lessExpState,\r\n      element,\r\n      ActionArea.SPELL_MENU,\r\n    );\r\n    const newSpells = getVisibleSpellsForElement(\r\n      state,\r\n      element,\r\n      ActionArea.SPELL_MENU,\r\n    );\r\n    const oldEmpoweredSpells = oldSpells.filter((spell) =>\r\n      spell.isEmpoweringPossible(lessExpState),\r\n    );\r\n    const newEmpoweredSpells = newSpells.filter(\r\n      (spell) =>\r\n        spell.isEmpoweringPossible(state) &&\r\n        !oldEmpoweredSpells.includes(spell),\r\n    );\r\n    for (let spell of newEmpoweredSpells) {\r\n      state = toggleEmpowered(state, spell);\r\n    }\r\n    return state;\r\n  }, \"spellAutoEmpowering\");\r\n  LevelUpListeners.register((state, element, oldExp) => {\r\n    return clearVisibleSpellsCache(state);\r\n  }, \"spellByElementCacheClearer\");\r\n  GameStartupListeners.register((state) => {\r\n    const spells = Spells.getAll();\r\n    for (let spell of spells) {\r\n      if (spell.isEmpoweringPossible(state)) {\r\n        state = toggleEmpowered(state, spell);\r\n      }\r\n    }\r\n    return state;\r\n  }, \"spellAutoEmpoweringOnStartup\");\r\n}\r\n","import memoize from \"sonic-memoize\";\r\nimport { formatNumber } from \"../../utils/FormattingUtils\";\r\nimport { t } from \"../../utils/I18n\";\r\nimport { GameState } from \"../GameState\";\r\nimport { ActionEffect } from \"../action/Action\";\r\nimport { Identifiable } from \"../generic/Identifiable\";\r\nimport { SpellElement, translateElement } from \"../spells/Elements\";\r\nimport {\r\n  applyTransformationsCached,\r\n  explainTransformationsText,\r\n} from \"../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../transformation/TransformationTags\";\r\nimport { getCurrentSynchroBonuses } from \"./Synchro\";\r\n\r\nexport abstract class SynchroBonus implements Identifiable {\r\n  constructor() {}\r\n\r\n  getId(): string {\r\n    return this.getElement1() + \"-\" + this.getElement2();\r\n  }\r\n  abstract getEffect(state: GameState, amount: number): string | undefined;\r\n\r\n  protected getBaseBonusEffects(): Record<string, ActionEffect> {\r\n    return {};\r\n  }\r\n\r\n  getCachedBaseBonusEffects = memoize(() => this.getBaseBonusEffects());\r\n\r\n  abstract getElement1(): SpellElement;\r\n  abstract getElement2(): SpellElement;\r\n\r\n  getName(): string {\r\n    return t(\"Synchro Bonus ({{element1}}+{{element2}})\", {\r\n      element1: translateElement(this.getElement1()),\r\n      element2: translateElement(this.getElement2()),\r\n    });\r\n  }\r\n\r\n  getTags(): string[] {\r\n    return [];\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return true;\r\n  }\r\n\r\n  isBeneficial(): boolean {\r\n    return true;\r\n  }\r\n\r\n  tagsByEffect: Record<string, string[]> = {};\r\n  getTagsByEffect(key: string, baseEffect: ActionEffect): string[] {\r\n    if (this.tagsByEffect?.[key] == null) {\r\n      this.tagsByEffect[key] = [\r\n        ...this.getTags(),\r\n        this.getId(),\r\n        ...(baseEffect.tags ?? []),\r\n        TransformationTags.SynchroEffect,\r\n      ];\r\n    }\r\n    return this.tagsByEffect[key];\r\n  }\r\n\r\n  getBonusEffect(state: GameState, effectId: string, amount?: number): number {\r\n    const baseEffects = this.getCachedBaseBonusEffects();\r\n    const baseEffect = baseEffects[effectId];\r\n    switch (baseEffect.valueType) {\r\n      case TransformationValueType.Divisor:\r\n        return Math.pow(\r\n          applyTransformationsCached(\r\n            this.getTagsByEffect(effectId, baseEffect),\r\n            state,\r\n            baseEffect.value,\r\n          ),\r\n          amount ?? 1,\r\n        );\r\n      case TransformationValueType.Percent:\r\n        return Math.pow(\r\n          applyTransformationsCached(\r\n            this.getTagsByEffect(effectId, baseEffect),\r\n            state,\r\n            baseEffect.value,\r\n          ) + 1.0,\r\n          amount ?? 1,\r\n        );\r\n      case TransformationValueType.Basic:\r\n      default:\r\n        return (\r\n          applyTransformationsCached(\r\n            this.getTagsByEffect(effectId, baseEffect),\r\n            state,\r\n            baseEffect.value,\r\n          ) * (amount ?? 1)\r\n        );\r\n    }\r\n  }\r\n\r\n  getBonusEffects(state: GameState, amount?: number): Record<string, number> {\r\n    const baseEffects = this.getCachedBaseBonusEffects();\r\n    const finalEffects: Record<string, number> = {};\r\n    for (let key in baseEffects) {\r\n      const baseEffect = baseEffects[key];\r\n      finalEffects[key] = Math.pow(\r\n        applyTransformationsCached(\r\n          this.getTagsByEffect(key, baseEffect),\r\n          state,\r\n          baseEffect.value,\r\n        ),\r\n        amount ?? 1,\r\n      );\r\n    }\r\n    return finalEffects;\r\n  }\r\n\r\n  getExplanationParamsByEffect = memoize((baseEffect: ActionEffect) => ({\r\n    valueType: baseEffect.valueType,\r\n    unit: baseEffect.unit,\r\n  }));\r\n\r\n  getBonusEffectExplanations(\r\n    state: GameState,\r\n    amount?: number,\r\n    onlyId?: string,\r\n  ): Record<string, string> {\r\n    const baseEffects = this.getCachedBaseBonusEffects();\r\n    const finalEffects: Record<string, string> = {};\r\n    for (let key in baseEffects) {\r\n      if (onlyId != null && key != onlyId) {\r\n        continue;\r\n      }\r\n      const baseEffect = baseEffects[key];\r\n      const transformedEffect = explainTransformationsText(\r\n        this.getTagsByEffect(key, baseEffect),\r\n        state,\r\n        baseEffect.value,\r\n        this.getExplanationParamsByEffect(baseEffect),\r\n      );\r\n      if (transformedEffect != \"\" || amount != 1) {\r\n        finalEffects[key] = t(\r\n          \"Results from stacking {{amount}} time(s) the following: {{transformedEffect}}\",\r\n          {\r\n            amount: formatNumber(amount ?? 1),\r\n            transformedEffect:\r\n              transformedEffect != \"\"\r\n                ? transformedEffect\r\n                : t(\"{{amount}}{{unit}}\", {\r\n                    amount: formatNumber(\r\n                      baseEffect.valueType == TransformationValueType.Percent\r\n                        ? 100.0 * baseEffect.value\r\n                        : baseEffect.value,\r\n                      { showDecimals: true },\r\n                    ),\r\n                    unit:\r\n                      baseEffect.valueType == TransformationValueType.Percent\r\n                        ? t(\"%{{unit}}\", { unit: baseEffect.unit })\r\n                        : baseEffect.unit,\r\n                  }),\r\n          },\r\n        );\r\n      }\r\n    }\r\n    return finalEffects;\r\n  }\r\n\r\n  getCurrentBonusAmount(state: GameState): number {\r\n    return getCurrentSynchroBonuses(\r\n      state,\r\n      this.getElement1(),\r\n      this.getElement2(),\r\n    );\r\n  }\r\n\r\n  getCurrentBonusEffect(state: GameState, effectId: string): number {\r\n    return this.getBonusEffect(\r\n      state,\r\n      effectId,\r\n      this.getCurrentBonusAmount(state),\r\n    );\r\n  }\r\n}\r\n","import { valuesOfCached } from \"../../../utils/CoreUtils\";\r\nimport { formatMultiplier } from \"../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../utils/I18n\";\r\nimport { GameState } from \"../../GameState\";\r\nimport { ActionEffect } from \"../../action/Action\";\r\nimport { getRankDifference } from \"../../spells/ElementMultipliers\";\r\nimport {\r\n  SpellElement,\r\n  getElementLevel,\r\n  translateElement,\r\n} from \"../../spells/Elements\";\r\nimport { Spell } from \"../../spells/Spell\";\r\nimport {\r\n  TransformationType,\r\n  registerTransformation,\r\n} from \"../../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../transformation/TransformationTags\";\r\nimport { getCurrentSynchroBonuses } from \"../Synchro\";\r\nimport { SynchroBonus } from \"../SynchroBonus\";\r\nimport { SynchroBonuses } from \"../SynchroBonuses\";\r\n\r\nclass DoubleElementSynchroBonus extends SynchroBonus {\r\n  element: SpellElement;\r\n  constructor(element: SpellElement) {\r\n    super();\r\n    this.element = element;\r\n  }\r\n\r\n  getElement1(): SpellElement {\r\n    return this.element;\r\n  }\r\n\r\n  getElement2(): SpellElement {\r\n    return this.element;\r\n  }\r\n\r\n  protected getBaseBonusEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 0.02,\r\n        valueType: TransformationValueType.Percent,\r\n      },\r\n    };\r\n  }\r\n\r\n  getEffect(state: GameState, amount: number): string {\r\n    const magnitude = this.getBonusEffect(state, \"magnitude\", amount);\r\n    const explanation = this.getBonusEffectExplanations(\r\n      state,\r\n      amount,\r\n      \"magnitude\",\r\n    )[\"magnitude\"];\r\n    return t(\r\n      \"^{{magnitude}}^<{{explanation}}> {{element}} spell power for every {{element}} Rank above the spell's Rank\",\r\n      {\r\n        magnitude: formatMultiplier(magnitude),\r\n        explanation,\r\n        element: translateElement(this.element),\r\n      },\r\n    );\r\n  }\r\n}\r\n\r\nfunction loadDoubleElementSynchroBonus(element: SpellElement) {\r\n  const synchroBonus = new DoubleElementSynchroBonus(element);\r\n  SynchroBonuses.register(synchroBonus);\r\n\r\n  registerTransformation(\r\n    [\r\n      [\r\n        TransformationTags.Spell,\r\n        TransformationTags.ActionEffect,\r\n        TransformationTags.ActionMagnitude,\r\n        element,\r\n      ],\r\n      [\r\n        TransformationTags.Spell,\r\n        TransformationTags.ActionEffect,\r\n        TransformationTags.TemporaryEffectMagnitude,\r\n        element,\r\n      ],\r\n    ],\r\n    \"doubleSynchroBonus\" + element,\r\n    t(\"Synchro Bonus ({{element}}+{{element}})\", {\r\n      element: translateElement(element),\r\n    }),\r\n    TransformationType.Multiplier,\r\n    (state, params) => {\r\n      const spell = params.action as Spell;\r\n      const baseLevel = spell.getLevelRequirements()[element];\r\n      if (baseLevel == null) {\r\n        return 1.0;\r\n      }\r\n      const currentLevel = getElementLevel(state, element);\r\n      const rankDifference = getRankDifference(baseLevel, currentLevel);\r\n      if (rankDifference <= 0) {\r\n        return 1.0;\r\n      }\r\n      return Math.pow(\r\n        synchroBonus.getBonusEffect(\r\n          state,\r\n          \"magnitude\",\r\n          getCurrentSynchroBonuses(state, element, element),\r\n        ),\r\n        rankDifference,\r\n      );\r\n    },\r\n  );\r\n\r\n  registerTransformation(\r\n    [[element, TransformationTags.ChannelingEfficiency]],\r\n    \"doubleSynchroBonus\" + element + \"ChannelingMultiplier\",\r\n    t(\"Synchro Bonus ({{element}}+{{element}})\", {\r\n      element: translateElement(element),\r\n    }),\r\n    TransformationType.Multiplier,\r\n    (state) => {\r\n      const currentLevel = getElementLevel(state, element);\r\n      const rankDifference = getRankDifference(1, currentLevel);\r\n      return Math.pow(\r\n        synchroBonus.getBonusEffect(\r\n          state,\r\n          \"magnitude\",\r\n          getCurrentSynchroBonuses(state, element, element),\r\n        ),\r\n        rankDifference,\r\n      );\r\n    },\r\n  );\r\n}\r\n\r\nexport function loadDoubleElementSynchroBonuses() {\r\n  for (let element of valuesOfCached(SpellElement)) {\r\n    loadDoubleElementSynchroBonus(element);\r\n  }\r\n}\r\n","import { SpellElement } from \"../../spells/Elements\";\r\nimport { SynchroBonus } from \"../SynchroBonus\";\r\n\r\nexport abstract class FireSynchroBonus extends SynchroBonus {\r\n  getElement1(): SpellElement {\r\n    return SpellElement.Fire;\r\n  }\r\n}\r\n\r\nexport abstract class EarthSynchroBonus extends SynchroBonus {\r\n  getElement1(): SpellElement {\r\n    return SpellElement.Earth;\r\n  }\r\n}\r\n\r\nexport abstract class WaterSynchroBonus extends SynchroBonus {\r\n  getElement1(): SpellElement {\r\n    return SpellElement.Water;\r\n  }\r\n}\r\n\r\nexport abstract class AirSynchroBonus extends SynchroBonus {\r\n  getElement1(): SpellElement {\r\n    return SpellElement.Air;\r\n  }\r\n}\r\n\r\nexport abstract class PoisonSynchroBonus extends SynchroBonus {\r\n  getElement1(): SpellElement {\r\n    return SpellElement.Poison;\r\n  }\r\n}\r\n\r\nexport abstract class MindSynchroBonus extends SynchroBonus {\r\n  getElement1(): SpellElement {\r\n    return SpellElement.Mind;\r\n  }\r\n}\r\n\r\nexport abstract class LifeSynchroBonus extends SynchroBonus {\r\n  getElement1(): SpellElement {\r\n    return SpellElement.Life;\r\n  }\r\n}\r\n\r\nexport abstract class ElectricSynchroBonus extends SynchroBonus {\r\n  getElement1(): SpellElement {\r\n    return SpellElement.Electric;\r\n  }\r\n}\r\n\r\nexport abstract class DeathSynchroBonus extends SynchroBonus {\r\n  getElement1(): SpellElement {\r\n    return SpellElement.Death;\r\n  }\r\n}\r\n\r\nexport abstract class HolySynchroBonus extends SynchroBonus {\r\n  getElement1(): SpellElement {\r\n    return SpellElement.Holy;\r\n  }\r\n}\r\n\r\nexport abstract class TimeSynchroBonus extends SynchroBonus {\r\n  getElement1(): SpellElement {\r\n    return SpellElement.Time;\r\n  }\r\n}\r\n","import { formatNumber } from \"../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { ActionEffect } from \"../../../action/Action\";\r\nimport { AttackTarget } from \"../../../exploration/AttackTarget\";\r\nimport {\r\n  CombatStat,\r\n  clearCombatStatCache,\r\n} from \"../../../exploration/CombatStats\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport {\r\n  TransformationType,\r\n  registerTransformation,\r\n} from \"../../../transformation/Transformation\";\r\nimport { TransformationValueType } from \"../../../transformation/TransformationTags\";\r\nimport { SynchroChangeListeners } from \"../../Synchro\";\r\nimport { SynchroBonuses } from \"../../SynchroBonuses\";\r\nimport { AirSynchroBonus } from \"../BaseSynchroBonuses\";\r\n\r\nclass AirPoisonSynchroBonus extends AirSynchroBonus {\r\n  getElement2(): SpellElement {\r\n    return SpellElement.Poison;\r\n  }\r\n\r\n  protected getBaseBonusEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 8,\r\n        valueType: TransformationValueType.Basic,\r\n      },\r\n    };\r\n  }\r\n\r\n  getEffect(state: GameState, amount: number): string {\r\n    const magnitude = this.getBonusEffect(state, \"magnitude\", amount);\r\n    const explanation = this.getBonusEffectExplanations(\r\n      state,\r\n      amount,\r\n      \"magnitude\",\r\n    )[\"magnitude\"];\r\n    return t(\"^+{{magnitude}}^<{{explanation}}>:dodge:\", {\r\n      magnitude: formatNumber(magnitude),\r\n      explanation,\r\n    });\r\n  }\r\n}\r\nexport function loadAirPoisonSynchroBonus() {\r\n  const bonus = new AirPoisonSynchroBonus();\r\n  SynchroBonuses.register(bonus);\r\n  registerTransformation(\r\n    [[AttackTarget.Player, CombatStat.Dodge]],\r\n    bonus.getId(),\r\n    bonus.getName(),\r\n    TransformationType.Addition,\r\n    (state) => {\r\n      return bonus.getCurrentBonusEffect(state, \"magnitude\");\r\n    },\r\n  );\r\n  SynchroChangeListeners.register((state) => {\r\n    state = clearCombatStatCache(state, AttackTarget.Player, CombatStat.Dodge);\r\n    return state;\r\n  }, bonus.getId());\r\n}\r\n","import { formatMultiplier } from \"../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { ActionEffect } from \"../../../action/Action\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport {\r\n  TransformationType,\r\n  registerTransformation,\r\n} from \"../../../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../../transformation/TransformationTags\";\r\nimport { SynchroBonuses } from \"../../SynchroBonuses\";\r\nimport { EarthSynchroBonus } from \"../BaseSynchroBonuses\";\r\n\r\nclass EarthAirSynchroBonus extends EarthSynchroBonus {\r\n  getElement2(): SpellElement {\r\n    return SpellElement.Air;\r\n  }\r\n\r\n  isBeneficial(): boolean {\r\n    return false;\r\n  }\r\n\r\n  protected getBaseBonusEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 0.95,\r\n        valueType: TransformationValueType.Divisor,\r\n      },\r\n    };\r\n  }\r\n\r\n  getEffect(state: GameState, amount: number): string {\r\n    const magnitude = this.getBonusEffect(state, \"magnitude\", amount);\r\n    const explanation = this.getBonusEffectExplanations(\r\n      state,\r\n      amount,\r\n      \"magnitude\",\r\n    )[\"magnitude\"];\r\n    return t(\"^{{magnitude}}^<{{explanation}}> Earth and Air spell power\", {\r\n      magnitude: formatMultiplier(magnitude),\r\n      explanation,\r\n    });\r\n  }\r\n}\r\nexport function loadEarthAirSynchroBonus() {\r\n  const bonus = new EarthAirSynchroBonus();\r\n  SynchroBonuses.register(bonus);\r\n  registerTransformation(\r\n    [\r\n      [\r\n        TransformationTags.Spell,\r\n        TransformationTags.ActionEffect,\r\n        TransformationTags.ActionMagnitude,\r\n        SpellElement.Earth,\r\n      ],\r\n      [\r\n        TransformationTags.Spell,\r\n        TransformationTags.ActionEffect,\r\n        TransformationTags.TemporaryEffectMagnitude,\r\n        SpellElement.Earth,\r\n      ],\r\n      [\r\n        TransformationTags.Spell,\r\n        TransformationTags.ActionEffect,\r\n        TransformationTags.ActionMagnitude,\r\n        SpellElement.Air,\r\n      ],\r\n      [\r\n        TransformationTags.Spell,\r\n        TransformationTags.ActionEffect,\r\n        TransformationTags.TemporaryEffectMagnitude,\r\n        SpellElement.Air,\r\n      ],\r\n    ],\r\n    bonus.getId(),\r\n    bonus.getName(),\r\n    TransformationType.Multiplier,\r\n    (state) => {\r\n      return bonus.getCurrentBonusEffect(state, \"magnitude\");\r\n    },\r\n  );\r\n}\r\n","import { formatMultiplier } from \"../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { ActionEffect } from \"../../../action/Action\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport {\r\n  TransformationType,\r\n  registerTransformation,\r\n} from \"../../../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../../transformation/TransformationTags\";\r\nimport { SynchroBonuses } from \"../../SynchroBonuses\";\r\nimport { EarthSynchroBonus } from \"../BaseSynchroBonuses\";\r\n\r\nclass EarthPoisonSynchroBonus extends EarthSynchroBonus {\r\n  getElement2(): SpellElement {\r\n    return SpellElement.Poison;\r\n  }\r\n\r\n  protected getBaseBonusEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 0.15,\r\n        valueType: TransformationValueType.Percent,\r\n      },\r\n    };\r\n  }\r\n\r\n  getEffect(state: GameState, amount: number): string {\r\n    const magnitude = this.getBonusEffect(state, \"magnitude\", amount);\r\n    const explanation = this.getBonusEffectExplanations(\r\n      state,\r\n      amount,\r\n      \"magnitude\",\r\n    )[\"magnitude\"];\r\n    return t(\"^{{magnitude}}^<{{explanation}}> Channeling efficiency\", {\r\n      magnitude: formatMultiplier(magnitude),\r\n      explanation,\r\n    });\r\n  }\r\n}\r\nexport function loadEarthPoisonSynchroBonus() {\r\n  const bonus = new EarthPoisonSynchroBonus();\r\n  SynchroBonuses.register(bonus);\r\n  registerTransformation(\r\n    [[TransformationTags.ChannelingEfficiency]],\r\n    bonus.getId(),\r\n    bonus.getName(),\r\n    TransformationType.Multiplier,\r\n    (state) => {\r\n      return bonus.getCurrentBonusEffect(state, \"magnitude\");\r\n    },\r\n  );\r\n}\r\n","import { formatMultiplier } from \"../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { ActionEffect } from \"../../../action/Action\";\r\nimport { AttackTarget } from \"../../../exploration/AttackTarget\";\r\nimport {\r\n  CombatStat,\r\n  clearCombatStatCache,\r\n} from \"../../../exploration/CombatStats\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport {\r\n  TransformationType,\r\n  registerTransformation,\r\n} from \"../../../transformation/Transformation\";\r\nimport { TransformationValueType } from \"../../../transformation/TransformationTags\";\r\nimport { SynchroChangeListeners } from \"../../Synchro\";\r\nimport { SynchroBonuses } from \"../../SynchroBonuses\";\r\nimport { EarthSynchroBonus } from \"../BaseSynchroBonuses\";\r\n\r\nclass EarthWaterSynchroBonus extends EarthSynchroBonus {\r\n  getElement2(): SpellElement {\r\n    return SpellElement.Water;\r\n  }\r\n\r\n  protected getBaseBonusEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 0.04,\r\n        valueType: TransformationValueType.Percent,\r\n      },\r\n    };\r\n  }\r\n\r\n  getEffect(state: GameState, amount: number): string {\r\n    const magnitude = this.getBonusEffect(state, \"magnitude\", amount);\r\n    const explanation = this.getBonusEffectExplanations(\r\n      state,\r\n      amount,\r\n      \"magnitude\",\r\n    )[\"magnitude\"];\r\n    return t(\"^{{magnitude}}^<{{explanation}}> Max:hp:\", {\r\n      magnitude: formatMultiplier(magnitude),\r\n      explanation,\r\n    });\r\n  }\r\n}\r\nexport function loadEarthWaterSynchroBonus() {\r\n  const bonus = new EarthWaterSynchroBonus();\r\n  SynchroBonuses.register(bonus);\r\n  registerTransformation(\r\n    [[AttackTarget.Player, CombatStat.MaxHP]],\r\n    bonus.getId(),\r\n    bonus.getName(),\r\n    TransformationType.Multiplier,\r\n    (state) => {\r\n      return bonus.getCurrentBonusEffect(state, \"magnitude\");\r\n    },\r\n  );\r\n  SynchroChangeListeners.register((state) => {\r\n    state = clearCombatStatCache(state, AttackTarget.Player, CombatStat.MaxHP);\r\n    return state;\r\n  }, \"earthWaterCombatStatCacheClearer\");\r\n}\r\n","import { formatMultiplier } from \"../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { ActionEffect } from \"../../../action/Action\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport {\r\n  TransformationType,\r\n  registerTransformation,\r\n} from \"../../../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../../transformation/TransformationTags\";\r\nimport { SynchroBonuses } from \"../../SynchroBonuses\";\r\nimport { FireSynchroBonus } from \"../BaseSynchroBonuses\";\r\n\r\nclass FireAirSynchroBonus extends FireSynchroBonus {\r\n  getElement2(): SpellElement {\r\n    return SpellElement.Air;\r\n  }\r\n\r\n  protected getBaseBonusEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 0.8,\r\n        valueType: TransformationValueType.Divisor,\r\n      },\r\n    };\r\n  }\r\n\r\n  getEffect(state: GameState, amount: number): string {\r\n    const magnitude = this.getBonusEffect(state, \"magnitude\", amount);\r\n    const explanation = this.getBonusEffectExplanations(\r\n      state,\r\n      amount,\r\n      \"magnitude\",\r\n    )[\"magnitude\"];\r\n    return t(\r\n      \"^{{magnitude}}^<{{explanation}}> time between Market Stalls sales\",\r\n      {\r\n        magnitude: formatMultiplier(magnitude),\r\n        explanation,\r\n      },\r\n    );\r\n  }\r\n}\r\nexport function loadFireAirSynchroBonus() {\r\n  const bonus = new FireAirSynchroBonus();\r\n  SynchroBonuses.register(bonus);\r\n  registerTransformation(\r\n    [[TransformationTags.TimePerAutoSalePerStall]],\r\n    bonus.getId(),\r\n    bonus.getName(),\r\n    TransformationType.Multiplier,\r\n    (state) => {\r\n      return bonus.getCurrentBonusEffect(state, \"magnitude\");\r\n    },\r\n  );\r\n}\r\n","import { formatMultiplier } from \"../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { ActionEffect } from \"../../../action/Action\";\r\nimport { AttackTarget } from \"../../../exploration/AttackTarget\";\r\nimport {\r\n  CombatStat,\r\n  clearCombatStatCache,\r\n} from \"../../../exploration/CombatStats\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport {\r\n  TransformationType,\r\n  registerTransformation,\r\n} from \"../../../transformation/Transformation\";\r\nimport { TransformationValueType } from \"../../../transformation/TransformationTags\";\r\nimport { SynchroChangeListeners } from \"../../Synchro\";\r\nimport { SynchroBonuses } from \"../../SynchroBonuses\";\r\nimport { FireSynchroBonus } from \"../BaseSynchroBonuses\";\r\n\r\nclass FireEarthSynchroBonus extends FireSynchroBonus {\r\n  getElement2(): SpellElement {\r\n    return SpellElement.Earth;\r\n  }\r\n\r\n  protected getBaseBonusEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 0.02,\r\n        valueType: TransformationValueType.Percent,\r\n      },\r\n    };\r\n  }\r\n\r\n  getEffect(state: GameState, amount: number): string {\r\n    const magnitude = this.getBonusEffect(state, \"magnitude\", amount);\r\n    const explanation = this.getBonusEffectExplanations(\r\n      state,\r\n      amount,\r\n      \"magnitude\",\r\n    )[\"magnitude\"];\r\n    return t(\"^{{magnitude}}^<{{explanation}}> :attack: and :defense:\", {\r\n      magnitude: formatMultiplier(magnitude),\r\n      explanation,\r\n    });\r\n  }\r\n}\r\nexport function loadFireEarthSynchroBonus() {\r\n  const bonus = new FireEarthSynchroBonus();\r\n  SynchroBonuses.register(bonus);\r\n  registerTransformation(\r\n    [\r\n      [AttackTarget.Player, CombatStat.Attack],\r\n      [AttackTarget.Player, CombatStat.Defense],\r\n    ],\r\n    bonus.getId(),\r\n    bonus.getName(),\r\n    TransformationType.Multiplier,\r\n    (state) => {\r\n      return bonus.getCurrentBonusEffect(state, \"magnitude\");\r\n    },\r\n  );\r\n  SynchroChangeListeners.register((state) => {\r\n    state = clearCombatStatCache(state, AttackTarget.Player, CombatStat.Attack);\r\n    state = clearCombatStatCache(\r\n      state,\r\n      AttackTarget.Player,\r\n      CombatStat.Defense,\r\n    );\r\n    return state;\r\n  }, \"fireEarthCombatStatCacheClearer\");\r\n}\r\n","import { formatMultiplier } from \"../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { ActionEffect } from \"../../../action/Action\";\r\nimport {\r\n  buildMonstiumCatalyst,\r\n  monstiumCatalyst,\r\n} from \"../../../buildings/catalysts/MonstiumCatalyst\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport {\r\n  TransformationType,\r\n  registerTransformation,\r\n} from \"../../../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../../transformation/TransformationTags\";\r\nimport { SynchroBonuses } from \"../../SynchroBonuses\";\r\nimport { FireSynchroBonus } from \"../BaseSynchroBonuses\";\r\n\r\nclass FirePoisonSynchroBonus extends FireSynchroBonus {\r\n  getElement2(): SpellElement {\r\n    return SpellElement.Poison;\r\n  }\r\n\r\n  protected getBaseBonusEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 0.02,\r\n        valueType: TransformationValueType.Percent,\r\n      },\r\n    };\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return buildMonstiumCatalyst.isVisible(state);\r\n  }\r\n\r\n  getEffect(state: GameState, amount: number): string {\r\n    const magnitude = this.getBonusEffect(state, \"magnitude\", amount);\r\n    const explanation = this.getBonusEffectExplanations(\r\n      state,\r\n      amount,\r\n      \"magnitude\",\r\n    )[\"magnitude\"];\r\n    return t(\r\n      \"^{{magnitude}}^<{{explanation}}> effectivity of Monstium Catalysts\",\r\n      {\r\n        magnitude: formatMultiplier(magnitude),\r\n        explanation,\r\n      },\r\n    );\r\n  }\r\n}\r\nexport function loadFirePoisonSynchroBonus() {\r\n  const poison = new FirePoisonSynchroBonus();\r\n  SynchroBonuses.register(poison);\r\n  registerTransformation(\r\n    [[TransformationTags.CatalystEffectivity, monstiumCatalyst.getId()]],\r\n    poison.getId(),\r\n    poison.getName(),\r\n    TransformationType.Multiplier,\r\n    (state) => {\r\n      return poison.getCurrentBonusEffect(state, \"magnitude\");\r\n    },\r\n  );\r\n}\r\n","import { formatMultiplier } from \"../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { ActionEffect } from \"../../../action/Action\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport {\r\n  TransformationType,\r\n  registerTransformation,\r\n} from \"../../../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../../transformation/TransformationTags\";\r\nimport { SynchroBonuses } from \"../../SynchroBonuses\";\r\nimport { FireSynchroBonus } from \"../BaseSynchroBonuses\";\r\n\r\nclass FireWaterSynchroBonus extends FireSynchroBonus {\r\n  getElement2(): SpellElement {\r\n    return SpellElement.Water;\r\n  }\r\n\r\n  isBeneficial(): boolean {\r\n    return false;\r\n  }\r\n\r\n  protected getBaseBonusEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 0.95,\r\n        valueType: TransformationValueType.Divisor,\r\n      },\r\n    };\r\n  }\r\n\r\n  getEffect(state: GameState, amount: number): string {\r\n    const magnitude = this.getBonusEffect(state, \"magnitude\", amount);\r\n    const explanation = this.getBonusEffectExplanations(\r\n      state,\r\n      amount,\r\n      \"magnitude\",\r\n    )[\"magnitude\"];\r\n    return t(\"^{{magnitude}}^<{{explanation}}> Fire and Water spell power\", {\r\n      magnitude: formatMultiplier(magnitude),\r\n      explanation,\r\n    });\r\n  }\r\n}\r\nexport function loadFireWaterSynchroBonus() {\r\n  const bonus = new FireWaterSynchroBonus();\r\n  SynchroBonuses.register(bonus);\r\n  registerTransformation(\r\n    [\r\n      [\r\n        TransformationTags.Spell,\r\n        TransformationTags.ActionEffect,\r\n        TransformationTags.ActionMagnitude,\r\n        SpellElement.Fire,\r\n      ],\r\n      [\r\n        TransformationTags.Spell,\r\n        TransformationTags.ActionEffect,\r\n        TransformationTags.TemporaryEffectMagnitude,\r\n        SpellElement.Fire,\r\n      ],\r\n      [\r\n        TransformationTags.Spell,\r\n        TransformationTags.ActionEffect,\r\n        TransformationTags.ActionMagnitude,\r\n        SpellElement.Water,\r\n      ],\r\n      [\r\n        TransformationTags.Spell,\r\n        TransformationTags.ActionEffect,\r\n        TransformationTags.TemporaryEffectMagnitude,\r\n        SpellElement.Water,\r\n      ],\r\n    ],\r\n    bonus.getId(),\r\n    bonus.getName(),\r\n    TransformationType.Multiplier,\r\n    (state) => {\r\n      return bonus.getCurrentBonusEffect(state, \"magnitude\");\r\n    },\r\n  );\r\n}\r\n","import { formatMultiplier } from \"../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { ActionEffect } from \"../../../action/Action\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport { clearSpellCooldownCache } from \"../../../spells/Spells\";\r\nimport {\r\n  TransformationType,\r\n  registerTransformation,\r\n} from \"../../../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../../transformation/TransformationTags\";\r\nimport { SynchroChangeListeners } from \"../../Synchro\";\r\nimport { SynchroBonuses } from \"../../SynchroBonuses\";\r\nimport { WaterSynchroBonus } from \"../BaseSynchroBonuses\";\r\n\r\nclass WaterAirSynchroBonus extends WaterSynchroBonus {\r\n  getElement2(): SpellElement {\r\n    return SpellElement.Air;\r\n  }\r\n\r\n  protected getBaseBonusEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 0.97,\r\n        valueType: TransformationValueType.Divisor,\r\n      },\r\n    };\r\n  }\r\n\r\n  getEffect(state: GameState, amount: number): string {\r\n    const magnitude = this.getBonusEffect(state, \"magnitude\", amount);\r\n    const explanation = this.getBonusEffectExplanations(\r\n      state,\r\n      amount,\r\n      \"magnitude\",\r\n    )[\"magnitude\"];\r\n    return t(\"^{{magnitude}}^<{{explanation}}> cooldown of attack spells\", {\r\n      magnitude: formatMultiplier(magnitude),\r\n      explanation,\r\n    });\r\n  }\r\n}\r\nexport function loadWaterAirSynchroBonus() {\r\n  const bonus = new WaterAirSynchroBonus();\r\n  SynchroBonuses.register(bonus);\r\n  registerTransformation(\r\n    [[TransformationTags.AttackSpell, TransformationTags.SpellCooldown]],\r\n    bonus.getId(),\r\n    bonus.getName(),\r\n    TransformationType.Multiplier,\r\n    (state) => {\r\n      return bonus.getCurrentBonusEffect(state, \"magnitude\");\r\n    },\r\n  );\r\n  SynchroChangeListeners.register(\r\n    (state) => clearSpellCooldownCache(state),\r\n    bonus.getId(),\r\n  );\r\n}\r\n","import { formatMultiplier } from \"../../../../utils/FormattingUtils\";\r\nimport { t } from \"../../../../utils/I18n\";\r\nimport { GameState } from \"../../../GameState\";\r\nimport { ActionEffect } from \"../../../action/Action\";\r\nimport {\r\n  buildSewageSystem,\r\n  sewageSystem,\r\n} from \"../../../buildings/production/SewageSystem\";\r\nimport { SpellElement } from \"../../../spells/Elements\";\r\nimport { clearCalculatedIncomeCache } from \"../../../timetick/IncomeOverTime\";\r\nimport {\r\n  TransformationType,\r\n  registerTransformation,\r\n} from \"../../../transformation/Transformation\";\r\nimport {\r\n  TransformationTags,\r\n  TransformationValueType,\r\n} from \"../../../transformation/TransformationTags\";\r\nimport { SynchroChangeListeners } from \"../../Synchro\";\r\nimport { SynchroBonuses } from \"../../SynchroBonuses\";\r\nimport { WaterSynchroBonus } from \"../BaseSynchroBonuses\";\r\n\r\nclass WaterPoisonSynchroBonus extends WaterSynchroBonus {\r\n  getElement2(): SpellElement {\r\n    return SpellElement.Poison;\r\n  }\r\n\r\n  isVisible(state: GameState): boolean {\r\n    return buildSewageSystem.isVisible(state);\r\n  }\r\n\r\n  protected getBaseBonusEffects(): Record<string, ActionEffect> {\r\n    return {\r\n      magnitude: {\r\n        value: 0.5,\r\n        valueType: TransformationValueType.Percent,\r\n      },\r\n      magnitudeConsumption: {\r\n        value: 1.0,\r\n        valueType: TransformationValueType.Percent,\r\n      },\r\n    };\r\n  }\r\n\r\n  getEffect(state: GameState, amount: number): string {\r\n    const magnitude = this.getBonusEffect(state, \"magnitude\", amount);\r\n    const magnitudeConsumption = this.getBonusEffect(\r\n      state,\r\n      \"magnitudeConsumption\",\r\n      amount,\r\n    );\r\n    const explanations = this.getBonusEffectExplanations(state, amount);\r\n    return t(\r\n      \"^{{magnitude}}^<{{explanation}}> production, but ^{{magnitudeConsumption}}^<{{explanationConsumption}}> consumption of Sewage Systems\",\r\n      {\r\n        magnitude: formatMultiplier(magnitude),\r\n        explanation: explanations.magnitude,\r\n        magnitudeConsumption: formatMultiplier(magnitudeConsumption),\r\n        explanationConsumption: explanations.magnitudeConsumption,\r\n      },\r\n    );\r\n  }\r\n}\r\n\r\nexport function loadWaterPoisonSynchroBonus() {\r\n  const bonus = new WaterPoisonSynchroBonus();\r\n  SynchroBonuses.register(bonus);\r\n  registerTransformation(\r\n    [[sewageSystem.getId(), TransformationTags.Production]],\r\n    bonus.getId(),\r\n    bonus.getName(),\r\n    TransformationType.Multiplier,\r\n    (state) => {\r\n      return bonus.getCurrentBonusEffect(state, \"magnitude\");\r\n    },\r\n  );\r\n  registerTransformation(\r\n    [[sewageSystem.getId(), TransformationTags.Consumption]],\r\n    bonus.getId(),\r\n    bonus.getName(),\r\n    TransformationType.Multiplier,\r\n    (state) => {\r\n      return bonus.getCurrentBonusEffect(state, \"magnitudeConsumption\");\r\n    },\r\n  );\r\n  SynchroChangeListeners.register(\r\n    (state) => clearCalculatedIncomeCache(state),\r\n    bonus.getId(),\r\n  );\r\n}\r\n","import { loadDoubleElementSynchroBonuses } from \"./bonuses/DoubleElementSynchroBonuses\";\r\nimport { loadAirPoisonSynchroBonus } from \"./bonuses/air/AirPoisonSynchroBonus\";\r\nimport { loadEarthAirSynchroBonus } from \"./bonuses/earth/EarthAirSynchroBonus\";\r\nimport { loadEarthPoisonSynchroBonus } from \"./bonuses/earth/EarthPoisonSynchroBonus\";\r\nimport { loadEarthWaterSynchroBonus } from \"./bonuses/earth/EarthWaterSynchroBonus\";\r\nimport { loadFireAirSynchroBonus } from \"./bonuses/fire/FireAirSynchroBonus\";\r\nimport { loadFireEarthSynchroBonus } from \"./bonuses/fire/FireEarthSynchroBonus\";\r\nimport { loadFirePoisonSynchroBonus } from \"./bonuses/fire/FirePoisonSynchroBonus\";\r\nimport { loadFireWaterSynchroBonus } from \"./bonuses/fire/FireWaterSynchroBonus\";\r\nimport { loadWaterAirSynchroBonus } from \"./bonuses/water/WaterAirSynchroBonus\";\r\nimport { loadWaterPoisonSynchroBonus } from \"./bonuses/water/WaterPoisonSynchroBonus\";\r\n\r\nexport function loadSynchroDemo() {\r\n  loadDoubleElementSynchroBonuses();\r\n\r\n  // Fire\r\n  loadFireEarthSynchroBonus();\r\n  loadFireWaterSynchroBonus();\r\n  loadFireAirSynchroBonus();\r\n  loadFirePoisonSynchroBonus();\r\n\r\n  // Earth\r\n  loadEarthWaterSynchroBonus();\r\n  loadEarthAirSynchroBonus();\r\n  loadEarthPoisonSynchroBonus();\r\n\r\n  // Water\r\n  loadWaterAirSynchroBonus();\r\n  loadWaterPoisonSynchroBonus();\r\n\r\n  // Air\r\n  loadAirPoisonSynchroBonus();\r\n}\r\n","import { loadResources } from \"i18next\";\r\nimport { setDemo } from \"./Demo\";\r\nimport { loadActions } from \"./action/ActionLoader\";\r\nimport { loadAutocast } from \"./autocast/Autocast\";\r\nimport { loadMarket } from \"./autocast/Market\";\r\nimport { loadBuildingsDemo } from \"./buildings/DemoBuildingLoader\";\r\nimport { loadCombatClassesDemo } from \"./classes/DemoCombatClassLoader\";\r\nimport { loadEnhancementsDemo } from \"./enhancement/DemoEnhancementLoader\";\r\nimport { loadGameEventsDemo } from \"./events/DemoGameEventLoader\";\r\nimport { loadExploration } from \"./exploration/Exploration\";\r\nimport { loadDungeonsDemo } from \"./exploration/dungeons/DemoDungeonLoader\";\r\nimport { loadEnemiesDemo } from \"./exploration/enemies/DemoEnemyLoader\";\r\nimport { loadHelpsDemo } from \"./helps/HelpLoaderDemo\";\r\nimport { loadHintsDemo } from \"./hints/DemoHintLoader\";\r\nimport { loadItemsDemo } from \"./items/DemoItemLoader\";\r\nimport { loadCompendium } from \"./items/ItemCompendium\";\r\nimport { loadSpellsDemo } from \"./spells/DemoSpellLoader\";\r\nimport { loadElementMultipliers } from \"./spells/ElementMultipliers\";\r\nimport { loadResearchers } from \"./study/Study\";\r\nimport { loadSynchroDemo } from \"./synchro/SynchroLoaderDemo\";\r\nimport { loadCommonTemporaryEffects } from \"./temporaryeffects/CommonTemporaryEffects\";\r\nimport { loadTimePieces } from \"./timetick/TimePieces\";\r\nimport { loadTotalTimePlayed } from \"./timetick/TotalTimePlayed\";\r\n\r\nexport function loadDemoGame() {\r\n  setDemo(true);\r\n  loadActions();\r\n  loadBuildingsDemo();\r\n  loadSpellsDemo();\r\n  loadElementMultipliers();\r\n  loadAutocast();\r\n  loadResources();\r\n  loadResearchers();\r\n  loadTotalTimePlayed();\r\n  loadItemsDemo();\r\n  loadMarket();\r\n  loadEnemiesDemo();\r\n  loadDungeonsDemo();\r\n  loadExploration();\r\n  loadEnhancementsDemo();\r\n  loadCombatClassesDemo();\r\n  loadSynchroDemo();\r\n  loadCommonTemporaryEffects();\r\n  loadTimePieces();\r\n  loadGameEventsDemo();\r\n  loadHintsDemo();\r\n  loadHelpsDemo();\r\n  loadCompendium();\r\n}\r\n","import {\r\n  loadEnhancementCommonLogic,\r\n  registerEnhancement,\r\n} from \"./Enhancements\";\r\nimport { compass } from \"./exploration/Compass\";\r\nimport { doubleHealthBoost } from \"./exploration/DoubleHealthBoost\";\r\nimport { efficientExploration } from \"./exploration/EfficientExploration\";\r\nimport { enlargedPouch } from \"./exploration/EnlargedPouch\";\r\nimport { firstAid } from \"./exploration/FirstAid\";\r\nimport { giantPouch } from \"./exploration/GiantPouch\";\r\nimport { healthBoost } from \"./exploration/HealthBoost\";\r\nimport { healthPotionEffectivity } from \"./exploration/HealthPotionEffectivity\";\r\nimport { monstiumCollection } from \"./exploration/MonstiumCollection\";\r\nimport { professionalPouch } from \"./exploration/ProfessionalPouch\";\r\nimport { tripleHealthBoost } from \"./exploration/TripleHealthBoost\";\r\nimport { furnitureOrganization } from \"./land/FurnitureOrganization\";\r\nimport { houseExpansionContract } from \"./land/HouseExpansionContract\";\r\nimport { landTreaty } from \"./land/LandTreaty\";\r\nimport { deeperUnderstandingOfMagic } from \"./other/DeeperUnderstandingOfMagic\";\r\nimport { glitteringStalls } from \"./other/GlitteringStalls\";\r\nimport { hiringSpree } from \"./other/HiringSpree\";\r\nimport { manaSteamers } from \"./other/ManaSteamers\";\r\nimport { monstiumCatalysts } from \"./other/MonstiumCatalysts\";\r\nimport { scalableChambers } from \"./other/ScalableChambers\";\r\nimport { sewageSystemEnhancement } from \"./other/SewageSystem\";\r\nimport { shardDiligence } from \"./other/ShardDiligence\";\r\nimport { treasureChests } from \"./other/TreasureChests\";\r\nimport { understandingOfMagic } from \"./other/UnderstandingOfMagic\";\r\nimport { improvedPurification } from \"./production/ImprovedPurification\";\r\nimport { superheatedCatalysts } from \"./production/SuperheatedCatalysts\";\r\nimport { superheatedSteamers } from \"./production/SuperheatedSteamers\";\r\nimport { compressedEssence } from \"./storage/CompressedEssence\";\r\nimport { primaryStorage } from \"./storage/PrimaryStorage\";\r\nimport { wideStorage } from \"./storage/WideStorage\";\r\n\r\nexport function loadEnhancementsDemo() {\r\n  loadEnhancementCommonLogic();\r\n\r\n  // Storage\r\n  registerEnhancement(compressedEssence);\r\n  registerEnhancement(treasureChests);\r\n  registerEnhancement(primaryStorage);\r\n  registerEnhancement(wideStorage);\r\n\r\n  // Land\r\n  registerEnhancement(landTreaty);\r\n  registerEnhancement(houseExpansionContract);\r\n  registerEnhancement(furnitureOrganization);\r\n\r\n  // Production\r\n  registerEnhancement(superheatedCatalysts);\r\n  registerEnhancement(sewageSystemEnhancement);\r\n  registerEnhancement(improvedPurification);\r\n  registerEnhancement(superheatedSteamers);\r\n\r\n  // Exploration\r\n  registerEnhancement(efficientExploration);\r\n  registerEnhancement(healthBoost);\r\n  registerEnhancement(healthPotionEffectivity);\r\n  registerEnhancement(firstAid);\r\n  registerEnhancement(monstiumCollection);\r\n  registerEnhancement(enlargedPouch);\r\n  registerEnhancement(compass);\r\n  registerEnhancement(doubleHealthBoost);\r\n  registerEnhancement(professionalPouch);\r\n  registerEnhancement(tripleHealthBoost);\r\n  registerEnhancement(giantPouch);\r\n\r\n  // Other\r\n  registerEnhancement(understandingOfMagic);\r\n  registerEnhancement(deeperUnderstandingOfMagic);\r\n  registerEnhancement(manaSteamers);\r\n  registerEnhancement(glitteringStalls);\r\n  registerEnhancement(monstiumCatalysts);\r\n  registerEnhancement(hiringSpree);\r\n  registerEnhancement(scalableChambers);\r\n  registerEnhancement(shardDiligence);\r\n}\r\n","import { registerRootComponent } from \"expo\";\r\nimport \"intl-pluralrules\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"react-native-gesture-handler\";\r\nimport \"setimmediate\";\r\nimport \"./i18n\";\r\nimport AppContents from \"./src/AppContents\";\r\nimport AudioManager from \"./src/audio/AudioManager\";\r\nimport { loadDemoGame } from \"./src/backend/DemoLoader\";\r\nimport { setTooltipComponentForMarkdown } from \"./src/components/utility/Markdown\";\r\nimport Tooltip from \"./src/components/utility/tooltip/PaperTooltip\";\r\n\r\nfunction loadGame() {\r\n  loadDemoGame();\r\n\r\n  setTooltipComponentForMarkdown(Tooltip);\r\n  AudioManager.load();\r\n}\r\n\r\nexport default function App() {\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    loadGame();\r\n    setLoading(false);\r\n  }, []);\r\n  if (loading) {\r\n    return null;\r\n  }\r\n  return <AppContents />;\r\n}\r\n\r\nregisterRootComponent(App);\r\n","var map = {\n\t\"./af\": 26735,\n\t\"./af.js\": 26735,\n\t\"./ar\": 79343,\n\t\"./ar-dz\": 55300,\n\t\"./ar-dz.js\": 55300,\n\t\"./ar-kw\": 77947,\n\t\"./ar-kw.js\": 77947,\n\t\"./ar-ly\": 92882,\n\t\"./ar-ly.js\": 92882,\n\t\"./ar-ma\": 43030,\n\t\"./ar-ma.js\": 43030,\n\t\"./ar-sa\": 22971,\n\t\"./ar-sa.js\": 22971,\n\t\"./ar-tn\": 78662,\n\t\"./ar-tn.js\": 78662,\n\t\"./ar.js\": 79343,\n\t\"./az\": 81672,\n\t\"./az.js\": 81672,\n\t\"./be\": 39027,\n\t\"./be.js\": 39027,\n\t\"./bg\": 19107,\n\t\"./bg.js\": 19107,\n\t\"./bm\": 38932,\n\t\"./bm.js\": 38932,\n\t\"./bn\": 76218,\n\t\"./bn-bd\": 33617,\n\t\"./bn-bd.js\": 33617,\n\t\"./bn.js\": 76218,\n\t\"./bo\": 94527,\n\t\"./bo.js\": 94527,\n\t\"./br\": 53345,\n\t\"./br.js\": 53345,\n\t\"./bs\": 67930,\n\t\"./bs.js\": 67930,\n\t\"./ca\": 60454,\n\t\"./ca.js\": 60454,\n\t\"./cs\": 13984,\n\t\"./cs.js\": 13984,\n\t\"./cv\": 64646,\n\t\"./cv.js\": 64646,\n\t\"./cy\": 71372,\n\t\"./cy.js\": 71372,\n\t\"./da\": 62978,\n\t\"./da.js\": 62978,\n\t\"./de\": 32193,\n\t\"./de-at\": 56365,\n\t\"./de-at.js\": 56365,\n\t\"./de-ch\": 29737,\n\t\"./de-ch.js\": 29737,\n\t\"./de.js\": 32193,\n\t\"./dv\": 10872,\n\t\"./dv.js\": 10872,\n\t\"./el\": 99534,\n\t\"./el.js\": 99534,\n\t\"./en-au\": 68450,\n\t\"./en-au.js\": 68450,\n\t\"./en-ca\": 56996,\n\t\"./en-ca.js\": 56996,\n\t\"./en-gb\": 3864,\n\t\"./en-gb.js\": 3864,\n\t\"./en-ie\": 39472,\n\t\"./en-ie.js\": 39472,\n\t\"./en-il\": 40300,\n\t\"./en-il.js\": 40300,\n\t\"./en-in\": 67078,\n\t\"./en-in.js\": 67078,\n\t\"./en-nz\": 50472,\n\t\"./en-nz.js\": 50472,\n\t\"./en-sg\": 28696,\n\t\"./en-sg.js\": 28696,\n\t\"./eo\": 33550,\n\t\"./eo.js\": 33550,\n\t\"./es\": 59311,\n\t\"./es-do\": 83080,\n\t\"./es-do.js\": 83080,\n\t\"./es-mx\": 77334,\n\t\"./es-mx.js\": 77334,\n\t\"./es-us\": 64336,\n\t\"./es-us.js\": 64336,\n\t\"./es.js\": 59311,\n\t\"./et\": 28067,\n\t\"./et.js\": 28067,\n\t\"./eu\": 88831,\n\t\"./eu.js\": 88831,\n\t\"./fa\": 67981,\n\t\"./fa.js\": 67981,\n\t\"./fi\": 17479,\n\t\"./fi.js\": 17479,\n\t\"./fil\": 20757,\n\t\"./fil.js\": 20757,\n\t\"./fo\": 9510,\n\t\"./fo.js\": 9510,\n\t\"./fr\": 78573,\n\t\"./fr-ca\": 6805,\n\t\"./fr-ca.js\": 6805,\n\t\"./fr-ch\": 74170,\n\t\"./fr-ch.js\": 74170,\n\t\"./fr.js\": 78573,\n\t\"./fy\": 80926,\n\t\"./fy.js\": 80926,\n\t\"./ga\": 60203,\n\t\"./ga.js\": 60203,\n\t\"./gd\": 92975,\n\t\"./gd.js\": 92975,\n\t\"./gl\": 76890,\n\t\"./gl.js\": 76890,\n\t\"./gom-deva\": 24234,\n\t\"./gom-deva.js\": 24234,\n\t\"./gom-latn\": 97577,\n\t\"./gom-latn.js\": 97577,\n\t\"./gu\": 55804,\n\t\"./gu.js\": 55804,\n\t\"./he\": 5377,\n\t\"./he.js\": 5377,\n\t\"./hi\": 99401,\n\t\"./hi.js\": 99401,\n\t\"./hr\": 12435,\n\t\"./hr.js\": 12435,\n\t\"./hu\": 62728,\n\t\"./hu.js\": 62728,\n\t\"./hy-am\": 88093,\n\t\"./hy-am.js\": 88093,\n\t\"./id\": 26666,\n\t\"./id.js\": 26666,\n\t\"./is\": 35187,\n\t\"./is.js\": 35187,\n\t\"./it\": 62667,\n\t\"./it-ch\": 56334,\n\t\"./it-ch.js\": 56334,\n\t\"./it.js\": 62667,\n\t\"./ja\": 62414,\n\t\"./ja.js\": 62414,\n\t\"./jv\": 29359,\n\t\"./jv.js\": 29359,\n\t\"./ka\": 78740,\n\t\"./ka.js\": 78740,\n\t\"./kk\": 9521,\n\t\"./kk.js\": 9521,\n\t\"./km\": 21679,\n\t\"./km.js\": 21679,\n\t\"./kn\": 58554,\n\t\"./kn.js\": 58554,\n\t\"./ko\": 50686,\n\t\"./ko.js\": 50686,\n\t\"./ku\": 75965,\n\t\"./ku.js\": 75965,\n\t\"./ky\": 24780,\n\t\"./ky.js\": 24780,\n\t\"./lb\": 56950,\n\t\"./lb.js\": 56950,\n\t\"./lo\": 9434,\n\t\"./lo.js\": 9434,\n\t\"./lt\": 43681,\n\t\"./lt.js\": 43681,\n\t\"./lv\": 82552,\n\t\"./lv.js\": 82552,\n\t\"./me\": 18473,\n\t\"./me.js\": 18473,\n\t\"./mi\": 862,\n\t\"./mi.js\": 862,\n\t\"./mk\": 18932,\n\t\"./mk.js\": 18932,\n\t\"./ml\": 63174,\n\t\"./ml.js\": 63174,\n\t\"./mn\": 66863,\n\t\"./mn.js\": 66863,\n\t\"./mr\": 10566,\n\t\"./mr.js\": 10566,\n\t\"./ms\": 42215,\n\t\"./ms-my\": 54959,\n\t\"./ms-my.js\": 54959,\n\t\"./ms.js\": 42215,\n\t\"./mt\": 38830,\n\t\"./mt.js\": 38830,\n\t\"./my\": 19336,\n\t\"./my.js\": 19336,\n\t\"./nb\": 48113,\n\t\"./nb.js\": 48113,\n\t\"./ne\": 94005,\n\t\"./ne.js\": 94005,\n\t\"./nl\": 22699,\n\t\"./nl-be\": 2796,\n\t\"./nl-be.js\": 2796,\n\t\"./nl.js\": 22699,\n\t\"./nn\": 29700,\n\t\"./nn.js\": 29700,\n\t\"./oc-lnc\": 39495,\n\t\"./oc-lnc.js\": 39495,\n\t\"./pa-in\": 11217,\n\t\"./pa-in.js\": 11217,\n\t\"./pl\": 98807,\n\t\"./pl.js\": 98807,\n\t\"./pt\": 19221,\n\t\"./pt-br\": 39895,\n\t\"./pt-br.js\": 39895,\n\t\"./pt.js\": 19221,\n\t\"./ro\": 39162,\n\t\"./ro.js\": 39162,\n\t\"./ru\": 37991,\n\t\"./ru.js\": 37991,\n\t\"./sd\": 64518,\n\t\"./sd.js\": 64518,\n\t\"./se\": 64197,\n\t\"./se.js\": 64197,\n\t\"./si\": 40056,\n\t\"./si.js\": 40056,\n\t\"./sk\": 17025,\n\t\"./sk.js\": 17025,\n\t\"./sl\": 20069,\n\t\"./sl.js\": 20069,\n\t\"./sq\": 1961,\n\t\"./sq.js\": 1961,\n\t\"./sr\": 35820,\n\t\"./sr-cyrl\": 20250,\n\t\"./sr-cyrl.js\": 20250,\n\t\"./sr.js\": 35820,\n\t\"./ss\": 97806,\n\t\"./ss.js\": 97806,\n\t\"./sv\": 2833,\n\t\"./sv.js\": 2833,\n\t\"./sw\": 29018,\n\t\"./sw.js\": 29018,\n\t\"./ta\": 51830,\n\t\"./ta.js\": 51830,\n\t\"./te\": 2102,\n\t\"./te.js\": 2102,\n\t\"./tet\": 58711,\n\t\"./tet.js\": 58711,\n\t\"./tg\": 72615,\n\t\"./tg.js\": 72615,\n\t\"./th\": 38373,\n\t\"./th.js\": 38373,\n\t\"./tk\": 43277,\n\t\"./tk.js\": 43277,\n\t\"./tl-ph\": 76249,\n\t\"./tl-ph.js\": 76249,\n\t\"./tlh\": 87413,\n\t\"./tlh.js\": 87413,\n\t\"./tr\": 26726,\n\t\"./tr.js\": 26726,\n\t\"./tzl\": 29131,\n\t\"./tzl.js\": 29131,\n\t\"./tzm\": 45683,\n\t\"./tzm-latn\": 22174,\n\t\"./tzm-latn.js\": 22174,\n\t\"./tzm.js\": 45683,\n\t\"./ug-cn\": 74984,\n\t\"./ug-cn.js\": 74984,\n\t\"./uk\": 83778,\n\t\"./uk.js\": 83778,\n\t\"./ur\": 22753,\n\t\"./ur.js\": 22753,\n\t\"./uz\": 54345,\n\t\"./uz-latn\": 67383,\n\t\"./uz-latn.js\": 67383,\n\t\"./uz.js\": 54345,\n\t\"./vi\": 8201,\n\t\"./vi.js\": 8201,\n\t\"./x-pseudo\": 57395,\n\t\"./x-pseudo.js\": 57395,\n\t\"./yo\": 99359,\n\t\"./yo.js\": 99359,\n\t\"./zh-cn\": 75680,\n\t\"./zh-cn.js\": 75680,\n\t\"./zh-hk\": 89536,\n\t\"./zh-hk.js\": 89536,\n\t\"./zh-mo\": 35088,\n\t\"./zh-mo.js\": 35088,\n\t\"./zh-tw\": 2867,\n\t\"./zh-tw.js\": 2867\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"./\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [923], () => (__webpack_require__(88863)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Storage","MMKV","resources","en","translation","JSON","parse","_Storage$getString","getString","i18n","initReactI18next","init","lng","nsSeparator","keySeparator","fallbackLng","saveMissing","interpolation","escapeValue","clone","obj","stringify","getRandomElementFromArray","arr","len","length","Math","floor","random","keysOf","Object","keys","memoize","valuesOf","values","valuesOfCached","fromEntries","entries","addRecords","records","result","record","key","_record$key","_result$key","nullthrows","Error","cache","LRUCache","max","t","_len","arguments","args","Array","_key","cached","get","undefined","i18nextT","set","RoundingMethod","MAX_FORMAT_VALUE","Number","MAX_VALUE","formatNumber","num","_options$roundingMeth","options","showDecimals","roundingMethod","toExponential","DEFAULT","abs","isInteger","round","UP","ceil","toFixed","base","formatMultiplier","ratio","pct","formatTime","secs","shortForm","unit","time","formatTimeLong","duration","asDays","hours","padStart","minutes","seconds","days","getCurrentVersionTimestamp","_Constants$expoConfig","_Constants$expoConfig2","Constants","extra","buildRunTimestamp","getCurrentVersion","_Constants$expoConfig3","version","ExplorationStatus","ResearcherAutoAssignStrategy","EXPLORATION_INITIAL_STATE","currentHP","explorationStatus","None","explorationStartTime","currentDungeonFloorId","currentEnemy","id","successfulExplorationsPerFloor","playerActionProgress","familiarActionProgress","enemyActionProgress","familiarIsInBackRow","lastPlayerDamageCause","actionResultQueue","lastActionResultPushedTime","pouchItemsUsesLeft","variables","triggerPlayerDeath","AUTOCAST_INITIAL_STATE","savedStrategies","currentStrategy","rules","permaCastRules","name","wizardsAssignedToPermaCast","lastStrategyIndex","SYNCHRO_INITIAL_STATE","grid","GLOBAL_INITIAL_STATE","secondsPlayed","activeSecondsPlayed","timePiecesConsumed","startTimestamp","Date","now","appVersionTimestamp","appVersionString","_getCurrentVersion","isFullVersionSave","tickCount","newGamePlusUnlocked","newGamePlusCount","newGamePlusMax","totalBoonPointsEarned","appPlatform","Platform","notifications","autoUsePouch","autocast","debugShowUpdatesPerSec","debugLastUpdateTimestamps","debugLastUpdateBeginEndTimestamps","endingsHistory","RUN_INITIAL_STATE","newFlagsOnRetirement","endingTriggered","lastDungeonFloorCompleted","buildings","flags","elementExperience","Fire","Earth","Water","Air","elementExponents","eventQueue","eventOccurrences","nextEventIsManuallyTriggered","temporaryEffects","recentSpellsCast","nextRandomEvent","primaryElement","inventory","equipment","Hand","Body","Accessory","Pouch","autocastPaused","exploration","explorationMessageLog","lastSpellCastTimes","uiCommands","lastProcessedTime","lastItemUsedTimes","quickbar","favoriteSpells","skipAheadTime","warpTimeSecs","summoningBlockedUntilTime","boostsBought","Poison","Mind","Life","Electric","Death","Holy","Time","Space","equipmentLoadouts","lastEquipmentLoadoutModified","landPurchaseCount","saleStallItems","saleStallProgressRatio","partiallyUnlockedElements","combatClassId","explorationTriggers","studyAllocation","familiars","secondaryElement","autoPurchaseActions","empoweredSpells","activeRituals","maxElementLevelsOnPrevRetirement","lastComputedLevelUpElementExperience","pityEnabledAtSeconds","pityCounter","extraEventSecs","currentChallengeId","autoAdvanceToNextFloor","autoAttemptBoss","spellcrafts","WORLD_INITIAL_STATE","maxPrimaryElementLevels","maxElementLevels","maxFurnitureNumbers","unlockedElements","totalTimesResetted","quickbars","currentQuickbar","timesEnemyDefeated","maxLandsPurchased","sheerPowerLevel","storylineOracleLevel","blazingSpeedLevel","worldDifficultyLevel","knownEnemiesThatDrop","itemsEverAddedToInventory","synchro","grids","currentGrid","OPTIONS_INITIAL_STATE","targetFps","wakeLock","hiddenFromBottomMenu","hideDamageEffects","doNotUseNativeDriver","overrideElementDisplay","themeMode","hideEventTags","enableSwiping","enableBottomMenu","leftHandedMode","putCastSpellOnBottomMenu","hideTooltips","doNotShowEventsOnWideScreens","hideBottomResourceViewer","hideChannelingSpellsOnHome","waitUntilFullyHealedBeforeExplore","autoPurchaseEnhancements","zoomLevel","researcherAutoAssignStrategy","OFF","expandedUI","saveExpandedUI","colorSpellButtonsByElement","sectionOrder","compactUI","doNotPopupEventsDuringBossFights","INITIAL_STATE","global","run","world","temp","createTempState","isFake","Map","flagCache","worldFlagCache","locationEncyclopediaCache","isInAutocast","isInPermacast","isInPouch","elementLevelCache","lastAutoPurchaseRun","lastAutoPurchaseEnhancementRun","familiarLevelCache","combatStatCache","Player","Familiar","Enemy","resourceCapCache","unlockedElementsCache","incomeOverTimeCache","autocastPointsRequirementCache","spellManaCostCache","researchPerSecCache","spellRequirementsCache","spellExpCache","lastProcessedAutocastSpellId","createHypotheticalState","state","clonedState","React","_objectSpread","apply","transform","overwrite","cacheByTickCount","valueFn","readCacheOnly","oldValue","newValue","cacheBySecondsPlayed","cacheByArbitraryVersion","versionFn","cacheBooleanTrueOnly","value","cacheIndefinitely","keyFn","clearCacheKey","delete","clearCacheListeners","clearAllCaches","listener","isThisDemo","isDemo","idOf","getId","DataStore","_classCallCheck","store","numericIds","maxId","_createClass","overrideId","numericId","this","toString","isIdentifiable","hasFlag","flag","_state$run$flags","SetFlagListeners","setFlagImpl","_state$run$flags2","_state$run$flags$flag","_state$world$flags","getAll","forEach","hasEverHadFlag","hasWorldFlag","setFlag","bind","_this","clearFlagImpl","clearFlag","setWorldFlagForNextRunImpl","setWorldFlagForNextRun","setWorldFlagImpl","_state$world$flags2","setWorldFlag","_state$world$flags3","setCombatVariableImpl","variable","setCombatVariable","resetAllCombatVariables","getCombatVariable","_state$run$exploratio","listeners","highPriorityListeners","triggerExtractors","triggerValues","perfInfo","addGameStateListener","triggerExtractor","clearGameStateListener","getPerfInfoForListener","executed","listenerMs","executedTrigger","triggerMs","applyHighPriGameStateListeners","newState","filter","listenerKey","beginTimestamp","performance","endTimestamp","map","applyGameStateListeners","validListeners","extractor","push","listenerResults","applyAllTransforms","transforms","trans","assign","TransformationTags","TransformationValueType","TransformationType","transformationDatabase","allTransformations","registerTransformation","tags","transformationId","transformationDescription","transformationType","transformation","data","description","type","lastValue","allTags","Set","flat","tag","_transformationDataba","forTag","some","preExisting","cacheMisses","getTransformationsThatApply","memoizeWithLimit","prejoinedTags","_cacheMisses$get","joinedTags","join","allTransformationsThatApply","_transformationDataba2","targetTags","every","targetTag","includes","uniqueTransformations","_toConsumableArray","applyMultiplierTransformations","startingValue","params","transformParams","Multiplier","reduce","prev","current","applyTransformations","oldTransformTags","concat","transformations","additionTransformations","Addition","afterAddition","_transformation$trans","powerTransformations","Power","afterPower","_transformation$trans2","pow","multiplicationTransformations","afterMultiplication","_transformation2$tran","overrideTransformations","Override","afterOverride","newOverride","missMap","getCacheKeyStuff","_missMap$joinedTags","applyTransformationsCached","cacheKey","applyTransformationsPermaCached","_state","clearTransformationCache","deleteKey","explainTransformations","output","explainTransformationsText","_params$unit","_params$valueType","explained","valueType","Basic","overrides","amount","toTextAddition","Percent","toTextMultiplier","additions","multipliers","baseText","additionText","plusText","multiplierText","Log2","_params$base","Log2Divisor","_params$base2","Divisor","explainTransformationsTextUncached","Resource","translateResource","resource","Mana","FireEssence","EarthEssence","WaterEssence","AirEssence","PoisonEssence","MindEssence","LifeEssence","ElectricEssence","DeathEssence","HolyEssence","TimeEssence","SpaceEssence","Coins","Monstium","TimePiece","RESOURCES","baseCap","icon","getResourceInfo","getSortedResourceKeys","resourceCapTags","resourceName","Cap","resourceCapParams","clearResourceCapCache","getResourceCap","calculateResourceCap","getResourceAmount","_state$run$resources","grantResourceImpl","_state$run$resources2","cap","min","grantResource","retirementListeners","postRetirementListeners","registerRetirementListener","registerPostRetirementListener","isRetirementUnlocked","retire","isMock","listenerId","_state$run","ActionArea","ActionSubcategories","HOME_ACTION_SUBCATEGORIES","ACTIONS","CHANNELING","MANA","STORAGE","CATALYSTS","OTHER","TIME_PIECES","STUDY_ACTION_SUBCATEGORIES","ENHANCE_ACTION_SUBCATEGORIES","ENHANCE_STORAGE","ENHANCE_LAND","ENHANCE_PRODUCTION","ENHANCE_CATALYSTS","ENHANCE_EXPLORATION","ENHANCE_OTHER","BOOST_ACTION_SUBCATEGORIES","BOOST","BOOST_OTHER","translateActionSubcategory","subcategory","FAMILIARS","clearVisibleSpellsCache","actionArea","SpellElement","translateElement","element","getRankForLevel","level","rankPlus","rank","ELEMENT_LEVEL_CAP_BASE","ELEMENT_LEVEL_CAP_DEMO_BASE","expTable","getElementExp","_state$run$elementExp","maxElementLevelTags","MaxElementLevel","getMaxElementLevel","getIncrementalExpRequiredForLevelAndExponent","exponent","maxLevel","Infinity","getTotalExpRequiredForLevelByExponent","_expTable$get","cachedExp","getLevelByExpAndExponent","exp","estimateLevel","getExponentForElement","_state$run$elementExp2","_state$run$elementExp3","getUnlockedElements","primary","ExpRequirementScale","isPartiallyUnlocked","getTotalExpRequiredForLevel","estimateLevels","getElementLevel","cacheByTickCountElementLevel","_state$run$elementExp4","getLevelByExp","grantElementExpImpl","grantElementExp","selectPrimaryElementImpl","selectSecondaryElementImpl","getPrimaryElements","getPrimaryElementMaxLevelForRun","primaryElements","elementValues","sort","a","b","indexOf","getFullyUnlockedElements","_state$world$unlocked","_state$run$partiallyU","unlockElementImpl","unlockElement","partiallyUnlockElementImpl","partiallyUnlockElement","hasElementBeenPartiallyUnlockedInPreviousRun","getMaxPrimaryElementLevel","_state$world$maxPrima","getMaxOfMaxPrimaryElementLevels","tagsForExpGain","ExpGain","getElementExpByUsage","manaSpent","isSpellElement","transformed","school","BASE_STARTING_EXP","STARTING_EXP_POWER_BASE","STARTING_ELEMENT_EXP_BASE_TAGS_BY_ELEMENT","StartingElementExpBase","startingExpForElement","maximumElementLevelExpMultiplier","s","sumOfLevels","total","_maxElementLevels","getSumOfMaxPrimaryElementLevels","maximumElementLevelProductionMultiplierDx","researchMultiplier","grantStartingExp","meetsRequirements","requirements","elementName","Production","ChannelingEfficiency","Loot","FamiliarExp","Cost","Spell","cachedExponents","_loop","_expTable$get2","generateDeathColor","fireColor","isDark","color","grayscale","darken","hexa","generateHolyColor","lighten","COLORS_TO_REGENERATE_LIGHT","COLORS_TO_REGENERATE_DARK","TO_GRAYSCALE_ONLY","getThemeByElementAndDarkMode","getThemeByElementAndDarkModeUnmemoized","colors","onPrimary","primaryContainer","onPrimaryContainer","secondary","onSecondary","secondaryContainer","onSecondaryContainer","tertiary","onTertiary","tertiaryContainer","onTertiaryContainer","error","onError","errorContainer","onErrorContainer","background","onBackground","surface","onSurface","surfaceVariant","onSurfaceVariant","outline","outlineVariant","shadow","scrim","inverseSurface","inverseOnSurface","inversePrimary","elevation","level0","level1","level2","level3","level4","level5","surfaceDisabled","onSurfaceDisabled","backdrop","deathColors","colorToChange","holyColors","baseTheme","MD3DarkTheme","MD3LightTheme","hpBarForeground","hpBarBackground","fonts","labelSmall","letterSpacing","labelMedium","bodySmall","bodyMedium","roundness","getThemeWithOverriddenOnError","theme","newTheme","Dungeons","DungeonFloors","getUnlockedDungeons","dungeon","isUnlocked","isDungeonFloorCompletedThisRun","isDungeonFloorEverCompleted","setDungeonFloorCompleted","floorId","mplIsTooLow","maxLowRecommendation","floors","getDungeonFloors","isMainStoryDungeonFloor","_floor$getMinimumMPLR","getMinimumMPLRecommendation","minMPLRecommendation","mplIsTooHigh","minHighRecommendation","_floor$getMaximumMPLR","getMaximumMPLRecommendation","maxMPLRecommendation","StorylineStatus","STORYLINE_STATUS_ORDER","LOCKED","UNLOCKED","HINT_REVEALED","COMPLETED","BONUS_ACTIVE","translateStorylineStatus","status","HIDDEN","Storyline","order","mindRequirementForHint","hintDescription","getBonusDescription","isHintUnlockable","isHidden","isHintRevealed","isBonusActive","isCompleted","storyline","Flag","Items","isItemQualityUnlocked","Schematics","combineAll","combined","stack","combineActions","getById","itemOccurrence","itemId","getCombineActions","combineAllAction","isEnabled","sellLowQualityItems","sold","item","itemStack","_itemStack$itemOccurr","_itemStack$itemOccurr2","_stack$itemOccurrence","_stack$itemOccurrence2","itemQuality","saleActions","getSaleActions","saleAction","getItemOccurrenceIndex","itemOccurrenceParamsJSON","findIndex","isItemOccurrenceEqual","itemOccurrenceA","itemOccurrenceB","getItemStackFromInventory","index","AddToInventoryForFirstTimeListeners","addToInventory","previousIndex","removeFromInventory","newAmount","splice","getAmountOfItem","getTotalAmountOfItem","count","removeFromInventoryWithAnyParams","oldRunState","firstIndex","itemAmount","AttackTarget","translateAttackTarget","target","CombatStat","BASE_VALUES","MaxHP","Attack","Defense","AttackDelay","HPRegen","Dodge","Accuracy","Crit","calculatePlayerMaxHP","calculatePlayerCombatStat","calculatePlayerAttack","calculatePlayerAttackDelaySec","calculatePlayerDefense","calculatePlayerHPRegenRatioPerSec","calculatePlayerDodgePoints","calculatePlayerAccuracyPoints","calculatePlayerCritPoints","playerStatTags","stat","getCachedCombatStat","fn","familiarId","clearCombatStatCache","explainPlayerCombatStat","explainParams","OfflineTickListener","OfflineTickListeners","WarpTimeListeners","WarpTimeListener","nextFrame","Promise","resolve","reject","requestAnimationFrame","registerTimeTickListener","priority","sortedListeners","idA","idB","gameSpeedTags","GameSpeed","processTimeTick","timeElapsedSec","isWarp","speedMultiplier","timeElapsedSecAfterTransform","WARP_TIME_PROCESSING_CONFIG_DEFAULT","secsPerTick","warpTimeProcessingConfig","_processOfflineTicks","_asyncToGenerator","initialState","secsTotal","setPlayerState","currentState","getListener","_processWarpTime","onLoadingProgress","secsProcessedSoFar","ticksProcessedSoFar","secsToProcess","getTotalSecondsPlayed","getSecondsPlayed","Actions","getVisibleActionsForAreaBySubcategory","area","actionsBySubcategory","actionsByAreaAndSubcategory","HOME","action","isVisible","SPELL_MENU","STUDY","TRANSMUTE","EXPLORATION","ENHANCEMENT","registerAction","getByIdNullable","register","areas","getAreas","subcategories","isAutoPurchaseUnlocked","AutoPurchaseUnlocked","getAutoPurchaseActions","canAutoPurchaseMax","Spells","registerSpell","spell","getVisibleSpellsByElement","spellsByElement","_spell$getAreas2","elementRequirements","getLevelRequirements","_element","getVisibleSpellsForElement","extraLevels","_getVisibleSpellsByEl2","_getVisibleSpellsByEl","fakeState","setLastCastedTime","getFavoriteSpells","_state$run$favoriteSp","_state$run$favoriteSp2","removeFromFavoriteSpells","isInFavoriteSpells","toggleEmpowered","empowered","isEmpowered","callSpellCacheListeners","spellCacheListeners","clearAutocastPointsCache","clearManaCostCache","clearCanCastSpellCache","CanCastSpell","clearSpellCooldownCache","SpellCooldown","clearAllSpellCaches","_loop2","startsWith","clearSpellDurationCache","registerEmpowerEffects","multiplier","registerStandardEmpowerEffects","actionEffectMultiplier","manaCostMultiplier","ActionEffect","registerBuffEmpowerEffects","effectMagnitudeMultiplier","TemporaryEffectMagnitude","translateResearcherAutoAssignStrategy","strategy","SPREAD_EVENLY","HIGHEST_AMOUNT","SPREAD_THEN_HIGHEST","decideOnAutoAssigning","elements","maxElement","maxElementResearchers","assignedResearchers","minElement","minElementResearchers","onTick","elapsedTimeSec","expPerSec","getResearcherExpPerSecForElements","_expPerSec","BASE_RESEARCH_EXP_PER_SEC_PER_RESEARCHER","expGainTagsCache","Study","researcherAllocation","totalExpPerSec","allocatedResearchers","researchRatePerResearcher","fromResearch","clearResearcherExpCache","expGainStudyTags","getBaseResearchRate","researcherAmountTags","ResearcherAmount","getTotalResearchers","getFreeResearchers","researchersAllocated","allocateResearchersToElementImpl","currentAllocation","actualAmountToAllocate","allocateResearchersToElement","isStudyUnlocked","StudyUnlocked","IncomeOverTimeProducer","displayName","calculator","IncomeOverTimeProducers","calculatedIncomeCached","producerId","getCalculator","clearCalculatedIncomeCache","calculatedIncomesCached","producer","income","getDisplayName","finalIncomeTags","FinalIncomePerSec","calculateIncomePerSecond","incomes","canApply","subResString","_income$income$subRes2","subResource","subResourceIncome","resString","_total$resource","_income$income$resour","_income$income","_income$income$resour2","_income$income2","existingIncome","_total","explainIncomePerSecText","explanations","foundNonzero","_income$income$subRes3","_total$resource2","_income$income$resour3","_income$income3","_income$income4","explainIncomePerSecondPreTransform","_total2","valuesText","postTransformationExplanation","appliedTotals","_income$income$subRes","_income$income$_subRe","_appliedTotals$_subRe2","_appliedTotals3","_appliedTotals4","_appliedTotals5","EquipmentSlot","POUCH_SIZE_TAGS","PouchSize","ACCESSORY_SIZE_TAGS","AccessorySize","getMaxEquippedItemsPerSlot","slot","canUnequipItem","getEquippedItems","canEquipItem","EquipmentChangeListeners","equipToSlot","position","skipSave","extraSlots","getExtraSlots","capacity","equippedItems","equippedExtraSlotItem","getEquippedExtraSlotItem","done","i","extraSlot","unequipFromSlotImpl","saveEquipmentLoadoutToPosition","getEquippedItem","_state$run$equipment","_state$run$equipment$","_state$run$equipment2","equipped","otherSlot","equippedItem","actualItem","doCleanup","getSlot","unequipFromSlot","getUnequipAction","gzipCompress","promisify","zlib","gzipDecompress","_loadData","jsonValue","AsyncStorage","makeCompatible","_saveData","lastSaveDataTime","parseFloat","saveDataUnsafe","_x2","_saveDataUnsafe","oldTemp","rule","strategies","currentStrategyIndex","isArray","loadout","deepmerge","loadBase64Data","_x3","_loadBase64Data","saveData","decodedBuffer","Buffer","decodedJSON","decodedData","serializeSaveData","_x4","_serializeSaveData","compressedJSON","getUICommands","addUICommand","command","requiredElectron","window","require","e","isElectron","electron","ACHIEVEMENTS_SUPPORTED","incrementAccumulatorVariable","variableName","_ref","_state$run$variables","_ref2","_state$world$variable","currentValue","worldValue","getAccumulatorVariable","_ref3","_state$run$variables2","Enemies","getCurrentEnemy","getLastQueuedActionResult","getExplorationStatus","FamiliarStatusType","FamiliarCompanionStatusType","translateFamiliarCompanionStatusType","Preparing","Exploring","Reviving","Combat","getFamiliarData","_state$run$familiars","FamiliarDeletionListeners","getCurrentCompanionId","_getCurrentCompanionD","getCurrentCompanionData","find","familiarData","Companion","getCurrentCompanionClass","companionData","Familiars","familiarClassId","setFamiliarToExplore","dungeonFloorId","actionProgress","exploringDungeonFloorId","autoExploring","exploringNextRandomRoll","setFamiliarToAutoExplore","findMaxFloorForFamiliar","throttleTimestamps","throttleCounts","THROTTLE_THRESHOLD","pushToFamiliarMessageLog","log","_throttleTimestamps$f2","_throttleCounts$famil2","timestamp","timestampSec","throttleTimestamp","throttleCount","familiarMessageLog","messageLog","unshift","realTimestamp","message","slice","areFamiliarsUnlocked","FamiliarsUnlocked","getFloorsAvailableForFamiliars","dungeonFloor","canFightBoss","getBoss","isDungeonFloorValidForFamiliars","FamiliarExplorationDelay","calculateAverageEnemyLevelForFamiliars","isDangerousForFamiliar","getLevel","TemporaryEffects","TEMPORARY_EFFECT_DELTA","getLookupId","getTemporaryEffectEndTime","getTemporaryEffectEndTimeRaw","fullId","_state$run$temporaryE","endTime","hasTemporaryEffect","hasTemporaryEffectRaw","getTemporaryEffectData","includeEvenIfExpired","getTemporaryEffects","effectName","temporaryEffect","getTemporaryEffectsForTarget","temporaryEffectDurationTags","TemporaryEffectDurationPostProcessing","grantTemporaryEffectImpl","baseDurationSec","_extra$mode","_extra$target","_extra$params","mode","durationSec","effectExtra","newEndTime","temporaryEffectData","setTime","fromAutocast","fromPermacast","fromPouch","registeredClear","mergeData","temporaryEffectListeners","grantTemporaryEffect","clearTemporaryEffect","clearCombatTemporaryEffects","effect","isCombatOnly","getTemporaryEffectsForCommonBuff","isCommonBuffEnabled","registerTemporaryEffectListener","registerExpiration","TemporaryEffectExpirationListeners","registerTemporaryEffectCombatStatCacheClearer","DeathInterceptors","CombatActionResultListeners","pushCombatActionResult","combatActionResult","hasCurrentActiveCompanion","companionStatus","lastSelectedEnemyAction","lastSelectedFamiliarAction","isExplorationUnlocked","ExplorationUnlocked","isExplorationEverUnlocked","startExplorationOnFloor","startExploration","startBossExploration","ExploringBoss","getExplorationStartTime","getCurrentDungeonFloor","_state$run$exploratio2","startCombatImpl","enemy","getMaxHP","onEncounter","getNextAction","companion","getNextActionForCompanion","startCombat","getCurrentPlayerHP","_state$run$exploratio6","getCurrentFamiliarHP","_getCurrentCompanionD2","currentHp","getCurrentEnemyHP","_state$run$exploratio7","_state$run$exploratio8","getCurrentEnemyHPFraction","_getCurrentEnemy$getM","_getCurrentEnemy","DAMAGE_INFLECTION","calculateDamage","attack","defense","damage","calculateIsHit","accuracyPoints","dodgePoints","hitOdds","modifyTargetCurrentHP","cause","modifyPlayerCurrentHP","modifyCompanionCurrentHP","modifyEnemyCurrentHP","_cause","_lastSelectedEnemyAct","currentCompanion","currentCompanionData","getStatsForCompanion","maxHP","triggerFamiliarDeath","executePlayerAutoAttack","standardPlayerAttackEffect","AutoAttack","getCurrentHPFromTarget","getStatFromTarget","familiar","toLowerCase","substring","getAttack","getAttackDelay","getDefense","getAccuracyPoints","getDodgePoints","getCriticalPoints","calculateAttackTarget","calculateIsEnemyHit","modifiedAccuracyPoints","forcedTarget","attackDamageReceivedByTargetTags","AttackDamageReceived","critResistanceByTargetTags","CriticalResistance","standardEnemyAttackEffect","_options$accuracyAddi","_options$accuracyMult","_options$forcedTarget","_options$tags","accuracyAddition","accuracyMultiplier","isHit","isCrit","_options$critChanceMu","critChance","critChanceMultiplier","critResistance","enemyAction","source","onHit","drainingEnemyAttackEffect","_options$accuracyMult4","_options$forcedTarget4","_options$tags4","_options$critChanceMu3","_options$tags3","_options$forcedTarget7","_options$overrideAccu","_options$accuracyMult7","_options$tags8","overrideAccuracy","_options$overrideCrit","_options$critChanceAd","_options$critChanceMu6","_options$targetDefens","critChancePoints","overrideCritChance","critChanceAddition","targetDefenseMultiplier","getCumulativeLosses","enemyId","_state$world$timesEne","_state$world$timesEne2","_state$world$timesEne3","losses","getSuccessfulExplorationsForFloor","_state$run$exploratio9","_state$run$exploratio10","pushToMessageLog","accessibleMessage","endExploration","ExplorationDelay","explorationDelayTags","getExplorationTimeRequirementSec","getExplorationRequiredTimeSecBase","getFamiliarAttackDelay","_state$run$exploratio11","currentFamiliar","delay","enemyAttackDelayTags","getEnemyAttackDelay","baseEnemyAttackDelay","actualEnemyAttackDelay","getEnemyTurnCounter","_getCombatVariable","enemyDeathListeners","addEnemyDeathListener","triggerCombatLoss","_state$run$exploratio12","isBoss","currentEnemyName","getName","fromEnemyMessage","_state$world$timesEne4","_state$world$timesEne5","player","incrementCumulativeLosses","onPlayerDeath","loadExploration","startExplorationOrAutoAdvance","_getCurrentDungeonFlo","getNextFloor","explorationTimeRequirement","nextExplorationTime","doFightBoss","outcome","doExplore","normal","attackDelayPlayer","attackDelayEnemy","attackDelayFamiliar","extraSec","newAttackDelay","executeFamiliarAction","executeEnemyAction","interceptor","onDeath","couldFightBoss","triggerEnemyDeathListeners","playerMaxHP","hpRegenBase","hpRegenMultiplier","BestiaryState","getCombatStatFromBattlerStat","battlerStat","getCumulativeEnemyKills","getCumulativeEnemyKillsFromCreatures","_state$world$timesEne6","getBestiaryVisibleEnemies","getBestiaryState","Hidden","enemyStatTags","KILLS_FOR_BESTIARY_LOOT","lootTags","isFromCreatures","FromFamiliarExploration","FromExploration","lootChanceTags","LootChance","_enemyIdParams","_familiarParams","_memoizedEnemyLootTags","enemyLootId","isFromFamiliars","LootItemAmount","_this2","getBaseStats","_this3","attackDelay","_this4","crit","_this5","_this6","accuracy","_this7","dodge","_this8","kills","Expanded","SpriteOnly","_state$world$timesEne7","_state$world$timesEne8","_this9","totalTimesDefeated","baseCoinsAwarded","getCoinsAwardedBase","baseMonstiumAwarded","getMonstiumAwardedBase","coinsAwarded","monstiumAwarded","familiarExpAwarded","familiarClass","oldLevel","newLevel","_throttleTimestamps$f","_throttleCounts$famil","wouldBeThrottledIfPushingToCreatureMessageLog","expAwarded","getItemsAwardedBase","enemyLoot","chance","_state$world$knownEne","foundLoot","achievementsUnlocked","unlockAchievement","achievement","achievementName","ipcRenderer","send","AchievementSyncListeners","registerAchievementUnlockerFromFlag","flagSet","registerAchievementUnlockerFromStoryline","getCompletedFlag","CombatClass","getCachedBaseClassEffects","getBaseClassEffects","tagsByEffect","getCurrentCombatClass","isCombatClassSelectionUnlocked","baseEffect","_this$tagsByEffect","_baseEffect$tags","ClassEffect","onlyId","baseEffects","finalEffects","getTagsByEffect","CombatClasses","CombatClassesStoryline","Storylines","getSortedStorylines","getTotalStorylineCount","storylineHintUnlockChecker","storylines","shouldRevealHint","revealHint","Endings","getEndingData","hasEverTriggeredEnding","ending","endingId","EndingCloseListeners","EmptyEventMessage","EmptyEventMessageImpl","EventTag","eventMessages","getEventMessageById","gameEvents","getGameEventById","getEventOccurrenceById","_state$run$eventOccur","executeEventOccurrenceActionImpl","occurrenceId","selectedOption","nextMessage","messageHistory","currentMessageId","isTerminal","timestampSecondsPlayed","jumpEventToMessageIfExists","eventId","messageId","eventOccurrence","addOccurrenceToQueueImpl","eventOccurrenceId","removeOccurrenceFromQueueImpl","lastIndexOf","triggerEventImpl","event","extraTags","totalTags","getTags","DO_NOT_AUTO_TRIGGER_IF_ONGOING","occurrenceData","STORYLINE","getMainEventMessage","everTriggered","hasEverTriggered","MAIN_QUEST","MAIN_QUEST_SEEN_BEFORE","currentMessage","getAllowedOptions","onTrigger","DO_NOT_POPUP","shouldPopUpEventWithTags","triggerEvent","STUB_OPTION","replaceWithParams","text","RegExp","isNaN","replacement","replace","EventMessageImpl","title","option","EventMessageBuilderDeluxe","isEnd","setDescription","_paramsOrNextMessageI","_paramsOrNextMessageI2","_paramsOrNextMessageI3","paramsOrNextMessageId","nextMessageId","SimpleGameEvent","onTriggerTransform","storylineIds","triggerString","_this$storylineIds","EventBuilder","messages","lastMessageId","builder","newMessageId","setSimpleDescription","buildRecursive","built","parseInt","createGameEvent","idToSearch","messageBuilder","_this$messages","getOptions","optionStub","_optionStub$descripti","_this2$messages","_this2$messages2","nextMessageIndex","findMessageIndexWithId","buildEvent","getDemoAboutText","fullGameLink","getMR1AboutText","AuxOptionsContext","compactLayout","useAuxOptions","useContext","Text","ref","style","variant","h1","h2","h3","h4","doNotScaleFonts","rest","_objectWithoutProperties","_excluded","useTheme","writingDirection","I18nManager","isRTL","ariaLevel","computedStyle","useMemo","styles","fullStyle","_theme$colors","textStyle","default","_jsx","NativeText","maxFontSizeMultiplier","accessibilityRole","selectable","accessibilityLevel","StyleSheet","fontSize","textAlign","Button","props","_props$ButtonComponen","disabled","autoRepressConfig","enableAutoRepress","labelStyle","passthroughStyle","disableDisabledRenderingOptimization","TextComponent","pressed","useRef","disabledRef","currentRepressTimeout","currentRepressHandler","_useState","useState","_useState2","_slicedToArray","flash","setFlash","shouldDisableRenderingOptimization","ButtonComponent","useEffect","_autoRepressConfig$mi","timeoutHandler","setTimeout","minTimeMs","clearTimeout","rePress","useCallback","_autoRepressConfig$mi2","_autoRepressConfig$dr","onPress","dropoffMultiplier","onPressInCallback","_autoRepressConfig$st2","_autoRepressConfig$st","startingRepressTime","startingThreshold","onPressOutCallback","PaperButton","auxOptions","basicLabelStyle","compact","labelLarge","verticalLabelStyle","compactLabel","styleFlash","opacity","computedLabelStyle","activeButton","onPressIn","onPressOut","disabledButton","View","children","_jsxs","display","marginVertical","icons","fire","earth","water","air","poison","mind","life","electric","death","holy","space","fireessence","earthessence","wateressence","airessence","poisonessence","mindessence","lifeessence","electricessence","deathessence","holyessence","timeessence","spaceessence","land","coins","mana","wizardpower","boost","hp","monstium","debuff","generic","timepiece","exchange","corruption","x","about","apprentices","boosts","compendium","creatures","enhance","help","home","research","retirement","rituals","spellcraft","stats","study","transmute","wizards","worlds","GameIcon","otherProps","imageSource","label","getPicture","getDefaultParams","width","height","small","Image","accessibilityLabel","Plugin","match","utils","Tooltip","markdownItInstance","MarkdownIt","typographer","use","MarkdownIconPlugin","containerClassName","MarkdownTooltipPlugin","markdownRules","paragraph","node","parent","markdownStyles","markdownParagraph","inheritedStyles","content","sourceMeta","imageStyleAndroidAttack","imageStyleAndroid","resizeMode","getUniqueID","ios","imageContainerStyleiOSAttack","imageContainerStyleiOS","imageStyleiOSAttack","imageStyleiOS","tooltip","tooltipTextContainer","underlined","Markdown","_props$children","_props$accessibilityL","_props$children2","_props$children2$repl","_props$accessibilityL2","containerStyle","_substring","replaceAll","accessibilityLiveRegion","body","justifyContent","minHeight","lineHeight","bullet_list_icon","marginTop","bullet_list","list_item","alignItems","heading2","accessible","containerView","LibraryMarkdown","markdownit","markdownTextgroup","flexDirection","flexWrap","padding","margin","top","marginLeft","marginRight","alignSelf","right","web","flex","textDecorationLine","flexRow","flexEnd","flexRowSpaceBetween","flexRowAlignCenter","flexCenter","alignSelfStretch","alignSelfNormal","ml4","ml8","ml16","mt2","mt4","mt8","mt16","mr4","mr8","mr16","mb4","marginBottom","mb8","mb16","mv2","mv4","mv8","mv16","pb4","paddingBottom","pb8","pb16","ph4","paddingHorizontal","ph8","ph16","pv4","paddingVertical","pv8","pv16","p4","p8","p16","bold","fontWeight","VisibilityContext","subscribers","useGameState","setState","callback","visible","subscriber","otherSubscriber","About","_getCurrentVersionTim","stateRef","versionText","versionNumber","versionString","versionNumberText","demoText","mr1text","container","explanation","explanationText","showDebug","Styles","Action","getCachedBaseActionEffects","getBaseActionEffects","memoizedActionEffectParam","memoizedActionEffectExplanationParam","effectId","cost","getCost","_cost$resources$resou","_cost$resources$resou2","items","_cost$resources$resou3","n","times","_cost$resources$resou4","_cost$resources","skipAffordabilityChecks","canAfford","RESOURCE_FOR_ELEMENT","_Action","_inherits","BoostActionBase","_super","_createSuper","call","_costScaleMonstium","CostScale","_costScaleEssence","essence","getElement","_get","_getPrototypeOf","prototype","Boost","bought","getBoughtBoostsAmount","fractionAddedPerUpgrade","essenceFractionAddedPerUpgrade","resourcesObject","getTotalBoughtBoosts","_cost$Monstium","_cost$RESOURCE_FOR_EL","isNotificationRead","_data$globalTimestamp","globalTimestampRead","globalTimestampTriggered","getNotificationByGroupAndItem","group","notification","getUnreadNotificationsByGroup","getNotificationsByGroup","triggerNotification","previousNotification","AutocastCondition","parameters","getParameters","validation","idx","_values$idx","validationResponse","parameterType","validate","AutocastConditions","_AutocastCondition","AlwaysAutocastCondition","AutocastConditionParameterDisplay","AutocastConditionParameterType","NumericAutocastConditionParameterType","_AutocastConditionPar","TEXT_FIELD","ResourceAutocastConditionParameterType","PICKER","hasEverHadResource","ResourceLessThanAutocastCondition","resourceIcon","ResourceLessThanAutocastConditionRatio","percent","ResourceMoreThanAutocastCondition","ResourceMoreThanAutocastConditionRatio","SmartlyAutocastCondition","isCastingRecommended","TemporaryEffectAutocastConditionParameterType","hasEverHadTemporaryEffect","TemporaryEffectLowTimeRemainingAutocastCondition","buff","temporaryEffectId","timeLeftSecs","TemporaryEffectPresentAutocastCondition","SpellAutocastCategory","translateSpellAutocastCategory","category","ATTACK","COMBAT_BUFF","GENERAL_BUFF","HEALING","TRANSMUTATION","productionTags","AutocastPointsProduction","productionUnit","getAutocastPointIncomePerSecPerWizard","wizardAmountTags","WizardAmount","getWizardAmount","wizardAmountUnit","getFreeWizards","usedWizards","getCurrentAutocastStrategy","_getAssignedWizardsBy","getAssignedWizardsByRuleIndex","getUsedWizards","grantAutocastPoints","ruleIdx","grantAutocastPointsToRule","spellId","ruleStatus","getAutocastStatusByRule","currentPoints","getAutocastPointsRequirement","assignWizardsToPermaCast","freeWizards","amountToAdd","permaCastWizardPowerNeeded","getPermaCastDelaySec","isSpellInPermaCast","assignWizardsToRuleIndex","assignWizardsToRule","wizardsAssigned","AssignedWizard","toggleAutocastRuleDisabled","toggleAutocastRuleHidden","hidden","getAutocastStatusByRuleIndex","_state$run$autocast$r","_state$run$autocast$r2","getAutocastRuleBySpell","getAutocastRuleById","ruleId","getConditionFromData","conditionData","condition","conditionIsMet","isConditionMet","isAutocastUnlocked","WizardsUnlocked","isAutocastEverUnlocked","estimateIntervalBetweenCastsForRule","minimumFrequency","getEstimatedMinAutocastDelay","timeToFull","estimateManaConsumptionPerSecPerRule","_spell$getCost$resour","estimateManaConsumptionPerSecPerRuleIndex","estimateExpGainPerSecPerRule","expGain","getExpFromUsage","intervalBetweenCasts","estimateIntervalBetweenCastsForRuleIndex","estimateManaConsumptionPerSecPermaCast","_s","estimateManaConsumptionPerSecPermaCastUncached","getManaCost","getPermaCastManaCostPerSec","estimateWizardPowerConsumptionPerSecPermaCast","uncached","getPermaCastAutocastPointsConsumptionPerSec","clearAutocastCaches","clearPermacastCache","estimateWizardsNeededPermaCast","DEFAULT_CONDITIONS","calculatePermacastInfo","permaCastSpells","permaCastSpellRequiredWizardPower","permaCastSpellRequiredMana","sortedPermaCastSpells","loadAutocast","_getAssignedWizardsBy2","conditions","pointsRequired","doAction","isAutomatic","_ret","_calculatePermacastIn","availableWizardPower","maxMana","currentMana","manaCostToPay","wizardPowerToAssign","doActionPermaCast","_ret2","_calculatePermacastIn2","foundTheSpell","_loop3","currentRuleIdx","Enhancements","registerEnhancement","enhancement","isEnhancementUnlocked","EnhancementsUnlocked","loadEnhancementCommonLogic","shouldAutoPurchaseEnhancements","SpellCastListeners","getStandardRangeEffectText","average","variance","getStandardAttackEffectText","getStandardSpellAttackEffect","extras","effects","getActionEffects","getSpellName","getStandardSpellAttackEffectText","getActionEffectExplanations","_tagArray","_manaCostTags","parentSpell","_cooldownTagArray","_actionParams","_assertThisInitialized","_cacheEnabled","canCastSpellTags","autocastPointsRequirementTags","AutocastPointsConsumption","getExtraTags","getManaCostUncached","getBaseManaCost","_state$run$lastSpellC","mainName","hasActiveSpellcrafts","lastCastTime","getLastCastTime","isInPermaCast","getBasicDisplayName","secTillOver","getCooldown","spellName","isSpellInWizards","spellcraftId","getBaseCooldown","ticks","enabled","_isEnabledNoCache","shouldIgnoreCanCastSpell","_this$getCachedBaseAc","_this$getCachedBaseAc2","_this$getCachedBaseAc3","getBaseAutocastPointsRequirement","_this3$getCost$resour","_this3$getCost$resour2","_exp$element","_exp$element2","expMin","expMax","doSpellAction","grantExpFromUsage","payCost","recentSpellName","addRecentSpellCast","isCastingRecommendedTemporaryEffect","getActionEffect","isEmpowerable","getEmpoweringLevelRequirements","_state$run$empoweredS","TransmutationSpell","_Spell","tagsForResource","getItem","getCraftingElementLevelRequirements","ItemCost","tagsForItem","ItemCostItem","tagsForQuality","ItemQuality","tagsForCreation","ItemAmountTransmuted","itemName","getBaseName","getCraftingMaterials","getCraftingMaterialsBase","_base$resources","baseAmount","_base$items$item","_this$getItem$getDesc","getDescription","generateCraftedParams","_this$getItem$getEffe","getEffect","materials","_materials$resources","hasCraftingMaterials","isTransmutationUnlocked","getBaseSalePrice","craftN","automated","canCraft","amountToCraft","calculateAmountPerCraft","simplifyCrafting","expGranted","timesCraftable","amountNeeded","amountInInventory","getTransmutationSpellForItem","amountRequired","amountPerCraft","timesToCraft","resourceThresholds","itemThresholds","TransmutationUnlocked","transmutationSpellsByItem","registerTransmutationSpellAndItem","getVisibleTransmutationSpells","isCraftingUnlocked","getAllTransmutationSpellsEverCastable","hypotheticalState","_state$world$maxEleme","_state$world$maxEleme2","TemporaryEffect","getDisplayDescription","isBeneficial","oldData","newData","currentEndTime","extraDuration","ritualWeakness","_TemporaryEffect","RitualWeakness","Rituals","CORRUPTION_CAP_TAGS","CorruptionCap","getCorruptionCap","CORRUPTION_TAGS","Corruption","Accumulation","getCorruption","CORRUPTION_HP_PENALTY_BASE","CORRUPTION_HP_PENALTY_PER_CORRUPTION","CORRUPTION_HP_PENALTY_OVER_CAP","isCorruptionHPPenaltyActive","getCorruptionHPPenaltyMultiplier","CORRUPTION_EXP_PENALTY_BASE","CORRUPTION_EXP_PENALTY_PER_CORRUPTION","CORRUPTION_EXP_PENALTY_OVER_CAP","isCorruptionExpPenaltyActive","getCorruptionExpPenaltyMultiplier","CORRUPTION_TRANSMUTE_PENALTY_BASE","CORRUPTION_TRANSMUTE_PENALTY_PER_CORRUPTION","CORRUPTION_TRANSMUTE_PENALTY_OVER_CAP","isCorruptionTransmutePenaltyActive","getCorruptionTransmutePenaltyMultiplier","getVisibleRituals","RitualsUnlocked","ritual","PARTIALLY_UNLOCKED_STORAGE_MULTIPLIER","PARTIALLY_UNLOCKED_CHANNELING_MULTIPLIER","LEVELS_PER_RANK","EXPONENTIAL_BONUS_PER_RANK","getRankMultiplier","baseLevel","currentLevel","rankDifference","getRankDifference","getConcatenatedRequirements","formatRequirements","getMarkdownTextForSpell","getMarkdownTextForSpellEmpowerment","getMarkdownTextForTransmutationSpell","itemIcon","LevelUpListeners","loadLevelUpEvents","_element2","eventBuilder","LEVEL_UP","build","_state$run$lastComput","lessExpState","oldSpells","newSpells","levelUpLearnedSpells","diffSpells","newSpellText","extraSpellText","extraSpells","newSpellsLearnedText","getLevelUpLearnedSpellsText","oldTransmutations","newTransmutations","levelUpLearnedTransmutations","_spell$getLevelRequir","_spell$getLevelRequir2","newSpellsText","extraSpellsText","getLevelUpLearnedTransmutationsForElement","levelUpLearnedEmpowers","getLevelUpLearnedEmpoweredSpellsText","isEmpoweringPossible","levelUpLearnedRituals","oldRituals","newRituals","diffRituals","newRitualText","extraRitualText","extraRituals","newRitualsLearnedText","getLevelUpLearnedRitualsText","rankText","LEVEL_UP_EMPTY","LEVEL_UP_ALREADY_REACHED","levelUpLearnedCrafts","_state$run$lastComput2","getAllKnownItemCompendiumInfos","info","transmuteSpell","knownLootFromEnemies","transmutationSpell","transmutationSpellsEverCastable","enemyInfo","lootChance","getItemCompendiumInfoForItem","clearItemCompendiumInfoCache","generateEffect","generateSpellcraftMultiplier","baseValue","transformedValue","Spellcraft","getCachedBaseBonusEffects","getBaseWizardPowerMultiplier","wizardPower","getBasePowerMultiplier","power","getBaseCooldownMultiplier","cooldown","getBaseTemporaryEffectDurationMultiplier","temporaryEffectDuration","getBaseManaCostMultiplier","manaCost","bonusEffectExplanationParams","getBaseItem","getDefaultName","SpellcraftEffect","requiresSpellsWithFixedManaCost","hasFixedManaCost","requiresSpellsWithParameterizedEffects","_effect$tags","ActionMagnitude","_effect$tags2","_effect$tags3","requiresSpellsWithCooldown","requiresSpellsWithTemporaryEffect","_effect$tags4","TemporaryEffectDuration","getBonusEffects","effectExplanations","getBonusEffectExplanations","bonusString","getBonusEffect","Spellcrafts","_Spellcraft2","PrismBasedSpellcraft","_Spellcraft3","JewelBasedSpellcraft","_super2","MAX_VATS_PER_SPELL","getSpellcraftVatsForSpell","getVisibleSpellcraftsForSpell","getVisibleSpellcrafts","isSpellCompatible","canApplySpellcraftToSpell","allVats","vats","vat","transmutation","canLoadMultipleVats","removeSpellcraftFromVat","vatId","createNewVat","newId","isSpellcraftUnlocked","SpellcraftUnlocked","SynchroBonuses","SYNCHRO_ROWS","SYNCHRO_COLS","SYNCHRO_GRID_AMOUNT","isSynchroUnlocked","SynchroUnlocked","getCurrentSynchroStrategy","getSynchroPosition","y","_strategy","_strategy$grid$y","SynchroChangeListeners","getCurrentSynchroBonuses","element1","element2","offsetsToCheck","bonusCount","offsets","getTotalOccurrencesInSynchroGrid","_current$grid$x","_current$grid","_current$grid2","_current$grid2$x","calculateMaxOccurrencesInSynchroGrid","SynchroGridMax","findSynchroBonusForElements","bonus","getElement1","getElement2","hasNegativeSynchroBonusOnTile","currentElement","otherElement","disabledColorByThemeMemoized","disabledColor","_color","_color2","string","elementColorByTheme","getPrimaryButtonTextColor","DescriptionViewer","EffectViewer","effectText","getAllSections","scrollable","hideBottomResourceBar","scrollView","keepInMemory","hotkey","isBadged","_calculateIncomePerSe","_calculateIncomePerSe2","BoostingMachine","isBoostingUnlocked","areRitualsUnlocked","fullScreen","isBestiaryUnlocked","DEFAULT_SECTION_ORDER","sectionData","getAllMenuItems","section","getSectionInfo","sectionInfo","MAX_OPEN_TABS","useLayoutType","_useWindowDimensions","useWindowDimensions","getLayoutType","_state$options","_state$options2","wideLayout","showMenu","showSpellMenu","showEventsMenu","activeContentTabs","TooltipContext","containerWidth","EMPTY_TOOLTIP_CONTEXT","TooltipControlContext","setTooltip","clearTooltip","onMouseLeave","onMouseEnter","measurementId","onUnmountTooltip","TooltipDisplay","tooltipContext","windowDimensions","layout","_tooltipContext$posit","_tooltipContext$posit2","_tooltipContext$posit3","_tooltipContext$posit4","_tooltipContext$posit5","_tooltipContext$posit6","_tooltipContext$posit7","_tooltipContext$posit8","zIndex","left","bottom","minWidth","pointerEvents","backgroundColor","borderRadius","borderWidth","borderColor","maxWidth","TooltipPositionType","TooltipWrapper","_props$tooltipPositio","tooltipPositionType","tooltipPosition","screenDimensions","wrapperRef","measureAndSetTooltip","_wrapperRef$current","measure","pageX","pageY","tooltipId","RIGHT_OF_ELEMENT","LEFT_OF_ELEMENT","onMouseOver","onMouseOut","tooltipWrapper","ItemTile","lastTapTime","setLastTapTime","overriddenThemePrimary","overriddenThemeSecondary","inner","_props$borderColor","tile","quality","Badge","tooltipIdSuffix","TouchableOpacity","currentTapTime","onDoublePress","prevProps","nextProps","Buildings","STARTING_LAND","landCapTags","Land","getTotalLand","clearLandCache","getUsedLand","totalLand","building","getLandRequired","getBuildingAmount","getFreeLand","_state$run$buildings","_state$run$buildings$","getBuildingAmountTurnedOn","_state$run$buildings2","_state$run$buildings3","turnedOn","changeBuildingsTurnedOn","_state$run$buildings4","BuildingAmountListeners","Building","landTags","LandCost","baseLandRequired","getBaseLandRequired","BuildingSpell","costTags","costScaleTags","buildingName","getBuilding","canTurnOff","buildingAmountTurnedOn","buildingAmount","getResourceCost","currentAmount","baseCost","getBaseResourceCost","scale","getBaseResourceScale","finalCost","baseCostForKey","costScaleForKey","getDisplayEffect","landRequirement","freeLand","_state$world$maxFurni","_state$world$maxFurni2","buildingData","shouldNeverHaveDemolishBlockers","blockerBuildings","_demolishUnsafe","shouldNotCountForDemolishBlockers","resourceCost","getDemolishBlockers","amountToDemolish","canDemolish","CheckBox","Switch","checked","onValueChange","ResourceRowMemo","row","inlineRow","itemOrResource","switch","costValue","CostViewer","rows","resourceCap","resourceInfo","itemRows","_props$items","itemCost","notMet","IconButton","_props$disabled","PaperIconButton","iconColor","containerColor","PlusMinusAllocator","disableMinus","disablePlus","onPressMinus","onPressPlus","minusButton","plusMinusAllocatorButton","size","plusButton","marginHorizontal","plusMinusAllocatorButtonInner","plusMinusAllocatorIcon","SpellWizardsInfo","manaCostPerSec","helperText","wizardsAssignedComponent","newRule","strategyRule","allocator","GameStartupListeners","useExpandedUIFromContext","defaultValue","_state$options$expand","stateValue","setStateValue","ActionContainer","_state$run$autoPurcha","isFree","buildingAmountOn","capIsEnough","isCapEnough","_useExpandedUIFromCon","_useExpandedUIFromCon2","expanded","setExpanded","descriptionContainer","descriptionContents","descriptionTextContainer","landContainer","costContainer","CostRow","turnOffContainer","amountActiveText","turnOnRow","turnOnQuantityContainer","plusMinusContainer","demolish","demolishBlockers","demolishContainer","shouldHideDemolish","canSpam","furnitureList","blocker","canAutoPurchase","isAutoPurchaseEnabled","autoPurchaseEnabledToggle","_state$run$autoPurcha2","autoPurchaseContainer","preConfirmation","setPreConfirmation","onPressCallback","requireConfirmation","isAutoPurchasing","onPressExpand","button","buttonContainer","actionName","autoPurchase","showWizards","actionContainer","buttonRowContainer","buttonContainerView","TouchableWithoutFeedback","expandContainer","Entypo","split","quickbarButtonContainer","cursor","buttonTitle","android","fontFamily","smallButtonTitle","buttonContainerSmall","capTooLowText","spellButtonTitleContainer","spellButtonTitleOnlyContainer","spellButtonCostContainer","spellManaIcon","Divider","PaperDivider","GameStateFreezer","Provider","ThemeProvider","CategoryContainer","_props$initiallyExpan","initiallyExpanded","isExpanded","setExpandedCallback","titleStyle","categoryTitle","contentContainerStyle","dividerStyle","categoryDivider","dividerColor","header","categoryHeaderExpand","paddingTop","categoryHeader","ActionSubcategoryContainer","_actionsBySubcategory","actions","actionNamesStr","actionContainers","underCategoryPadding","ActionsContainer","actionCategories","getSubcategoriesByArea","_createElement","Boosts","bonusText","_getVisibleActionsFor","_getVisibleActionsFor2","visibleBoost","getTotalBoostDescription","getBoostsBonusText","playerHasBoosts","hasBoosts","campusContainer","sanitizeImageSourceForElectron","EnemySpriteTile","LinearGradientComponent","LinearGradient","sprite","backdropColor","gradient","image","getTooltipXPosition","childrenX","childrenWidth","tooltipWidth","center","overflowLeft","Dimensions","overflowRight","getTooltipYPosition","_ref4","childrenY","childrenHeight","tooltipHeight","overflowBottom","getTooltipPosition","_ref5","measured","fullView","pressContainer","textInvisible","hitSlop","_React$useState","_React$useState2","setVisible","_React$useState3","_React$useState4","measurement","setMeasurement","showTooltipTimer","hideTooltipTimer","childrenWrapperRef","touched","isWeb","subscription","Module","_Module$addEventListe","eventName","handler","removed","addEventListener","remove","removeEventListener","handleTouchStart","handleTouchEnd","hide","mobilePressProps","webPressProps","onHoverIn","onHoverOut","isTextVisible","innerSurface","Surface","onLayout","nativeEvent","_x","_y","testID","_Fragment","Portal","Pressable","CombatStatsRowMemo","hideText","valueMax","PlayerCombatStatsViewer","maxHPUnit","attackUnit","attackDelayUnit","defenseUnit","accuracyUnit","dodgeUnit","critChanceUnit","combatStatsDisplayObject","maxHPExplanation","attackExplanation","attackDelayExplanation","defenseExplanation","accuracyExplanation","dodgeExplanation","critExplanation","CombatStatsViewer","showCurrentHP","combatStats","EnemyCombatStatsViewer","hpRegen","obfuscateValues","BestiaryEnemyContents","unlockedFloors","bestiaryState","foundInDungeons","getExplorationPossibilities","possibility","_possibility$transfor","_possibilities$find$w","_possibilities$find","possibilities","getBaseExplorationPossibilities","weight","_possibility$transfor2","totalWeight","getFloorName","dungeonFloorName","showDrops","dropsText","loot","_loot$params","lootChancePct","v","cumulativeKills","cumulativeLosses","generalText1","generalText2","showEnemyStats","showTip","getTips","tips","contentContainer","column","categoryContents","BestiaryEnemyContainer","helpContainer","accessibilityHint","topRowContainer","topContainer","enemyName","bossText","collapsed","descriptionViewer","disabledStorylineText","BestiaryContainer","expandedEnemyId","setExpandedEnemyId","setEnemyCallback","allEnemies","enemyString","enemyContainers","enemyContainer","Bestiary","bestiaryContainer","headerContainer","valueText","valueTextLong","captionText","ItemTagEnum","QuickbarItem","occurrence","isActive","Consumable","getCooldownLeftSec","amountText","cooldownText","_this$getItem$getPrim","getPrimaryAction","_this$getItem$getPrim2","doActionMemoized","mem","QuickbarActionImpl","getAction","getCurrentQuickbar","_state$world$quickbar","addToQuickbar","isInQuickbar","isQuickbarFull","removeFromQuickbar","stringifiedData","translateItemTag","Material","Equipment","QuestItem","saleActionOne","salePrice","saleActionMany","isAll","totalAmount","requireConfirm","quickbarAction","addItemToQuickbar","getAmountNeededForCombining","ItemsNeededForCombining","combineActionOne","_params$itemQuality","_params$itemQuality2","combineActionMany","_params$itemQuality3","_params$itemQuality4","INITIAL_MAX_ITEM_QUALITY","MAX_ITEM_QUALITY_TAGS","ItemQualityMax","Item","getCachedBaseItemEffects","getBaseItemEffects","_itemOccurrenceCache","getMemoizedItemOccurrence","explanationParams","_tags","itemTag","ItemEffect","neutralValue","basePrice","ItemSalePrice","getTransformationTags","_params","getSalePrice","remainingCoinCap","canSellLess","_params$itemQuality5","extraActions","isItemQualityValid","getMaxItemQuality","amountOfItem","neededItemsToCombine","previousValue","_params$params$itemQu","_params$params","_params$params$itemQu2","_params$params2","bonusFn","memoizedEquip","EquippableItem","_Item","attackTags","defenseTags","maxHPTags","manaRegenTags","maxManaTags","PerItemCap","attackDelayTags","accuracyTags","dodgeTags","critTags","getItemEffects","bonuses","getAttackBonusBase","getDefenseBonusBase","getMaxHPBonusBase","manaRegen","getManaRegenBonusBase","getMaxManaBonusBase","getAttackDelayBonusRatioBase","getPlayerAccuracyBonusBase","getPlayerDodgeBonusBase","getPlayerCritChanceBonusBase","getBaseExtraItemEffects","getEffectBase","_effects$attack","_effects$defense","_effects$maxHP","_effects$manaRegen","_effects$maxMana","_effects$attackDelay","_effects$accuracy","_effects$dodge","_effects$crit","getItemEffectExplanations","bonusStrings","prefix","statIcon","bonusEffect","getEffectExtra","forEachEquippedItem","each","equippedItemHand","equippedItemBody","equippedItemAccessory","additiveTransform","totalIncome","_totalIncome$Resource","getItemEffect","totalMultiplier","capBonus","maxManaBonus","memoizedPrimary","active","refreshedAction","getPouchItemAction","getUsesPerCombat","doPouchItemEffect","PouchItem","_EquippableItem","getUsesPerCombatTags","PouchItemUses","isStunned","hasUsedUpPouchItemThisCombat","getUsesPerCombatBase","ItemTags","tagRow","tagStyle","tagTextStyle","ItemInfo","_props$itemStack$item","usesPerCombat","usesPerCombatExplanation","getUsesPerCombatExplanation","itemDetailsContainer","main","showTile","TransmuteSpellInfo","totalOwnedText","isCraftable","concatenatedRequirements","cannotCastText","getMainExp","expGainText","costTextContainer","actionRow","cannotCraftText","TransmuteSpellDetails","canTransmute","maxCraftAmount","transmuteCallback","transmuteMaxCallback","craftMax","transmuteIntermediateCallback","craftIntermediate","transmuteMaxVisible","transmuteIntermediateVisible","isCraftIntermediatePotentiallyPossible","transmuteIntermediateEnabled","isCraftIntermediatePossible","craftingDetailsContainer","gap","actionButtonContainer","inventoryFullContainer","fontStyle","SpellcraftInfo","SpellcraftDetails","assignCallback","assignSpellcraftToVat","isAlreadyAssigned","hasError","ItemGridElementUsage","ItemGridTooltip","location","COMPENDIUM","itemGridElement","itemOrSpellId","SPELLCRAFT","ItemGridTile","accessibilityMarker","accessibilityHidden","accessibilityElementsHidden","disableTooltip","_itemGridElement$para","ItemGrid","estimatedMaxHeight","topContainerStyle","scrollViewStyle","overrideMaxHeight","maxHeight","insideContainerStyle","gridContainer","ScrollView","nestedScrollEnabled","onPressItem","onDoublePressItem","DropDownIcon","MaterialIcons","Picker","selectedValue","RNPicker","inputAndroidContainer","paddingRight","inputAndroid","iconContainer","viewContainer","placeholder","disablePlaceholder","fixAndroidTouchableBug","Icon","useNativeAndroidPickerStyle","dropdownIconColor","dropdownIconRippleColor","textInputProps","maxLength","UIContext","getUIState","setUIState","useUIStateFromContext","context","initialValue","_context$getUIState","ITEM_TAG_ORDER","Transmute","uiContext","selectedElement","setSelectedElement","_useUIStateFromContex","_useUIStateFromContex2","selectedTag","setSelectedTag","currentElementLevels","castableSpells","DeepCavernsUnlocked","LostForestUnlocked","tagSet","add","from","tagButtons","UtilityPicker","picker","sortedCastableSpells","firstTagA","firstTagB","_useUIStateFromContex3","_useUIStateFromContex4","hideLocked","setHideLocked","toggleLockedCallback","_useState3","_useState4","filterText","setFilterText","_useState5","_useState6","filterTextTemp","setFilterTextTemp","timeout","itemGridElements","itemGridElementsJSON","isAnyLocked","itemGridElementsFiltered","itemGridElementsFilteredJSON","selectedSpell","itemGrid","details","detailsContainer","clearFilter","tagPickerContainer","checkboxContainer","TextInput","dense","onChangeText","buttonGroupContainer","buttonGroupButtonContainer","checkboxText","ItemCompendiumDetails","howToObtainStrings","lootInfo","howToObtainText","howToObtain","howToObtainComponent","ItemCompendium","visibleItemInfos","sortedItemInfos","itemInfo","selectedItemInfo","Compendium","selectedTab","setSelectedTab","buttons","buttonSelectors","SegmentedButtons","soundMap","menuClick","AudioManager","sampleMap","_load","Audio","all","audioId","audioSample","audioSound","loadAsync","replayAsync","cleanup","oldEventOccurrenceIds","randomEvents","registerRandomEventTrigger","eligible","getParams","PITY_COUNTER_THRESHOLD","PITY_COUNTER_SECOND_THRESHOLD","PITY_COUNTER_VARIANCE","PITY_MULTIPLIER","PITY_MAX_PER_RUN","registerPity","nextPitySec","randomEventWeightTags","RandomEventWeight","triggerRandomEvent","eventsThatApply","randomEvent","sumToNow","eventRoll","getStorylines","debugRandomEvents","chancesPerEvent","loadRandomEventTriggers","_state$run$pityEnable","isInPity","elapsedSec","secsPlayed","periodMultiplier","SAVE_TO_FILE_SUPPORTED","LOAD_FROM_FILE_SUPPORTED","_loadSaveFromFile","_yield$window$showOpe","showOpenFilePicker","fileHandle","file","getFile","resultContents","unserialized","_loadTranslationsFromFile","_yield$window$showOpe3","saveToFile","_saveToFile","serializedData","openURL","Debug","events","selectedEvent","setSelectedEvent","eventButtons","selectedStoryline","setSelectedStoryline","pickerStoryline","storylineButtons","complete","activateBonus","newPlayerContextState","setNewPlayerContextState","_useState7","_useState8","fixingPlayerContextState","setFixingPlayerContextState","overridePlayerContext","deserializedJSON","_oldState","_useState9","_useState10","transformDebugInput","setTransformDebugInput","_useState11","_useState12","transformDebugOutput","setTransformDebugOutput","calculate","debugOutput","playSoundCallback","getDocumentAsync","FileSystem","readAsStringAsync","uri","console","warn","Card","onSubmitEditing","multiline","contentStyle","Challenges","getCurrentChallenge","getVisibleChallenges","ChallengesUnlocked","areChallengesUnlocked","challenge","Row","rowCaption","numberOfLines","caption","EndingDataViewer","_CombatClasses$getByI","_CombatClasses$getByI2","_Challenges$getByIdNu","_endingData$totalReti","_endingData$totalReti2","endingData","totalDuration","moment","totalTimePlayed","thisWorldDuration","totalTimePlayedThisWorld","thisRunDuration","totalTimePlayedThisRun","totalActiveDuration","totalActiveTimePlayed","totalActiveDurationThisWorld","totalActiveTimePlayedThisWorld","totalActiveDurationThisRun","totalActiveTimePlayedThisRun","thisRunTimePieces","timePiecesConsumedThisRun","thisWorldTimePieces","timePiecesConsumedThisWorld","totalTimePieces","totalRealDuration","totalRealWorldTimePlayed","totalRealDurationThisWorld","totalRealWorldTimePlayedThisWorld","totalRealDurationThisRun","totalRealWorldTimePlayedThisRun","combatClassText","primaryElementText","primaryElementLevelsText","primaryElementLevel","primaryElementLevelOnEnding","secondaryElementLevel","secondaryElementLevelOnEnding","challengeText","challengeId","worldsCreated","isNewGamePlus","showWorldStats","worldModifiers","sheerPower","storylineOracle","blazingSpeed","worldDifficulty","storylineCount","format","totalRetirements","mpl","productionMultiplier","completedStorylines","totalStorylines","Ending","_props$overrideEnding","overrideEnding","dividerContainer","congratsContainer","close","ObtainedEnhancementsView","_alreadyObtainedEnhan","alreadyObtainedEnhancements","purchasedEnhancements","isPurchased","sortedEnhancements","_enhancement$getAreas","subareas","subarea","getAllPurchasedEnhancements","enhancementName","enhancementEffect","EnhancementConfigView","autoPurchaseCallback","Enhance","purchasedComponent","showAutoPurchase","Ritual","_costTags","PerRitualCost","getCachedBaseRitualEffects","getBaseRitualEffects","ritualEffectParams","ritualEffectExplanationParams","baseName","ritualName","getBaseCorruptionCost","ritualId","getDeathLevelRequirement","_state$run$activeRitu","RitualEffect","necromancyRitual","_Ritual","NecromancyRitual","attackMagnitude","regenMagnitude","getRitualEffects","getRitualEffectExplanations","attackMultiplier","regenMultiplier","regenExplanation","AccessibilityContext","announceForAccessibility","ProgressBar","indeterminate","_ref$progress","progress","_ref$visible","animatedValue","timer","Animated","passedAnimatedValue","setWidth","prevWidth","setPrevWidth","indeterminateAnimation","animation","startAnimation","toValue","useNativeDriver","isInteraction","setValue","start","stopAnimation","stop","newWidth","tintColor","trackTintColor","isV3","setColor","alpha","rgb","progressBar","translateX","interpolate","inputRange","outputRange","scaleX","accessibilityState","busy","accessibilityValue","overflow","EnemyActionDisplay","currentEventOccurrenceId","currentEnemyAction","_state$run$exploratio4","getEnemyActionProgress","accessibilityContext","progressBarContainer","markdownContainer","idleTextContainer","CombatActionResultDisplay","_props$action","_props$action2","_useMemo","auxText","auxTextStyle","auxTextCritical","auxTextDamage","auxTextHealing","_useMemo2","damageAnim","opacityAnim","bounciness","auxTextContainer","translateY","RNText","HPBar","mountTime","actionTarget","actionKeys","actionResults","lastTime","displays","actionIdx","bar","progressBarText","empty","overlaidText","shortcut","EnemyHPBar","inCombat","ActiveMark","_props$themeOverride","themeOverride","activeMark","SpellElementTag","spellElement","elementTextContainer","dark","spellElementBadgeText","SpellNameText","SpellViewButtonContents","_spell$getCost","_spell$getCost$resour2","buttonTitleStyles","spellDisplayName","spellCost","spellButtonTitleTitleOnlyContainer","SpellViewMemoized","showAddToQuickbar","displayDescription","displayEffect","_cacheByArbitraryVers","_cacheByArbitraryVers2","elementText","elementContainer","mainExp","expText","cooldownContainer","toggleFavorite","addFavoriteSpell","favoritesButton","Ionicons","elementTheme","buttonOnPress","buttonContents","isMinimal","tooltipExtra","buttonLabelStyle","buttonContentStyle","addToQuickbarButton","addActionToQuickbar","calculatePermaCastStuff","isPermaCastAllowed","PermaCastUnlocked","permaCastManaCost","permaCastDelay","permaCastWizardPowerNeededForSpell","permaCastWizardsNeededForSpell","wizardPowerProductionPerWizard","wizardPowerNeeded","permaCastWizardsNeeded","hasEnoughMaxManaForPermacast","permaCastButton","totalWizardsNeededBefore","currentWizards","totalWizardsNeededAfter","removeSpellFromPermaCast","totalWizardsNeeded","addSpellToPermaCast","empowerButton","extraActionsRow","permaCastParams","sec","wizText","wiz","permaCastText","empowerText","extrasText","extrasExplanation","toggleCollapsed","descriptionRow","SpellView","disabledActionText","DragHandle","importantForAccessibility","dragHandle","drag","FavoriteSpellsContainerInside","renderItem","ScaleDecorator","deleteButton","keyExtractor","categoryContainer","DraggableFlatList","onDragEnd","FavoriteSpellsContainer","deleteButtonInner","SpellElementSelectorItem","_props","selected","themeForElement","_props$dividerColor","itemContainerStyle","SpellElementSelector","SpellsContainerInside","_elements$","currentElementKey","uiKey","setCurrentElement","expandedSpells","setExpandedSpells","expandedSpellsRef","currentElementSpells","_expandedSpellsRef$cu","boundToggleCollapsed","spellActionContainers","spellArray","spellElementPicker","currentElementSpellsString","hasAllSpellsExpanded","_expandedSpells$spell","expandCollapseAll","expandedSomething","hideTitle","emptyTitleContainer","SimpleLineIcons","magicWand","onlyBySchool","schoolRowContainer","schoolContainer","noSpellsContainer","noSpellsText","SpellsContainer","hideRecent","spellsContainer","schoolButton","schoolTitleContainer","titleContainer","schoolTitleTextContainer","nuxText","KeyboardListener","EquippedPouchSlot","useAction","usesLeft","_state$run$exploratio3","uses","getUsesLeftForPouchItem","_equippedItem$params","ExplorationPouch","slotComponents","autoUsePouchToggle","HITSLOP","TemporaryEffectRowMemo","viewStyle","boostText","TemporaryEffectsViewer","_props$target","maxElements","temporaryEffectObject","timeLeftSec","skipPermacast","temporaryEffectName","familiarPrefix","getIcon","andMoreComponent","notShownElements","accessibilityHeader","QuickbarIndexSelector","disableBackArrow","disableForwardArrow","slotNumber","goBack","goForward","backButton","quickbarSelectorButton","forwardButton","barText","QuickbarActionContainer","getTransform","toQuickbarData","QuickbarContainer","quickbarData","getQuickbarActions","_getIndex","getIndex","quickbarKeypressCallback","ev","ctrlKey","mainContainer","actionsContainer","actionsScroll","emptyText","infoContainer","mainButton","EquipmentSetButtons","setNumber","equipmentSetButtonCallback","_state$run$equipmentL","_state$run$equipmentL2","_equipment$slot","currentItemOccurrence","loadEquipmentLoadoutFromPosition","equipmentSetButtons","equipmentSet","_equipmentSet$equipme","_equipmentSet$equipme2","emptyIcon","setButton","number","iconsContainer","equipmentSetButtonsRow","setText","SynchroGridSmallDisplay","_state$world$synchro$","gridIndex","j","currentRow","saturate","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","SynchroGridSelector","setCurrentSynchroGrid","SynchroGridSelectors","memo","selectors","AutocastLoadoutLoadContainer","_state$global$autocas","loadoutObjects","loadPosition","strategyToLoad","oldStrategy","oldRuleStatuses","permaCastWizards","_oldRuleStatuses$oldR","_oldRuleStatuses$oldR2","oldRule","oldRuleId","_oldRuleStatuses$oldR3","_oldRuleStatuses$oldR4","oldRuleProgress","newStatus","loadAutocastStrategy","loadoutsLoadRow","loadTextContainer","loadoutObject","loadButton","noLoadoutsText","StrategyContainer","_state$global$autocas2","_state$global$autocas3","lastLoadoutUsed","autoNextFloorCallback","autoBossCallback","fullyHealedCallback","equipmentContainer","autocastContainer","lastLoadedContainer","ExplorationBottomComponent","openedTab","setOpenedTab","useSafeAreaInsets","isPaused","onPause","onKeyboard","shiftKey","mainComponent","mainScrollView","containerHeight","quickbarScrollView","tabsContainer","tab","borderTopLeftRadius","borderTopRightRadius","ExplorationProgressDisplay","FamiliarActionDisplay","currentFamiliarAction","ready","_state$run$exploratio5","getFamiliarActionProgress","ActivityIndicator","FamiliarHPBar","_getCurrentCompanionC","_getCurrentCompanionC2","FamiliarSpriteTile","showUndead","showDead","PlayerActionDisplay","getPlayerActionProgress","PlayerHPBar","PlayerMessageLog","getMessageLog","logItem","_logItem$accessibleMe","ResourceItemMemo","isCapped","textContents","BottomResourceViewer","resourceKeys","ExplorationRow","isBossUnlocked","isFloorCompleted","noneRow","noneFloorText","noneStatusRow","noneIcon","_floor$getNextFloor","ExplorationDungeon","ExplorationNone","allDungeons","noneContent","topRow","ExplorationMain","_dungeonFloor$getNext","_uiContext$getUIState","dungeonTitle","currentEnemySprite","toUnlockBoss","getExplorationSuccessesForBoss","checkmark","hasBoss","canMoveToNextFloor","fightingBoss","isExplorationPaused","togglePauseExploration","resumeExploration","pauseExploration","pauseExplorationButton","explorationStatusContainer","centerContent","persistentScrollbar","hasCompanion","hasCurrentCompanion","currentCompanionSprite","isCompanionReady","flipCompanionRow","getBackdropColor","currentExplorationBottomTab","lastAnnounced","setLastAnnounced","hasFamiliar","isCompanionUndead","shouldShowGrayscaleFamiliar","buttonRow","exitButtonContainer","summonContainer","playerContainer","switchFamiliarRowContainer","switchFamiliarRow","runAway","unlockBossContainer","unlockBossTextContainer","setContainerHeight","wholeContainer","restOfScreen","playerMessageLogContainer","bottomComponentContainer","Exploration","arrowBack","moveRow","dungeonButton","noneDungeonContentsContainer","noMoreStorylines","SlimeDrop","Wildgrass","_Enemy","Slime","FAMILIAR_EXP_REQUIREMENT_MULTIPLIER","cachedStats","FAMILIAR_MAX_LEVEL_TAGS","MaxFamiliarLevel","FamiliarClass","getStats","_options$forcedTarget5","_options$accuracyMult5","_options$tags5","familiarStats","_options$critChanceMu4","summonAction","standardFamiliarAttackEffect","onlyStat","baseStats","getPerLevelStatMultiplier","statFromLevel","levelEstimate","getMaxLevel","Idle","slimeFamiliar","_FamiliarClass","SlimeFamiliar","familiarCrate","_Building","FamiliarCrate","buildFamiliarCrate","_BuildingSpell","BuildFamiliarCrate","FamiliarMessageLog","_getFamiliarData","getFamiliarMessageLog","DungeonFloorSelect","dungeons","dungeonFloors","floorsByDungeon","filteredFloors","floorsView","dungeonId","onSelect","bigContainer","flexGrow","buildingAmt","familiarAmt","create","FullscreenModal","Modal","onDismiss","overlay","FamiliarRow","setCollapsed","familiarLevel","familiarMaxLevel","statusString","auto","explorationProgressPct","setIsModalSelectorOpen","showingDungeonSelector","setShowingDungeonSelector","showModal","hideModal","confirmRelease","setConfirmRelease","releaseFamiliar","deleteFamiliar","autoExploreCallback","companionCallback","newCompanionData","setCurrentCompanion","explorationCallback","rowContainer","expandTouchable","familiarName","currentExp","toNextLevel","getExpForNextLevel","optionRow","messageLogContainer","FamiliarsComponent","familiarIds","setAllFamiliarsToAutoExplore","setAllFamiliarsToExplore","hintProgress","loadoutsContainer","campusHintWarning","HelpCategory","translateHelpCategory","helpCategory","Introduction","ScreensOverview","ElementsOverview","GameFeatures","Wizards","TipsAndTricks","Helps","getVisibleHelps","tempIds","HelpContainer","showBadge","badgeContainer","_tempIds$split","_tempIds","oldIds","newHelps","idsToNotify","helpId","HelpsCategoryContainer","expandedHelp","helps","setHelpCallback","helpNotifications","helpNameString","helpContainers","HelpsContainer","setExpandedHelp","markNotificationAsRead","allHelps","helpsByCategory","_helpsByCategory$help","getVisibleHelpsByCategory","categoryContainers","HelpScreen","hintsDatabase","pushHint","hint","Home","currentHint","getFirstHint","menuVisible","setMenuVisible","toggleMenuVisible","menuButton","toggleAllAutoBuildAction","Menu","shouldEnableAll","_action$getAreas$Acti","_action$getAreas$Acti2","_action$getAreas$Acti3","_action$getAreas$Acti4","menuDismiss","menuActions","menu","anchor","onScroll","scrollRef","hintContainer","hintContents","hintContentsText","PaperCard","LoadGameContainer","loadMessage","setLoadMessage","loadSaveContents","setLoadSaveContents","loadSaveFromDeserializedData","deserializedData","currentAppVersionTimestamp","versionCompare","v1","v2","maxDepth","v1Parts","v2Parts","_v1Parts$i","_v2Parts$i","v1Part","v2Part","compareVersions","compatibleData","importSavefile","showByFile","importSavefileFromFile","loadSaveFromFile","_t","Intro","_state$world$totalTim","_state$global$newGame","selectedMPL","showLoadGameContainer","loadText","primarySchoolText","elementDescriptionMap","selectedClassId","setSelectedClassId","classes","combatClass","getSelectableCombatClasses","showClassSelection","selectedClass","selectedSecondaryElement","setSelectedSecondaryElement","selectedSecondaryMPL","secondarySchoolText","showSecondaryElementSelection","DualFlexibilityStoryline","selectedChallengeId","setSelectedChallengeId","challenges","showChallenges","selectedChallenge","allowMovingForward","UtilityCard","RadioButton","combatClassEffect","completed","objective","getObjective","reward","getReward","startButton","selectPrimaryElement","selectSecondaryElement","runGameStartupListeners","buttonGroupText","mplText","EquippedItemSlot","actualEquippedItem","unequipAction","showAsDisabled","EquippedItems","components","onPressEquippedItem","equipmentRow","EquippedPouch","saleStallTags","TimePerAutoSalePerStall","getSaleStallSecsPerSale","secsPerSaleUnit","getSaleStallSecsPerSaleExplanation","saleStall","SaleStall","timeExplanation","getSaleStallPriceMultiplier","multiplierExplanation","getSaleStallPriceMultiplierExplanation","BuildSaleStall","isMarketUnlocked","SaleStallsUnlocked","saleStallRevenueTags","SaleStallRevenue","multiplierUnit","buildSaleStall","autosellOneItem","currentlyInInventory","distinctItemCount","_sellAction$transform","selectedItem","sellAction","getSellOneAction","FromSaleStalls","isItemBeingAutosold","disableAllAutosold","refreshedPrimary","getFamiliarAction","doFamiliarItemEffect","FamiliarItem","numberInInventory","canUseOnFamiliar","shouldConfirm","_TransmutationSpell","FamiliarTransmutationSpell","ItemDetailsAction","pressedOnce","setPressedOnce","extraOnPress","familiarAction","ItemFamiliarModalContents","onClose","ItemDetails","_saleActions$map","_combineActions$map","_extraActions$map","isFamiliarItem","familiarItemModalVisible","setFamiliarItemModalVisible","dismissFamiliarItemModal","familiarPrimaryAction","disableSelling","primaryAction","showQuickbar","getQuickbarAction","getExtraActions","onCombineAllExtraPress","_props$itemStack$item2","newQuality","newOccurrence","selectItem","combineAction","extraPress","onAutosoldPress","toggleItemAutosold","rowGap","itemFilterer","itemSorter","_b$itemOccurrence$par","_a$itemOccurrence$par","itemA","itemB","getNumericId","getItemGridElement","InventoryItems","selectedTagString","setSelectedItem","sortedInventory","paramsJSON","itemDetails","sellLowQualityAction","removeAllFromSaleStallsAction","showExtraActions","isFullBleed","detailsContainerPadding","Inventory","fullBleedPadding","equippedItemsContainer","topButtons","craftButton","OrientationLockManager","Loading","loadingAnim","easing","Easing","StatusBar","SafeAreaView","safeAreaContainer","ZOOM_SUPPORTED","ZoomChecker","webFrame","setZoomFactor","FPS_DATA","ZOOM_DATA","useEventTagToggle","_stateRef$current","oldState","innerTag","BottomMenuToggle","_stateRef$current2","innerSection","useHiddenFromBottomMenuToggle","toggleMenuRow","toggleMenuTextContainer","toggleMenuCheckboxContainer","MenuSection","_sectionInfo$isVisibl","MenuSectionsOrder","Options","copyToClipboardError","setCopyToClipboardError","copyToClipboard","Clipboard","setStringAsync","savedData","getStringAsync","targetFpsChange","zoomChange","elementOverrideChange","elementOptions","hideBottomResourceViewerToggle","hideChannelingSpellsFromHomeToggle","hideDamageEffectsToggle","doNotUseNativeDriverToggle","darkModeToggle","colorSpellToggle","compactUIToggle","expandedUIToggle","hideTooltipsToggle","wakeLockCallback","enableBottomMenuCallback","leftHandedModeCallback","putCastSpellOnBottomMenuCallback","doNotShowEventsCallback","eventTagLevelUpAlreadyReachedToggle","eventTagLevelUpEmptyToggle","eventTagLevelUpAllToggle","eventTagInconsequentialRandomEventsToggle","INCONSEQUENTIAL_RANDOM_EVENT","eventTagMainQuestSeenBeforeEventsToggle","eventTagBossFightToggle","eraseText","setEraseText","eraseGame","saveToFileCallback","hasTranslations","translationMessage","setTranslationMessage","importTranslationFileCallback","loadTranslationsFromFile","clearTranslationFileCallback","bottomMenuToggles","labelColor","performanceCategory","targetFpsDropdownContainer","targetFpsPicker","hideDamageEffectsContainer","keepAwakeCategory","hideEventPopupsCategory","eventPopupsContainer","bottomMenuCategory","hideBottomMenuContainer","themingAndUICategory","uiColorPicker","elementOverrideContainer","saveFileCategory","loadFileCategory","languageCategory","eraseSavedDataCategory","buttonColor","textColor","sliderContainer","sliderTextContainer","saveButton","loadMessageContainer","inputContainer","paddingLeft","bottomMenuCustomizationContainer","Retirement","allElementLevels","eachElement","allStorylines","isCompletedThisRun","modifiedState","retiredState","newExpMultiplier","newProductionMultiplier","oldExpMultiplier","oldProductionMultiplier","expDeltaPct","productionDeltaPct","newStorylines","storylineBonusMessage","storylineList","storylineName","storylineBonus","startingExp","startingLevel","startingExpSecondary","startingLevelSecondary","retirementEffects","newExp","newProduction","secondaryElementText","hasClicked","setHasClicked","showOngoingEventsWarning","showMPLTooLowWarning","showMPLTooHighWarning","warning","CorruptionDetails","isHPPenaltyActive","isExpPenaltyActive","isTransmutePenaltyActive","corruptionAmount","corruptionCap","penalties","penaltyText","corruptionExplanation","corruptionPenalties","RitualDetails","ritualDescription","ritualEffect","corruptionCost","getCorruptionCost","toggleRitual","turnOff","turnOn","RitualView","effectContainer","effectSubcontainer","RitualsView","ritualsIdString","ritualContainers","ritualContainer","RitualsComponent","spellcraftingVat","SpellcraftingVat","buildSpellcraftingVat","BuildSpellcraftingVat","SpellSelectSpellButton","onSpellPress","SpellSelect","_keysOf","_spellsByElement","setSpellId","selectedSubcategory","setSelectedSubcategory","spellsToShow","onSpellSelect","dependencies","hasMounted","useComponentDidUpdate","subcategoryPickerComponent","spellButtons","vatAmt","SpellcraftRow","spellcraftData","spellcraftName","spellcraftSpell","subtitle","showingSpellSelector","setShowingSpellSelector","confirmDestroy","setConfirmDestroy","destroyVatCallback","destroyVat","setSpellCallback","assignSpellToVat","removeSpellcraftCallback","selectedSpellcraft","modal","_spellcraftSpell$getS","SpellcraftsComponent","vatIds","convenienceStoryline","EssenceCatalyst","catalystTags","CatalystEffectivity","catalystEffectivityParams","effectPct","getPerCatalystBonusMultiplier","getPerCatalystBonusMultiplierExplanation","essenceCatalyst","buildEssenceCatalyst","BuildEssenceCatalyst","CatalystsUnlocked","BASE_REGEN","getManaRegenPerSec","ManaSpout","effectUnit","manaRegenPerSec","manaSpout","buildManaSpout","BuildManaSpout","ManaSpoutsUnlocked","EssenceStorage","perBuildingCapTags","PerBuildingCap","perBuildingCapParams","perBuildingCapExplanationParams","getPerStorageBonusCap","getPerStorageBonusCapExplanation","_getDisplayEffectUncached","essenceStorage","buildEssenceStorage","BuildEssenceStorage","StoragesUnlocked","getMaxManaBonus","getMaxManaBonusExplanation","manaShard","ManaShard","buildManaShard","BuildManaShard","ManaShardsUnlocked","copperOre","CopperOre","transmuteCopperOre","TransmuteCopperOre","poisonDoTAmountTags","PoisonDoTAmount","_temporaryEffectData$","magnitude","getDamagePerSec","totalDamageOld","noxiousCloak","NoxiousCloak","EvolvedSlime","airborne","Airborne","resistAttackSpell","ResistAttackSpell","damageMultiplier","resistAutoAttack","ResistAutoAttack","berserk","Berserk","damageMagnitude","wet","Wet","chilled","Chilled","cloakOfFlames","CloakOfFlames","Corrosion","corrosionDoTAmountTags","CorrosionDoTAmount","corrosion","cursed","Cursed","disease","Disease","divineImmunityTemporaryEffect","DivineImmunityTemporaryEffect","ResistElementBase","SilenceElementBase","loadElementalSilence","frail","Frail","frozen","Frozen","frozenProtection","_TemporaryEffect2","FrozenProtection","postFrozenProtectionDurationTags","PostFrozenProtectionDuration","grounded","Grounded","guard","Guard","paralyzed","Paralyzed","petrified","Petrified","poisonImmunity","PoisonImmunity","seared","Seared","shapeshifted","Shapeshifted","what","shrunken","Shrunken","commonBuff","StatusImmunityBase","ALLOWED_STATUS_IMMUNITY_EFFECTS","statusImmunity","StatusImmunity","stunned","Stunned","stunProtection","StunProtection","loadStunning","stunDuration","PostStunProtectionDuration","weakened","Weakened","AttackMultiplier","wizardDisarray","WizardDisarray","isHealingPossible","loadCommonTemporaryEffects","_effect$params","commonDoTAmount","effectObject","totalValue","_data$params$commonBu","_data$params","_data$params$commonBu2","multiplierStr","_data$params$commonBu3","_data$params2","_data$params2$commonB","commonBuffs","notClearedEffects","_params$tags","loadWet","loadChilled","loadFrozen","loadSeared","loadDisease","loadGrounded","loadAirborne","Reflected","damageReflected","loadFrail","loadBerserk","loadPetrified","loadElementalProtection","loadParalyzed","AttackSpell","loadSpecificStatusImmunity","loadDivineImmunity","EquipmentTransmutationSpell","HealthPotion","_PouchItem","hpHealTags","hpHeal","getHPHealAmount","healAmt","healthPotion","transmuteHealthPotion","_EquipmentTransmutati","TransmuteHealthPotion","elementalShardWater","wildgrass","cotton","Cotton","transmuteCotton","TransmuteCotton","Goblin","MutatedFish","VenomPowder","PoisonousToad","SewerFish","encounterEnemy","enemyLevel","successRate","explorationBossRequirementTags","ExplorationBossRequirement","DungeonFloor","_getExplorationSuccessesForBossBase","forcedRoll","explorationRoll","boss","getExplorationPossibilityTags","explorationPossibilities","succeedWeight","failWeight","levelSum","ExplorationWeight","antidotePotion","AntidotePotion","transmuteAntidotePotion","TransmuteAntidotePotion","elementalShardPoison","venomPowder","GoblinSharpshooter","lastActionResult","SewerFly","Sicklefish","SludgeMass","EtherealEelExtract","CombatSpellBase","canUseOutsideOfCombat","HasteTemporaryEffect","attackDelayRatio","AttackDelayMultiplier","BASE","haste","_CombatSpellBase","Haste","log2","magnitudeExplanation","durationExplanation","EtherealEel","aoeEnemyAttackEffect","GoblinDoctor","DoubleTroubleTemporaryEffect","BotanicalSwarmTemporaryEffect","doubleTroubleTemporaryEffect","botanicalSwarmTemporaryEffect","ManEatingPlant","_super3","getPhase","phase","getNextActionPhase3","getNextActionPhase2","manEatingPlant","BuffingPouchItem","getTemporaryEffect","_this$getItemEffects","other","getTarget","venomousBrew","_BuffingPouchItem","VenomousBrew","transmuteVenomousBrew","TransmuteVenomousBrew","VenomousSpider","EXPLORATION_POSSIBILITIES","_DungeonFloor","SewerHideout","SewerHazardousSector","SewerEntrance","SewersUnlocked","FURNITURE_PRESERVATION_OPTIONS","furniture","loadFurniturePreservation","furniturePreservationStorylines","furniturePreservationEvent","hasTriggered","createStorylineForOption","furniturePreservationEventBuilder","setStorylineIds","tParams","end","permacastStoryline","MAX_DIFFICULTY_LEVEL","MAX_BOON_LEVEL","getMaxPossibleDifficultyLevel","BASE_BOON_POINTS_PER_WORLD","BOON_POINTS_TAGS","BoonPointsEarned","getTotalAvailableBoonPoints","getNewBoonPointsAvailable","triggerNewGamePlus","getPointsRequiredForConfiguration","storylinesToGrant","storylinesToAvoid","oracleLevel","getStorylinesToUnlockForSpecificOracleLevel","newGamePlusReset","fibonacci","getIncrementalPointsRequiredForLevel","getTotalPointsRequiredForLevel","points","l","getSheerPowerLevel","getStorylineOracleLevel","getBlazingSpeedLevel","getWorldDifficultyLevel","getNewGamePlusElementMaxLevelBonus","getNewGamePlusFamiliarMaxLevelBonus","getNewGamePlusItemQualityMaxBonus","getNewGamePlusStorageMultiplier","getNewGamePlusProductionMultiplier","getNewGamePlusChannelingAndSalePriceMultiplier","getNewGamePlusExpGainMultiplier","getNewGamePlusLootMultiplier","getNewGamePlusHpMultiplier","difficultyLevel","getNewGamePlusAttackDelayMultiplier","getNewGamePlusAccuracyAndDodgeMultiplier","getNewGamePlusOtherStatMultiplier","getNewGamePlusBoonPointsEarnedMultiplier","TomeOfToxicKnowledge","TicTacToeStoryline","EndingHistoryRow","worldStats","challengeStats","extraStats","extraStatsText","List","EndingHistoryContainer","_state$global$endings","endings","_endings$toReversed","FlatList","toReversed","StorylineContainer","DiviningTheWorld","MaterialCommunityIcons","storylineContainer","storylineTeaser","StorylinesContainer","expandedStoryline","setExpandedStoryline","onlyStorylineStatus","setStorylineCallback","getStatus","storylineNameString","storylineContainers","StatsSingleElement","_researchEstimate$ele","_researchEstimate$ele2","researchEstimate","currentRank","thisLevelSpells","thisLevelCrafts","thisLevelEmpowerments","currentElementLevel","nextUnlockLevelAdd","foundNewSpellsOrItems","extraCrafts","extraEmpowerments","nextLevelSpells","nextLevelTransmutations","nextLevelEmpowerments","newEmpowerments","newUnlocks","unlocks","nextLevelRequiredExp","insideBlock","StatsElementViewerElement","elementElementContainer","StatsElementViewer","perElement","StorylineViewer","storylineStatusMap","_storylineStatusMap$s","storylineStatusSet","has","storylineStatus","setStorylineStatus","storylineStatuses","indexA","indexB","statusPicker","_storylineStatusMap$s2","completedStorylinesPct","StatsOtherViewer","_state$global","thisRunActiveDuration","thisWorldActiveDuration","thisRunRealWorldDuration","thisWorldRealWorldDuration","totalRealWorldDuration","getNewGamePlusCount","expMultiplier","primaryElementRow","inGameTimeTotalRow","inGameTimeThisWorldRow","inGameTimeThisRunRow","activeDurationTotalRow","activeDurationThisWorldRow","timePiecesThisRunRow","timePiecesTotalRow","timePiecesThisWorldRow","activeDurationThisRunRow","realWorldDurationTotalRow","realWorldDurationThisWorldRow","realWorldDurationThisRunRow","combatClassRow","challengeRow","newGamePlusRows","retirementRows","Stats","showEndings","StudyRowDetails","thisLevelRituals","nextLevelRituals","StudyRow","_state$run$studyAlloc","toggleExpanded","hasFreeResearchers","applyAll","elementLevel","elementPrimaryText","singleElementContainer","isOdd","rightHandSide","plusMinusAllocatorContainer","expansionContainer","freeResearchers","totalResearchers","setApplyAll","toggleApplyAll","autoAssign","setAutoAssign","autoAssignPicker","rateExplanation","explainBaseResearchRate","expRateContents","bottomSection","assignAllContainer","researcherCapacityContainer","free","disableAllMinus","disableAllPlus","onPressMinusAll","onPressPlusAll","expansionPlaceholder","SynchroBonusRow","SynchroBottomComponent","activeBonuses","allBonuses","bonusesToConsider","fullyUnlockedElements","getCurrentBonusAmount","getSortedSynchroBonuses","topPart","SynchroGridItem","translationArgs","SynchroGrid","_props$selectedPositi3","_props$selectedPositi4","_props$selectedPositi","_props$selectedPositi2","selectedPosition","onGridPress","SynchroElement","Synchro","setSelectedPosition","onElementPress","EverUsedSynchro","setCurrentSynchroPosition","synchroGrid","synchroElementButtons","showIntroMessage","BasicChannelingSpellBase","parentAreas","getManaCostProportion","essenceEfficiency","getBaseEssenceEfficiency","getEssencesToGrant","getEssenceAmountToGrant","resourceTexts","ChannelingUnlocked","_this2$getCost$resour","log10","_BasicChannelingSpell","ChannelFire","ConditionRow","getDisplayExplanation","PermaCastRow","hasPermaCastSpells","getSortedPermaCastSpellList","permaCastSpellList","actualSpellList","reverse","powerNeededPerSec","manaNeededPerSec","wizardsNeeded","manaIncome","maxManaCost","manaCap","warningWizardPower","warningManaConsumption","warningManaCap","topHalf","explanationComponent","warningComponent","AutocastRuleRow","toggleDisabled","onDelete","wizardPointCap","isSpellVisible","hideRule","wizardPointStatusComponent","_formatNumber","rightSide","AutocastRuleRowContainer","saveRule","deleteRule","ruleDisabled","surfaceColor","boundSave","boundDelete","unhideRule","unhideIconFn","hiddenViewStyle","hiddenText","wizardCount","unfoldButton","WizardsBottomComponent","_calculateIncomePerSe3","manaConsumption","cumulativeManaConsumption","estimateManaConsumptionPerSecPerStrategy","cumulative","currentRule","estimateExpGainPerSecPerStrategy","maxExpGain","maxExpGainElement","wizardPowerProductionPerWizardExplanation","explainAutocastPointIncomePerSecPerWizard","totalWizards","explainTotalWizards","explainWizardAmount","remainingWizards","mainElement","WizardsMainComponent","getAutocastRuleIndexByRule","showPermaCast","rulesByAutocastCategory","getAutocastCategory","togglePause","paused","NestableScrollContainer","NestableDraggableFlatList","ruleIndices","ruleIds","setSlotNumber","loadoutsSlotPicker","loadoutName","setLoadoutName","_loadoutObjects$Numbe","_loadoutObjects$Numbe2","_state$global$autocas4","showHeader","headerComponent","saveCurrentAutocastStrategy","clearAutocastStrategy","SheerPowerDescription","explanationBase","elementMaxLevelBonus","familiarMaxLevelBonus","itemQualityBonus","maxElementLevel","maxFamiliarLevel","maxItemQuality","storageMultiplier","StorylineOracleDescription","storylineBonusesLines","storylineText","storylineBonusesText","BlazingSpeedDescription","channelingMultiplier","lootMultiplier","WorldDifficultyDescription","hpMultiplier","attackDelayMultiplier","boonPointMultiplier","boonPoints","doubleBoonPoints","ultimateChallengeText","penUltimateChallengeRewardText","BoonRow","decreasingPossible","increasingPossible","useBoonManipulation","remainingPoints","setLevel","Worlds","totalPointsAvailable","newBoonPointsAvailable","maxDifficultyLevel","setSheerPower","setStorylineOracle","setBlazingSpeed","setWorldDifficulty","topMessage","noContentWarning","explanationForBoonsMessage","newPointsAvailable","sheerPowerManipulation","storylineOracleManipulation","blazingSpeedManipulation","difficultyExplanation","maxDifficulty","clearText","onPressDifficultyMinus","onPressDifficultyPlus","hasExportedGame","setHasExportedGame","doNewGamePlus","INITIAL_STATE_CLONED","EventListItemMemoized","_props$item","_props$item4","currentMessageData","getTitle","_props$item2","descriptionNumberOfLines","_props$item3","isActionable","EvilIcons","EventList","addOccurrenceToQueue","sortedEvents","stringifiedEvents","terminalEvents","ongoingEvents","eventCategories","categoryKeyExtractor","categoryRenderItem","titleIcon","eventTitleContainer","titleText","actionableIcon","EventOverlay","_optionDescriptions","isPickerOpen","isEndingOpen","setCurrentEventOccurrenceId","processUICommand","uiCommand","setCurrentLookbackMessageId","processUICommands","currentEventOccurrenceIdRef","currentLookbackMessageId","newEventOccurrenceId","eventsToRemoveFromQueue","pop","_occurrence$timestamp","_getEventMessageById","accumulatedState","eventToRemove","removeOccurrenceFromQueue","eventMessage","optionDescriptions","totalText","messageInLookbackIdx","messageLength","totalMessageCount","_eventOccurrence$mess","_eventOccurrence","_eventOccurrence$mess2","_eventOccurrence$mess3","_eventOccurrence4","_eventOccurrence4$mes","_eventOccurrence2","_eventOccurrence3","idxToDisplay","disabledIconColor","disabledColorByTheme","_eventOccurrence5","_eventOccurrence9","_eventOccurrence10","dismissable","overlayContainer","overlayCloseButton","titleTextContainer","historyContainer","historyButton","_eventOccurrence$mess4","_eventOccurrence6","_eventOccurrence6$mes","_eventOccurrence$mess5","_eventOccurrence7","_eventOccurrence7$mes","_eventOccurrence$mess6","_eventOccurrence8","_eventOccurrence8$mes","executeEventOccurrenceAction","optionButton","overlayCloseButtonInner","SelectedContext","MenuComponent","shouldHighlight","notificationBadge","itemStyle","SCROLL_VIEW_EPSILON","BottomMenu","menuItemsCalculated","_getSectionInfo$isVis","_getSectionInfo$isVis2","_getSectionInfo","navigationPressCallback","onNavigationPress","menuItems","callbacks","sectionsWithBadges","_getSectionInfo$isBad","_getSectionInfo2","orientation","scrollEnd","setScrollEnd","scrollStart","setScrollStart","contentOffset","contentWidth","contentSize","scrollViewWidth","layoutMeasurement","isStart","flatListBackgroundStyle","scrollContentContainer","wheelScrollRef","elRef","el","onWheel","deltaY","scrollableElement","getScrollableNode","scrollLeft","scrollWidth","clientWidth","preventDefault","stopPropagation","scrollBy","behavior","_el$getScrollableNode","useHorizontalScrollRef","bottomMenuContainer","leftHanded","showCastSpellButton","spellButtonPlaceholder","chevron","horizontal","snapToInterval","scrollContainer","scrollEventThrottle","overScrollMode","showsHorizontalScrollIndicator","navigationBlock","spellMenuButtonPlaceholder","TARGET_FPS","GameTickProcessor","currentError","setCurrentError","lastTickTime","setLastTickTime","randomValueForReprocessing","setRandomValueForReprocessing","warping","setWarping","timeTickCallback","nowTime","lastTickTimeConsidered","_x5","_x6","_x7","_x8","processWarpTime","_excluded2","processOfflineTicks","remainingSec","ticksRun","tickTime","begin","cleanupCallback","_state$options$target","interval","setInterval","ManaBar","insets","ratioFilled","filledAnimWithNativeDriver","filledAnimWithoutNativeDriver","permaCastCost","incomeText","animatedStyle","filled","animatedComponent","incomeTextComponent","manaTextComponent","textOverlay","getCurrentTimePieceSpeedupSpeed","getCurrentTimePieceSpeedupCost","TimePiecePerFasterSpeedup","TimePiecePerFastSpeedup","getCurrentTimePieceSpeedupCostPerGameSecond","speed","totalSpeed","calculateSpeedMultiplier","recordTimePieceConsumption","SchoolRowMemo","isPrimary","primaryText","nextLevelExp","ElementViewer","incomeComponent","hideIncome","incomeSign","firstComponent","ResourceViewer","incomeExplanation","hasAnyIncome","_income$resourceName","_incomeExplanation$re","boldHotkeyLetter","hotkeyPos","firstHalf","lastHalf","hotkeyText","toUpperCase","others","favoriteButton","favorited","onPressFavorite","Component","TouchableNativeFeedback","focusable","menuComponentTouch","wide","menuComponentButton","showFavoriteIcon","menuItemText","MenuContents","favoritesFull","pinnedSections","menuComponent","sectionKey","sectionTitle","menuProps","badgeCacheKey","navigation","_sectionInfo$find","_sectionInfo$find2","_sectionInfo$find3","topDivider","hasTemporaryEffects","gameSpeed","hasTimePieces","speedupCost","timePieceCost","timepiecePerSec","showExploration","timePieceButtonsContainer","timePieceButtonTitle","timePieceButtonContainer","timePieceTextRows","statViewer","navigationRowTitle","notificationBadgeSize","SpellMenuContents","isBottomMenuEnabled","heightWithoutBottomMenu","hasFavorites","magicContainer","favoritesOnBottom","borderTopColor","favoritesContainer","SpellMenu","backdropTouchable","DebugUPSOverlay","timestamps","startEndTimestamps","msPerUpdate","backendMsPerUpdate","ticksPerUpdate","updatesPerSec","estimatedMsPerUpdate","ErrorBoundary","_React$Component","errorInfo","errorFallback","FullScreenListener","altKey","KeepAwake","useKeepAwake","SaveDataBackupper","backupCallback","SWIPE_EDGE_WIDTH_DEFAULT","SWIPE_EDGE_WIDTH_LEFT_WITH_BOTTOM_MENU","BottomSafeAreaPadding","safeAreaInsets","IntroContents","headerContainerStyle","borderBottomColor","centerComponent","centerText","maxContainer","nativeID","Appbar","biggerContainer","introContainer","MainAppContents","_sectionData$activeSe","menuShown","setMenuShown","rightMenuShown","setRightMenuShown","allSections","setSection","pinnedSectionObjects","setPinnedSectionObjects","pinnedSectionObjectsRef","activeSections","pinnedSection","setUiActiveSections","newSectionObjects","resetKeys","togglePinnedSection","usedIndices","lowestFreeIndex","newPinnedSectionObjects","endingHistoryIndex","setEndingHistoryIndex","onMenuPress","onMenuOpen","onMenuClose","onEventMenuPress","onEventMenuOpen","onSpellMenuOpen","onRightMenuClose","onSpellMenuPress","ongoingEventCount","showBottomResourceBar","scrollRefs","scrollPositions","setScrollPositions","onScrollPerSection","scrollValue","_sectionData$_section","_scrollPositions$_sec","_scrollRefs$_section","_scrollRefs$_section$","_scrollPositions$_sec2","scrollTo","animated","showBottomMenu","wrapInSection","component","activeSection","contents","fullscreenContainer","fullscreenContainerInside","onEndingClose","sectionIndices","indices","mainSections","unusedIndex","_pinnedSectionObjects","_pinnedSectionObjects2","_pinnedSectionObjects3","_sectionData$Study","_sectionData$Inventor","_sectionData$Transmut","_sectionData$Enhance","_sectionData$Boosts","_sectionData$Familiar","_sectionData$Spellcra","_sectionData$Rituals","_sectionData$Ending","_sectionData$Ending2","_sectionData$Worlds","_sectionData$Retireme","_sectionData$Compendi","_sectionData$Stats","_sectionData$Options","_sectionData$Help","_sectionData$About","_sectionKey","_sectionKey2","_sectionData$currentS","currentSection","scrollViewContents","Help","explorationContents","synchroContents","UtilityText","backCallback","BackHandler","contentsWide","onAccessibilityEscape","horizontalContainer","Drawer","drawerPosition","drawerType","open","onOpen","swipeEnabled","swipeEdgeWidth","renderDrawerContent","mainContainerPhone","onMagicTap","GestureHandlerRootView","notificationsBadge","OfflineProgress","offlineProgressContainer","currentTicks","totalTicks","AppContentsInner","_tooltip3","_tooltip4","_stateContextValue$op","playerState","_useState13","_useState14","localUiState","setLocalUiState","_useState15","_useState16","processingBigTime","setProcessingBigTime","_useState17","_useState18","setTotalTicks","_useState19","_useState20","setCurrentTicks","NavigationBar","setPositionAsync","setBackgroundColorAsync","setBehaviorAsync","uiContextValue","_useState21","_useState22","tooltips","setTooltips","tooltipsRef","newTooltips","postMeasurementId","mouseEnterTimestamp","mouseLeaveTimestamp","_tooltipsRef$current","tooltipContextValue","_tooltip","_tooltip$position","_tooltip2","tooltipControlContextValue","_useState23","_useState24","loading","setLoading","_useState25","_useState26","criticalError","setCriticalError","_useState27","_useState28","lessCriticalError","setLessCriticalError","playerStateRef","transformedState","stateContextValue","fetchData","loadedState","loadData","_useState29","_useState30","lastTimeFailedToSave","setLastTimeFailedToSave","storeData","_useTransition","useTransition","_useTransition2","setTransition","shouldShowIntro","_useState31","_useState32","showIntro","setShowIntro","_useWindowDimensions2","copyAsyncStorageToClipboard","criticalErrorView","errorWrapper","errorHeader","errorView","_useState33","_useState34","accessibilityItems","setAccessibilityItems","accessibilityItemsRef","announcement","AccessibilityInfo","queue","_accessibilityItemsRe","newItem","oldItem","_useState35","_useState36","visibilityState","setVisibilityState","onVisibilityChange","document","resizeBy","offlineProgressView","centerAligned","accessibilityView","role","mainView","internalToPaperContextComponent","PaperProvider","internalToUIContextComponent","initialWindowMetrics","AppContents","safeAreaProviderStyle","SafeAreaProvider","initialMetrics","headerPadding","rightHeaderContainer","rightHeaderIcon","gestureRecognizer","webMenuContainer","webRightMenuContainer","menuContainer","closeButtonInner","pinButtonInner","ExpandHome","_Storylines$getByIdNu","LandPurchaseUnlocked","fractionAddedPerLandPurchase","_this$getCost$resourc","expandHome","GatherMana","ManualGathering","UseTimePiecesEvent","_this$getCost$resourc2","UseTimePiecesStudy","timePiecesPerResearchSecond","TimePiecePerStudy","timeString","expPerResearcherPerSec","transformedSecs","timePieces","_state$run$studyAlloc2","UseTimePiecesWarp","timePiecePerWarpedSec","TimePiecePerWarpedSec","totalSecs","formattedTime","loadActions","monstiumPaper","MonstiumPaper","transmuteMonstiumPaper","TransmuteMonstiumPaper","paper","EnhancementPurchaseListeners","Enhancement","getSubcategory","getRequiredEnhancements","getItemCost","setPurchased","monstiumCollection","_Enhancement","MonstiumCollection","superheatedCatalysts","SuperheatedCatalysts","monstiumCatalysts","MonstiumCatalysts","MonstiumCatalyst","catalystEffectivityTags","monstiumCatalyst","buildMonstiumCatalyst","BuildMonstiumCatalyst","manaSteamers","ManaSteamers","manaTags","manaRegenUnit","getManaRegenPerSecExplanation","fireTags","Consumption","getFireEssenceConsumptionPerSec","fireEssenceUnit","getFireEssenceConsumptionPerSecExplanation","waterTags","getWaterEssenceConsumptionPerSec","waterEssenceUnit","getWaterEssenceConsumptionPerSecExplanation","manaSteamer","ManaSteamer","waterConsumptionPerSec","fireConsumptionPerSec","manaRegenExplanation","waterConsumptionExplanation","fireConsumptionExplanation","buildManaSteamer","BuildManaSteamer","sewageSystemEnhancement","SewageSystem","unitForResource","BASE_PRODUCTION","getEssenceProductionPerSec","getEssenceProductionPerSecExplanation","poisonTags","BASE_CONSUMPTION","getPoisonEssenceConsumptionPerSec","unitForConsumption","getPoisonEssenceConsumptionPerSecExplanation","getResourcesProduced","baseEssences","SewageSystemMakesAll","resourcesProduced","resourceStrings","productionString","consumption","consumptionExplanation","sewageSystem","buildSewageSystem","BuildSewageSystem","researcherDesk","ResearcherDesk","buildResearcherDesk","BuildResearcherDesk","ResearchersUnlocked","Monstruarium","monstruarium","buildMonstruarium","BuildMonstruarium","MonstruariumsUnlocked","treasureChests","TreasureChests","TreasureChest","treasureChest","buildTreasureChest","BuildTreasureChest","wizardChamber","WizardChamber","buildWizardChamber","BuildWizardChamber","loadBuildingsDemo","loadEssenceStorages","resourcesPerSec","battlemage","_CombatClass","Battlemage","attackAndDefense","getClassEffects","getClassEffectExplanations","Builder","buildingCost","buildingCostMultiplier","buildingCostExplanation","landMultiplier","landExplanation","_Storylines$getByIdNu2","spellslinger","Spellslinger","manaExplanation","loadCombatClassesDemo","combatClassesUnlockEventBuilder","combatClassesUnlockEvent","loadCombatClassesUnlocker","efficientExploration","EfficientExploration","compass","Compass","healthBoost","HealthBoost","doubleHealthBoost","DoubleHealthBoost","enlargedPouch","EnlargedPouch","firstAid","FirstAid","professionalPouch","ProfessionalPouch","giantPouch","GiantPouch","healthPotionEffectivity","HealthPotionEffectivity","tripleHealthBoost","TripleHealthBoost","furnitureOrganization","FurnitureOrganization","absoluteAmount","landTreaty","LandTreaty","houseExpansionContract","HouseExpansionContract","understandingOfMagic","UnderstandingOfMagic","deeperUnderstandingOfMagic","DeeperUnderstandingOfMagic","glitteringStalls","GlitteringStalls","hiringSpree","HiringSpree","scalableChambers","ScalableChambers","shardDiligence","ShardDiligence","improvedPurification","ImprovedPurification","superheatedSteamers","SuperheatedSteamers","compressedEssence","CompressedEssence","primaryStorage","PrimaryStorage","essenceIcon","essenceIconExtra","secondaryEssenceIcon","wideStorage","WideStorage","createChestEvent","dungeonFloorIds","newChestEventBuilder","newChestEvent","createBadChestEvent","lastMessage","_getCurrentDungeonFlo2","PoolOfManaTemporaryEffect","EssenceCatalystResonanceTemporaryEffect","SaleRushTemporaryEffect","_TemporaryEffect3","ElementalGatheringTemporaryEffect","_TemporaryEffect4","_super4","amountPerSec","MonstiumCatalystResonanceTemporaryEffect","_TemporaryEffect5","_super5","poolOfManaTemporaryEffect","essenceCatalystResonanceTemporaryEffect","saleRushTemporaryEffect","elementalGatheringTemporaryEffect","monstiumCatalystResonanceTemporaryEffect","loadRandomRepeatableEvents","manaSpoutEventBuilder","setOnTrigger","essenceCatalystEventBuilder","saleRushEventBuilder","effectData","elementalGatheringEventBuilder","eventParams","essenceString","monstiumCatalystEventBuilder","pileOfCoinsEventBuilder","elementBookEventBuilder","coinAmount","sqrt","researchRates","getResearcherExpPerSecAndResearcher","coinAmountText","DungeonEventGroup","getSelectedEvent","hasFinishedSelecting","sum","getWeight","randomValue","DungeonEventGroups","getOrCreateDungeonEventGroup","dungeonEventGroup","Achievement","loadPreTrainingProgression","channelingUnlockerEventBuilder","channelingUnlockerEvent","manaSpoutUnlockerEventBuilder","manaSpoutUnlockerEvent","manaShardUnlockerEventBuilder","manaShardUnlockerEvent","storagesUnlockerEventBuilder","storagesUnlockerEvent","catalystUnlockerEventBuilder","catalystUnlockerEvent","studyUnlockerEventBuilder","studyUnlockerEvent","transmuteUnlockerEventBuilder","transmuteUnlockerEvent","wizardsUnlockerEventBuilder","wizardsUnlockerEvent","marketUnlockerEventBuilder","marketUnlockerEvent","researchersUnlockerEventBuilder","researchersUnlockerEvent","expandHomeUnlockerEventBuilder","expandHomeUnlockerEvent","explorationUnlockerEventBuilder","explorationUnlockerEvent","loadOtherElementExplorationUnlocker","AnimatedSnowman","Cherry","cherry","Goat","EXPLORATION_POSSIBILTIIES","TrainingTowerAir","RestOfTrainingUnlocked","BreezyRabbit","Windglider","TrainingTowerEarth","FamiliarOfWind","FlyingRock","StoneskinTemporaryEffect","defenseRatio","DefenseMultiplier","stoneskin","Stoneskin","amountExplanation","RockGolem","TrainingTowerFire","ExplorationTriggerGroup","explorationEvents","isDoneForThisRun","getHintMessageWhenNotPossible","getHintMessageWhenPossible","maxTriggers","maxTriggersPerRun","timesTriggered","next","getExplorationSuccessesBase","accumulated","totalExplorations","getTotalExplorationSuccesses","getExplorationAmountNeeded","_event$getParams","ExplorationTriggerGroups","checkAndTrigger","featheredHat","FeatheredHat","transmuteFeatheredHat","TransmuteFeatheredHat","elementalShardAir","stoneMail","StoneMail","transmuteStoneMail","TransmuteStoneMail","elementalShardEarth","wizardsRobe","WizardsRobe","transmuteWizardsRobe","TransmuteWizardsRobe","glaive","Glaive","transmuteGlaive","TransmuteGlaive","bastardSword","BastardSword","transmuteBastardSword","TransmuteBastardSword","elementalShardFire","battleAxe","BattleAxe","transmuteBattleAxe","TransmuteBattleAxe","handAxe","HandAxe","transmuteHandAxe","TransmuteHandAxe","wandOfWater","WandOfWater","_getEquippedItem","getEquippedItemEffect","transmuteWandOfWater","TransmuteWandOfWater","Dungeon","getDungeonEventGroup","hasFinishedTriggeringThisRun","StrengthTemporaryEffect","attackRatio","strength","Strength","BlazingTurtle","FireBat","TrainingTowers","_Dungeon","TrainingTowerWater","FLOOR_FOR_ELEMENT","trainingTowers","trainingTowersExplorationGroup","_ExplorationTriggerGr","TrainingTowersExplorationGroup","HeadInstructor","getNextAction2","HeadInstructorDefeated","headInstructor","HEAD_INSTRUCTOR_GISELLE","enemyDefeated","loadProgressionEventsDemo","firstBossUnlockedEventBuilder","firstBossUnlockedEvent","restOfTrainingTowersUnlockerEventBuilder","restOfTrainingTowersUnlockerEvent","finalTrainingEventBuilder","finalTrainingEvent","potionCraftedEventBuilder","potionCraftedEvent","loadTrainingTowerProgression","sewersUnlockEventBuilder","sewersUnlockEvent","sewersEntranceBossUnlockEventBuilder","sewersEntranceBossUnlockEvent","sewersEntranceBossDefeatedMainEventBuilder","sewersEntranceBossDefeatedMainEvent","sewersEntranceBossDefeatedAltEventBuilder","sewersEntranceBossDefeatedAltEvent","hazardousSectorBossDefeatedMainEventBuilder","hazardousSectorBossDefeatedMainEvent","sewersHideoutBossUnlockEventBuilder","sewersHideoutBossUnlockEvent","sewersCompletedEventBuilder","VastDesertUnlocked","sewersCompletedEvent","loadSewersProgression","advertisingManual","simultaneousChanneling","GoblinChief","goblinDenStoryline","Paper","transmutePaper","TransmutePaper","loadLocationEncyclopedia","LocationEncyclopedia","locationEncyclopediaEventBuilder","remainingFloors","floorsToTally","talliedFloors","floorIdx","isTallied","getIdForTallyingClears","tallyAll","locationEncyclopediaEvent","_enemy","tally","_state$world$variable2","getWorldAccumulatorVariable","outessencedStoryline","copperGauntlet","CopperGauntlet","transmuteCopperGauntlet","TransmuteCopperGauntlet","copperIngot","copperRapier","CopperRapier","transmuteCopperRapier","TransmuteCopperRapier","copperTomahawk","CopperTomahawk","transmuteCopperTomahawk","TransmuteCopperTomahawk","sewers","Sewers","sewersExplorationGroup","SewersExplorationGroup","passageOfStenchStoryline","shardStockpileStoryline","wizardsHat","WizardsHat","transmuteWizardsHat","TransmuteWizardsHat","someonesTrashBookStoryline","someonesTrashHatStoryline","someonesTrashTreasureStoryline","advancedManaSpoutsStoryline","alchemyClassStoryline","createStorylineForElement","enabledElements","_getOrCreateDungeonEv","essenceArtifactStorylines","KnightInShiningArmor","howToFightHPStoryline","howToFightAttackStoryline","howToFightDefenseStoryline","howToFightAttackDelayStoryline","elementToUse","studentContestStoryline","loadStorylineEventsDemo","Posterity","retireUnlockEventBuilder","retireUnlockEvent","loadRetireUnlocker","BookOfMonsters","bestiaryUnlockEventBuilder","bestiaryUnlockEvent","loadBestiaryUnlocker","advertisingManualEventBuilder","advertisingManualEvent","loadAdvertisingManual","simultaneousChannelingEventBuilder","simultaneousChannelingEvent","loadSimultaneousChanneling","howToFightEventBuilder","howToFightEvent","loadHowToFight","flagsToActivate","dungeonsToClear","ZOOM_THROUGH_TRAINING","loadZoomThroughTraining","essenceArtifactEventBuilder","essenceArtifactEvent","addEvent","loadEssenceArtifact","alchemyClassEventBuilder","alchemyClassEvent","loadAlchemyClass","studentContestEventBuilder","studentContestEvent","loadStudentContest","advancedManaSpoutsEventBuilder","advancedManaSpoutsEvent","loadAdvancedManaSpouts","ticTacToeEventBuilder","ticTacToeEvent","TIC_TAC_TOE","loadTicTacToe","shardStockpileEventBuilder","shardStockpileEvent","loadShardStockpile","poisonUnlockEventBuilder","poisonLevel","poisonUnlockEvent","lastLine","TOME_OF_TOXIC_KNOWLEDGE","loadTomeOfToxicKnowledge","catalystAmount","maxAmount","multiplierPerCatalyst","loadOutessenced","_getAutocastStatusByR","loadPermaCast","goblinDenEventBuilder","goblinDenEvent","loadGoblinDen","someonesTrashEventBuilder","someonesTrashEvent","SomeonesTrashTreasureGranted","loadSomeonesTrash","passageOfStenchEventBuilder","passageOfStench","loadPassageOfStench","loadConvenience","loadGameEventsDemo","selectEvent","loadDemoEndEvent","loadDungeonsDemo","loadEnemiesDemo","loadHelpsDemo","reset","isStudyEverUnlocked","isInventoryEverUnlocked","hasEverUnlockedCrafting","isEnhancementEverUnlocked","hasEverBeenPurchased","loadHintsDemo","_state$run$primaryEle","_state$run$primaryEle2","_state$run$primaryEle3","_state$run$primaryEle4","cloakOfDarkness","CloakOfDarkness","transmuteCloakOfDarkness","TransmuteCloakOfDarkness","copperShield","CopperShield","transmuteCopperShield","TransmuteCopperShield","smallShield","SmallShield","transmuteSmallShield","TransmuteSmallShield","stoneEgg","StoneEgg","isEquippedWithAnyParams","transmuteStoneEgg","TransmuteStoneEgg","collarOfPower","CollarOfPower","TransmuteCollarOfPower","transmuteCollarOfPower","AssassinsBaselard","poisonDurationTags","poisonStrength","poisonDuration","getPoisonStrength","strengthExplanation","assassinsBaselard","transmuteAssassinsBaselard","TransmuteAssassinsBaselard","assassinsCloak","AssassinsCloak","transmuteAssassinsCloak","TransmuteAssassinsCloak","charmOfPoisonResistance","CharmOfPoisonResistance","transmuteCharmOfPoisonResistance","TransmuteCharmOfPoisonResistance","soulStone","SoulStone","transmuteSoulStone","TransmuteSoulStone","manaTear","ManaTear","transmuteManaTear","TransmuteManaTear","ringOfRegeneration","RingOfRegeneration","TransmuteRingOfRegeneration","transmuteRingOfRegeneration","breezyShirt","BreezyShirt","transmuteBreezyShirt","TransmuteBreezyShirt","evasiveGarb","EvasiveGarb","transmuteEvasiveGarb","TransmuteEvasiveGarb","copperArmor","CopperArmor","transmuteCopperArmor","TransmuteCopperArmor","turtleArmor","TurtleArmor","transmuteTurtleArmor","TransmuteTurtleArmor","leatherArmor","LeatherArmor","transmuteLeatherArmor","TransmuteLeatherArmor","reinforcedLeatherArmor","ReinforcedLeatherArmor","transmuteReinforcedLeatherArmor","TransmuteReinforcedLeatherArmor","thickHide","elderWizardsRobe","ElderWizardsRobe","transmuteElderWizardsRobe","TransmuteElderWizardsRobe","tunicOfGoodHealth","TunicOfGoodHealth","transmuteTunicOfGoodHealth","TransmuteTunicOfGoodHealth","galeScepter","GaleScepter","magnitudeCost","explanationCost","transmuteGaleScepter","TransmuteGaleScepter","knuckles","Knuckles","transmuteKnuckles","TransmuteKnuckles","longsword","Longsword","transmuteLongsword","TransmuteLongsword","copperWarhammer","CopperWarhammer","transmuteCopperWarhammer","TransmuteCopperWarhammer","redConflagration","RedConflagration","fireEssence","transmuteRedConflagration","TransmuteRedConflagration","elementalPrismFire","wandOfFire","WandOfFire","transmuteWandOfFire","TransmuteWandOfFire","Dagger","dagger","transmuteDagger","TransmuteDagger","shadowBlade","ShadowBlade","transmuteShadowBlade","TransmuteShadowBlade","elementalPrismPoison","elementalPrismAir","wandOfPoison","WandOfPoison","transmuteWandOfPoison","TransmuteWandOfPoison","rod","Rod","transmuteRod","TransmuteRod","potionOfAlacrityTemporaryEffect","PotionOfAlacrityTemporaryEffect","potionOfAlacrity","PotionOfAlacrity","transmutePotionOfAlacrity","TransmutePotionOfAlacrity","slimeDrop","potionOfEvasionTemporaryEffect","PotionOfEvasionTemporaryEffect","potionOfEvasion","PotionOfEvasion","transmutePotionOfEvasion","TransmutePotionOfEvasion","PotionOfMuscleTemporaryEffect","potionOfMuscle","PotionOfMuscle","transmutePotionOfMuscle","TransmutePotionOfMuscle","PotionOfToughnessTemporaryEffect","potionOfToughness","PotionOfToughness","transmutePotionOfToughness","TransmutePotionOfToughness","PotionOfVitalityTemporaryEffect","potionOfVitality","PotionOfVitality","transmutePotionOfVitality","TransmutePotionOfVitality","CopperIngot","transmuteCopperIngot","TransmuteCopperIngot","ElementalPrism","baseSalePrice","ElementalPrismTransmutation","essenceAmountRequired","ElementalShard","ElementalShardTransmutation","ThickHide","transmuteThickHide","TransmuteThickHide","loadItemsDemo","pouchItems","used","_action$transform","shouldAutoUse","perElementData","salePriceMultiplier","shardItem","loadElementalShards","prismItem","loadElementalPrisms","airBlast","AirBlast","ActionVariance","blurTemporaryEffect","BlurTemporaryEffect","blur","Blur","EnchantSaleStallsTemporaryEffect","magnitudePct","enchantSaleStalls","EnchantSaleStalls","LevitationTemporaryEffect","levitation","Levitation","RichnessTemporaryEffect","richness","Richness","Twister","standardEffect","effectExplanation","getParameterlessDisplayDescription","ChannelAir","ChannelEarth","ChannelWater","FOUR_CHANNELING_SPELLS","ChannelFour","previous","ChannelPoison","earthShieldTemporaryEffect","EarthShieldTemporaryEffect","effectAmount","essenceAmount","calculateEffect","earthShield","EarthShield","TemporaryEffectExtraCost","essenceAmountExplanation","EnchantTransmutationTemporaryEffect","magnitudeMana","enchantTransmutation","EnchantTransmutation","GuardTemporaryEffect","Knockout","Landslide","stoneStrike","StoneStrike","cloakOfFlamesSpell","EnchantCatalystsTemporaryEffect","enchantCatalysts","EnchantCatalysts","fireball","Fireball","imbueFlamesTemporaryEffect","ImbueFlamesTemporaryEffect","imbueFlames","ImbueFlames","infernalBlaze","InfernalBlaze","Sear","damageText","Antidote","EnchantMonstiumCatalystsTemporaryEffect","enchantMonstiumCatalysts","EnchantMonstiumCatalysts","EnchantSewageSystemTemporaryEffect","enchantSewageSystem","EnchantSewageSystem","frailSpell","FrailSpell","intoxicate","Intoxicate","sting","Sting","standardAttack","DropletOfHealing","EnchantManaSpoutsTemporaryEffect","enchantManaSpouts","EnchantManaSpouts","EnchantManaSteamersTemporaryEffect","enchantManaSteamers","EnchantManaSteamers","Frost","LongevityTemporaryEffect","maxHPRatio","MaxHPMultiplier","longevity","Longevity","soak","Soak","Splash","streamOfHealing","StreamOfHealing","loadSpellsDemo","newMaxes","update","previousMax","oldExp","oldEmpoweredSpells","newEmpoweredSpells","spells","SynchroBonus","getBaseBonusEffects","getExplanationParamsByEffect","SynchroEffect","transformedEffect","DoubleElementSynchroBonus","_SynchroBonus","loadDoubleElementSynchroBonus","synchroBonus","FireSynchroBonus","EarthSynchroBonus","_SynchroBonus2","WaterSynchroBonus","_SynchroBonus3","AirSynchroBonus","_SynchroBonus4","_SynchroBonus5","PoisonSynchroBonus","_SynchroBonus6","MindSynchroBonus","_super6","_SynchroBonus7","LifeSynchroBonus","_super7","_SynchroBonus8","ElectricSynchroBonus","_super8","_SynchroBonus9","DeathSynchroBonus","_super9","_SynchroBonus10","HolySynchroBonus","_super10","_SynchroBonus11","TimeSynchroBonus","_super11","AirPoisonSynchroBonus","_AirSynchroBonus","EarthAirSynchroBonus","_EarthSynchroBonus","EarthPoisonSynchroBonus","EarthWaterSynchroBonus","FireAirSynchroBonus","_FireSynchroBonus","FireEarthSynchroBonus","FirePoisonSynchroBonus","FireWaterSynchroBonus","WaterAirSynchroBonus","_WaterSynchroBonus","WaterPoisonSynchroBonus","magnitudeConsumption","explanationConsumption","loadSynchroDemo","loadDoubleElementSynchroBonuses","getCurrentBonusEffect","loadFireEarthSynchroBonus","loadFireWaterSynchroBonus","loadFireAirSynchroBonus","loadFirePoisonSynchroBonus","loadEarthWaterSynchroBonus","loadEarthAirSynchroBonus","loadEarthPoisonSynchroBonus","loadWaterAirSynchroBonus","loadWaterPoisonSynchroBonus","loadAirPoisonSynchroBonus","loadDemoGame","TemporaryEffectExtraCostDivisor","loadElementMultipliers","loadResources","currentElementIdx","elementToAssign","loadTotalTimePlayed","timePerSale","saleStalls","totalProgress","loadMarket","costPerSecond","timePieceEventBuilder","timePieceEvent","timePieceEventBuilderFirstTime","timePieceEventFirstTime","timePieceGranter","OfflineTimePieceGain","oldTimePiece","lastEventOccurrenceId","_getEventOccurrenceBy","_eventOccurrence$para","_eventOccurrence$para2","rawAmount","loadTimePieces","totalCounter","loadGame","App","registerRootComponent","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","module","exports","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","m","deferred","O","chunkIds","notFulfilled","fulfilled","r","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","then","ns","def","getOwnPropertyNames","definition","defineProperty","enumerable","g","globalThis","Function","prop","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}